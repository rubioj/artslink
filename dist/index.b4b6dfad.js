// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"gjUm6":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "022c1b16b4b6dfad";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && ![
        "localhost",
        "127.0.0.1",
        "0.0.0.0"
    ].includes(hostname) ? "wss" : "ws";
    var ws;
    if (HMR_USE_SSE) ws = new EventSource("/__parcel_hmr");
    else try {
        ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    } catch (err) {
        if (err.message) console.error(err.message);
        ws = {};
    }
    // Web extension context
    var extCtx = typeof browser === "undefined" ? typeof chrome === "undefined" ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    if (ws instanceof WebSocket) {
        ws.onerror = function(e) {
            if (e.message) console.error(e.message);
        };
        ws.onclose = function() {
            console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
        };
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"1xC6H":[function(require,module,exports) {
var Refresh = require("6d18d6bd340e7473");
var ErrorOverlay = require("74ad5ea14201648c");
Refresh.injectIntoGlobalHook(window);
window.$RefreshReg$ = function() {};
window.$RefreshSig$ = function() {
    return function(type) {
        return type;
    };
};
ErrorOverlay.setEditorHandler(function editorHandler(errorLocation) {
    let file = `${errorLocation.fileName}:${errorLocation.lineNumber || 1}:${errorLocation.colNumber || 1}`;
    fetch(`/__parcel_launch_editor?file=${encodeURIComponent(file)}`);
});
ErrorOverlay.startReportingRuntimeErrors({
    onError: function() {}
});
window.addEventListener("parcelhmraccept", ()=>{
    ErrorOverlay.dismissRuntimeErrors();
});

},{"6d18d6bd340e7473":"3FsDI","74ad5ea14201648c":"1dldy"}],"3FsDI":[function(require,module,exports) {
"use strict";
module.exports = require("bc819d12737f82d");

},{"bc819d12737f82d":"dtx5b"}],"dtx5b":[function(require,module,exports) {
/** @license React v0.9.0
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 0xeac7;
    var REACT_PORTAL_TYPE = 0xeaca;
    var REACT_FRAGMENT_TYPE = 0xeacb;
    var REACT_STRICT_MODE_TYPE = 0xeacc;
    var REACT_PROFILER_TYPE = 0xead2;
    var REACT_PROVIDER_TYPE = 0xeacd;
    var REACT_CONTEXT_TYPE = 0xeace;
    var REACT_FORWARD_REF_TYPE = 0xead0;
    var REACT_SUSPENSE_TYPE = 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = 0xead8;
    var REACT_MEMO_TYPE = 0xead3;
    var REACT_LAZY_TYPE = 0xead4;
    var REACT_BLOCK_TYPE = 0xead9;
    var REACT_SERVER_BLOCK_TYPE = 0xeada;
    var REACT_FUNDAMENTAL_TYPE = 0xead5;
    var REACT_SCOPE_TYPE = 0xead7;
    var REACT_OPAQUE_ID_TYPE = 0xeae0;
    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
    var REACT_OFFSCREEN_TYPE = 0xeae2;
    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;
    if (typeof Symbol === "function" && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor("react.element");
        REACT_PORTAL_TYPE = symbolFor("react.portal");
        REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
        REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
        REACT_PROFILER_TYPE = symbolFor("react.profiler");
        REACT_PROVIDER_TYPE = symbolFor("react.provider");
        REACT_CONTEXT_TYPE = symbolFor("react.context");
        REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
        REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
        REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
        REACT_MEMO_TYPE = symbolFor("react.memo");
        REACT_LAZY_TYPE = symbolFor("react.lazy");
        REACT_BLOCK_TYPE = symbolFor("react.block");
        REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
        REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
        REACT_SCOPE_TYPE = symbolFor("react.scope");
        REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
        REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
        REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
    }
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map; // We never remove these associations.
    // It's OK to reference families, but use WeakMap/Set for types.
    var allFamiliesByID = new Map();
    var allFamiliesByType = new PossiblyWeakMap();
    var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families
    // that have actually been edited here. This keeps checks fast.
    // $FlowIssue
    var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.
    // It is an array of [Family, NextType] tuples.
    var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.
    var helpersByRendererID = new Map();
    var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.
    var mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.
    var failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.
    // It needs to be weak because we do this even for roots that failed to mount.
    // If there is no WeakMap, we won't attempt to do retrying.
    // $FlowIssue
    var rootElements = typeof WeakMap === "function" ? new WeakMap() : null;
    var isPerformingRefresh = false;
    function computeFullKey(signature) {
        if (signature.fullKey !== null) return signature.fullKey;
        var fullKey = signature.ownKey;
        var hooks;
        try {
            hooks = signature.getCustomHooks();
        } catch (err) {
            // This can happen in an edge case, e.g. if expression like Foo.useSomething
            // depends on Foo which is lazily initialized during rendering.
            // In that case just assume we'll have to remount.
            signature.forceReset = true;
            signature.fullKey = fullKey;
            return fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if (typeof hook !== "function") {
                // Something's wrong. Assume we need to remount.
                signature.forceReset = true;
                signature.fullKey = fullKey;
                return fullKey;
            }
            var nestedHookSignature = allSignaturesByType.get(hook);
            if (nestedHookSignature === undefined) continue;
            var nestedHookKey = computeFullKey(nestedHookSignature);
            if (nestedHookSignature.forceReset) signature.forceReset = true;
            fullKey += "\n---\n" + nestedHookKey;
        }
        signature.fullKey = fullKey;
        return fullKey;
    }
    function haveEqualSignatures(prevType, nextType) {
        var prevSignature = allSignaturesByType.get(prevType);
        var nextSignature = allSignaturesByType.get(nextType);
        if (prevSignature === undefined && nextSignature === undefined) return true;
        if (prevSignature === undefined || nextSignature === undefined) return false;
        if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) return false;
        if (nextSignature.forceReset) return false;
        return true;
    }
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function canPreserveStateBetween(prevType, nextType) {
        if (isReactClass(prevType) || isReactClass(nextType)) return false;
        if (haveEqualSignatures(prevType, nextType)) return true;
        return false;
    }
    function resolveFamily(type) {
        // Only check updated types to keep lookups fast.
        return updatedFamiliesByType.get(type);
    } // If we didn't care about IE11, we could use new Map/Set(iterable).
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function performReactRefresh() {
        if (pendingUpdates.length === 0) return null;
        if (isPerformingRefresh) return null;
        isPerformingRefresh = true;
        try {
            var staleFamilies = new Set();
            var updatedFamilies = new Set();
            var updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0], nextType = _ref[1];
                // Now that we got a real edit, we can create associations
                // that will be read by the React reconciler.
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(nextType, family);
                family.current = nextType; // Determine whether this should be a re-render or a re-mount.
                if (canPreserveStateBetween(prevType, nextType)) updatedFamilies.add(family);
                else staleFamilies.add(family);
            }); // TODO: rename these fields to something more meaningful.
            var update = {
                updatedFamilies: updatedFamilies,
                // Families that will re-render preserving state
                staleFamilies: staleFamilies // Families that will be remounted
            };
            helpersByRendererID.forEach(function(helpers) {
                // Even if there are no roots, set the handler on first update.
                // This ensures that if *new* roots are mounted, they'll use the resolve handler.
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = false;
            var firstError = null; // We snapshot maps and sets that are mutated during commits.
            // If we don't do this, there is a risk they will be mutated while
            // we iterate over them. For example, trying to recover a failed root
            // may cause another root to be added to the failed list -- an infinite loop.
            var failedRootsSnapshot = cloneSet(failedRoots);
            var mountedRootsSnapshot = cloneSet(mountedRoots);
            var helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
                failedRoots.has(root);
                if (rootElements === null) return;
                if (!rootElements.has(root)) return;
                var element = rootElements.get(root);
                try {
                    helpers.scheduleRoot(root, element);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = false;
        }
    }
    function register(type, id) {
        if (type === null) return;
        if (typeof type !== "function" && typeof type !== "object") return;
         // This can happen in an edge case, e.g. if we register
        // return value of a HOC but it returns a cached component.
        // Ignore anything but the first registration for each type.
        if (allFamiliesByType.has(type)) return;
         // Create family or remember to update it.
        // None of this bookkeeping affects reconciliation
        // until the first performReactRefresh() call above.
        var family = allFamiliesByID.get(id);
        if (family === undefined) {
            family = {
                current: type
            };
            allFamiliesByID.set(id, family);
        } else pendingUpdates.push([
            family,
            type
        ]);
        allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.
        if (typeof type === "object" && type !== null) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                register(type.render, id + "$render");
                break;
            case REACT_MEMO_TYPE:
                register(type.type, id + "$type");
                break;
        }
    }
    function setSignature(type, key) {
        var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;
        allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
    } // This is lazily called during first render for a type.
    // It captures Hook list at that time so inline requires don't break comparisons.
    function collectCustomHooksForSignature(type) {
        var signature = allSignaturesByType.get(type);
        if (signature !== undefined) computeFullKey(signature);
    }
    function getFamilyByID(id) {
        return allFamiliesByID.get(id);
    }
    function getFamilyByType(type) {
        return allFamiliesByType.get(type);
    }
    function findAffectedHostInstances(families) {
        var affectedInstances = new Set();
        mountedRoots.forEach(function(root) {
            var helpers = helpersByRoot.get(root);
            if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
            var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);
            instancesForRoot.forEach(function(inst) {
                affectedInstances.add(inst);
            });
        });
        return affectedInstances;
    }
    function injectIntoGlobalHook(globalObject) {
        // For React Native, the global hook will be set up by require('react-devtools-core').
        // That code will run before us. So we need to monkeypatch functions on existing hook.
        // For React Web, the global hook will be set up by the extension.
        // This will also run before us.
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook === undefined) {
            // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.
            // Note that in this case it's important that renderer code runs *after* this method call.
            // Otherwise, the renderer will think that there is no global hook, and won't do the injection.
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: true,
                inject: function(injected) {
                    return nextID++;
                },
                onScheduleFiberRoot: function(id, root, children) {},
                onCommitFiberRoot: function(id, root, maybePriorityLevel, didError) {},
                onCommitFiberUnmount: function() {}
            };
        } // Here, we just want to get a reference to scheduleRefresh.
        var oldInject = hook.inject;
        hook.inject = function(injected) {
            var id = oldInject.apply(this, arguments);
            if (typeof injected.scheduleRefresh === "function" && typeof injected.setRefreshHandler === "function") // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
            return id;
        }; // Do the same for any already injected roots.
        // This is useful if ReactDOM has already been initialized.
        // https://github.com/facebook/react/issues/17626
        hook.renderers.forEach(function(injected, id) {
            if (typeof injected.scheduleRefresh === "function" && typeof injected.setRefreshHandler === "function") // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
        }); // We also want to track currently mounted roots.
        var oldOnCommitFiberRoot = hook.onCommitFiberRoot;
        var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
        hook.onScheduleFiberRoot = function(id, root, children) {
            if (!isPerformingRefresh) {
                // If it was intentionally scheduled, don't attempt to restore.
                // This includes intentionally scheduled unmounts.
                failedRoots.delete(root);
                if (rootElements !== null) rootElements.set(root, children);
            }
            return oldOnScheduleFiberRoot.apply(this, arguments);
        };
        hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
            var helpers = helpersByRendererID.get(id);
            if (helpers === undefined) return;
            helpersByRoot.set(root, helpers);
            var current = root.current;
            var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.
            // This logic is copy-pasted from similar logic in the DevTools backend.
            // If this breaks with some refactoring, you'll want to update DevTools too.
            if (alternate !== null) {
                var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;
                var isMounted = current.memoizedState != null && current.memoizedState.element != null;
                if (!wasMounted && isMounted) {
                    // Mount a new root.
                    mountedRoots.add(root);
                    failedRoots.delete(root);
                } else if (wasMounted && isMounted) ;
                else if (wasMounted && !isMounted) {
                    // Unmount an existing root.
                    mountedRoots.delete(root);
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                    else helpersByRoot.delete(root);
                } else if (!wasMounted && !isMounted) {
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                }
            } else // Mount a new root.
            mountedRoots.add(root);
            return oldOnCommitFiberRoot.apply(this, arguments);
        };
    }
    function hasUnrecoverableErrors() {
        // TODO: delete this after removing dependency in RN.
        return false;
    } // Exposed for testing.
    function _getMountedRootCount() {
        return mountedRoots.size;
    } // This is a wrapper over more primitive functions for setting signature.
    // Signatures let us decide whether the Hook order has changed on refresh.
    //
    // This function is intended to be used as a transform target, e.g.:
    // var _s = createSignatureFunctionForTransform()
    //
    // function Hello() {
    //   const [foo, setFoo] = useState(0);
    //   const value = useCustomHook();
    //   _s(); /* Second call triggers collecting the custom Hook list.
    //          * This doesn't happen during the module evaluation because we
    //          * don't want to change the module order with inline requires.
    //          * Next calls are noops. */
    //   return <h1>Hi</h1>;
    // }
    //
    // /* First call specifies the signature: */
    // _s(
    //   Hello,
    //   'useState{[foo, setFoo]}(0)',
    //   () => [useCustomHook], /* Lazy to avoid triggering inline requires */
    // );
    function createSignatureFunctionForTransform() {
        // We'll fill in the signature in two steps.
        // First, we'll know the signature itself. This happens outside the component.
        // Then, we'll know the references to custom Hooks. This happens inside the component.
        // After that, the returned function will be a fast path no-op.
        var status = "needsSignature";
        var savedType;
        var hasCustomHooks;
        return function(type, key, forceReset, getCustomHooks) {
            switch(status){
                case "needsSignature":
                    if (type !== undefined) {
                        // If we received an argument, this is the initial registration call.
                        savedType = type;
                        hasCustomHooks = typeof getCustomHooks === "function";
                        setSignature(type, key, forceReset, getCustomHooks); // The next call we expect is from inside a function, to fill in the custom Hooks.
                        status = "needsCustomHooks";
                    }
                    break;
                case "needsCustomHooks":
                    if (hasCustomHooks) collectCustomHooksForSignature(savedType);
                    status = "resolved";
                    break;
            }
            return type;
        };
    }
    function isLikelyComponentType(type) {
        switch(typeof type){
            case "function":
                // First, deal with classes.
                if (type.prototype != null) {
                    if (type.prototype.isReactComponent) // React class.
                    return true;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (ownNames.length > 1 || ownNames[0] !== "constructor") // This looks like a class.
                    return false;
                     // eslint-disable-next-line no-proto
                    if (type.prototype.__proto__ !== Object.prototype) // It has a superclass.
                    return false;
                     // Pass through.
                // This looks like a regular function with empty prototype.
                } // For plain functions and arrows, use name as a heuristic.
                var name = type.name || type.displayName;
                return typeof name === "string" && /^[A-Z]/.test(name);
            case "object":
                if (type != null) switch(type.$$typeof){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        // Definitely React components.
                        return true;
                    default:
                        return false;
                }
                return false;
            default:
                return false;
        }
    }
    exports._getMountedRootCount = _getMountedRootCount;
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;
    exports.findAffectedHostInstances = findAffectedHostInstances;
    exports.getFamilyByID = getFamilyByID;
    exports.getFamilyByType = getFamilyByType;
    exports.hasUnrecoverableErrors = hasUnrecoverableErrors;
    exports.injectIntoGlobalHook = injectIntoGlobalHook;
    exports.isLikelyComponentType = isLikelyComponentType;
    exports.performReactRefresh = performReactRefresh;
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"1dldy":[function(require,module,exports) {
var process = require("d1546958eb39fdcf");
!function(e, t) {
    module.exports = t();
}(window, function() {
    return function(e) {
        var t = {};
        function r(n) {
            if (t[n]) return t[n].exports;
            var o = t[n] = {
                i: n,
                l: !1,
                exports: {}
            };
            return e[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports;
        }
        return r.m = e, r.c = t, r.d = function(e, t, n) {
            r.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: n
            });
        }, r.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }, r.t = function(e, t) {
            if (1 & t && (e = r(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var n = Object.create(null);
            if (r.r(n), Object.defineProperty(n, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e) for(var o in e)r.d(n, o, (function(t) {
                return e[t];
            }).bind(null, o));
            return n;
        }, r.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default;
            } : function() {
                return e;
            };
            return r.d(t, "a", t), t;
        }, r.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }, r.p = "", r(r.s = 15);
    }([
        function(e, t, r) {
            e.exports = r(8);
        },
        function(e, t) {
            t.getArg = function(e, t, r) {
                if (t in e) return e[t];
                if (3 === arguments.length) return r;
                throw new Error('"' + t + '" is a required argument.');
            };
            var r = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/, n = /^data:.+\,.+$/;
            function o(e) {
                var t = e.match(r);
                return t ? {
                    scheme: t[1],
                    auth: t[2],
                    host: t[3],
                    port: t[4],
                    path: t[5]
                } : null;
            }
            function a(e) {
                var t = "";
                return e.scheme && (t += e.scheme + ":"), t += "//", e.auth && (t += e.auth + "@"), e.host && (t += e.host), e.port && (t += ":" + e.port), e.path && (t += e.path), t;
            }
            function i(e) {
                var r = e, n = o(e);
                if (n) {
                    if (!n.path) return e;
                    r = n.path;
                }
                for(var i, l = t.isAbsolute(r), u = r.split(/\/+/), c = 0, s = u.length - 1; s >= 0; s--)"." === (i = u[s]) ? u.splice(s, 1) : ".." === i ? c++ : c > 0 && ("" === i ? (u.splice(s + 1, c), c = 0) : (u.splice(s, 2), c--));
                return "" === (r = u.join("/")) && (r = l ? "/" : "."), n ? (n.path = r, a(n)) : r;
            }
            t.urlParse = o, t.urlGenerate = a, t.normalize = i, t.join = function(e, t) {
                "" === e && (e = "."), "" === t && (t = ".");
                var r = o(t), l = o(e);
                if (l && (e = l.path || "/"), r && !r.scheme) return l && (r.scheme = l.scheme), a(r);
                if (r || t.match(n)) return t;
                if (l && !l.host && !l.path) return l.host = t, a(l);
                var u = "/" === t.charAt(0) ? t : i(e.replace(/\/+$/, "") + "/" + t);
                return l ? (l.path = u, a(l)) : u;
            }, t.isAbsolute = function(e) {
                return "/" === e.charAt(0) || !!e.match(r);
            }, t.relative = function(e, t) {
                "" === e && (e = "."), e = e.replace(/\/$/, "");
                for(var r = 0; 0 !== t.indexOf(e + "/");){
                    var n = e.lastIndexOf("/");
                    if (n < 0) return t;
                    if ((e = e.slice(0, n)).match(/^([^\/]+:\/)?\/*$/)) return t;
                    ++r;
                }
                return Array(r + 1).join("../") + t.substr(e.length + 1);
            };
            var l = !("__proto__" in Object.create(null));
            function u(e) {
                return e;
            }
            function c(e) {
                if (!e) return !1;
                var t = e.length;
                if (t < 9) return !1;
                if (95 !== e.charCodeAt(t - 1) || 95 !== e.charCodeAt(t - 2) || 111 !== e.charCodeAt(t - 3) || 116 !== e.charCodeAt(t - 4) || 111 !== e.charCodeAt(t - 5) || 114 !== e.charCodeAt(t - 6) || 112 !== e.charCodeAt(t - 7) || 95 !== e.charCodeAt(t - 8) || 95 !== e.charCodeAt(t - 9)) return !1;
                for(var r = t - 10; r >= 0; r--)if (36 !== e.charCodeAt(r)) return !1;
                return !0;
            }
            function s(e, t) {
                return e === t ? 0 : e > t ? 1 : -1;
            }
            t.toSetString = l ? u : function(e) {
                return c(e) ? "$" + e : e;
            }, t.fromSetString = l ? u : function(e) {
                return c(e) ? e.slice(1) : e;
            }, t.compareByOriginalPositions = function(e, t, r) {
                var n = e.source - t.source;
                return 0 !== n ? n : 0 !== (n = e.originalLine - t.originalLine) ? n : 0 !== (n = e.originalColumn - t.originalColumn) || r ? n : 0 !== (n = e.generatedColumn - t.generatedColumn) ? n : 0 !== (n = e.generatedLine - t.generatedLine) ? n : e.name - t.name;
            }, t.compareByGeneratedPositionsDeflated = function(e, t, r) {
                var n = e.generatedLine - t.generatedLine;
                return 0 !== n ? n : 0 !== (n = e.generatedColumn - t.generatedColumn) || r ? n : 0 !== (n = e.source - t.source) ? n : 0 !== (n = e.originalLine - t.originalLine) ? n : 0 !== (n = e.originalColumn - t.originalColumn) ? n : e.name - t.name;
            }, t.compareByGeneratedPositionsInflated = function(e, t) {
                var r = e.generatedLine - t.generatedLine;
                return 0 !== r ? r : 0 !== (r = e.generatedColumn - t.generatedColumn) ? r : 0 !== (r = s(e.source, t.source)) ? r : 0 !== (r = e.originalLine - t.originalLine) ? r : 0 !== (r = e.originalColumn - t.originalColumn) ? r : s(e.name, t.name);
            };
        },
        function(e, t) {
            function r(e, t) {
                for(var r = 0, n = e.length - 1; n >= 0; n--){
                    var o = e[n];
                    "." === o ? e.splice(n, 1) : ".." === o ? (e.splice(n, 1), r++) : r && (e.splice(n, 1), r--);
                }
                if (t) for(; r--; r)e.unshift("..");
                return e;
            }
            function n(e, t) {
                if (e.filter) return e.filter(t);
                for(var r = [], n = 0; n < e.length; n++)t(e[n], n, e) && r.push(e[n]);
                return r;
            }
            t.resolve = function() {
                for(var e = "", t = !1, o = arguments.length - 1; o >= -1 && !t; o--){
                    var a = o >= 0 ? arguments[o] : process.cwd();
                    if ("string" != typeof a) throw new TypeError("Arguments to path.resolve must be strings");
                    a && (e = a + "/" + e, t = "/" === a.charAt(0));
                }
                return (t ? "/" : "") + (e = r(n(e.split("/"), function(e) {
                    return !!e;
                }), !t).join("/")) || ".";
            }, t.normalize = function(e) {
                var a = t.isAbsolute(e), i = "/" === o(e, -1);
                return (e = r(n(e.split("/"), function(e) {
                    return !!e;
                }), !a).join("/")) || a || (e = "."), e && i && (e += "/"), (a ? "/" : "") + e;
            }, t.isAbsolute = function(e) {
                return "/" === e.charAt(0);
            }, t.join = function() {
                var e = Array.prototype.slice.call(arguments, 0);
                return t.normalize(n(e, function(e, t) {
                    if ("string" != typeof e) throw new TypeError("Arguments to path.join must be strings");
                    return e;
                }).join("/"));
            }, t.relative = function(e, r) {
                function n(e) {
                    for(var t = 0; t < e.length && "" === e[t]; t++);
                    for(var r = e.length - 1; r >= 0 && "" === e[r]; r--);
                    return t > r ? [] : e.slice(t, r - t + 1);
                }
                e = t.resolve(e).substr(1), r = t.resolve(r).substr(1);
                for(var o = n(e.split("/")), a = n(r.split("/")), i = Math.min(o.length, a.length), l = i, u = 0; u < i; u++)if (o[u] !== a[u]) {
                    l = u;
                    break;
                }
                var c = [];
                for(u = l; u < o.length; u++)c.push("..");
                return (c = c.concat(a.slice(l))).join("/");
            }, t.sep = "/", t.delimiter = ":", t.dirname = function(e) {
                if ("string" != typeof e && (e += ""), 0 === e.length) return ".";
                for(var t = e.charCodeAt(0), r = 47 === t, n = -1, o = !0, a = e.length - 1; a >= 1; --a)if (47 === (t = e.charCodeAt(a))) {
                    if (!o) {
                        n = a;
                        break;
                    }
                } else o = !1;
                return -1 === n ? r ? "/" : "." : r && 1 === n ? "/" : e.slice(0, n);
            }, t.basename = function(e, t) {
                var r = function(e) {
                    "string" != typeof e && (e += "");
                    var t, r = 0, n = -1, o = !0;
                    for(t = e.length - 1; t >= 0; --t)if (47 === e.charCodeAt(t)) {
                        if (!o) {
                            r = t + 1;
                            break;
                        }
                    } else -1 === n && (o = !1, n = t + 1);
                    return -1 === n ? "" : e.slice(r, n);
                }(e);
                return t && r.substr(-1 * t.length) === t && (r = r.substr(0, r.length - t.length)), r;
            }, t.extname = function(e) {
                "string" != typeof e && (e += "");
                for(var t = -1, r = 0, n = -1, o = !0, a = 0, i = e.length - 1; i >= 0; --i){
                    var l = e.charCodeAt(i);
                    if (47 !== l) -1 === n && (o = !1, n = i + 1), 46 === l ? -1 === t ? t = i : 1 !== a && (a = 1) : -1 !== t && (a = -1);
                    else if (!o) {
                        r = i + 1;
                        break;
                    }
                }
                return -1 === t || -1 === n || 0 === a || 1 === a && t === n - 1 && t === r + 1 ? "" : e.slice(t, n);
            };
            var o = "b" === "ab".substr(-1) ? function(e, t, r) {
                return e.substr(t, r);
            } : function(e, t, r) {
                return t < 0 && (t = e.length + t), e.substr(t, r);
            };
        },
        function(e, t, r) {
            t.SourceMapGenerator = r(4).SourceMapGenerator, t.SourceMapConsumer = r(11).SourceMapConsumer, t.SourceNode = r(14).SourceNode;
        },
        function(e, t, r) {
            var n = r(5), o = r(1), a = r(6).ArraySet, i = r(10).MappingList;
            function l(e) {
                e || (e = {}), this._file = o.getArg(e, "file", null), this._sourceRoot = o.getArg(e, "sourceRoot", null), this._skipValidation = o.getArg(e, "skipValidation", !1), this._sources = new a, this._names = new a, this._mappings = new i, this._sourcesContents = null;
            }
            l.prototype._version = 3, l.fromSourceMap = function(e) {
                var t = e.sourceRoot, r = new l({
                    file: e.file,
                    sourceRoot: t
                });
                return e.eachMapping(function(e) {
                    var n = {
                        generated: {
                            line: e.generatedLine,
                            column: e.generatedColumn
                        }
                    };
                    null != e.source && (n.source = e.source, null != t && (n.source = o.relative(t, n.source)), n.original = {
                        line: e.originalLine,
                        column: e.originalColumn
                    }, null != e.name && (n.name = e.name)), r.addMapping(n);
                }), e.sources.forEach(function(t) {
                    var n = e.sourceContentFor(t);
                    null != n && r.setSourceContent(t, n);
                }), r;
            }, l.prototype.addMapping = function(e) {
                var t = o.getArg(e, "generated"), r = o.getArg(e, "original", null), n = o.getArg(e, "source", null), a = o.getArg(e, "name", null);
                this._skipValidation || this._validateMapping(t, r, n, a), null != n && (n = String(n), this._sources.has(n) || this._sources.add(n)), null != a && (a = String(a), this._names.has(a) || this._names.add(a)), this._mappings.add({
                    generatedLine: t.line,
                    generatedColumn: t.column,
                    originalLine: null != r && r.line,
                    originalColumn: null != r && r.column,
                    source: n,
                    name: a
                });
            }, l.prototype.setSourceContent = function(e, t) {
                var r = e;
                null != this._sourceRoot && (r = o.relative(this._sourceRoot, r)), null != t ? (this._sourcesContents || (this._sourcesContents = Object.create(null)), this._sourcesContents[o.toSetString(r)] = t) : this._sourcesContents && (delete this._sourcesContents[o.toSetString(r)], 0 === Object.keys(this._sourcesContents).length && (this._sourcesContents = null));
            }, l.prototype.applySourceMap = function(e, t, r) {
                var n = t;
                if (null == t) {
                    if (null == e.file) throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');
                    n = e.file;
                }
                var i = this._sourceRoot;
                null != i && (n = o.relative(i, n));
                var l = new a, u = new a;
                this._mappings.unsortedForEach(function(t) {
                    if (t.source === n && null != t.originalLine) {
                        var a = e.originalPositionFor({
                            line: t.originalLine,
                            column: t.originalColumn
                        });
                        null != a.source && (t.source = a.source, null != r && (t.source = o.join(r, t.source)), null != i && (t.source = o.relative(i, t.source)), t.originalLine = a.line, t.originalColumn = a.column, null != a.name && (t.name = a.name));
                    }
                    var c = t.source;
                    null == c || l.has(c) || l.add(c);
                    var s = t.name;
                    null == s || u.has(s) || u.add(s);
                }, this), this._sources = l, this._names = u, e.sources.forEach(function(t) {
                    var n = e.sourceContentFor(t);
                    null != n && (null != r && (t = o.join(r, t)), null != i && (t = o.relative(i, t)), this.setSourceContent(t, n));
                }, this);
            }, l.prototype._validateMapping = function(e, t, r, n) {
                if (t && "number" != typeof t.line && "number" != typeof t.column) throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");
                if ((!(e && "line" in e && "column" in e && e.line > 0 && e.column >= 0) || t || r || n) && !(e && "line" in e && "column" in e && t && "line" in t && "column" in t && e.line > 0 && e.column >= 0 && t.line > 0 && t.column >= 0 && r)) throw new Error("Invalid mapping: " + JSON.stringify({
                    generated: e,
                    source: r,
                    original: t,
                    name: n
                }));
            }, l.prototype._serializeMappings = function() {
                for(var e, t, r, a, i = 0, l = 1, u = 0, c = 0, s = 0, f = 0, d = "", p = this._mappings.toArray(), h = 0, g = p.length; h < g; h++){
                    if (e = "", (t = p[h]).generatedLine !== l) for(i = 0; t.generatedLine !== l;)e += ";", l++;
                    else if (h > 0) {
                        if (!o.compareByGeneratedPositionsInflated(t, p[h - 1])) continue;
                        e += ",";
                    }
                    e += n.encode(t.generatedColumn - i), i = t.generatedColumn, null != t.source && (a = this._sources.indexOf(t.source), e += n.encode(a - f), f = a, e += n.encode(t.originalLine - 1 - c), c = t.originalLine - 1, e += n.encode(t.originalColumn - u), u = t.originalColumn, null != t.name && (r = this._names.indexOf(t.name), e += n.encode(r - s), s = r)), d += e;
                }
                return d;
            }, l.prototype._generateSourcesContent = function(e, t) {
                return e.map(function(e) {
                    if (!this._sourcesContents) return null;
                    null != t && (e = o.relative(t, e));
                    var r = o.toSetString(e);
                    return Object.prototype.hasOwnProperty.call(this._sourcesContents, r) ? this._sourcesContents[r] : null;
                }, this);
            }, l.prototype.toJSON = function() {
                var e = {
                    version: this._version,
                    sources: this._sources.toArray(),
                    names: this._names.toArray(),
                    mappings: this._serializeMappings()
                };
                return null != this._file && (e.file = this._file), null != this._sourceRoot && (e.sourceRoot = this._sourceRoot), this._sourcesContents && (e.sourcesContent = this._generateSourcesContent(e.sources, e.sourceRoot)), e;
            }, l.prototype.toString = function() {
                return JSON.stringify(this.toJSON());
            }, t.SourceMapGenerator = l;
        },
        function(e, t, r) {
            var n = r(9);
            t.encode = function(e) {
                var t, r = "", o = function(e) {
                    return e < 0 ? 1 + (-e << 1) : 0 + (e << 1);
                }(e);
                do t = 31 & o, (o >>>= 5) > 0 && (t |= 32), r += n.encode(t);
                while (o > 0);
                return r;
            }, t.decode = function(e, t, r) {
                var o, a, i, l, u = e.length, c = 0, s = 0;
                do {
                    if (t >= u) throw new Error("Expected more digits in base 64 VLQ value.");
                    if (-1 === (a = n.decode(e.charCodeAt(t++)))) throw new Error("Invalid base64 digit: " + e.charAt(t - 1));
                    o = !!(32 & a), c += (a &= 31) << s, s += 5;
                }while (o);
                r.value = (l = (i = c) >> 1, 1 == (1 & i) ? -l : l), r.rest = t;
            };
        },
        function(e, t, r) {
            var n = r(1), o = Object.prototype.hasOwnProperty, a = "undefined" != typeof Map;
            function i() {
                this._array = [], this._set = a ? new Map : Object.create(null);
            }
            i.fromArray = function(e, t) {
                for(var r = new i, n = 0, o = e.length; n < o; n++)r.add(e[n], t);
                return r;
            }, i.prototype.size = function() {
                return a ? this._set.size : Object.getOwnPropertyNames(this._set).length;
            }, i.prototype.add = function(e, t) {
                var r = a ? e : n.toSetString(e), i = a ? this.has(e) : o.call(this._set, r), l = this._array.length;
                i && !t || this._array.push(e), i || (a ? this._set.set(e, l) : this._set[r] = l);
            }, i.prototype.has = function(e) {
                if (a) return this._set.has(e);
                var t = n.toSetString(e);
                return o.call(this._set, t);
            }, i.prototype.indexOf = function(e) {
                if (a) {
                    var t = this._set.get(e);
                    if (t >= 0) return t;
                } else {
                    var r = n.toSetString(e);
                    if (o.call(this._set, r)) return this._set[r];
                }
                throw new Error('"' + e + '" is not in the set.');
            }, i.prototype.at = function(e) {
                if (e >= 0 && e < this._array.length) return this._array[e];
                throw new Error("No element indexed by " + e);
            }, i.prototype.toArray = function() {
                return this._array.slice();
            }, t.ArraySet = i;
        },
        function(e, t, r) {
            "use strict";
            function n(e) {
                return Array.isArray(e) || (e = [
                    e
                ]), Promise.all(e.map(function(e) {
                    return e.then(function(e) {
                        return {
                            isFulfilled: !0,
                            isRejected: !1,
                            value: e
                        };
                    }).catch(function(e) {
                        return {
                            isFulfilled: !1,
                            isRejected: !0,
                            reason: e
                        };
                    });
                }));
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.settle = n, t.default = n;
        },
        function(e, t, r) {
            var n = function(e) {
                "use strict";
                var t, r = Object.prototype, n = r.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, a = o.iterator || "@@iterator", i = o.asyncIterator || "@@asyncIterator", l = o.toStringTag || "@@toStringTag";
                function u(e, t, r) {
                    return Object.defineProperty(e, t, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }), e[t];
                }
                try {
                    u({}, "");
                } catch (e) {
                    u = function(e, t, r) {
                        return e[t] = r;
                    };
                }
                function c(e, t, r, n) {
                    var o = t && t.prototype instanceof m ? t : m, a = Object.create(o.prototype), i = new T(n || []);
                    return a._invoke = function(e, t, r) {
                        var n = f;
                        return function(o, a) {
                            if (n === p) throw new Error("Generator is already running");
                            if (n === h) {
                                if ("throw" === o) throw a;
                                return L();
                            }
                            for(r.method = o, r.arg = a;;){
                                var i = r.delegate;
                                if (i) {
                                    var l = _(i, r);
                                    if (l) {
                                        if (l === g) continue;
                                        return l;
                                    }
                                }
                                if ("next" === r.method) r.sent = r._sent = r.arg;
                                else if ("throw" === r.method) {
                                    if (n === f) throw n = h, r.arg;
                                    r.dispatchException(r.arg);
                                } else "return" === r.method && r.abrupt("return", r.arg);
                                n = p;
                                var u = s(e, t, r);
                                if ("normal" === u.type) {
                                    if (n = r.done ? h : d, u.arg === g) continue;
                                    return {
                                        value: u.arg,
                                        done: r.done
                                    };
                                }
                                "throw" === u.type && (n = h, r.method = "throw", r.arg = u.arg);
                            }
                        };
                    }(e, r, i), a;
                }
                function s(e, t, r) {
                    try {
                        return {
                            type: "normal",
                            arg: e.call(t, r)
                        };
                    } catch (e) {
                        return {
                            type: "throw",
                            arg: e
                        };
                    }
                }
                e.wrap = c;
                var f = "suspendedStart", d = "suspendedYield", p = "executing", h = "completed", g = {};
                function m() {}
                function v() {}
                function y() {}
                var b = {};
                b[a] = function() {
                    return this;
                };
                var w = Object.getPrototypeOf, k = w && w(w(P([])));
                k && k !== r && n.call(k, a) && (b = k);
                var E = y.prototype = m.prototype = Object.create(b);
                function S(e) {
                    [
                        "next",
                        "throw",
                        "return"
                    ].forEach(function(t) {
                        u(e, t, function(e) {
                            return this._invoke(t, e);
                        });
                    });
                }
                function x(e, t) {
                    var r;
                    this._invoke = function(o, a) {
                        function i() {
                            return new t(function(r, i) {
                                !function r(o, a, i, l) {
                                    var u = s(e[o], e, a);
                                    if ("throw" !== u.type) {
                                        var c = u.arg, f = c.value;
                                        return f && "object" == typeof f && n.call(f, "__await") ? t.resolve(f.__await).then(function(e) {
                                            r("next", e, i, l);
                                        }, function(e) {
                                            r("throw", e, i, l);
                                        }) : t.resolve(f).then(function(e) {
                                            c.value = e, i(c);
                                        }, function(e) {
                                            return r("throw", e, i, l);
                                        });
                                    }
                                    l(u.arg);
                                }(o, a, r, i);
                            });
                        }
                        return r = r ? r.then(i, i) : i();
                    };
                }
                function _(e, r) {
                    var n = e.iterator[r.method];
                    if (n === t) {
                        if (r.delegate = null, "throw" === r.method) {
                            if (e.iterator.return && (r.method = "return", r.arg = t, _(e, r), "throw" === r.method)) return g;
                            r.method = "throw", r.arg = new TypeError("The iterator does not provide a 'throw' method");
                        }
                        return g;
                    }
                    var o = s(n, e.iterator, r.arg);
                    if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, g;
                    var a = o.arg;
                    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, g) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, g);
                }
                function C(e) {
                    var t = {
                        tryLoc: e[0]
                    };
                    1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t);
                }
                function O(e) {
                    var t = e.completion || {};
                    t.type = "normal", delete t.arg, e.completion = t;
                }
                function T(e) {
                    this.tryEntries = [
                        {
                            tryLoc: "root"
                        }
                    ], e.forEach(C, this), this.reset(!0);
                }
                function P(e) {
                    if (e) {
                        var r = e[a];
                        if (r) return r.call(e);
                        if ("function" == typeof e.next) return e;
                        if (!isNaN(e.length)) {
                            var o = -1, i = function r() {
                                for(; ++o < e.length;)if (n.call(e, o)) return r.value = e[o], r.done = !1, r;
                                return r.value = t, r.done = !0, r;
                            };
                            return i.next = i;
                        }
                    }
                    return {
                        next: L
                    };
                }
                function L() {
                    return {
                        value: t,
                        done: !0
                    };
                }
                return v.prototype = E.constructor = y, y.constructor = v, v.displayName = u(y, l, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name));
                }, e.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, y) : (e.__proto__ = y, u(e, l, "GeneratorFunction")), e.prototype = Object.create(E), e;
                }, e.awrap = function(e) {
                    return {
                        __await: e
                    };
                }, S(x.prototype), x.prototype[i] = function() {
                    return this;
                }, e.AsyncIterator = x, e.async = function(t, r, n, o, a) {
                    void 0 === a && (a = Promise);
                    var i = new x(c(t, r, n, o), a);
                    return e.isGeneratorFunction(r) ? i : i.next().then(function(e) {
                        return e.done ? e.value : i.next();
                    });
                }, S(E), u(E, l, "Generator"), E[a] = function() {
                    return this;
                }, E.toString = function() {
                    return "[object Generator]";
                }, e.keys = function(e) {
                    var t = [];
                    for(var r in e)t.push(r);
                    return t.reverse(), function r() {
                        for(; t.length;){
                            var n = t.pop();
                            if (n in e) return r.value = n, r.done = !1, r;
                        }
                        return r.done = !0, r;
                    };
                }, e.values = P, T.prototype = {
                    constructor: T,
                    reset: function(e) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(O), !e) for(var r in this)"t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type) throw e.arg;
                        return this.rval;
                    },
                    dispatchException: function(e) {
                        if (this.done) throw e;
                        var r = this;
                        function o(n, o) {
                            return l.type = "throw", l.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
                        }
                        for(var a = this.tryEntries.length - 1; a >= 0; --a){
                            var i = this.tryEntries[a], l = i.completion;
                            if ("root" === i.tryLoc) return o("end");
                            if (i.tryLoc <= this.prev) {
                                var u = n.call(i, "catchLoc"), c = n.call(i, "finallyLoc");
                                if (u && c) {
                                    if (this.prev < i.catchLoc) return o(i.catchLoc, !0);
                                    if (this.prev < i.finallyLoc) return o(i.finallyLoc);
                                } else if (u) {
                                    if (this.prev < i.catchLoc) return o(i.catchLoc, !0);
                                } else {
                                    if (!c) throw new Error("try statement without catch or finally");
                                    if (this.prev < i.finallyLoc) return o(i.finallyLoc);
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for(var r = this.tryEntries.length - 1; r >= 0; --r){
                            var o = this.tryEntries[r];
                            if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                                var a = o;
                                break;
                            }
                        }
                        a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                        var i = a ? a.completion : {};
                        return i.type = e, i.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, g) : this.complete(i);
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), g;
                    },
                    finish: function(e) {
                        for(var t = this.tryEntries.length - 1; t >= 0; --t){
                            var r = this.tryEntries[t];
                            if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), O(r), g;
                        }
                    },
                    catch: function(e) {
                        for(var t = this.tryEntries.length - 1; t >= 0; --t){
                            var r = this.tryEntries[t];
                            if (r.tryLoc === e) {
                                var n = r.completion;
                                if ("throw" === n.type) {
                                    var o = n.arg;
                                    O(r);
                                }
                                return o;
                            }
                        }
                        throw new Error("illegal catch attempt");
                    },
                    delegateYield: function(e, r, n) {
                        return this.delegate = {
                            iterator: P(e),
                            resultName: r,
                            nextLoc: n
                        }, "next" === this.method && (this.arg = t), g;
                    }
                }, e;
            }(e.exports);
            try {
                regeneratorRuntime = n;
            } catch (e) {
                Function("r", "regeneratorRuntime = r")(n);
            }
        },
        function(e, t) {
            var r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
            t.encode = function(e) {
                if (0 <= e && e < r.length) return r[e];
                throw new TypeError("Must be between 0 and 63: " + e);
            }, t.decode = function(e) {
                return 65 <= e && e <= 90 ? e - 65 : 97 <= e && e <= 122 ? e - 97 + 26 : 48 <= e && e <= 57 ? e - 48 + 52 : 43 == e ? 62 : 47 == e ? 63 : -1;
            };
        },
        function(e, t, r) {
            var n = r(1);
            function o() {
                this._array = [], this._sorted = !0, this._last = {
                    generatedLine: -1,
                    generatedColumn: 0
                };
            }
            o.prototype.unsortedForEach = function(e, t) {
                this._array.forEach(e, t);
            }, o.prototype.add = function(e) {
                var t, r, o, a, i, l;
                t = this._last, r = e, o = t.generatedLine, a = r.generatedLine, i = t.generatedColumn, l = r.generatedColumn, a > o || a == o && l >= i || n.compareByGeneratedPositionsInflated(t, r) <= 0 ? (this._last = e, this._array.push(e)) : (this._sorted = !1, this._array.push(e));
            }, o.prototype.toArray = function() {
                return this._sorted || (this._array.sort(n.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
            }, t.MappingList = o;
        },
        function(e, t, r) {
            var n = r(1), o = r(12), a = r(6).ArraySet, i = r(5), l = r(13).quickSort;
            function u(e) {
                var t = e;
                return "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, ""))), null != t.sections ? new f(t) : new c(t);
            }
            function c(e) {
                var t = e;
                "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, "")));
                var r = n.getArg(t, "version"), o = n.getArg(t, "sources"), i = n.getArg(t, "names", []), l = n.getArg(t, "sourceRoot", null), u = n.getArg(t, "sourcesContent", null), c = n.getArg(t, "mappings"), s = n.getArg(t, "file", null);
                if (r != this._version) throw new Error("Unsupported version: " + r);
                o = o.map(String).map(n.normalize).map(function(e) {
                    return l && n.isAbsolute(l) && n.isAbsolute(e) ? n.relative(l, e) : e;
                }), this._names = a.fromArray(i.map(String), !0), this._sources = a.fromArray(o, !0), this.sourceRoot = l, this.sourcesContent = u, this._mappings = c, this.file = s;
            }
            function s() {
                this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
            }
            function f(e) {
                var t = e;
                "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, "")));
                var r = n.getArg(t, "version"), o = n.getArg(t, "sections");
                if (r != this._version) throw new Error("Unsupported version: " + r);
                this._sources = new a, this._names = new a;
                var i = {
                    line: -1,
                    column: 0
                };
                this._sections = o.map(function(e) {
                    if (e.url) throw new Error("Support for url field in sections not implemented.");
                    var t = n.getArg(e, "offset"), r = n.getArg(t, "line"), o = n.getArg(t, "column");
                    if (r < i.line || r === i.line && o < i.column) throw new Error("Section offsets must be ordered and non-overlapping.");
                    return i = t, {
                        generatedOffset: {
                            generatedLine: r + 1,
                            generatedColumn: o + 1
                        },
                        consumer: new u(n.getArg(e, "map"))
                    };
                });
            }
            u.fromSourceMap = function(e) {
                return c.fromSourceMap(e);
            }, u.prototype._version = 3, u.prototype.__generatedMappings = null, Object.defineProperty(u.prototype, "_generatedMappings", {
                get: function() {
                    return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
                }
            }), u.prototype.__originalMappings = null, Object.defineProperty(u.prototype, "_originalMappings", {
                get: function() {
                    return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
                }
            }), u.prototype._charIsMappingSeparator = function(e, t) {
                var r = e.charAt(t);
                return ";" === r || "," === r;
            }, u.prototype._parseMappings = function(e, t) {
                throw new Error("Subclasses must implement _parseMappings");
            }, u.GENERATED_ORDER = 1, u.ORIGINAL_ORDER = 2, u.GREATEST_LOWER_BOUND = 1, u.LEAST_UPPER_BOUND = 2, u.prototype.eachMapping = function(e, t, r) {
                var o, a = t || null;
                switch(r || u.GENERATED_ORDER){
                    case u.GENERATED_ORDER:
                        o = this._generatedMappings;
                        break;
                    case u.ORIGINAL_ORDER:
                        o = this._originalMappings;
                        break;
                    default:
                        throw new Error("Unknown order of iteration.");
                }
                var i = this.sourceRoot;
                o.map(function(e) {
                    var t = null === e.source ? null : this._sources.at(e.source);
                    return null != t && null != i && (t = n.join(i, t)), {
                        source: t,
                        generatedLine: e.generatedLine,
                        generatedColumn: e.generatedColumn,
                        originalLine: e.originalLine,
                        originalColumn: e.originalColumn,
                        name: null === e.name ? null : this._names.at(e.name)
                    };
                }, this).forEach(e, a);
            }, u.prototype.allGeneratedPositionsFor = function(e) {
                var t = n.getArg(e, "line"), r = {
                    source: n.getArg(e, "source"),
                    originalLine: t,
                    originalColumn: n.getArg(e, "column", 0)
                };
                if (null != this.sourceRoot && (r.source = n.relative(this.sourceRoot, r.source)), !this._sources.has(r.source)) return [];
                r.source = this._sources.indexOf(r.source);
                var a = [], i = this._findMapping(r, this._originalMappings, "originalLine", "originalColumn", n.compareByOriginalPositions, o.LEAST_UPPER_BOUND);
                if (i >= 0) {
                    var l = this._originalMappings[i];
                    if (void 0 === e.column) for(var u = l.originalLine; l && l.originalLine === u;)a.push({
                        line: n.getArg(l, "generatedLine", null),
                        column: n.getArg(l, "generatedColumn", null),
                        lastColumn: n.getArg(l, "lastGeneratedColumn", null)
                    }), l = this._originalMappings[++i];
                    else for(var c = l.originalColumn; l && l.originalLine === t && l.originalColumn == c;)a.push({
                        line: n.getArg(l, "generatedLine", null),
                        column: n.getArg(l, "generatedColumn", null),
                        lastColumn: n.getArg(l, "lastGeneratedColumn", null)
                    }), l = this._originalMappings[++i];
                }
                return a;
            }, t.SourceMapConsumer = u, c.prototype = Object.create(u.prototype), c.prototype.consumer = u, c.fromSourceMap = function(e) {
                var t = Object.create(c.prototype), r = t._names = a.fromArray(e._names.toArray(), !0), o = t._sources = a.fromArray(e._sources.toArray(), !0);
                t.sourceRoot = e._sourceRoot, t.sourcesContent = e._generateSourcesContent(t._sources.toArray(), t.sourceRoot), t.file = e._file;
                for(var i = e._mappings.toArray().slice(), u = t.__generatedMappings = [], f = t.__originalMappings = [], d = 0, p = i.length; d < p; d++){
                    var h = i[d], g = new s;
                    g.generatedLine = h.generatedLine, g.generatedColumn = h.generatedColumn, h.source && (g.source = o.indexOf(h.source), g.originalLine = h.originalLine, g.originalColumn = h.originalColumn, h.name && (g.name = r.indexOf(h.name)), f.push(g)), u.push(g);
                }
                return l(t.__originalMappings, n.compareByOriginalPositions), t;
            }, c.prototype._version = 3, Object.defineProperty(c.prototype, "sources", {
                get: function() {
                    return this._sources.toArray().map(function(e) {
                        return null != this.sourceRoot ? n.join(this.sourceRoot, e) : e;
                    }, this);
                }
            }), c.prototype._parseMappings = function(e, t) {
                for(var r, o, a, u, c, f = 1, d = 0, p = 0, h = 0, g = 0, m = 0, v = e.length, y = 0, b = {}, w = {}, k = [], E = []; y < v;)if (";" === e.charAt(y)) f++, y++, d = 0;
                else if ("," === e.charAt(y)) y++;
                else {
                    for((r = new s).generatedLine = f, u = y; u < v && !this._charIsMappingSeparator(e, u); u++);
                    if (a = b[o = e.slice(y, u)]) y += o.length;
                    else {
                        for(a = []; y < u;)i.decode(e, y, w), c = w.value, y = w.rest, a.push(c);
                        if (2 === a.length) throw new Error("Found a source, but no line and column");
                        if (3 === a.length) throw new Error("Found a source and line, but no column");
                        b[o] = a;
                    }
                    r.generatedColumn = d + a[0], d = r.generatedColumn, a.length > 1 && (r.source = g + a[1], g += a[1], r.originalLine = p + a[2], p = r.originalLine, r.originalLine += 1, r.originalColumn = h + a[3], h = r.originalColumn, a.length > 4 && (r.name = m + a[4], m += a[4])), E.push(r), "number" == typeof r.originalLine && k.push(r);
                }
                l(E, n.compareByGeneratedPositionsDeflated), this.__generatedMappings = E, l(k, n.compareByOriginalPositions), this.__originalMappings = k;
            }, c.prototype._findMapping = function(e, t, r, n, a, i) {
                if (e[r] <= 0) throw new TypeError("Line must be greater than or equal to 1, got " + e[r]);
                if (e[n] < 0) throw new TypeError("Column must be greater than or equal to 0, got " + e[n]);
                return o.search(e, t, a, i);
            }, c.prototype.computeColumnSpans = function() {
                for(var e = 0; e < this._generatedMappings.length; ++e){
                    var t = this._generatedMappings[e];
                    if (e + 1 < this._generatedMappings.length) {
                        var r = this._generatedMappings[e + 1];
                        if (t.generatedLine === r.generatedLine) {
                            t.lastGeneratedColumn = r.generatedColumn - 1;
                            continue;
                        }
                    }
                    t.lastGeneratedColumn = 1 / 0;
                }
            }, c.prototype.originalPositionFor = function(e) {
                var t = {
                    generatedLine: n.getArg(e, "line"),
                    generatedColumn: n.getArg(e, "column")
                }, r = this._findMapping(t, this._generatedMappings, "generatedLine", "generatedColumn", n.compareByGeneratedPositionsDeflated, n.getArg(e, "bias", u.GREATEST_LOWER_BOUND));
                if (r >= 0) {
                    var o = this._generatedMappings[r];
                    if (o.generatedLine === t.generatedLine) {
                        var a = n.getArg(o, "source", null);
                        null !== a && (a = this._sources.at(a), null != this.sourceRoot && (a = n.join(this.sourceRoot, a)));
                        var i = n.getArg(o, "name", null);
                        return null !== i && (i = this._names.at(i)), {
                            source: a,
                            line: n.getArg(o, "originalLine", null),
                            column: n.getArg(o, "originalColumn", null),
                            name: i
                        };
                    }
                }
                return {
                    source: null,
                    line: null,
                    column: null,
                    name: null
                };
            }, c.prototype.hasContentsOfAllSources = function() {
                return !!this.sourcesContent && this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(e) {
                    return null == e;
                });
            }, c.prototype.sourceContentFor = function(e, t) {
                if (!this.sourcesContent) return null;
                if (null != this.sourceRoot && (e = n.relative(this.sourceRoot, e)), this._sources.has(e)) return this.sourcesContent[this._sources.indexOf(e)];
                var r;
                if (null != this.sourceRoot && (r = n.urlParse(this.sourceRoot))) {
                    var o = e.replace(/^file:\/\//, "");
                    if ("file" == r.scheme && this._sources.has(o)) return this.sourcesContent[this._sources.indexOf(o)];
                    if ((!r.path || "/" == r.path) && this._sources.has("/" + e)) return this.sourcesContent[this._sources.indexOf("/" + e)];
                }
                if (t) return null;
                throw new Error('"' + e + '" is not in the SourceMap.');
            }, c.prototype.generatedPositionFor = function(e) {
                var t = n.getArg(e, "source");
                if (null != this.sourceRoot && (t = n.relative(this.sourceRoot, t)), !this._sources.has(t)) return {
                    line: null,
                    column: null,
                    lastColumn: null
                };
                var r = {
                    source: t = this._sources.indexOf(t),
                    originalLine: n.getArg(e, "line"),
                    originalColumn: n.getArg(e, "column")
                }, o = this._findMapping(r, this._originalMappings, "originalLine", "originalColumn", n.compareByOriginalPositions, n.getArg(e, "bias", u.GREATEST_LOWER_BOUND));
                if (o >= 0) {
                    var a = this._originalMappings[o];
                    if (a.source === r.source) return {
                        line: n.getArg(a, "generatedLine", null),
                        column: n.getArg(a, "generatedColumn", null),
                        lastColumn: n.getArg(a, "lastGeneratedColumn", null)
                    };
                }
                return {
                    line: null,
                    column: null,
                    lastColumn: null
                };
            }, t.BasicSourceMapConsumer = c, f.prototype = Object.create(u.prototype), f.prototype.constructor = u, f.prototype._version = 3, Object.defineProperty(f.prototype, "sources", {
                get: function() {
                    for(var e = [], t = 0; t < this._sections.length; t++)for(var r = 0; r < this._sections[t].consumer.sources.length; r++)e.push(this._sections[t].consumer.sources[r]);
                    return e;
                }
            }), f.prototype.originalPositionFor = function(e) {
                var t = {
                    generatedLine: n.getArg(e, "line"),
                    generatedColumn: n.getArg(e, "column")
                }, r = o.search(t, this._sections, function(e, t) {
                    var r = e.generatedLine - t.generatedOffset.generatedLine;
                    return r || e.generatedColumn - t.generatedOffset.generatedColumn;
                }), a = this._sections[r];
                return a ? a.consumer.originalPositionFor({
                    line: t.generatedLine - (a.generatedOffset.generatedLine - 1),
                    column: t.generatedColumn - (a.generatedOffset.generatedLine === t.generatedLine ? a.generatedOffset.generatedColumn - 1 : 0),
                    bias: e.bias
                }) : {
                    source: null,
                    line: null,
                    column: null,
                    name: null
                };
            }, f.prototype.hasContentsOfAllSources = function() {
                return this._sections.every(function(e) {
                    return e.consumer.hasContentsOfAllSources();
                });
            }, f.prototype.sourceContentFor = function(e, t) {
                for(var r = 0; r < this._sections.length; r++){
                    var n = this._sections[r].consumer.sourceContentFor(e, !0);
                    if (n) return n;
                }
                if (t) return null;
                throw new Error('"' + e + '" is not in the SourceMap.');
            }, f.prototype.generatedPositionFor = function(e) {
                for(var t = 0; t < this._sections.length; t++){
                    var r = this._sections[t];
                    if (-1 !== r.consumer.sources.indexOf(n.getArg(e, "source"))) {
                        var o = r.consumer.generatedPositionFor(e);
                        if (o) return {
                            line: o.line + (r.generatedOffset.generatedLine - 1),
                            column: o.column + (r.generatedOffset.generatedLine === o.line ? r.generatedOffset.generatedColumn - 1 : 0)
                        };
                    }
                }
                return {
                    line: null,
                    column: null
                };
            }, f.prototype._parseMappings = function(e, t) {
                this.__generatedMappings = [], this.__originalMappings = [];
                for(var r = 0; r < this._sections.length; r++)for(var o = this._sections[r], a = o.consumer._generatedMappings, i = 0; i < a.length; i++){
                    var u = a[i], c = o.consumer._sources.at(u.source);
                    null !== o.consumer.sourceRoot && (c = n.join(o.consumer.sourceRoot, c)), this._sources.add(c), c = this._sources.indexOf(c);
                    var s = o.consumer._names.at(u.name);
                    this._names.add(s), s = this._names.indexOf(s);
                    var f = {
                        source: c,
                        generatedLine: u.generatedLine + (o.generatedOffset.generatedLine - 1),
                        generatedColumn: u.generatedColumn + (o.generatedOffset.generatedLine === u.generatedLine ? o.generatedOffset.generatedColumn - 1 : 0),
                        originalLine: u.originalLine,
                        originalColumn: u.originalColumn,
                        name: s
                    };
                    this.__generatedMappings.push(f), "number" == typeof f.originalLine && this.__originalMappings.push(f);
                }
                l(this.__generatedMappings, n.compareByGeneratedPositionsDeflated), l(this.__originalMappings, n.compareByOriginalPositions);
            }, t.IndexedSourceMapConsumer = f;
        },
        function(e, t) {
            t.GREATEST_LOWER_BOUND = 1, t.LEAST_UPPER_BOUND = 2, t.search = function(e, r, n, o) {
                if (0 === r.length) return -1;
                var a = function e(r, n, o, a, i, l) {
                    var u = Math.floor((n - r) / 2) + r, c = i(o, a[u], !0);
                    return 0 === c ? u : c > 0 ? n - u > 1 ? e(u, n, o, a, i, l) : l == t.LEAST_UPPER_BOUND ? n < a.length ? n : -1 : u : u - r > 1 ? e(r, u, o, a, i, l) : l == t.LEAST_UPPER_BOUND ? u : r < 0 ? -1 : r;
                }(-1, r.length, e, r, n, o || t.GREATEST_LOWER_BOUND);
                if (a < 0) return -1;
                for(; a - 1 >= 0 && 0 === n(r[a], r[a - 1], !0);)--a;
                return a;
            };
        },
        function(e, t) {
            function r(e, t, r) {
                var n = e[t];
                e[t] = e[r], e[r] = n;
            }
            function n(e, t, o, a) {
                if (o < a) {
                    var i = o - 1;
                    r(e, (s = o, f = a, Math.round(s + Math.random() * (f - s))), a);
                    for(var l = e[a], u = o; u < a; u++)t(e[u], l) <= 0 && r(e, i += 1, u);
                    r(e, i + 1, u);
                    var c = i + 1;
                    n(e, t, o, c - 1), n(e, t, c + 1, a);
                }
                var s, f;
            }
            t.quickSort = function(e, t) {
                n(e, t, 0, e.length - 1);
            };
        },
        function(e, t, r) {
            var n = r(4).SourceMapGenerator, o = r(1), a = /(\r?\n)/, i = "$$$isSourceNode$$$";
            function l(e, t, r, n, o) {
                this.children = [], this.sourceContents = {}, this.line = null == e ? null : e, this.column = null == t ? null : t, this.source = null == r ? null : r, this.name = null == o ? null : o, this[i] = !0, null != n && this.add(n);
            }
            l.fromStringWithSourceMap = function(e, t, r) {
                var n = new l, i = e.split(a), u = 0, c = function() {
                    return e() + (e() || "");
                    function e() {
                        return u < i.length ? i[u++] : void 0;
                    }
                }, s = 1, f = 0, d = null;
                return t.eachMapping(function(e) {
                    if (null !== d) {
                        if (!(s < e.generatedLine)) {
                            var t = (r = i[u]).substr(0, e.generatedColumn - f);
                            return i[u] = r.substr(e.generatedColumn - f), f = e.generatedColumn, p(d, t), void (d = e);
                        }
                        p(d, c()), s++, f = 0;
                    }
                    for(; s < e.generatedLine;)n.add(c()), s++;
                    if (f < e.generatedColumn) {
                        var r = i[u];
                        n.add(r.substr(0, e.generatedColumn)), i[u] = r.substr(e.generatedColumn), f = e.generatedColumn;
                    }
                    d = e;
                }, this), u < i.length && (d && p(d, c()), n.add(i.splice(u).join(""))), t.sources.forEach(function(e) {
                    var a = t.sourceContentFor(e);
                    null != a && (null != r && (e = o.join(r, e)), n.setSourceContent(e, a));
                }), n;
                function p(e, t) {
                    if (null === e || void 0 === e.source) n.add(t);
                    else {
                        var a = r ? o.join(r, e.source) : e.source;
                        n.add(new l(e.originalLine, e.originalColumn, a, t, e.name));
                    }
                }
            }, l.prototype.add = function(e) {
                if (Array.isArray(e)) e.forEach(function(e) {
                    this.add(e);
                }, this);
                else {
                    if (!e[i] && "string" != typeof e) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e);
                    e && this.children.push(e);
                }
                return this;
            }, l.prototype.prepend = function(e) {
                if (Array.isArray(e)) for(var t = e.length - 1; t >= 0; t--)this.prepend(e[t]);
                else {
                    if (!e[i] && "string" != typeof e) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e);
                    this.children.unshift(e);
                }
                return this;
            }, l.prototype.walk = function(e) {
                for(var t, r = 0, n = this.children.length; r < n; r++)(t = this.children[r])[i] ? t.walk(e) : "" !== t && e(t, {
                    source: this.source,
                    line: this.line,
                    column: this.column,
                    name: this.name
                });
            }, l.prototype.join = function(e) {
                var t, r, n = this.children.length;
                if (n > 0) {
                    for(t = [], r = 0; r < n - 1; r++)t.push(this.children[r]), t.push(e);
                    t.push(this.children[r]), this.children = t;
                }
                return this;
            }, l.prototype.replaceRight = function(e, t) {
                var r = this.children[this.children.length - 1];
                return r[i] ? r.replaceRight(e, t) : "string" == typeof r ? this.children[this.children.length - 1] = r.replace(e, t) : this.children.push("".replace(e, t)), this;
            }, l.prototype.setSourceContent = function(e, t) {
                this.sourceContents[o.toSetString(e)] = t;
            }, l.prototype.walkSourceContents = function(e) {
                for(var t = 0, r = this.children.length; t < r; t++)this.children[t][i] && this.children[t].walkSourceContents(e);
                var n = Object.keys(this.sourceContents);
                for(t = 0, r = n.length; t < r; t++)e(o.fromSetString(n[t]), this.sourceContents[n[t]]);
            }, l.prototype.toString = function() {
                var e = "";
                return this.walk(function(t) {
                    e += t;
                }), e;
            }, l.prototype.toStringWithSourceMap = function(e) {
                var t = {
                    code: "",
                    line: 1,
                    column: 0
                }, r = new n(e), o = !1, a = null, i = null, l = null, u = null;
                return this.walk(function(e, n) {
                    t.code += e, null !== n.source && null !== n.line && null !== n.column ? (a === n.source && i === n.line && l === n.column && u === n.name || r.addMapping({
                        source: n.source,
                        original: {
                            line: n.line,
                            column: n.column
                        },
                        generated: {
                            line: t.line,
                            column: t.column
                        },
                        name: n.name
                    }), a = n.source, i = n.line, l = n.column, u = n.name, o = !0) : o && (r.addMapping({
                        generated: {
                            line: t.line,
                            column: t.column
                        }
                    }), a = null, o = !1);
                    for(var c = 0, s = e.length; c < s; c++)10 === e.charCodeAt(c) ? (t.line++, t.column = 0, c + 1 === s ? (a = null, o = !1) : o && r.addMapping({
                        source: n.source,
                        original: {
                            line: n.line,
                            column: n.column
                        },
                        generated: {
                            line: t.line,
                            column: t.column
                        },
                        name: n.name
                    })) : t.column++;
                }), this.walkSourceContents(function(e, t) {
                    r.setSourceContent(e, t);
                }), {
                    code: t.code,
                    map: r
                };
            }, t.SourceNode = l;
        },
        function(e, t, r) {
            "use strict";
            r.r(t), r.d(t, "setEditorHandler", function() {
                return ue;
            }), r.d(t, "reportBuildError", function() {
                return ce;
            }), r.d(t, "reportRuntimeError", function() {
                return se;
            }), r.d(t, "dismissBuildError", function() {
                return fe;
            }), r.d(t, "startReportingRuntimeErrors", function() {
                return de;
            }), r.d(t, "dismissRuntimeErrors", function() {
                return he;
            }), r.d(t, "stopReportingRuntimeErrors", function() {
                return ge;
            });
            var n = null;
            function o(e, t) {
                if (t.error) {
                    var r = t.error;
                    r instanceof Error ? e(r) : e(new Error(r));
                }
            }
            function a(e, t) {
                null === n && (n = o.bind(void 0, t), e.addEventListener("error", n));
            }
            var i = null;
            function l(e, t) {
                if (null == t || null == t.reason) return e(new Error("Unknown"));
                var r = t.reason;
                return r instanceof Error ? e(r) : e(new Error(r));
            }
            function u(e, t) {
                null === i && (i = l.bind(void 0, t), e.addEventListener("unhandledrejection", i));
            }
            var c = !1, s = 10, f = 50;
            var d = [], p = function() {
                "undefined" != typeof console && (console.reactStack = function(e) {
                    return d.push(e);
                }, console.reactStackEnd = function(e) {
                    return d.pop();
                });
            }, h = function() {
                "undefined" != typeof console && (console.reactStack = void 0, console.reactStackEnd = void 0);
            }, g = function(e, t) {
                if ("undefined" != typeof console) {
                    var r = console[e];
                    "function" == typeof r && (console[e] = function() {
                        try {
                            var e = arguments[0];
                            "string" == typeof e && d.length > 0 && t(e, d[d.length - 1]);
                        } catch (e) {
                            setTimeout(function() {
                                throw e;
                            });
                        }
                        return r.apply(this, arguments);
                    });
                }
            };
            function m(e, t) {
                return (m = Object.setPrototypeOf || function(e, t) {
                    return e.__proto__ = t, e;
                })(e, t);
            }
            function v(e, t, r) {
                return (v = function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;
                    } catch (e) {
                        return !1;
                    }
                }() ? Reflect.construct : function(e, t, r) {
                    var n = [
                        null
                    ];
                    n.push.apply(n, t);
                    var o = new (Function.bind.apply(e, n));
                    return r && m(o, r.prototype), o;
                }).apply(null, arguments);
            }
            function y(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for(var r = 0, n = new Array(t); r < t; r++)n[r] = e[r];
                return n;
            }
            function b(e) {
                return function(e) {
                    if (Array.isArray(e)) return y(e);
                }(e) || function(e) {
                    if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);
                }(e) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e) return y(e, t);
                        var r = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? y(e, t) : void 0;
                    }
                }(e) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }();
            }
            function w(e, t) {
                for(var r = 0; r < t.length; r++){
                    var n = t[r];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
                }
            }
            function k(e, t, r) {
                return t && w(e.prototype, t), r && w(e, r), e;
            }
            function E(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
            }
            var S = function e(t, r) {
                var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                E(this, e), this.lineNumber = t, this.content = r, this.highlight = n;
            }, x = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null, i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null, l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null, u = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null, c = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null, s = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : null;
                    E(this, e), t && 0 === t.indexOf("Object.") && (t = t.slice(7)), "friendlySyntaxErrorLabel" !== t && "exports.__esModule" !== t && "<anonymous>" !== t && t || (t = null), this.functionName = t, this.fileName = r, this.lineNumber = n, this.columnNumber = o, this._originalFunctionName = i, this._originalFileName = l, this._originalLineNumber = u, this._originalColumnNumber = c, this._scriptCode = a, this._originalScriptCode = s;
                }
                return k(e, [
                    {
                        key: "getFunctionName",
                        value: function() {
                            return this.functionName || "(anonymous function)";
                        }
                    },
                    {
                        key: "getSource",
                        value: function() {
                            var e = "";
                            return null != this.fileName && (e += this.fileName + ":"), null != this.lineNumber && (e += this.lineNumber + ":"), null != this.columnNumber && (e += this.columnNumber + ":"), e.slice(0, -1);
                        }
                    },
                    {
                        key: "toString",
                        value: function() {
                            var e = this.getFunctionName(), t = this.getSource();
                            return "".concat(e).concat(t ? " (".concat(t, ")") : "");
                        }
                    }
                ]), e;
            }(), _ = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;
            function C(e) {
                return _.exec(e).slice(1).map(function(e) {
                    var t = Number(e);
                    return isNaN(t) ? e : t;
                });
            }
            var O = /^\s*(at|in)\s.+(:\d+)/, T = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;
            function P(e) {
                return e.filter(function(e) {
                    return O.test(e) || T.test(e);
                }).map(function(e) {
                    if (T.test(e)) {
                        var t = !1;
                        / > (eval|Function)/.test(e) && (e = e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g, ":$1"), t = !0);
                        var r = e.split(/[@]/g), n = r.pop();
                        return v(x, [
                            r.join("@") || (t ? "eval" : null)
                        ].concat(b(C(n))));
                    }
                    -1 !== e.indexOf("(eval ") && (e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, "")), -1 !== e.indexOf("(at ") && (e = e.replace(/\(at /, "("));
                    var o = e.trim().split(/\s+/g).slice(1), a = o.pop();
                    return v(x, [
                        o.join(" ") || null
                    ].concat(b(C(a))));
                });
            }
            function L(e) {
                if (null == e) throw new Error("You cannot pass a null object.");
                if ("string" == typeof e) return P(e.split("\n"));
                if (Array.isArray(e)) return P(e);
                if ("string" == typeof e.stack) return P(e.stack.split("\n"));
                throw new Error("The error you provided does not contain a stack trace.");
            }
            var R = r(0), A = r.n(R);
            function N(e, t, r, n, o, a, i) {
                try {
                    var l = e[a](i), u = l.value;
                } catch (e) {
                    return void r(e);
                }
                l.done ? t(u) : Promise.resolve(u).then(n, o);
            }
            function j(e) {
                return function() {
                    var t = this, r = arguments;
                    return new Promise(function(n, o) {
                        var a = e.apply(t, r);
                        function i(e) {
                            N(a, n, o, i, l, "next", e);
                        }
                        function l(e) {
                            N(a, n, o, i, l, "throw", e);
                        }
                        i(void 0);
                    });
                };
            }
            var M = r(3), I = function() {
                function e(t) {
                    E(this, e), this.__source_map = t;
                }
                return k(e, [
                    {
                        key: "getOriginalPosition",
                        value: function(e, t) {
                            var r = this.__source_map.originalPositionFor({
                                line: e,
                                column: t
                            });
                            return {
                                line: r.line,
                                column: r.column,
                                source: r.source
                            };
                        }
                    },
                    {
                        key: "getGeneratedPosition",
                        value: function(e, t, r) {
                            var n = this.__source_map.generatedPositionFor({
                                source: e,
                                line: t,
                                column: r
                            });
                            return {
                                line: n.line,
                                column: n.column
                            };
                        }
                    },
                    {
                        key: "getSource",
                        value: function(e) {
                            return this.__source_map.sourceContentFor(e);
                        }
                    },
                    {
                        key: "getSources",
                        value: function() {
                            return this.__source_map.sources;
                        }
                    }
                ]), e;
            }();
            function D(e, t) {
                for(var r = /\/\/[#@] ?sourceMappingURL=([^\s'"]+)\s*$/gm, n = null;;){
                    var o = r.exec(t);
                    if (null == o) break;
                    n = o;
                }
                return n && n[1] ? Promise.resolve(n[1].toString()) : Promise.reject("Cannot find a source map directive for ".concat(e, "."));
            }
            function z(e, t) {
                return q.apply(this, arguments);
            }
            function q() {
                return (q = j(A.a.mark(function e(t, r) {
                    var n, o, a, i, l, u;
                    return A.a.wrap(function(e) {
                        for(;;)switch(e.prev = e.next){
                            case 0:
                                return e.next = 2, D(t, r);
                            case 2:
                                if (0 !== (n = e.sent).indexOf("data:")) {
                                    e.next = 14;
                                    break;
                                }
                                if (o = /^data:application\/json;([\w=:"-]+;)*base64,/, a = n.match(o)) {
                                    e.next = 8;
                                    break;
                                }
                                throw new Error("Sorry, non-base64 inline source-map encoding is not supported.");
                            case 8:
                                return n = n.substring(a[0].length), n = window.atob(n), n = JSON.parse(n), e.abrupt("return", new I(new M.SourceMapConsumer(n)));
                            case 14:
                                return i = t.lastIndexOf("/"), l = t.substring(0, i + 1) + n, e.next = 18, fetch(l).then(function(e) {
                                    return e.json();
                                });
                            case 18:
                                return u = e.sent, e.abrupt("return", new I(new M.SourceMapConsumer(u)));
                            case 20:
                            case "end":
                                return e.stop();
                        }
                    }, e);
                }))).apply(this, arguments);
            }
            function F(e, t, r) {
                "string" == typeof r && (r = r.split("\n"));
                for(var n = [], o = Math.max(0, e - 1 - t); o <= Math.min(r.length - 1, e - 1 + t); ++o)n.push(new S(o + 1, r[o], o === e - 1));
                return n;
            }
            var U = r(7);
            function B(e) {
                return H.apply(this, arguments);
            }
            function H() {
                return (H = j(A.a.mark(function e(t) {
                    var r, n, o, a = arguments;
                    return A.a.wrap(function(e) {
                        for(;;)switch(e.prev = e.next){
                            case 0:
                                return r = a.length > 1 && void 0 !== a[1] ? a[1] : 3, n = {}, o = [], t.forEach(function(e) {
                                    var t = e.fileName;
                                    null != t && -1 === o.indexOf(t) && o.push(t);
                                }), e.next = 6, Object(U.settle)(o.map(function() {
                                    var e = j(A.a.mark(function e(t) {
                                        var r, o, a;
                                        return A.a.wrap(function(e) {
                                            for(;;)switch(e.prev = e.next){
                                                case 0:
                                                    return r = 0 === t.indexOf("webpack-internal:") ? "/__get-internal-source?fileName=".concat(encodeURIComponent(t)) : t, e.next = 3, fetch(r).then(function(e) {
                                                        return e.text();
                                                    });
                                                case 3:
                                                    return o = e.sent, e.next = 6, z(t, o);
                                                case 6:
                                                    a = e.sent, n[t] = {
                                                        fileSource: o,
                                                        map: a
                                                    };
                                                case 8:
                                                case "end":
                                                    return e.stop();
                                            }
                                        }, e);
                                    }));
                                    return function(t) {
                                        return e.apply(this, arguments);
                                    };
                                }()));
                            case 6:
                                return e.abrupt("return", t.map(function(e) {
                                    var t = e.functionName, o = e.fileName, a = e.lineNumber, i = e.columnNumber, l = n[o] || {}, u = l.map, c = l.fileSource;
                                    if (null == u || null == a) return e;
                                    var s = u.getOriginalPosition(a, i), f = s.source, d = s.line, p = s.column, h = null == f ? [] : u.getSource(f);
                                    return new x(t, o, a, i, F(a, r, c), t, f, d, p, F(d, r, h));
                                }));
                            case 7:
                            case "end":
                                return e.stop();
                        }
                    }, e);
                }))).apply(this, arguments);
            }
            var $ = r(2), V = r.n($);
            function W(e, t) {
                var r = -1, n = -1;
                do ++r, n = t.indexOf(e, n + 1);
                while (-1 !== n);
                return r;
            }
            function G(e, t) {
                return Q.apply(this, arguments);
            }
            function Q() {
                return (Q = j(A.a.mark(function e(t, r) {
                    var n, o, a, i, l = arguments;
                    return A.a.wrap(function(e) {
                        for(;;)switch(e.prev = e.next){
                            case 0:
                                if (n = l.length > 2 && void 0 !== l[2] ? l[2] : 3, o = "object" == typeof t ? t.contents : null, a = "object" == typeof t ? t.uri : t, null != o) {
                                    e.next = 7;
                                    break;
                                }
                                return e.next = 6, fetch(a).then(function(e) {
                                    return e.text();
                                });
                            case 6:
                                o = e.sent;
                            case 7:
                                return e.next = 9, z(a, o);
                            case 9:
                                return i = e.sent, e.abrupt("return", r.map(function(e) {
                                    var t = e.functionName, r = e.lineNumber, l = e.columnNumber;
                                    if (null != e._originalLineNumber) return e;
                                    var u = e.fileName;
                                    if (u && (u = V.a.normalize(u.replace(/[\\]+/g, "/"))), null == u) return e;
                                    var c = u, s = i.getSources().map(function(e) {
                                        return e.replace(/[\\]+/g, "/");
                                    }).filter(function(e) {
                                        var t = (e = V.a.normalize(e)).lastIndexOf(c);
                                        return -1 !== t && t === e.length - c.length;
                                    }).map(function(e) {
                                        return {
                                            token: e,
                                            seps: W(V.a.sep, V.a.normalize(e)),
                                            penalties: W("node_modules", e) + W("~", e)
                                        };
                                    }).sort(function(e, t) {
                                        var r = Math.sign(e.seps - t.seps);
                                        return 0 !== r ? r : Math.sign(e.penalties - t.penalties);
                                    });
                                    if (s.length < 1 || null == r) return new x(null, null, null, null, null, t, c, r, l, null);
                                    var f = s[0].token, d = i.getGeneratedPosition(f, r, l), p = d.line, h = d.column, g = i.getSource(f);
                                    return new x(t, a, p, h || null, F(p, n, o || []), t, c, r, l, F(r, n, g));
                                }));
                            case 11:
                            case "end":
                                return e.stop();
                        }
                    }, e);
                }))).apply(this, arguments);
            }
            var Y = function(e) {
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 3, r = L(e);
                return (e.__unmap_source ? G(e.__unmap_source, r, t) : B(r, t)).then(function(e) {
                    return 0 === e.map(function(e) {
                        return e._originalFileName;
                    }).filter(function(e) {
                        return null != e && -1 === e.indexOf("node_modules");
                    }).length ? null : e.filter(function(e) {
                        var t = e.functionName;
                        return null == t || -1 === t.indexOf("__stack_frame_overlay_proxy_console__");
                    });
                });
            }, X = function(e) {
                return function(t) {
                    var r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    Y(t, r, 3).then(function(n) {
                        null != n && e({
                            error: t,
                            unhandledRejection: r,
                            contextSize: 3,
                            stackFrames: n
                        });
                    }).catch(function(e) {
                        console.log("Could not get the stack frames of error:", e);
                    });
                };
            };
            function K(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "/static/js/bundle.js", r = X(e);
                return a(window, function(e) {
                    return r(e, !1);
                }), u(window, function(e) {
                    return r(e, !0);
                }), function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : f;
                    if (!c) try {
                        s = Error.stackTraceLimit, Error.stackTraceLimit = e, c = !0;
                    } catch (e) {}
                }(), p(), g("error", function(e, n) {
                    var o = function(e, t) {
                        for(var r, n, o = function(e) {
                            return e.split("\n").filter(function(e) {
                                return !e.match(/^\s*in/);
                            }).join("\n");
                        }(e), a = "", i = 0; i < t.length; ++i){
                            var l = t[i], u = l.fileName, c = l.lineNumber;
                            if (null != u && null != c && !(u === r && "number" == typeof c && "number" == typeof n && Math.abs(c - n) < 3)) {
                                r = u, n = c;
                                var s = t[i].name;
                                a += "in ".concat(s = s || "(anonymous function)", " (at ").concat(u, ":").concat(c, ")\n");
                            }
                        }
                        return {
                            message: o,
                            stack: a
                        };
                    }(e, n);
                    r({
                        message: o.message,
                        stack: o.stack,
                        __unmap_source: t
                    }, !1);
                }), function() {
                    var e;
                    !function() {
                        if (c) try {
                            Error.stackTraceLimit = s, c = !1;
                        } catch (e) {}
                    }(), e = window, null !== i && (e.removeEventListener("unhandledrejection", i), i = null), function(e) {
                        null !== n && (e.removeEventListener("error", n), n = null);
                    }(window), h();
                };
            }
            var J = {
                position: "fixed",
                top: "0",
                left: "0",
                width: "100%",
                height: "100%",
                border: "none",
                "z-index": 2147483647
            };
            var Z = '/*! For license information please see iframe-bundle.js.LICENSE.txt */\n!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=208)}([function(e,t,r){"use strict";e.exports=r(183)},function(e,t,r){var n=r(8),o=r(35).f,a=r(18),i=r(21),l=r(38),u=r(60),c=r(64);e.exports=function(e,t){var r,s,f,d,p,h=e.target,g=e.global,v=e.stat;if(r=g?n:v?n[h]||l(h,{}):(n[h]||{}).prototype)for(s in t){if(d=t[s],f=e.noTargetGet?(p=o(r,s))&&p.value:r[s],!c(g?s:h+(v?".":"#")+s,e.forced)&&void 0!==f){if(typeof d===typeof f)continue;u(d,f)}(e.sham||f&&f.sham)&&a(d,"sham",!0),i(r,s,d,e)}}},function(e,t,r){var n=r(13);e.exports=function(e){if(!n(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t){e.exports=!1},function(e,t,r){var n=r(2),o=r(66),a=r(26),i=r(7),l=r(45),u=r(69),c=function(e,t){this.stopped=e,this.result=t};e.exports=function(e,t,r){var s,f,d,p,h,g,v,m=r&&r.that,y=!(!r||!r.AS_ENTRIES),b=!(!r||!r.IS_ITERATOR),w=!(!r||!r.INTERRUPTED),k=i(t,m,1+y+w),E=function(e){return s&&u(s),new c(!0,e)},x=function(e){return y?(n(e),w?k(e[0],e[1],E):k(e[0],e[1])):w?k(e,E):k(e)};if(b)s=e;else{if("function"!=typeof(f=l(e)))throw TypeError("Target is not iterable");if(o(f)){for(d=0,p=a(e.length);p>d;d++)if((h=x(e[d]))&&h instanceof c)return h;return new c(!1)}s=f.call(e)}for(g=s.next;!(v=g.call(s)).done;){try{h=x(v.value)}catch(e){throw u(s),e}if("object"==typeof h&&h&&h instanceof c)return h}return new c(!1)}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,r){var n=r(8),o=r(40),a=r(11),i=r(31),l=r(44),u=r(67),c=o("wks"),s=n.Symbol,f=u?s:s&&s.withoutSetter||i;e.exports=function(e){return a(c,e)||(l&&a(s,e)?c[e]=s[e]:c[e]=f("Symbol."+e)),c[e]}},function(e,t,r){var n=r(5);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 0:return function(){return e.call(t)};case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t,r){(function(t){var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof t&&t)||function(){return this}()||Function("return this")()}).call(this,r(34))},function(e,t,r){var n=r(61),o=r(11),a=r(82),i=r(14).f;e.exports=function(e){var t=n.Symbol||(n.Symbol={});o(t,e)||i(t,e,{value:a.f(e)})}},function(e,t,r){var n=r(61),o=r(8),a=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?a(n[e])||a(o[e]):n[e]&&n[e][t]||o[e]&&o[e][t]}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e){return"object"===typeof e?null!==e:"function"===typeof e}},function(e,t,r){var n=r(16),o=r(57),a=r(2),i=r(29),l=Object.defineProperty;t.f=n?l:function(e,t,r){if(a(e),t=i(t,!0),a(r),o)try{return l(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(3),o=r(48);e.exports=n?o:function(e){return Map.prototype.entries.call(e)}},function(e,t,r){var n=r(12);e.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,r){var n=r(2),o=r(5),a=r(6)("species");e.exports=function(e,t){var r,i=n(e).constructor;return void 0===i||void 0==(r=n(i)[a])?t:o(r)}},function(e,t,r){var n=r(16),o=r(14),a=r(23);e.exports=n?function(e,t,r){return o.f(e,t,a(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(3),o=r(48);e.exports=n?o:function(e){return Set.prototype.values.call(e)}},function(e,t,r){var n=r(56),o=r(37);e.exports=function(e){return n(o(e))}},function(e,t,r){var n=r(8),o=r(18),a=r(11),i=r(38),l=r(59),u=r(24),c=u.get,s=u.enforce,f=String(String).split("String");(e.exports=function(e,t,r,l){var u,c=!!l&&!!l.unsafe,d=!!l&&!!l.enumerable,p=!!l&&!!l.noTargetGet;"function"==typeof r&&("string"!=typeof t||a(r,"name")||o(r,"name",t),(u=s(r)).source||(u.source=f.join("string"==typeof t?t:""))),e!==n?(c?!p&&e[t]&&(d=!0):delete e[t],d?e[t]=r:o(e,t,r)):d?e[t]=r:i(t,r)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||l(this)}))},function(e,t,r){var n=r(14).f,o=r(11),a=r(6)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,a)&&n(e,a,{configurable:!0,value:t})}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,r){var n,o,a,i=r(92),l=r(8),u=r(13),c=r(18),s=r(11),f=r(39),d=r(30),p=r(25),h=l.WeakMap;if(i){var g=f.state||(f.state=new h),v=g.get,m=g.has,y=g.set;n=function(e,t){return t.facade=e,y.call(g,e,t),t},o=function(e){return v.call(g,e)||{}},a=function(e){return m.call(g,e)}}else{var b=d("state");p[b]=!0,n=function(e,t){return t.facade=e,c(e,b,t),t},o=function(e){return s(e,b)?e[b]:{}},a=function(e){return s(e,b)}}e.exports={set:n,get:o,has:a,enforce:function(e){return a(e)?o(e):n(e,{})},getterFor:function(e){return function(t){var r;if(!u(t)||(r=o(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return r}}}},function(e,t){e.exports={}},function(e,t,r){var n=r(42),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t){e.exports={}},function(e,t,r){var n=r(37);e.exports=function(e){return Object(n(e))}},function(e,t,r){var n=r(13);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can\'t convert object to primitive value")}},function(e,t,r){var n=r(40),o=r(31),a=n("keys");e.exports=function(e){return a[e]||(a[e]=o(e))}},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++r+n).toString(36)}},function(e,t,r){var n,o=r(2),a=r(99),i=r(43),l=r(25),u=r(100),c=r(58),s=r(30),f=s("IE_PROTO"),d=function(){},p=function(e){return"<script>"+e+"</"+"script>"},h=function(){try{n=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;h=n?function(e){e.write(p("")),e.close();var t=e.parentWindow.Object;return e=null,t}(n):((t=c("iframe")).style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(p("document.F=Object")),e.close(),e.F);for(var r=i.length;r--;)delete h.prototype[i[r]];return h()};l[f]=!0,e.exports=Object.create||function(e,t){var r;return null!==e?(d.prototype=o(e),r=new d,d.prototype=null,r[f]=e):r=h(),void 0===t?r:a(r,t)}},function(e,t,r){"use strict";var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();var o=[[{color:"0, 0, 0",class:"ansi-black"},{color:"187, 0, 0",class:"ansi-red"},{color:"0, 187, 0",class:"ansi-green"},{color:"187, 187, 0",class:"ansi-yellow"},{color:"0, 0, 187",class:"ansi-blue"},{color:"187, 0, 187",class:"ansi-magenta"},{color:"0, 187, 187",class:"ansi-cyan"},{color:"255,255,255",class:"ansi-white"}],[{color:"85, 85, 85",class:"ansi-bright-black"},{color:"255, 85, 85",class:"ansi-bright-red"},{color:"0, 255, 0",class:"ansi-bright-green"},{color:"255, 255, 85",class:"ansi-bright-yellow"},{color:"85, 85, 255",class:"ansi-bright-blue"},{color:"255, 85, 255",class:"ansi-bright-magenta"},{color:"85, 255, 255",class:"ansi-bright-cyan"},{color:"255, 255, 255",class:"ansi-bright-white"}]],a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.fg=this.bg=this.fg_truecolor=this.bg_truecolor=null,this.bright=0}return n(e,null,[{key:"escapeForHtml",value:function(t){return(new e).escapeForHtml(t)}},{key:"linkify",value:function(t){return(new e).linkify(t)}},{key:"ansiToHtml",value:function(t,r){return(new e).ansiToHtml(t,r)}},{key:"ansiToJson",value:function(t,r){return(new e).ansiToJson(t,r)}},{key:"ansiToText",value:function(t){return(new e).ansiToText(t)}}]),n(e,[{key:"setupPalette",value:function(){this.PALETTE_COLORS=[];for(var e=0;e<2;++e)for(var t=0;t<8;++t)this.PALETTE_COLORS.push(o[e][t].color);for(var r=[0,95,135,175,215,255],n=function(e,t,n){return r[e]+", "+r[t]+", "+r[n]},a=0;a<6;++a)for(var i=0;i<6;++i)for(var l=0;l<6;++l)this.PALETTE_COLORS.push(n(a,i,l));for(var u=8,c=0;c<24;++c,u+=10)this.PALETTE_COLORS.push(n(u,u,u))}},{key:"escapeForHtml",value:function(e){return e.replace(/[&<>]/gm,(function(e){return"&"==e?"&amp;":"<"==e?"&lt;":">"==e?"&gt;":""}))}},{key:"linkify",value:function(e){return e.replace(/(https?:\\/\\/[^\\s]+)/gm,(function(e){return\'<a href="\'+e+\'">\'+e+"</a>"}))}},{key:"ansiToHtml",value:function(e,t){return this.process(e,t,!0)}},{key:"ansiToJson",value:function(e,t){return(t=t||{}).json=!0,t.clearLine=!1,this.process(e,t,!0)}},{key:"ansiToText",value:function(e){return this.process(e,{},!1)}},{key:"process",value:function(e,t,r){var n=this,o=e.split(/\\033\\[/),a=o.shift();void 0!==t&&null!==t||(t={}),t.clearLine=/\\r/.test(e);var i=o.map((function(e){return n.processChunk(e,t,r)}));if(t&&t.json){var l=this.processChunkJson("");return l.content=a,l.clearLine=t.clearLine,i.unshift(l),t.remove_empty&&(i=i.filter((function(e){return!e.isEmpty()}))),i}return i.unshift(a),i.join("")}},{key:"processChunkJson",value:function(e,t,r){var n=(t="undefined"==typeof t?{}:t).use_classes="undefined"!=typeof t.use_classes&&t.use_classes,a=t.key=n?"class":"color",i={content:e,fg:null,bg:null,fg_truecolor:null,bg_truecolor:null,clearLine:t.clearLine,decoration:null,was_processed:!1,isEmpty:function(){return!i.content}},l=e.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);if(!l)return i;i.content=l[4];var u=l[2].split(";");if(""!==l[1]||"m"!==l[3])return i;if(!r)return i;var c=this;for(c.decoration=null;u.length>0;){var s=u.shift(),f=parseInt(s);if(isNaN(f)||0===f)c.fg=c.bg=c.decoration=null;else if(1===f)c.decoration="bold";else if(2===f)c.decoration="dim";else if(3==f)c.decoration="italic";else if(4==f)c.decoration="underline";else if(5==f)c.decoration="blink";else if(7===f)c.decoration="reverse";else if(8===f)c.decoration="hidden";else if(9===f)c.decoration="strikethrough";else if(39==f)c.fg=null;else if(49==f)c.bg=null;else if(f>=30&&f<38)c.fg=o[0][f%10][a];else if(f>=90&&f<98)c.fg=o[1][f%10][a];else if(f>=40&&f<48)c.bg=o[0][f%10][a];else if(f>=100&&f<108)c.bg=o[1][f%10][a];else if(38===f||48===f){var d=38===f;if(u.length>=1){var p=u.shift();if("5"===p&&u.length>=1){var h=parseInt(u.shift());if(h>=0&&h<=255)if(n){var g=h>=16?"ansi-palette-"+h:o[h>7?1:0][h%8].class;d?c.fg=g:c.bg=g}else this.PALETTE_COLORS||c.setupPalette(),d?c.fg=this.PALETTE_COLORS[h]:c.bg=this.PALETTE_COLORS[h]}else if("2"===p&&u.length>=3){var v=parseInt(u.shift()),m=parseInt(u.shift()),y=parseInt(u.shift());if(v>=0&&v<=255&&m>=0&&m<=255&&y>=0&&y<=255){var b=v+", "+m+", "+y;n?d?(c.fg="ansi-truecolor",c.fg_truecolor=b):(c.bg="ansi-truecolor",c.bg_truecolor=b):d?c.fg=b:c.bg=b}}}}}if(null===c.fg&&null===c.bg&&null===c.decoration)return i;return i.fg=c.fg,i.bg=c.bg,i.fg_truecolor=c.fg_truecolor,i.bg_truecolor=c.bg_truecolor,i.decoration=c.decoration,i.was_processed=!0,i}},{key:"processChunk",value:function(e,t,r){var n=this;t=t||{};var o=this.processChunkJson(e,t,r);if(t.json)return o;if(o.isEmpty())return"";if(!o.was_processed)return o.content;var a=t.use_classes,i=[],l=[],u={},c=function(e){var t=[],r=void 0;for(r in e)e.hasOwnProperty(r)&&t.push("data-"+r+\'="\'+n.escapeForHtml(e[r])+\'"\');return t.length>0?" "+t.join(" "):""};return o.fg&&(a?(l.push(o.fg+"-fg"),null!==o.fg_truecolor&&(u["ansi-truecolor-fg"]=o.fg_truecolor,o.fg_truecolor=null)):i.push("color:rgb("+o.fg+")")),o.bg&&(a?(l.push(o.bg+"-bg"),null!==o.bg_truecolor&&(u["ansi-truecolor-bg"]=o.bg_truecolor,o.bg_truecolor=null)):i.push("background-color:rgb("+o.bg+")")),o.decoration&&(a?l.push("ansi-"+o.decoration):"bold"===o.decoration?i.push("font-weight:bold"):"dim"===o.decoration?i.push("opacity:0.5"):"italic"===o.decoration?i.push("font-style:italic"):"reverse"===o.decoration?i.push("filter:invert(100%)"):"hidden"===o.decoration?i.push("visibility:hidden"):"strikethrough"===o.decoration?i.push("text-decoration:line-through"):i.push("text-decoration:"+o.decoration)),a?\'<span class="\'+l.join(" ")+\'"\'+c(u)+">"+o.content+"</span>":\'<span style="\'+i.join(";")+\'"\'+c(u)+">"+o.content+"</span>"}}]),e}();e.exports=a},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"===typeof window&&(r=window)}e.exports=r},function(e,t,r){var n=r(16),o=r(55),a=r(23),i=r(20),l=r(29),u=r(11),c=r(57),s=Object.getOwnPropertyDescriptor;t.f=n?s:function(e,t){if(e=i(e),t=l(t,!0),c)try{return s(e,t)}catch(e){}if(u(e,t))return a(!o.f.call(e,t),e[t])}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can\'t call method on "+e);return e}},function(e,t,r){var n=r(8),o=r(18);e.exports=function(e,t){try{o(n,e,t)}catch(r){n[e]=t}return t}},function(e,t,r){var n=r(8),o=r(38),a="__core-js_shared__",i=n[a]||o(a,{});e.exports=i},function(e,t,r){var n=r(3),o=r(39);(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.8.3",mode:n?"pure":"global",copyright:"\xa9 2021 Denis Pushkarev (zloirock.ru)"})},function(e,t,r){var n=r(62),o=r(43).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,r){var n=r(12);e.exports=!!Object.getOwnPropertySymbols&&!n((function(){return!String(Symbol())}))},function(e,t,r){var n=r(68),o=r(27),a=r(6)("iterator");e.exports=function(e){if(void 0!=e)return e[a]||e["@@iterator"]||o[n(e)]}},function(e,t,r){var n={};n[r(6)("toStringTag")]="z",e.exports="[object z]"===String(n)},function(e,t,r){"use strict";var n=r(1),o=r(102),a=r(76),i=r(72),l=r(22),u=r(18),c=r(21),s=r(6),f=r(3),d=r(27),p=r(75),h=p.IteratorPrototype,g=p.BUGGY_SAFARI_ITERATORS,v=s("iterator"),m="keys",y="values",b="entries",w=function(){return this};e.exports=function(e,t,r,s,p,k,E){o(r,t,s);var x,S,_,T=function(e){if(e===p&&N)return N;if(!g&&e in P)return P[e];switch(e){case m:case y:case b:return function(){return new r(this,e)}}return function(){return new r(this)}},C=t+" Iterator",O=!1,P=e.prototype,R=P[v]||P["@@iterator"]||p&&P[p],N=!g&&R||T(p),L="Array"==t&&P.entries||R;if(L&&(x=a(L.call(new e)),h!==Object.prototype&&x.next&&(f||a(x)===h||(i?i(x,h):"function"!=typeof x[v]&&u(x,v,w)),l(x,C,!0,!0),f&&(d[C]=w))),p==y&&R&&R.name!==y&&(O=!0,N=function(){return R.call(this)}),f&&!E||P[v]===N||u(P,v,N),d[t]=N,p)if(S={values:T(y),keys:k?N:T(m),entries:T(b)},E)for(_ in S)(g||O||!(_ in P))&&c(P,_,S[_]);else n({target:t,proto:!0,forced:g||O},S);return S}},function(e,t,r){var n=r(2),o=r(45);e.exports=function(e){var t=o(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return n(t.call(e))}},function(e,t,r){var n=r(36);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){"use strict";var n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var r,l,u=i(e),c=1;c<arguments.length;c++){for(var s in r=Object(arguments[c]))o.call(r,s)&&(u[s]=r[s]);if(n){l=n(r);for(var f=0;f<l.length;f++)a.call(r,l[f])&&(u[l[f]]=r[l[f]])}}return u}},function(e,t){var r,n,o=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function l(e){if(r===setTimeout)return setTimeout(e,0);if((r===a||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"===typeof setTimeout?setTimeout:a}catch(e){r=a}try{n="function"===typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var u,c=[],s=!1,f=-1;function d(){s&&u&&(s=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!s){var e=l(d);s=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,s=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function g(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new h(e,t)),1!==c.length||s||l(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=g,o.addListener=g,o.once=g,o.off=g,o.removeListener=g,o.removeAllListeners=g,o.emit=g,o.prependListener=g,o.prependOnceListener=g,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,r){var n=r(191);e.exports=function(e,t){var r;if("undefined"===typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=n(e))||t&&e&&"number"===typeof e.length){r&&(e=r);var o=0,a=function(){};return{s:a,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,u=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return l=e.done,e},e:function(e){u=!0,i=e},f:function(){try{l||null==r.return||r.return()}finally{if(u)throw i}}}}},function(e,t,r){"use strict";!function e(){if("undefined"!==typeof{}&&"function"===typeof{}.checkDCE)try{({}).checkDCE(e)}catch(e){console.error(e)}}(),e.exports=r(184)},function(e,t,r){"use strict";var n=r(1),o=r(8),a=r(64),i=r(21),l=r(65),u=r(4),c=r(70),s=r(13),f=r(12),d=r(71),p=r(22),h=r(97);e.exports=function(e,t,r){var g=-1!==e.indexOf("Map"),v=-1!==e.indexOf("Weak"),m=g?"set":"add",y=o[e],b=y&&y.prototype,w=y,k={},E=function(e){var t=b[e];i(b,e,"add"==e?function(e){return t.call(this,0===e?0:e),this}:"delete"==e?function(e){return!(v&&!s(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return v&&!s(e)?void 0:t.call(this,0===e?0:e)}:"has"==e?function(e){return!(v&&!s(e))&&t.call(this,0===e?0:e)}:function(e,r){return t.call(this,0===e?0:e,r),this})};if(a(e,"function"!=typeof y||!(v||b.forEach&&!f((function(){(new y).entries().next()})))))w=r.getConstructor(t,e,g,m),l.REQUIRED=!0;else if(a(e,!0)){var x=new w,S=x[m](v?{}:-0,1)!=x,_=f((function(){x.has(1)})),T=d((function(e){new y(e)})),C=!v&&f((function(){for(var e=new y,t=5;t--;)e[m](t,t);return!e.has(-0)}));T||((w=t((function(t,r){c(t,w,e);var n=h(new y,t,w);return void 0!=r&&u(r,n[m],{that:n,AS_ENTRIES:g}),n}))).prototype=b,b.constructor=w),(_||C)&&(E("delete"),E("has"),g&&E("get")),(C||S)&&E(m),v&&b.clear&&delete b.clear}return k[e]=w,n({global:!0,forced:w!=y},k),p(w,e),v||r.setStrong(w,e,g),w}},function(e,t,r){"use strict";var n={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,a=o&&!n.call({1:2},1);t.f=a?function(e){var t=o(this,e);return!!t&&t.enumerable}:n},function(e,t,r){var n=r(12),o=r(36),a="".split;e.exports=n((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==o(e)?a.call(e,""):Object(e)}:Object},function(e,t,r){var n=r(16),o=r(12),a=r(58);e.exports=!n&&!o((function(){return 7!=Object.defineProperty(a("div"),"a",{get:function(){return 7}}).a}))},function(e,t,r){var n=r(8),o=r(13),a=n.document,i=o(a)&&o(a.createElement);e.exports=function(e){return i?a.createElement(e):{}}},function(e,t,r){var n=r(39),o=Function.toString;"function"!=typeof n.inspectSource&&(n.inspectSource=function(e){return o.call(e)}),e.exports=n.inspectSource},function(e,t,r){var n=r(11),o=r(93),a=r(35),i=r(14);e.exports=function(e,t){for(var r=o(t),l=i.f,u=a.f,c=0;c<r.length;c++){var s=r[c];n(e,s)||l(e,s,u(t,s))}}},function(e,t,r){var n=r(8);e.exports=n},function(e,t,r){var n=r(11),o=r(20),a=r(94).indexOf,i=r(25);e.exports=function(e,t){var r,l=o(e),u=0,c=[];for(r in l)!n(i,r)&&n(l,r)&&c.push(r);for(;t.length>u;)n(l,r=t[u++])&&(~a(c,r)||c.push(r));return c}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(12),o=/#|\\.prototype\\./,a=function(e,t){var r=l[i(e)];return r==c||r!=u&&("function"==typeof t?n(t):!!t)},i=a.normalize=function(e){return String(e).replace(o,".").toLowerCase()},l=a.data={},u=a.NATIVE="N",c=a.POLYFILL="P";e.exports=a},function(e,t,r){var n=r(25),o=r(13),a=r(11),i=r(14).f,l=r(31),u=r(96),c=l("meta"),s=0,f=Object.isExtensible||function(){return!0},d=function(e){i(e,c,{value:{objectID:"O"+ ++s,weakData:{}}})},p=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!a(e,c)){if(!f(e))return"F";if(!t)return"E";d(e)}return e[c].objectID},getWeakData:function(e,t){if(!a(e,c)){if(!f(e))return!0;if(!t)return!1;d(e)}return e[c].weakData},onFreeze:function(e){return u&&p.REQUIRED&&f(e)&&!a(e,c)&&d(e),e}};n[c]=!0},function(e,t,r){var n=r(6),o=r(27),a=n("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||i[a]===e)}},function(e,t,r){var n=r(44);e.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,r){var n=r(46),o=r(36),a=r(6)("toStringTag"),i="Arguments"==o(function(){return arguments}());e.exports=n?o:function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),a))?r:i?o(t):"Object"==(n=o(t))&&"function"==typeof t.callee?"Arguments":n}},function(e,t,r){var n=r(2);e.exports=function(e){var t=e.return;if(void 0!==t)return n(t.call(e)).value}},function(e,t){e.exports=function(e,t,r){if(!(e instanceof t))throw TypeError("Incorrect "+(r?r+" ":"")+"invocation");return e}},function(e,t,r){var n=r(6)("iterator"),o=!1;try{var a=0,i={next:function(){return{done:!!a++}},return:function(){o=!0}};i[n]=function(){return this},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var a={};a[n]=function(){return{next:function(){return{done:r=!0}}}},e(a)}catch(e){}return r}},function(e,t,r){var n=r(2),o=r(98);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(r,[]),t=r instanceof Array}catch(e){}return function(r,a){return n(r),o(a),t?e.call(r,a):r.__proto__=a,r}}():void 0)},function(e,t,r){"use strict";var n=r(14).f,o=r(32),a=r(101),i=r(7),l=r(70),u=r(4),c=r(47),s=r(104),f=r(16),d=r(65).fastKey,p=r(24),h=p.set,g=p.getterFor;e.exports={getConstructor:function(e,t,r,c){var s=e((function(e,n){l(e,s,t),h(e,{type:t,index:o(null),first:void 0,last:void 0,size:0}),f||(e.size=0),void 0!=n&&u(n,e[c],{that:e,AS_ENTRIES:r})})),p=g(t),v=function(e,t,r){var n,o,a=p(e),i=m(e,t);return i?i.value=r:(a.last=i={index:o=d(t,!0),key:t,value:r,previous:n=a.last,next:void 0,removed:!1},a.first||(a.first=i),n&&(n.next=i),f?a.size++:e.size++,"F"!==o&&(a.index[o]=i)),e},m=function(e,t){var r,n=p(e),o=d(t);if("F"!==o)return n.index[o];for(r=n.first;r;r=r.next)if(r.key==t)return r};return a(s.prototype,{clear:function(){for(var e=p(this),t=e.index,r=e.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete t[r.index],r=r.next;e.first=e.last=void 0,f?e.size=0:this.size=0},delete:function(e){var t=this,r=p(t),n=m(t,e);if(n){var o=n.next,a=n.previous;delete r.index[n.index],n.removed=!0,a&&(a.next=o),o&&(o.previous=a),r.first==n&&(r.first=o),r.last==n&&(r.last=a),f?r.size--:t.size--}return!!n},forEach:function(e){for(var t,r=p(this),n=i(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.next:r.first;)for(n(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!m(this,e)}}),a(s.prototype,r?{get:function(e){var t=m(this,e);return t&&t.value},set:function(e,t){return v(this,0===e?0:e,t)}}:{add:function(e){return v(this,e=0===e?0:e,e)}}),f&&n(s.prototype,"size",{get:function(){return p(this).size}}),s},setStrong:function(e,t,r){var n=t+" Iterator",o=g(t),a=g(n);c(e,t,(function(e,t){h(this,{type:n,target:e,state:o(e),kind:t,last:void 0})}),(function(){for(var e=a(this),t=e.kind,r=e.last;r&&r.removed;)r=r.previous;return e.target&&(e.last=r=r?r.next:e.state.first)?"keys"==t?{value:r.key,done:!1}:"values"==t?{value:r.value,done:!1}:{value:[r.key,r.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),r?"entries":"values",!r,!0),s(t)}}},function(e,t,r){var n=r(62),o=r(43);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t,r){"use strict";var n,o,a,i=r(12),l=r(76),u=r(18),c=r(11),s=r(6),f=r(3),d=s("iterator"),p=!1;[].keys&&("next"in(a=[].keys())?(o=l(l(a)))!==Object.prototype&&(n=o):p=!0);var h=void 0==n||i((function(){var e={};return n[d].call(e)!==e}));h&&(n={}),f&&!h||c(n,d)||u(n,d,(function(){return this})),e.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:p}},function(e,t,r){var n=r(11),o=r(28),a=r(30),i=r(103),l=a("IE_PROTO"),u=Object.prototype;e.exports=i?Object.getPrototypeOf:function(e){return e=o(e),n(e,l)?e[l]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?u:null}},function(e,t,r){var n=r(46),o=r(21),a=r(105);n||o(Object.prototype,"toString",a,{unsafe:!0})},function(e,t,r){"use strict";var n=r(107).charAt,o=r(24),a=r(47),i="String Iterator",l=o.set,u=o.getterFor(i);a(String,"String",(function(e){l(this,{type:i,string:String(e),index:0})}),(function(){var e,t=u(this),r=t.string,o=t.index;return o>=r.length?{value:void 0,done:!0}:(e=n(r,o),t.index+=e.length,{value:e,done:!1})}))},function(e,t,r){"use strict";var n=r(2),o=r(5);e.exports=function(){for(var e,t=n(this),r=o(t.delete),a=!0,i=0,l=arguments.length;i<l;i++)e=r.call(t,arguments[i]),a=a&&e;return!!a}},function(e,t,r){"use strict";var n=r(5),o=r(7),a=r(4);e.exports=function(e){var t,r,i,l,u=arguments.length,c=u>1?arguments[1]:void 0;return n(this),(t=void 0!==c)&&n(c),void 0==e?new this:(r=[],t?(i=0,l=o(c,u>2?arguments[2]:void 0,2),a(e,(function(e){r.push(l(e,i++))}))):a(e,r.push,{that:r}),new this(r))}},function(e,t,r){"use strict";e.exports=function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}},function(e,t,r){var n=r(6);t.f=n},function(e,t,r){var n=r(13),o=r(49),a=r(6)("species");e.exports=function(e,t){var r;return o(e)&&("function"!=typeof(r=e.constructor)||r!==Array&&!o(r.prototype)?n(r)&&null===(r=r[a])&&(r=void 0):r=void 0),new(void 0===r?Array:r)(0===t?0:t)}},function(e,t,r){"use strict";var n=r(29),o=r(14),a=r(23);e.exports=function(e,t,r){var i=n(t);i in e?o.f(e,i,a(0,r)):e[i]=r}},function(e,t,r){var n,o,a=r(8),i=r(168),l=a.process,u=l&&l.versions,c=u&&u.v8;c?o=(n=c.split("."))[0]+n[1]:i&&(!(n=i.match(/Edge\\/(\\d+)/))||n[1]>=74)&&(n=i.match(/Chrome\\/(\\d+)/))&&(o=n[1]),e.exports=o&&+o},function(e,t,r){"use strict";var n=r(178);function o(){}var a=null,i={};function l(e){if("object"!==typeof this)throw new TypeError("Promises must be constructed via new");if("function"!==typeof e)throw new TypeError("Promise constructor\'s argument is not a function");this._U=0,this._V=0,this._W=null,this._X=null,e!==o&&p(e,this)}function u(e,t){for(;3===e._V;)e=e._W;if(l._Y&&l._Y(e),0===e._V)return 0===e._U?(e._U=1,void(e._X=t)):1===e._U?(e._U=2,void(e._X=[e._X,t])):void e._X.push(t);!function(e,t){n((function(){var r=1===e._V?t.onFulfilled:t.onRejected;if(null!==r){var n=function(e,t){try{return e(t)}catch(e){return a=e,i}}(r,e._W);n===i?s(t.promise,a):c(t.promise,n)}else 1===e._V?c(t.promise,e._W):s(t.promise,e._W)}))}(e,t)}function c(e,t){if(t===e)return s(e,new TypeError("A promise cannot be resolved with itself."));if(t&&("object"===typeof t||"function"===typeof t)){var r=function(e){try{return e.then}catch(e){return a=e,i}}(t);if(r===i)return s(e,a);if(r===e.then&&t instanceof l)return e._V=3,e._W=t,void f(e);if("function"===typeof r)return void p(r.bind(t),e)}e._V=1,e._W=t,f(e)}function s(e,t){e._V=2,e._W=t,l._Z&&l._Z(e,t),f(e)}function f(e){if(1===e._U&&(u(e,e._X),e._X=null),2===e._U){for(var t=0;t<e._X.length;t++)u(e,e._X[t]);e._X=null}}function d(e,t,r){this.onFulfilled="function"===typeof e?e:null,this.onRejected="function"===typeof t?t:null,this.promise=r}function p(e,t){var r=!1,n=function(e,t,r){try{e(t,r)}catch(e){return a=e,i}}(e,(function(e){r||(r=!0,c(t,e))}),(function(e){r||(r=!0,s(t,e))}));r||n!==i||(r=!0,s(t,a))}e.exports=l,l._Y=null,l._Z=null,l._0=o,l.prototype.then=function(e,t){if(this.constructor!==l)return function(e,t,r){return new e.constructor((function(n,a){var i=new l(o);i.then(n,a),u(e,new d(t,r,i))}))}(this,e,t);var r=new l(o);return u(this,new d(e,t,r)),r}},function(e,t,r){var n=r(204),o={};for(var a in n)n.hasOwnProperty(a)&&(o[n[a]]=a);var i=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var l in i)if(i.hasOwnProperty(l)){if(!("channels"in i[l]))throw new Error("missing channels property: "+l);if(!("labels"in i[l]))throw new Error("missing channel labels property: "+l);if(i[l].labels.length!==i[l].channels)throw new Error("channel and label counts mismatch: "+l);var u=i[l].channels,c=i[l].labels;delete i[l].channels,delete i[l].labels,Object.defineProperty(i[l],"channels",{value:u}),Object.defineProperty(i[l],"labels",{value:c})}i.rgb.hsl=function(e){var t,r,n=e[0]/255,o=e[1]/255,a=e[2]/255,i=Math.min(n,o,a),l=Math.max(n,o,a),u=l-i;return l===i?t=0:n===l?t=(o-a)/u:o===l?t=2+(a-n)/u:a===l&&(t=4+(n-o)/u),(t=Math.min(60*t,360))<0&&(t+=360),r=(i+l)/2,[t,100*(l===i?0:r<=.5?u/(l+i):u/(2-l-i)),100*r]},i.rgb.hsv=function(e){var t,r,n,o,a,i=e[0]/255,l=e[1]/255,u=e[2]/255,c=Math.max(i,l,u),s=c-Math.min(i,l,u),f=function(e){return(c-e)/6/s+.5};return 0===s?o=a=0:(a=s/c,t=f(i),r=f(l),n=f(u),i===c?o=n-r:l===c?o=1/3+t-n:u===c&&(o=2/3+r-t),o<0?o+=1:o>1&&(o-=1)),[360*o,100*a,100*c]},i.rgb.hwb=function(e){var t=e[0],r=e[1],n=e[2];return[i.rgb.hsl(e)[0],100*(1/255*Math.min(t,Math.min(r,n))),100*(n=1-1/255*Math.max(t,Math.max(r,n)))]},i.rgb.cmyk=function(e){var t,r=e[0]/255,n=e[1]/255,o=e[2]/255;return[100*((1-r-(t=Math.min(1-r,1-n,1-o)))/(1-t)||0),100*((1-n-t)/(1-t)||0),100*((1-o-t)/(1-t)||0),100*t]},i.rgb.keyword=function(e){var t=o[e];if(t)return t;var r,a,i,l=1/0;for(var u in n)if(n.hasOwnProperty(u)){var c=n[u],s=(a=e,i=c,Math.pow(a[0]-i[0],2)+Math.pow(a[1]-i[1],2)+Math.pow(a[2]-i[2],2));s<l&&(l=s,r=u)}return r},i.keyword.rgb=function(e){return n[e]},i.rgb.xyz=function(e){var t=e[0]/255,r=e[1]/255,n=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)+.1805*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)),100*(.2126*t+.7152*r+.0722*n),100*(.0193*t+.1192*r+.9505*n)]},i.rgb.lab=function(e){var t=i.rgb.xyz(e),r=t[0],n=t[1],o=t[2];return n/=100,o/=108.883,r=(r/=95.047)>.008856?Math.pow(r,1/3):7.787*r+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(r-n),200*(n-(o=o>.008856?Math.pow(o,1/3):7.787*o+16/116))]},i.hsl.rgb=function(e){var t,r,n,o,a,i=e[0]/360,l=e[1]/100,u=e[2]/100;if(0===l)return[a=255*u,a,a];t=2*u-(r=u<.5?u*(1+l):u+l-u*l),o=[0,0,0];for(var c=0;c<3;c++)(n=i+1/3*-(c-1))<0&&n++,n>1&&n--,a=6*n<1?t+6*(r-t)*n:2*n<1?r:3*n<2?t+(r-t)*(2/3-n)*6:t,o[c]=255*a;return o},i.hsl.hsv=function(e){var t=e[0],r=e[1]/100,n=e[2]/100,o=r,a=Math.max(n,.01);return r*=(n*=2)<=1?n:2-n,o*=a<=1?a:2-a,[t,100*(0===n?2*o/(a+o):2*r/(n+r)),100*((n+r)/2)]},i.hsv.rgb=function(e){var t=e[0]/60,r=e[1]/100,n=e[2]/100,o=Math.floor(t)%6,a=t-Math.floor(t),i=255*n*(1-r),l=255*n*(1-r*a),u=255*n*(1-r*(1-a));switch(n*=255,o){case 0:return[n,u,i];case 1:return[l,n,i];case 2:return[i,n,u];case 3:return[i,l,n];case 4:return[u,i,n];case 5:return[n,i,l]}},i.hsv.hsl=function(e){var t,r,n,o=e[0],a=e[1]/100,i=e[2]/100,l=Math.max(i,.01);return n=(2-a)*i,r=a*l,[o,100*(r=(r/=(t=(2-a)*l)<=1?t:2-t)||0),100*(n/=2)]},i.hwb.rgb=function(e){var t,r,n,o,a,i,l,u=e[0]/360,c=e[1]/100,s=e[2]/100,f=c+s;switch(f>1&&(c/=f,s/=f),n=6*u-(t=Math.floor(6*u)),0!==(1&t)&&(n=1-n),o=c+n*((r=1-s)-c),t){default:case 6:case 0:a=r,i=o,l=c;break;case 1:a=o,i=r,l=c;break;case 2:a=c,i=r,l=o;break;case 3:a=c,i=o,l=r;break;case 4:a=o,i=c,l=r;break;case 5:a=r,i=c,l=o}return[255*a,255*i,255*l]},i.cmyk.rgb=function(e){var t=e[0]/100,r=e[1]/100,n=e[2]/100,o=e[3]/100;return[255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o)),255*(1-Math.min(1,n*(1-o)+o))]},i.xyz.rgb=function(e){var t,r,n,o=e[0]/100,a=e[1]/100,i=e[2]/100;return r=-.9689*o+1.8758*a+.0415*i,n=.0557*o+-.204*a+1.057*i,t=(t=3.2406*o+-1.5372*a+-.4986*i)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,[255*(t=Math.min(Math.max(0,t),1)),255*(r=Math.min(Math.max(0,r),1)),255*(n=Math.min(Math.max(0,n),1))]},i.xyz.lab=function(e){var t=e[0],r=e[1],n=e[2];return r/=100,n/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116)-16,500*(t-r),200*(r-(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116))]},i.lab.xyz=function(e){var t,r,n,o=e[0];t=e[1]/500+(r=(o+16)/116),n=r-e[2]/200;var a=Math.pow(r,3),i=Math.pow(t,3),l=Math.pow(n,3);return r=a>.008856?a:(r-16/116)/7.787,t=i>.008856?i:(t-16/116)/7.787,n=l>.008856?l:(n-16/116)/7.787,[t*=95.047,r*=100,n*=108.883]},i.lab.lch=function(e){var t,r=e[0],n=e[1],o=e[2];return(t=360*Math.atan2(o,n)/2/Math.PI)<0&&(t+=360),[r,Math.sqrt(n*n+o*o),t]},i.lch.lab=function(e){var t,r=e[0],n=e[1];return t=e[2]/360*2*Math.PI,[r,n*Math.cos(t),n*Math.sin(t)]},i.rgb.ansi16=function(e){var t=e[0],r=e[1],n=e[2],o=1 in arguments?arguments[1]:i.rgb.hsv(e)[2];if(0===(o=Math.round(o/50)))return 30;var a=30+(Math.round(n/255)<<2|Math.round(r/255)<<1|Math.round(t/255));return 2===o&&(a+=60),a},i.hsv.ansi16=function(e){return i.rgb.ansi16(i.hsv.rgb(e),e[2])},i.rgb.ansi256=function(e){var t=e[0],r=e[1],n=e[2];return t===r&&r===n?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(r/255*5)+Math.round(n/255*5)},i.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var r=.5*(1+~~(e>50));return[(1&t)*r*255,(t>>1&1)*r*255,(t>>2&1)*r*255]},i.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var r;return e-=16,[Math.floor(e/36)/5*255,Math.floor((r=e%36)/6)/5*255,r%6/5*255]},i.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},i.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var r=t[0];3===t[0].length&&(r=r.split("").map((function(e){return e+e})).join(""));var n=parseInt(r,16);return[n>>16&255,n>>8&255,255&n]},i.rgb.hcg=function(e){var t,r=e[0]/255,n=e[1]/255,o=e[2]/255,a=Math.max(Math.max(r,n),o),i=Math.min(Math.min(r,n),o),l=a-i;return t=l<=0?0:a===r?(n-o)/l%6:a===n?2+(o-r)/l:4+(r-n)/l+4,t/=6,[360*(t%=1),100*l,100*(l<1?i/(1-l):0)]},i.hsl.hcg=function(e){var t=e[1]/100,r=e[2]/100,n=1,o=0;return(n=r<.5?2*t*r:2*t*(1-r))<1&&(o=(r-.5*n)/(1-n)),[e[0],100*n,100*o]},i.hsv.hcg=function(e){var t=e[1]/100,r=e[2]/100,n=t*r,o=0;return n<1&&(o=(r-n)/(1-n)),[e[0],100*n,100*o]},i.hcg.rgb=function(e){var t=e[0]/360,r=e[1]/100,n=e[2]/100;if(0===r)return[255*n,255*n,255*n];var o,a=[0,0,0],i=t%1*6,l=i%1,u=1-l;switch(Math.floor(i)){case 0:a[0]=1,a[1]=l,a[2]=0;break;case 1:a[0]=u,a[1]=1,a[2]=0;break;case 2:a[0]=0,a[1]=1,a[2]=l;break;case 3:a[0]=0,a[1]=u,a[2]=1;break;case 4:a[0]=l,a[1]=0,a[2]=1;break;default:a[0]=1,a[1]=0,a[2]=u}return o=(1-r)*n,[255*(r*a[0]+o),255*(r*a[1]+o),255*(r*a[2]+o)]},i.hcg.hsv=function(e){var t=e[1]/100,r=t+e[2]/100*(1-t),n=0;return r>0&&(n=t/r),[e[0],100*n,100*r]},i.hcg.hsl=function(e){var t=e[1]/100,r=e[2]/100*(1-t)+.5*t,n=0;return r>0&&r<.5?n=t/(2*r):r>=.5&&r<1&&(n=t/(2*(1-r))),[e[0],100*n,100*r]},i.hcg.hwb=function(e){var t=e[1]/100,r=t+e[2]/100*(1-t);return[e[0],100*(r-t),100*(1-r)]},i.hwb.hcg=function(e){var t=e[1]/100,r=1-e[2]/100,n=r-t,o=0;return n<1&&(o=(r-n)/(1-n)),[e[0],100*n,100*o]},i.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},i.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},i.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},i.gray.hsl=i.gray.hsv=function(e){return[0,0,e[0]]},i.gray.hwb=function(e){return[0,100,e[0]]},i.gray.cmyk=function(e){return[0,0,0,e[0]]},i.gray.lab=function(e){return[e[0],0,0]},i.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),r=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(r.length)+r},i.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(187);t.XmlEntities=n.XmlEntities;var o=r(188);t.Html4Entities=o.Html4Entities;var a=r(189);t.Html5Entities=a.Html5Entities,t.AllHtmlEntities=a.Html5Entities},function(e,t,r){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0}),t.codeFrameColumns=c,t.default=function(t,r,n){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!a){a=!0;var i="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";if(e.emitWarning)e.emitWarning(i,"DeprecationWarning");else{var l=new Error(i);l.name="DeprecationWarning",console.warn(new Error(i))}}var u={start:{column:n=Math.max(n,0),line:r}};return c(t,u,o)};var n=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var i=n?Object.getOwnPropertyDescriptor(e,a):null;i&&(i.get||i.set)?Object.defineProperty(r,a,i):r[a]=e[a]}r.default=e,t&&t.set(e,r);return r}(r(190));function o(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}var a=!1;function i(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}var l=/\\r\\n|[\\n\\r\\u2028\\u2029]/;function u(e,t,r){var n=Object.assign({column:0,line:-1},e.start),o=Object.assign({},n,e.end),a=r||{},i=a.linesAbove,l=void 0===i?2:i,u=a.linesBelow,c=void 0===u?3:u,s=n.line,f=n.column,d=o.line,p=o.column,h=Math.max(s-(l+1),0),g=Math.min(t.length,d+c);-1===s&&(h=0),-1===d&&(g=t.length);var v=d-s,m={};if(v)for(var y=0;y<=v;y++){var b=y+s;if(f)if(0===y){var w=t[b-1].length;m[b]=[f,w-f+1]}else if(y===v)m[b]=[0,p];else{var k=t[b-y].length;m[b]=[0,k]}else m[b]=!0}else m[s]=f===p?!f||[f,0]:[f,p-f];return{start:h,end:g,markerLines:m}}function c(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=(r.highlightCode||r.forceColor)&&(0,n.shouldHighlight)(r),a=(0,n.getChalk)(r),c=i(a),s=function(e,t){return o?e(t):t},f=e.split(l),d=u(t,f,r),p=d.start,h=d.end,g=d.markerLines,v=t.start&&"number"===typeof t.start.column,m=String(h).length,y=o?(0,n.default)(e,r):e,b=y.split(l).slice(p,h).map((function(e,t){var n=p+1+t,o=" ".concat(n).slice(-m),a=" ".concat(o," | "),i=g[n],l=!g[n+1];if(i){var u="";if(Array.isArray(i)){var f=e.slice(0,Math.max(i[0]-1,0)).replace(/[^\\t]/g," "),d=i[1]||1;u=["\\n ",s(c.gutter,a.replace(/\\d/g," ")),f,s(c.marker,"^").repeat(d)].join(""),l&&r.message&&(u+=" "+s(c.message,r.message))}return[s(c.marker,">"),s(c.gutter,a),e,u].join("")}return" ".concat(s(c.gutter,a)).concat(e)})).join("\\n");return r.message&&!v&&(b="".concat(" ".repeat(m+1)).concat(r.message,"\\n").concat(b)),o?a.reset(b):b}}).call(this,r(51))},function(e,t,r){"use strict";r(91),r(77),r(106),r(78),r(108),r(109),r(110),r(111),r(112),r(113),r(114),r(115),r(117),r(118),r(119),r(120),r(121),r(122),r(123),r(124),r(125),r(126),r(128),r(129),r(130),r(131),r(132),r(133),r(134),r(135),r(136),r(137),r(138),r(139),r(140),r(141),r(142),r(143),r(144),r(145),r(149),r(181).polyfill()},function(e,t,r){"use strict";var n=r(54),o=r(73);e.exports=n("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),o)},function(e,t,r){var n=r(8),o=r(59),a=n.WeakMap;e.exports="function"===typeof a&&/native code/.test(o(a))},function(e,t,r){var n=r(10),o=r(41),a=r(63),i=r(2);e.exports=n("Reflect","ownKeys")||function(e){var t=o.f(i(e)),r=a.f;return r?t.concat(r(e)):t}},function(e,t,r){var n=r(20),o=r(26),a=r(95),i=function(e){return function(t,r,i){var l,u=n(t),c=o(u.length),s=a(i,c);if(e&&r!=r){for(;c>s;)if((l=u[s++])!=l)return!0}else for(;c>s;s++)if((e||s in u)&&u[s]===r)return e||s||0;return!e&&-1}};e.exports={includes:i(!0),indexOf:i(!1)}},function(e,t,r){var n=r(42),o=Math.max,a=Math.min;e.exports=function(e,t){var r=n(e);return r<0?o(r+t,0):a(r,t)}},function(e,t,r){var n=r(12);e.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,r){var n=r(13),o=r(72);e.exports=function(e,t,r){var a,i;return o&&"function"==typeof(a=t.constructor)&&a!==r&&n(i=a.prototype)&&i!==r.prototype&&o(e,i),e}},function(e,t,r){var n=r(13);e.exports=function(e){if(!n(e)&&null!==e)throw TypeError("Can\'t set "+String(e)+" as a prototype");return e}},function(e,t,r){var n=r(16),o=r(14),a=r(2),i=r(74);e.exports=n?Object.defineProperties:function(e,t){a(e);for(var r,n=i(t),l=n.length,u=0;l>u;)o.f(e,r=n[u++],t[r]);return e}},function(e,t,r){var n=r(10);e.exports=n("document","documentElement")},function(e,t,r){var n=r(21);e.exports=function(e,t,r){for(var o in t)n(e,o,t[o],r);return e}},function(e,t,r){"use strict";var n=r(75).IteratorPrototype,o=r(32),a=r(23),i=r(22),l=r(27),u=function(){return this};e.exports=function(e,t,r){var c=t+" Iterator";return e.prototype=o(n,{next:a(1,r)}),i(e,c,!1,!0),l[c]=u,e}},function(e,t,r){var n=r(12);e.exports=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,r){"use strict";var n=r(10),o=r(14),a=r(6),i=r(16),l=a("species");e.exports=function(e){var t=n(e),r=o.f;i&&t&&!t[l]&&r(t,l,{configurable:!0,get:function(){return this}})}},function(e,t,r){"use strict";var n=r(46),o=r(68);e.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},function(e,t,r){"use strict";var n=r(54),o=r(73);e.exports=n("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),o)},function(e,t,r){var n=r(42),o=r(37),a=function(e){return function(t,r){var a,i,l=String(o(t)),u=n(r),c=l.length;return u<0||u>=c?e?"":void 0:(a=l.charCodeAt(u))<55296||a>56319||u+1===c||(i=l.charCodeAt(u+1))<56320||i>57343?e?l.charAt(u):a:e?l.slice(u,u+2):i-56320+(a-55296<<10)+65536}};e.exports={codeAt:a(!1),charAt:a(!0)}},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(79);n({target:"Map",proto:!0,real:!0,forced:o},{deleteAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{every:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return!u(r,(function(e,r,o){if(!n(r,e,t))return o()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{filter:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){n(r,e,t)&&d.call(o,e,r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{find:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o(r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{findKey:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o(e)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){r(1)({target:"Map",stat:!0},{from:r(80)})},function(e,t,r){"use strict";var n=r(1),o=r(4),a=r(5);n({target:"Map",stat:!0},{groupBy:function(e,t){var r=new this;a(t);var n=a(r.has),i=a(r.get),l=a(r.set);return o(e,(function(e){var o=t(e);n.call(r,o)?i.call(r,o).push(e):l.call(r,o,[e])})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(15),l=r(116),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{includes:function(e){return u(i(a(this)),(function(t,r,n){if(l(r,e))return n()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,r){"use strict";var n=r(1),o=r(4),a=r(5);n({target:"Map",stat:!0},{keyBy:function(e,t){var r=new this;a(t);var n=a(r.set);return o(e,(function(e){n.call(r,t(e),e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(15),l=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{keyOf:function(e){return l(i(a(this)),(function(t,r,n){if(r===e)return n(t)}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{mapKeys:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){d.call(o,n(r,e,t),r)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(15),f=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{mapValues:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Map"))),d=l(o.set);return f(r,(function(e,r){d.call(o,e,n(r,e,t))}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{merge:function(e){for(var t=a(this),r=i(t.set),n=0;n<arguments.length;)l(arguments[n++],r,{that:t,AS_ENTRIES:!0});return t}})},function(e,t,r){r(1)({target:"Map",stat:!0},{of:r(81)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{reduce:function(e){var t=a(this),r=l(t),n=arguments.length<2,o=n?void 0:arguments[1];if(i(e),u(r,(function(r,a){n?(n=!1,o=a):o=e(o,a,r,t)}),{AS_ENTRIES:!0,IS_ITERATOR:!0}),n)throw TypeError("Reduce of empty map with no initial value");return o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(15),u=r(4);n({target:"Map",proto:!0,real:!0,forced:o},{some:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r,o){if(n(r,e,t))return o()}),{AS_ENTRIES:!0,IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5);n({target:"Map",proto:!0,real:!0,forced:o},{update:function(e,t){var r=a(this),n=arguments.length;i(t);var o=r.has(e);if(!o&&n<3)throw TypeError("Updating absent value");var l=o?r.get(e):i(n>2?arguments[2]:void 0)(e,r);return r.set(e,t(l,e,r)),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(127);n({target:"Set",proto:!0,real:!0,forced:o},{addAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(2),o=r(5);e.exports=function(){for(var e=n(this),t=o(e.add),r=0,a=arguments.length;r<a;r++)t.call(e,arguments[r]);return e}},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(79);n({target:"Set",proto:!0,real:!0,forced:o},{deleteAll:function(){return a.apply(this,arguments)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{difference:function(e){var t=i(this),r=new(u(t,a("Set")))(t),n=l(r.delete);return c(e,(function(e){n.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{every:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return!u(r,(function(e,r){if(!n(e,e,t))return r()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(19),f=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{filter:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Set"))),d=l(o.add);return f(r,(function(e){n(e,e,t)&&d.call(o,e)}),{IS_ITERATOR:!0}),o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{find:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r){if(n(e,e,t))return r(e)}),{IS_ITERATOR:!0,INTERRUPTED:!0}).result}})},function(e,t,r){r(1)({target:"Set",stat:!0},{from:r(80)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{intersection:function(e){var t=i(this),r=new(u(t,a("Set"))),n=l(t.has),o=l(r.add);return c(e,(function(e){n.call(t,e)&&o.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isDisjointFrom:function(e){var t=a(this),r=i(t.has);return!l(e,(function(e,n){if(!0===r.call(t,e))return n()}),{INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(48),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isSubsetOf:function(e){var t=u(this),r=i(e),n=r.has;return"function"!=typeof n&&(r=new(a("Set"))(e),n=l(r.has)),!c(t,(function(e,t){if(!1===n.call(r,e))return t()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{isSupersetOf:function(e){var t=a(this),r=i(t.has);return!l(e,(function(e,n){if(!1===r.call(t,e))return n()}),{INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(19),l=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{join:function(e){var t=a(this),r=i(t),n=void 0===e?",":String(e),o=[];return l(r,o.push,{that:o,IS_ITERATOR:!0}),o.join(n)}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(7),c=r(17),s=r(19),f=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{map:function(e){var t=i(this),r=s(t),n=u(e,arguments.length>1?arguments[1]:void 0,3),o=new(c(t,a("Set"))),d=l(o.add);return f(r,(function(e){d.call(o,n(e,e,t))}),{IS_ITERATOR:!0}),o}})},function(e,t,r){r(1)({target:"Set",stat:!0},{of:r(81)})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(5),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{reduce:function(e){var t=a(this),r=l(t),n=arguments.length<2,o=n?void 0:arguments[1];if(i(e),u(r,(function(r){n?(n=!1,o=r):o=e(o,r,r,t)}),{IS_ITERATOR:!0}),n)throw TypeError("Reduce of empty set with no initial value");return o}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(2),i=r(7),l=r(19),u=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{some:function(e){var t=a(this),r=l(t),n=i(e,arguments.length>1?arguments[1]:void 0,3);return u(r,(function(e,r){if(n(e,e,t))return r()}),{IS_ITERATOR:!0,INTERRUPTED:!0}).stopped}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{symmetricDifference:function(e){var t=i(this),r=new(u(t,a("Set")))(t),n=l(r.delete),o=l(r.add);return c(e,(function(e){n.call(r,e)||o.call(r,e)})),r}})},function(e,t,r){"use strict";var n=r(1),o=r(3),a=r(10),i=r(2),l=r(5),u=r(17),c=r(4);n({target:"Set",proto:!0,real:!0,forced:o},{union:function(e){var t=i(this),r=new(u(t,a("Set")))(t);return c(e,l(r.add),{that:r}),r}})},function(e,t,r){var n=r(8),o=r(146),a=r(147),i=r(18),l=r(6),u=l("iterator"),c=l("toStringTag"),s=a.values;for(var f in o){var d=n[f],p=d&&d.prototype;if(p){if(p[u]!==s)try{i(p,u,s)}catch(e){p[u]=s}if(p[c]||i(p,c,f),o[f])for(var h in a)if(p[h]!==a[h])try{i(p,h,a[h])}catch(e){p[h]=a[h]}}}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,r){"use strict";var n=r(20),o=r(148),a=r(27),i=r(24),l=r(47),u="Array Iterator",c=i.set,s=i.getterFor(u);e.exports=l(Array,"Array",(function(e,t){c(this,{type:u,target:n(e),index:0,kind:t})}),(function(){var e=s(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:n,done:!1}:"values"==r?{value:t[n],done:!1}:{value:[n,t[n]],done:!1}}),"values"),a.Arguments=a.Array,o("keys"),o("values"),o("entries")},function(e,t,r){var n=r(6),o=r(32),a=r(14),i=n("unscopables"),l=Array.prototype;void 0==l[i]&&a.f(l,i,{configurable:!0,value:o(null)}),e.exports=function(e){l[i][e]=!0}},function(e,t,r){"use strict";r(150),r(153),r(154),r(155),r(156),r(157),r(158),r(159),r(160),r(161),r(162),r(163),r(164),r(165),r(166),r(169),r(172),r(173),r(77),r(78),r(174),r(175),r(176),"undefined"===typeof Promise&&(r(177).enable(),self.Promise=r(179)),"undefined"!==typeof window&&r(180),Object.assign=r(50)},function(e,t,r){"use strict";var n=r(1),o=r(8),a=r(10),i=r(3),l=r(16),u=r(44),c=r(67),s=r(12),f=r(11),d=r(49),p=r(13),h=r(2),g=r(28),v=r(20),m=r(29),y=r(23),b=r(32),w=r(74),k=r(41),E=r(151),x=r(63),S=r(35),_=r(14),T=r(55),C=r(18),O=r(21),P=r(40),R=r(30),N=r(25),L=r(31),A=r(6),I=r(82),j=r(9),M=r(22),D=r(24),q=r(152).forEach,z=R("hidden"),U="Symbol",F=A("toPrimitive"),B=D.set,V=D.getterFor(U),H=Object.prototype,W=o.Symbol,$=a("JSON","stringify"),G=S.f,Q=_.f,Y=E.f,K=T.f,X=P("symbols"),J=P("op-symbols"),Z=P("string-to-symbol-registry"),ee=P("symbol-to-string-registry"),te=P("wks"),re=o.QObject,ne=!re||!re.prototype||!re.prototype.findChild,oe=l&&s((function(){return 7!=b(Q({},"a",{get:function(){return Q(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=G(H,t);n&&delete H[t],Q(e,t,r),n&&e!==H&&Q(H,t,n)}:Q,ae=function(e,t){var r=X[e]=b(W.prototype);return B(r,{type:U,tag:e,description:t}),l||(r.description=t),r},ie=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof W},le=function(e,t,r){e===H&&le(J,t,r),h(e);var n=m(t,!0);return h(r),f(X,n)?(r.enumerable?(f(e,z)&&e[z][n]&&(e[z][n]=!1),r=b(r,{enumerable:y(0,!1)})):(f(e,z)||Q(e,z,y(1,{})),e[z][n]=!0),oe(e,n,r)):Q(e,n,r)},ue=function(e,t){h(e);var r=v(t),n=w(r).concat(de(r));return q(n,(function(t){l&&!ce.call(r,t)||le(e,t,r[t])})),e},ce=function(e){var t=m(e,!0),r=K.call(this,t);return!(this===H&&f(X,t)&&!f(J,t))&&(!(r||!f(this,t)||!f(X,t)||f(this,z)&&this[z][t])||r)},se=function(e,t){var r=v(e),n=m(t,!0);if(r!==H||!f(X,n)||f(J,n)){var o=G(r,n);return!o||!f(X,n)||f(r,z)&&r[z][n]||(o.enumerable=!0),o}},fe=function(e){var t=Y(v(e)),r=[];return q(t,(function(e){f(X,e)||f(N,e)||r.push(e)})),r},de=function(e){var t=e===H,r=Y(t?J:v(e)),n=[];return q(r,(function(e){!f(X,e)||t&&!f(H,e)||n.push(X[e])})),n};(u||(O((W=function(){if(this instanceof W)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=L(e),r=function e(r){this===H&&e.call(J,r),f(this,z)&&f(this[z],t)&&(this[z][t]=!1),oe(this,t,y(1,r))};return l&&ne&&oe(H,t,{configurable:!0,set:r}),ae(t,e)}).prototype,"toString",(function(){return V(this).tag})),O(W,"withoutSetter",(function(e){return ae(L(e),e)})),T.f=ce,_.f=le,S.f=se,k.f=E.f=fe,x.f=de,I.f=function(e){return ae(A(e),e)},l&&(Q(W.prototype,"description",{configurable:!0,get:function(){return V(this).description}}),i||O(H,"propertyIsEnumerable",ce,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:W}),q(w(te),(function(e){j(e)})),n({target:U,stat:!0,forced:!u},{for:function(e){var t=String(e);if(f(Z,t))return Z[t];var r=W(t);return Z[t]=r,ee[r]=t,r},keyFor:function(e){if(!ie(e))throw TypeError(e+" is not a symbol");if(f(ee,e))return ee[e]},useSetter:function(){ne=!0},useSimple:function(){ne=!1}}),n({target:"Object",stat:!0,forced:!u,sham:!l},{create:function(e,t){return void 0===t?b(e):ue(b(e),t)},defineProperty:le,defineProperties:ue,getOwnPropertyDescriptor:se}),n({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:fe,getOwnPropertySymbols:de}),n({target:"Object",stat:!0,forced:s((function(){x.f(1)}))},{getOwnPropertySymbols:function(e){return x.f(g(e))}}),$)&&n({target:"JSON",stat:!0,forced:!u||s((function(){var e=W();return"[null]"!=$([e])||"{}"!=$({a:e})||"{}"!=$(Object(e))}))},{stringify:function(e,t,r){for(var n,o=[e],a=1;arguments.length>a;)o.push(arguments[a++]);if(n=t,(p(t)||void 0!==e)&&!ie(e))return d(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!ie(t))return t}),o[1]=t,$.apply(null,o)}});W.prototype[F]||C(W.prototype,F,W.prototype.valueOf),M(W,U),N[z]=!0},function(e,t,r){var n=r(20),o=r(41).f,a={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==a.call(e)?function(e){try{return o(e)}catch(e){return i.slice()}}(e):o(n(e))}},function(e,t,r){var n=r(7),o=r(56),a=r(28),i=r(26),l=r(83),u=[].push,c=function(e){var t=1==e,r=2==e,c=3==e,s=4==e,f=6==e,d=7==e,p=5==e||f;return function(h,g,v,m){for(var y,b,w=a(h),k=o(w),E=n(g,v,3),x=i(k.length),S=0,_=m||l,T=t?_(h,x):r||d?_(h,0):void 0;x>S;S++)if((p||S in k)&&(b=E(y=k[S],S,w),e))if(t)T[S]=b;else if(b)switch(e){case 3:return!0;case 5:return y;case 6:return S;case 2:u.call(T,y)}else switch(e){case 4:return!1;case 7:u.call(T,y)}return f?-1:c||s?s:T}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterOut:c(7)}},function(e,t,r){"use strict";var n=r(1),o=r(16),a=r(8),i=r(11),l=r(13),u=r(14).f,c=r(60),s=a.Symbol;if(o&&"function"==typeof s&&(!("description"in s.prototype)||void 0!==s().description)){var f={},d=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof d?new s(e):void 0===e?s():s(e);return""===e&&(f[t]=!0),t};c(d,s);var p=d.prototype=s.prototype;p.constructor=d;var h=p.toString,g="Symbol(test)"==String(s("test")),v=/^Symbol\\((.*)\\)[^)]+$/;u(p,"description",{configurable:!0,get:function(){var e=l(this)?this.valueOf():this,t=h.call(e);if(i(f,e))return"";var r=g?t.slice(7,-1):t.replace(v,"$1");return""===r?void 0:r}}),n({global:!0,forced:!0},{Symbol:d})}},function(e,t,r){r(9)("asyncIterator")},function(e,t,r){r(9)("hasInstance")},function(e,t,r){r(9)("isConcatSpreadable")},function(e,t,r){r(9)("iterator")},function(e,t,r){r(9)("match")},function(e,t,r){r(9)("replace")},function(e,t,r){r(9)("search")},function(e,t,r){r(9)("species")},function(e,t,r){r(9)("split")},function(e,t,r){r(9)("toPrimitive")},function(e,t,r){r(9)("toStringTag")},function(e,t,r){r(9)("unscopables")},function(e,t,r){"use strict";var n=r(1),o=r(12),a=r(49),i=r(13),l=r(28),u=r(26),c=r(84),s=r(83),f=r(167),d=r(6),p=r(85),h=d("isConcatSpreadable"),g=9007199254740991,v="Maximum allowed index exceeded",m=p>=51||!o((function(){var e=[];return e[h]=!1,e.concat()[0]!==e})),y=f("concat"),b=function(e){if(!i(e))return!1;var t=e[h];return void 0!==t?!!t:a(e)};n({target:"Array",proto:!0,forced:!m||!y},{concat:function(e){var t,r,n,o,a,i=l(this),f=s(i,0),d=0;for(t=-1,n=arguments.length;t<n;t++)if(b(a=-1===t?i:arguments[t])){if(d+(o=u(a.length))>g)throw TypeError(v);for(r=0;r<o;r++,d++)r in a&&c(f,d,a[r])}else{if(d>=g)throw TypeError(v);c(f,d++,a)}return f.length=d,f}})},function(e,t,r){var n=r(12),o=r(6),a=r(85),i=o("species");e.exports=function(e){return a>=51||!n((function(){var t=[];return(t.constructor={})[i]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,r){var n=r(10);e.exports=n("navigator","userAgent")||""},function(e,t,r){var n=r(1),o=r(170);n({target:"Array",stat:!0,forced:!r(71)((function(e){Array.from(e)}))},{from:o})},function(e,t,r){"use strict";var n=r(7),o=r(28),a=r(171),i=r(66),l=r(26),u=r(84),c=r(45);e.exports=function(e){var t,r,s,f,d,p,h=o(e),g="function"==typeof this?this:Array,v=arguments.length,m=v>1?arguments[1]:void 0,y=void 0!==m,b=c(h),w=0;if(y&&(m=n(m,v>2?arguments[2]:void 0,2)),void 0==b||g==Array&&i(b))for(r=new g(t=l(h.length));t>w;w++)p=y?m(h[w],w):h[w],u(r,w,p);else for(d=(f=b.call(h)).next,r=new g;!(s=d.call(f)).done;w++)p=y?a(f,m,[s.value,w],!0):s.value,u(r,w,p);return r.length=w,r}},function(e,t,r){var n=r(2),o=r(69);e.exports=function(e,t,r,a){try{return a?t(n(r)[0],r[1]):t(r)}catch(t){throw o(e),t}}},function(e,t,r){var n=r(8);r(22)(n.JSON,"JSON",!0)},function(e,t,r){r(22)(Math,"Math",!0)},function(e,t,r){r(9)("dispose")},function(e,t,r){r(9)("observable")},function(e,t,r){r(9)("patternMatch")},function(e,t,r){"use strict";var n=r(86),o=[ReferenceError,TypeError,RangeError],a=!1;function i(){a=!1,n._Y=null,n._Z=null}function l(e,t){return t.some((function(t){return e instanceof t}))}t.disable=i,t.enable=function(e){e=e||{},a&&i();a=!0;var t=0,r=0,u={};function c(t){(e.allRejections||l(u[t].error,e.whitelist||o))&&(u[t].displayId=r++,e.onUnhandled?(u[t].logged=!0,e.onUnhandled(u[t].displayId,u[t].error)):(u[t].logged=!0,function(e,t){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):"),((t&&(t.stack||t))+"").split("\\n").forEach((function(e){console.warn("  "+e)}))}(u[t].displayId,u[t].error)))}n._Y=function(t){2===t._V&&u[t._1]&&(u[t._1].logged?function(t){u[t].logged&&(e.onHandled?e.onHandled(u[t].displayId,u[t].error):u[t].onUnhandled||(console.warn("Promise Rejection Handled (id: "+u[t].displayId+"):"),console.warn(\'  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id \'+u[t].displayId+".")))}(t._1):clearTimeout(u[t._1].timeout),delete u[t._1])},n._Z=function(e,r){0===e._U&&(e._1=t++,u[e._1]={displayId:null,error:r,timeout:setTimeout(c.bind(null,e._1),l(r,o)?100:2e3),logged:!1})}}},function(e,t,r){"use strict";(function(t){function r(e){o.length||(n(),!0),o[o.length]=e}e.exports=r;var n,o=[],a=0;function i(){for(;a<o.length;){var e=a;if(a+=1,o[e].call(),a>1024){for(var t=0,r=o.length-a;t<r;t++)o[t]=o[t+a];o.length-=a,a=0}}o.length=0,a=0,!1}var l,u,c,s="undefined"!==typeof t?t:self,f=s.MutationObserver||s.WebKitMutationObserver;function d(e){return function(){var t=setTimeout(n,0),r=setInterval(n,50);function n(){clearTimeout(t),clearInterval(r),e()}}}"function"===typeof f?(l=1,u=new f(i),c=document.createTextNode(""),u.observe(c,{characterData:!0}),n=function(){l=-l,c.data=l}):n=d(i),r.requestFlush=n,r.makeRequestCallFromTimer=d}).call(this,r(34))},function(e,t,r){"use strict";var n=r(86);e.exports=n;var o=s(!0),a=s(!1),i=s(null),l=s(void 0),u=s(0),c=s("");function s(e){var t=new n(n._0);return t._V=1,t._W=e,t}n.resolve=function(e){if(e instanceof n)return e;if(null===e)return i;if(void 0===e)return l;if(!0===e)return o;if(!1===e)return a;if(0===e)return u;if(""===e)return c;if("object"===typeof e||"function"===typeof e)try{var t=e.then;if("function"===typeof t)return new n(t.bind(e))}catch(e){return new n((function(t,r){r(e)}))}return s(e)};var f=function(e){return"function"===typeof Array.from?(f=Array.from,Array.from(e)):(f=function(e){return Array.prototype.slice.call(e)},Array.prototype.slice.call(e))};n.all=function(e){var t=f(e);return new n((function(e,r){if(0===t.length)return e([]);var o=t.length;function a(i,l){if(l&&("object"===typeof l||"function"===typeof l)){if(l instanceof n&&l.then===n.prototype.then){for(;3===l._V;)l=l._W;return 1===l._V?a(i,l._W):(2===l._V&&r(l._W),void l.then((function(e){a(i,e)}),r))}var u=l.then;if("function"===typeof u)return void new n(u.bind(l)).then((function(e){a(i,e)}),r)}t[i]=l,0===--o&&e(t)}for(var i=0;i<t.length;i++)a(i,t[i])}))},n.reject=function(e){return new n((function(t,r){r(e)}))},n.race=function(e){return new n((function(t,r){f(e).forEach((function(e){n.resolve(e).then(t,r)}))}))},n.prototype.catch=function(e){return this.then(null,e)}},function(e,t,r){"use strict";r.r(t),r.d(t,"Headers",(function(){return h})),r.d(t,"Request",(function(){return k})),r.d(t,"Response",(function(){return x})),r.d(t,"DOMException",(function(){return _})),r.d(t,"fetch",(function(){return T}));var n="undefined"!==typeof globalThis&&globalThis||"undefined"!==typeof self&&self||"undefined"!==typeof n&&n,o="URLSearchParams"in n,a="Symbol"in n&&"iterator"in Symbol,i="FileReader"in n&&"Blob"in n&&function(){try{return new Blob,!0}catch(e){return!1}}(),l="FormData"in n,u="ArrayBuffer"in n;if(u)var c=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],s=ArrayBuffer.isView||function(e){return e&&c.indexOf(Object.prototype.toString.call(e))>-1};function f(e){if("string"!==typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&\'*+.^_`|~!]/i.test(e)||""===e)throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function d(e){return"string"!==typeof e&&(e=String(e)),e}function p(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return a&&(t[Symbol.iterator]=function(){return t}),t}function h(e){this.map={},e instanceof h?e.forEach((function(e,t){this.append(t,e)}),this):Array.isArray(e)?e.forEach((function(e){this.append(e[0],e[1])}),this):e&&Object.getOwnPropertyNames(e).forEach((function(t){this.append(t,e[t])}),this)}function g(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function v(e){return new Promise((function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}}))}function m(e){var t=new FileReader,r=v(t);return t.readAsArrayBuffer(e),r}function y(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function b(){return this.bodyUsed=!1,this._initBody=function(e){var t;this.bodyUsed=this.bodyUsed,this._bodyInit=e,e?"string"===typeof e?this._bodyText=e:i&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:l&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:o&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():u&&i&&((t=e)&&DataView.prototype.isPrototypeOf(t))?(this._bodyArrayBuffer=y(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):u&&(ArrayBuffer.prototype.isPrototypeOf(e)||s(e))?this._bodyArrayBuffer=y(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"===typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):o&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},i&&(this.blob=function(){var e=g(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){if(this._bodyArrayBuffer){var e=g(this);return e||(ArrayBuffer.isView(this._bodyArrayBuffer)?Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset,this._bodyArrayBuffer.byteOffset+this._bodyArrayBuffer.byteLength)):Promise.resolve(this._bodyArrayBuffer))}return this.blob().then(m)}),this.text=function(){var e,t,r,n=g(this);if(n)return n;if(this._bodyBlob)return e=this._bodyBlob,t=new FileReader,r=v(t),t.readAsText(e),r;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},l&&(this.formData=function(){return this.text().then(E)}),this.json=function(){return this.text().then(JSON.parse)},this}h.prototype.append=function(e,t){e=f(e),t=d(t);var r=this.map[e];this.map[e]=r?r+", "+t:t},h.prototype.delete=function(e){delete this.map[f(e)]},h.prototype.get=function(e){return e=f(e),this.has(e)?this.map[e]:null},h.prototype.has=function(e){return this.map.hasOwnProperty(f(e))},h.prototype.set=function(e,t){this.map[f(e)]=d(t)},h.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},h.prototype.keys=function(){var e=[];return this.forEach((function(t,r){e.push(r)})),p(e)},h.prototype.values=function(){var e=[];return this.forEach((function(t){e.push(t)})),p(e)},h.prototype.entries=function(){var e=[];return this.forEach((function(t,r){e.push([r,t])})),p(e)},a&&(h.prototype[Symbol.iterator]=h.prototype.entries);var w=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function k(e,t){if(!(this instanceof k))throw new TypeError(\'Please use the "new" operator, this DOM object constructor cannot be called as a function.\');var r,n,o=(t=t||{}).body;if(e instanceof k){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new h(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,o||null==e._bodyInit||(o=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",!t.headers&&this.headers||(this.headers=new h(t.headers)),this.method=(r=t.method||this.method||"GET",n=r.toUpperCase(),w.indexOf(n)>-1?n:r),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&o)throw new TypeError("Body not allowed for GET or HEAD requests");if(this._initBody(o),("GET"===this.method||"HEAD"===this.method)&&("no-store"===t.cache||"no-cache"===t.cache)){var a=/([?&])_=[^&]*/;if(a.test(this.url))this.url=this.url.replace(a,"$1_="+(new Date).getTime());else{this.url+=(/\\?/.test(this.url)?"&":"?")+"_="+(new Date).getTime()}}}function E(e){var t=new FormData;return e.trim().split("&").forEach((function(e){if(e){var r=e.split("="),n=r.shift().replace(/\\+/g," "),o=r.join("=").replace(/\\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(o))}})),t}function x(e,t){if(!(this instanceof x))throw new TypeError(\'Please use the "new" operator, this DOM object constructor cannot be called as a function.\');t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"",this.headers=new h(t.headers),this.url=t.url||"",this._initBody(e)}k.prototype.clone=function(){return new k(this,{body:this._bodyInit})},b.call(k.prototype),b.call(x.prototype),x.prototype.clone=function(){return new x(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new h(this.headers),url:this.url})},x.error=function(){var e=new x(null,{status:0,statusText:""});return e.type="error",e};var S=[301,302,303,307,308];x.redirect=function(e,t){if(-1===S.indexOf(t))throw new RangeError("Invalid status code");return new x(null,{status:t,headers:{location:e}})};var _=n.DOMException;try{new _}catch(e){(_=function(e,t){this.message=e,this.name=t;var r=Error(e);this.stack=r.stack}).prototype=Object.create(Error.prototype),_.prototype.constructor=_}function T(e,t){return new Promise((function(r,o){var a=new k(e,t);if(a.signal&&a.signal.aborted)return o(new _("Aborted","AbortError"));var l=new XMLHttpRequest;function c(){l.abort()}l.onload=function(){var e,t,n={status:l.status,statusText:l.statusText,headers:(e=l.getAllResponseHeaders()||"",t=new h,e.replace(/\\r?\\n[\\t ]+/g," ").split("\\r").map((function(e){return 0===e.indexOf("\\n")?e.substr(1,e.length):e})).forEach((function(e){var r=e.split(":"),n=r.shift().trim();if(n){var o=r.join(":").trim();t.append(n,o)}})),t)};n.url="responseURL"in l?l.responseURL:n.headers.get("X-Request-URL");var o="response"in l?l.response:l.responseText;setTimeout((function(){r(new x(o,n))}),0)},l.onerror=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},l.ontimeout=function(){setTimeout((function(){o(new TypeError("Network request failed"))}),0)},l.onabort=function(){setTimeout((function(){o(new _("Aborted","AbortError"))}),0)},l.open(a.method,function(e){try{return""===e&&n.location.href?n.location.href:e}catch(t){return e}}(a.url),!0),"include"===a.credentials?l.withCredentials=!0:"omit"===a.credentials&&(l.withCredentials=!1),"responseType"in l&&(i?l.responseType="blob":u&&a.headers.get("Content-Type")&&-1!==a.headers.get("Content-Type").indexOf("application/octet-stream")&&(l.responseType="arraybuffer")),!t||"object"!==typeof t.headers||t.headers instanceof h?a.headers.forEach((function(e,t){l.setRequestHeader(t,e)})):Object.getOwnPropertyNames(t.headers).forEach((function(e){l.setRequestHeader(e,d(t.headers[e]))})),a.signal&&(a.signal.addEventListener("abort",c),l.onreadystatechange=function(){4===l.readyState&&a.signal.removeEventListener("abort",c)}),l.send("undefined"===typeof a._bodyInit?null:a._bodyInit)}))}T.polyfill=!0,n.fetch||(n.fetch=T,n.Headers=h,n.Request=k,n.Response=x)},function(e,t,r){(function(t){for(var n=r(182),o="undefined"===typeof window?t:window,a=["moz","webkit"],i="AnimationFrame",l=o["request"+i],u=o["cancel"+i]||o["cancelRequest"+i],c=0;!l&&c<a.length;c++)l=o[a[c]+"Request"+i],u=o[a[c]+"Cancel"+i]||o[a[c]+"CancelRequest"+i];if(!l||!u){var s=0,f=0,d=[];l=function(e){if(0===d.length){var t=n(),r=Math.max(0,16.666666666666668-(t-s));s=r+t,setTimeout((function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(s)}catch(e){setTimeout((function(){throw e}),0)}}),Math.round(r))}return d.push({handle:++f,callback:e,cancelled:!1}),f},u=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}e.exports=function(e){return l.call(o,e)},e.exports.cancel=function(){u.apply(o,arguments)},e.exports.polyfill=function(e){e||(e=o),e.requestAnimationFrame=l,e.cancelAnimationFrame=u}}).call(this,r(34))},function(e,t,r){(function(t){(function(){var r,n,o,a,i,l;"undefined"!==typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!==typeof t&&null!==t&&t.hrtime?(e.exports=function(){return(r()-i)/1e6},n=t.hrtime,a=(r=function(){var e;return 1e9*(e=n())[0]+e[1]})(),l=1e9*t.uptime(),i=a-l):Date.now?(e.exports=function(){return Date.now()-o},o=Date.now()):(e.exports=function(){return(new Date).getTime()-o},o=(new Date).getTime())}).call(this)}).call(this,r(51))},function(e,t,r){"use strict";var n=r(50),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var i=60109,l=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"===typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),i=f("react.provider"),l=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"===typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function v(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||h}function m(){}function y(e,t,r){this.props=e,this.context=t,this.refs=g,this.updater=r||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},m.prototype=v.prototype;var b=y.prototype=new m;b.constructor=y,n(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,r){var n,a={},i=null,l=null;if(null!=t)for(n in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,n)&&!E.hasOwnProperty(n)&&(a[n]=t[n]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(n in u=e.defaultProps)void 0===a[n]&&(a[n]=u[n]);return{$$typeof:o,type:e,key:i,ref:l,props:a,_owner:w.current}}function S(e){return"object"===typeof e&&null!==e&&e.$$typeof===o}var _=/\\/+/g;function T(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,r,n,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return i=i(u=e),e=""===n?"."+T(u,0):n,Array.isArray(i)?(r="",null!=e&&(r=e.replace(_,"$&/")+"/"),C(i,t,r,"",(function(e){return e}))):null!=i&&(S(i)&&(i=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,r+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(_,"$&/")+"/")+e)),t.push(i)),1;if(u=0,n=""===n?".":n+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=n+T(l=e[c],c);u+=C(l,t,r,s,i)}else if("function"===typeof(s=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(l=e.next()).done;)u+=C(l=l.value,t,r,s=n+T(l,c++),i);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function O(e,t,r){if(null==e)return e;var n=[],o=0;return C(e,n,"","",(function(e){return t.call(r,e,o++)})),n}function P(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var R={current:null};function N(){var e=R.current;if(null===e)throw Error(p(321));return e}var L={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:n};t.Children={map:O,forEach:function(e,t,r){O(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return O(e,(function(){t++})),t},toArray:function(e){return O(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error(p(267,e));var a=n({},e.props),i=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:i,ref:l,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return N().useCallback(e,t)},t.useContext=function(e,t){return N().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return N().useEffect(e,t)},t.useImperativeHandle=function(e,t,r){return N().useImperativeHandle(e,t,r)},t.useLayoutEffect=function(e,t){return N().useLayoutEffect(e,t)},t.useMemo=function(e,t){return N().useMemo(e,t)},t.useReducer=function(e,t,r){return N().useReducer(e,t,r)},t.useRef=function(e){return N().useRef(e)},t.useState=function(e){return N().useState(e)},t.version="17.0.1"},function(e,t,r){"use strict";var n=r(0),o=r(50),a=r(185);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!n)throw Error(i(227));var l=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},g={};function v(e,t,r,n,o,a,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=o,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=i}var m={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){m[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];m[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){m[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){m[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){m[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){m[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){m[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){m[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){m[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,r,n){var o=m.hasOwnProperty(t)?m[t]:null;(null!==o?0===o.type:!n&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,r,n){if(null===t||"undefined"===typeof t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,o,n)&&(r=null),n||null===o?function(e){return!!p.call(g,e)||!p.call(h,e)&&(d.test(e)?g[e]=!0:(h[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):o.mustUseProperty?e[o.propertyName]=null===r?3!==o.type&&"":r:(t=o.attributeName,n=o.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(o=o.type)||4===o&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);m[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),m.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){m[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,x=60106,S=60107,_=60108,T=60114,C=60109,O=60110,P=60112,R=60113,N=60120,L=60115,A=60116,I=60121,j=60128,M=60129,D=60130,q=60131;if("function"===typeof Symbol&&Symbol.for){var z=Symbol.for;E=z("react.element"),x=z("react.portal"),S=z("react.fragment"),_=z("react.strict_mode"),T=z("react.profiler"),C=z("react.provider"),O=z("react.context"),P=z("react.forward_ref"),R=z("react.suspense"),N=z("react.suspense_list"),L=z("react.memo"),A=z("react.lazy"),I=z("react.block"),z("react.scope"),j=z("react.opaque.id"),M=z("react.debug_trace_mode"),D=z("react.offscreen"),q=z("react.legacy_hidden")}var U,F="function"===typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=F&&e[F]||e["@@iterator"])?e:null}function V(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\\n( *(at )?)/);U=t&&t[1]||""}return"\\n"+U+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}else{try{throw Error()}catch(e){n=e}e()}}catch(e){if(e&&n&&"string"===typeof e.stack){for(var o=e.stack.split("\\n"),a=n.stack.split("\\n"),i=o.length-1,l=a.length-1;1<=i&&0<=l&&o[i]!==a[l];)l--;for(;1<=i&&0<=l;i--,l--)if(o[i]!==a[l]){if(1!==i||1!==l)do{if(i--,0>--l||o[i]!==a[l])return"\\n"+o[i].replace(" at new "," at ")}while(1<=i&&0<=l);break}}}finally{H=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?V(e):""}function $(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 22:return e=W(e.type._render,!1);case 1:return e=W(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case x:return"Portal";case T:return"Profiler";case _:return"StrictMode";case R:return"Suspense";case N:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case O:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case P:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case L:return G(e.type);case I:return G(e._render);case A:t=e._payload,e=e._init;try{return G(e(t))}catch(e){}}return null}function Q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof r&&"function"===typeof r.get&&"function"===typeof r.set){var o=r.get,a=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){n=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=Y(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function J(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var r=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function ee(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=Q(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function re(e,t){te(e,t);var r=Q(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,r):t.hasOwnProperty("defaultValue")&&oe(e,t.type,Q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ne(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function oe(e,t,r){"number"===t&&J(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return n.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function ie(e,t,r,n){if(e=e.options,t){t={};for(var o=0;o<r.length;o++)t["$"+r[o]]=!0;for(r=0;r<e.length;r++)o=t.hasOwnProperty("$"+e[r].value),e[r].selected!==o&&(e[r].selected=o),o&&n&&(e[r].defaultSelected=!0)}else{for(r=""+Q(r),t=null,o=0;o<e.length;o++){if(e[o].value===r)return e[o].selected=!0,void(n&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(i(92));if(Array.isArray(r)){if(!(1>=r.length))throw Error(i(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:Q(r)}}function ce(e,t){var r=Q(t.value),n=Q(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml",de="http://www.w3.org/2000/svg";function pe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function he(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?pe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ge,ve,me=(ve=function(e,t){if(e.namespaceURI!==de||"innerHTML"in e)e.innerHTML=t;else{for((ge=ge||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ge.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction((function(){return ve(e,t)}))}:ve);function ye(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var be={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},we=["Webkit","ms","Moz","O"];function ke(e,t,r){return null==t||"boolean"===typeof t||""===t?"":r||"number"!==typeof t||0===t||be.hasOwnProperty(e)&&be[e]?(""+t).trim():t+"px"}function Ee(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),o=ke(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,o):e[r]=o}}Object.keys(be).forEach((function(e){we.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),be[t]=be[e]}))}));var xe=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(xe[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function _e(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Te(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Oe=null,Pe=null;function Re(e){if(e=eo(e)){if("function"!==typeof Ce)throw Error(i(280));var t=e.stateNode;t&&(t=ro(t),Ce(e.stateNode,e.type,t))}}function Ne(e){Oe?Pe?Pe.push(e):Pe=[e]:Oe=e}function Le(){if(Oe){var e=Oe,t=Pe;if(Pe=Oe=null,Re(e),t)for(e=0;e<t.length;e++)Re(t[e])}}function Ae(e,t){return e(t)}function Ie(e,t,r,n,o){return e(t,r,n,o)}function je(){}var Me=Ae,De=!1,qe=!1;function ze(){null===Oe&&null===Pe||(je(),Le())}function Ue(e,t){var r=e.stateNode;if(null===r)return null;var n=ro(r);if(null===n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!==typeof r)throw Error(i(231,t,typeof r));return r}var Fe=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(ve){Fe=!1}function Ve(e,t,r,n,o,a,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(r,c)}catch(e){this.onError(e)}}var He=!1,We=null,$e=!1,Ge=null,Qe={onError:function(e){He=!0,We=e}};function Ye(e,t,r,n,o,a,i,l,u){He=!1,We=null,Ve.apply(Qe,arguments)}function Ke(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(1026&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Je(e){if(Ke(e)!==e)throw Error(i(188))}function Ze(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ke(e)))throw Error(i(188));return t!==e?null:e}for(var r=e,n=t;;){var o=r.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(n=o.return)){r=n;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===r)return Je(o),e;if(a===n)return Je(o),t;a=a.sibling}throw Error(i(188))}if(r.return!==n.return)r=o,n=a;else{for(var l=!1,u=o.child;u;){if(u===r){l=!0,r=o,n=a;break}if(u===n){l=!0,n=o,r=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===r){l=!0,r=a,n=o;break}if(u===n){l=!0,n=a,r=o;break}u=u.sibling}if(!l)throw Error(i(189))}}if(r.alternate!==n)throw Error(i(190))}if(3!==r.tag)throw Error(i(188));return r.stateNode.current===r?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){for(var r=e.alternate;null!==t;){if(t===e||t===r)return!0;t=t.return}return!1}var tt,rt,nt,ot,at=!1,it=[],lt=null,ut=null,ct=null,st=new Map,ft=new Map,dt=[],pt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ht(e,t,r,n,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|r,nativeEvent:o,targetContainers:[n]}}function gt(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":ut=null;break;case"mouseover":case"mouseout":ct=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ft.delete(t.pointerId)}}function vt(e,t,r,n,o,a){return null===e||e.nativeEvent!==a?(e=ht(t,r,n,o,a),null!==t&&(null!==(t=eo(t))&&rt(t)),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function mt(e){var t=Zn(e.target);if(null!==t){var r=Ke(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=Xe(r)))return e.blockedOn=t,void ot(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(r)}))}))}else if(3===t&&r.stateNode.hydrate)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function yt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=eo(r))&&rt(t),e.blockedOn=r,!1;t.shift()}return!0}function bt(e,t,r){yt(e)&&r.delete(t)}function wt(){for(at=!1;0<it.length;){var e=it[0];if(null!==e.blockedOn){null!==(e=eo(e.blockedOn))&&tt(e);break}for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r){e.blockedOn=r;break}t.shift()}null===e.blockedOn&&it.shift()}null!==lt&&yt(lt)&&(lt=null),null!==ut&&yt(ut)&&(ut=null),null!==ct&&yt(ct)&&(ct=null),st.forEach(bt),ft.forEach(bt)}function kt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,wt)))}function Et(e){function t(t){return kt(t,e)}if(0<it.length){kt(it[0],e);for(var r=1;r<it.length;r++){var n=it[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==lt&&kt(lt,e),null!==ut&&kt(ut,e),null!==ct&&kt(ct,e),st.forEach(t),ft.forEach(t),r=0;r<dt.length;r++)(n=dt[r]).blockedOn===e&&(n.blockedOn=null);for(;0<dt.length&&null===(r=dt[0]).blockedOn;)mt(r),null===r.blockedOn&&dt.shift()}function xt(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var St={animationend:xt("Animation","AnimationEnd"),animationiteration:xt("Animation","AnimationIteration"),animationstart:xt("Animation","AnimationStart"),transitionend:xt("Transition","TransitionEnd")},_t={},Tt={};function Ct(e){if(_t[e])return _t[e];if(!St[e])return e;var t,r=St[e];for(t in r)if(r.hasOwnProperty(t)&&t in Tt)return _t[e]=r[t];return e}f&&(Tt=document.createElement("div").style,"AnimationEvent"in window||(delete St.animationend.animation,delete St.animationiteration.animation,delete St.animationstart.animation),"TransitionEvent"in window||delete St.transitionend.transition);var Ot=Ct("animationend"),Pt=Ct("animationiteration"),Rt=Ct("animationstart"),Nt=Ct("transitionend"),Lt=new Map,At=new Map,It=["abort","abort",Ot,"animationEnd",Pt,"animationIteration",Rt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Nt,"transitionEnd","waiting","waiting"];function jt(e,t){for(var r=0;r<e.length;r+=2){var n=e[r],o=e[r+1];o="on"+(o[0].toUpperCase()+o.slice(1)),At.set(n,t),Lt.set(n,o),c(o,[n])}}(0,a.unstable_now)();var Mt=8;function Dt(e){if(0!==(1&e))return Mt=15,1;if(0!==(2&e))return Mt=14,2;if(0!==(4&e))return Mt=13,4;var t=24&e;return 0!==t?(Mt=12,t):0!==(32&e)?(Mt=11,32):0!==(t=192&e)?(Mt=10,t):0!==(256&e)?(Mt=9,256):0!==(t=3584&e)?(Mt=8,t):0!==(4096&e)?(Mt=7,4096):0!==(t=4186112&e)?(Mt=6,t):0!==(t=62914560&e)?(Mt=5,t):67108864&e?(Mt=4,67108864):0!==(134217728&e)?(Mt=3,134217728):0!==(t=805306368&e)?(Mt=2,t):0!==(1073741824&e)?(Mt=1,1073741824):(Mt=8,e)}function qt(e,t){var r=e.pendingLanes;if(0===r)return Mt=0;var n=0,o=0,a=e.expiredLanes,i=e.suspendedLanes,l=e.pingedLanes;if(0!==a)n=a,o=Mt=15;else if(0!==(a=134217727&r)){var u=a&~i;0!==u?(n=Dt(u),o=Mt):0!==(l&=a)&&(n=Dt(l),o=Mt)}else 0!==(a=r&~i)?(n=Dt(a),o=Mt):0!==l&&(n=Dt(l),o=Mt);if(0===n)return 0;if(n=r&((0>(n=31-Ht(n))?0:1<<n)<<1)-1,0!==t&&t!==n&&0===(t&i)){if(Dt(t),o<=Mt)return t;Mt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)o=1<<(r=31-Ht(t)),n|=e[r],t&=~o;return n}function zt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Ut(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ft(24&~t))?Ut(10,t):e;case 10:return 0===(e=Ft(192&~t))?Ut(8,t):e;case 8:return 0===(e=Ft(3584&~t))&&(0===(e=Ft(4186112&~t))&&(e=512)),e;case 2:return 0===(t=Ft(805306368&~t))&&(t=268435456),t}throw Error(i(358,e))}function Ft(e){return e&-e}function Bt(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function Vt(e,t,r){e.pendingLanes|=t;var n=t-1;e.suspendedLanes&=n,e.pingedLanes&=n,(e=e.eventTimes)[t=31-Ht(t)]=r}var Ht=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Wt(e)/$t|0)|0},Wt=Math.log,$t=Math.LN2;var Gt=a.unstable_UserBlockingPriority,Qt=a.unstable_runWithPriority,Yt=!0;function Kt(e,t,r,n){De||je();var o=Jt,a=De;De=!0;try{Ie(o,e,t,r,n)}finally{(De=a)||ze()}}function Xt(e,t,r,n){Qt(Gt,Jt.bind(null,e,t,r,n))}function Jt(e,t,r,n){var o;if(Yt)if((o=0===(4&t))&&0<it.length&&-1<pt.indexOf(e))e=ht(null,e,t,r,n),it.push(e);else{var a=Zt(e,t,r,n);if(null===a)o&&gt(e,n);else{if(o){if(-1<pt.indexOf(e))return e=ht(a,e,t,r,n),void it.push(e);if(function(e,t,r,n,o){switch(t){case"focusin":return lt=vt(lt,e,t,r,n,o),!0;case"dragenter":return ut=vt(ut,e,t,r,n,o),!0;case"mouseover":return ct=vt(ct,e,t,r,n,o),!0;case"pointerover":var a=o.pointerId;return st.set(a,vt(st.get(a)||null,e,t,r,n,o)),!0;case"gotpointercapture":return a=o.pointerId,ft.set(a,vt(ft.get(a)||null,e,t,r,n,o)),!0}return!1}(a,e,t,r,n))return;gt(e,n)}Ln(e,t,n,null,r)}}}function Zt(e,t,r,n){var o=Te(n);if(null!==(o=Zn(o))){var a=Ke(o);if(null===a)o=null;else{var i=a.tag;if(13===i){if(null!==(o=Xe(a)))return o;o=null}else if(3===i){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Ln(e,t,n,o,r),null}var er=null,tr=null,rr=null;function nr(){if(rr)return rr;var e,t,r=tr,n=r.length,o="value"in er?er.value:er.textContent,a=o.length;for(e=0;e<n&&r[e]===o[e];e++);var i=n-e;for(t=1;t<=i&&r[n-t]===o[a-t];t++);return rr=o.slice(e,1<t?1-t:void 0)}function or(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function ar(){return!0}function ir(){return!1}function lr(e){function t(t,r,n,o,a){for(var i in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(o):o[i]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?ar:ir,this.isPropagationStopped=ir,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ar)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ar)},persist:function(){},isPersistent:ar}),t}var ur,cr,sr,fr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dr=lr(fr),pr=o({},fr,{view:0,detail:0}),hr=lr(pr),gr=o({},pr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Tr,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sr&&(sr&&"mousemove"===e.type?(ur=e.screenX-sr.screenX,cr=e.screenY-sr.screenY):cr=ur=0,sr=e),ur)},movementY:function(e){return"movementY"in e?e.movementY:cr}}),vr=lr(gr),mr=lr(o({},gr,{dataTransfer:0})),yr=lr(o({},pr,{relatedTarget:0})),br=lr(o({},fr,{animationName:0,elapsedTime:0,pseudoElement:0})),wr=lr(o({},fr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kr=lr(o({},fr,{data:0})),Er={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _r(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sr[e])&&!!t[e]}function Tr(){return _r}var Cr=lr(o({},pr,{key:function(e){if(e.key){var t=Er[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=or(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Tr,charCode:function(e){return"keypress"===e.type?or(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?or(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Or=lr(o({},gr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Pr=lr(o({},pr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Tr})),Rr=lr(o({},fr,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nr=lr(o({},gr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Lr=[9,13,27,32],Ar=f&&"CompositionEvent"in window,Ir=null;f&&"documentMode"in document&&(Ir=document.documentMode);var jr=f&&"TextEvent"in window&&!Ir,Mr=f&&(!Ar||Ir&&8<Ir&&11>=Ir),Dr=String.fromCharCode(32),qr=!1;function zr(e,t){switch(e){case"keyup":return-1!==Lr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ur(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Fr=!1;var Br={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Br[e.type]:"textarea"===t}function Hr(e,t,r,n){Ne(n),0<(t=In(t,"onChange")).length&&(r=new dr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var Wr=null,$r=null;function Gr(e){Tn(e,0)}function Qr(e){if(X(to(e)))return e}function Yr(e,t){if("change"===e)return t}var Kr=!1;if(f){var Xr;if(f){var Jr="oninput"in document;if(!Jr){var Zr=document.createElement("div");Zr.setAttribute("oninput","return;"),Jr="function"===typeof Zr.oninput}Xr=Jr}else Xr=!1;Kr=Xr&&(!document.documentMode||9<document.documentMode)}function en(){Wr&&(Wr.detachEvent("onpropertychange",tn),$r=Wr=null)}function tn(e){if("value"===e.propertyName&&Qr($r)){var t=[];if(Hr(t,$r,e,Te(e)),e=Gr,De)e(t);else{De=!0;try{Ae(e,t)}finally{De=!1,ze()}}}}function rn(e,t,r){"focusin"===e?(en(),$r=r,(Wr=t).attachEvent("onpropertychange",tn)):"focusout"===e&&en()}function nn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qr($r)}function on(e,t){if("click"===e)return Qr(t)}function an(e,t){if("input"===e||"change"===e)return Qr(t)}var ln="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t},un=Object.prototype.hasOwnProperty;function cn(e,t){if(ln(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++)if(!un.call(t,r[n])||!ln(e[r[n]],t[r[n]]))return!1;return!0}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var r,n=sn(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=sn(n)}}function dn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pn(){for(var e=window,t=J();t instanceof e.HTMLIFrameElement;){try{var r="string"===typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=J((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var gn=f&&"documentMode"in document&&11>=document.documentMode,vn=null,mn=null,yn=null,bn=!1;function wn(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;bn||null==vn||vn!==J(n)||("selectionStart"in(n=vn)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},yn&&cn(yn,n)||(yn=n,0<(n=In(mn,"onSelect")).length&&(t=new dr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=vn)))}jt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),jt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),jt(It,2);for(var kn="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),En=0;En<kn.length;En++)At.set(kn[En],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var xn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sn=new Set("cancel close invalid load scroll toggle".split(" ").concat(xn));function _n(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,o,a,l,u,c){if(Ye.apply(this,arguments),He){if(!He)throw Error(i(198));var s=We;He=!1,We=null,$e||($e=!0,Ge=s)}}(n,t,void 0,e),e.currentTarget=null}function Tn(e,t){t=0!==(4&t);for(var r=0;r<e.length;r++){var n=e[r],o=n.event;n=n.listeners;e:{var a=void 0;if(t)for(var i=n.length-1;0<=i;i--){var l=n[i],u=l.instance,c=l.currentTarget;if(l=l.listener,u!==a&&o.isPropagationStopped())break e;_n(o,l,c),a=u}else for(i=0;i<n.length;i++){if(u=(l=n[i]).instance,c=l.currentTarget,l=l.listener,u!==a&&o.isPropagationStopped())break e;_n(o,l,c),a=u}}}if($e)throw e=Ge,$e=!1,Ge=null,e}function Cn(e,t){var r=no(t),n=e+"__bubble";r.has(n)||(Nn(t,e,2,!1),r.add(n))}var On="_reactListening"+Math.random().toString(36).slice(2);function Pn(e){e[On]||(e[On]=!0,l.forEach((function(t){Sn.has(t)||Rn(t,!1,e,null),Rn(t,!0,e,null)})))}function Rn(e,t,r,n){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=r;if("selectionchange"===e&&9!==r.nodeType&&(a=r.ownerDocument),null!==n&&!t&&Sn.has(e)){if("scroll"!==e)return;o|=2,a=n}var i=no(a),l=e+"__"+(t?"capture":"bubble");i.has(l)||(t&&(o|=4),Nn(a,e,o,t),i.add(l))}function Nn(e,t,r,n){var o=At.get(t);switch(void 0===o?2:o){case 0:o=Kt;break;case 1:o=Xt;break;default:o=Jt}r=o.bind(null,t,r,e),o=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),n?void 0!==o?e.addEventListener(t,r,{capture:!0,passive:o}):e.addEventListener(t,r,!0):void 0!==o?e.addEventListener(t,r,{passive:o}):e.addEventListener(t,r,!1)}function Ln(e,t,r,n,o){var a=n;if(0===(1&t)&&0===(2&t)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var l=n.stateNode.containerInfo;if(l===o||8===l.nodeType&&l.parentNode===o)break;if(4===i)for(i=n.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;i=i.return}for(;null!==l;){if(null===(i=Zn(l)))return;if(5===(u=i.tag)||6===u){n=a=i;continue e}l=l.parentNode}}n=n.return}!function(e,t,r){if(qe)return e(t,r);qe=!0;try{Me(e,t,r)}finally{qe=!1,ze()}}((function(){var n=a,o=Te(r),i=[];e:{var l=Lt.get(e);if(void 0!==l){var u=dr,c=e;switch(e){case"keypress":if(0===or(r))break e;case"keydown":case"keyup":u=Cr;break;case"focusin":c="focus",u=yr;break;case"focusout":c="blur",u=yr;break;case"beforeblur":case"afterblur":u=yr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Pr;break;case Ot:case Pt:case Rt:u=br;break;case Nt:u=Rr;break;case"scroll":u=hr;break;case"wheel":u=Nr;break;case"copy":case"cut":case"paste":u=wr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Or}var s=0!==(4&t),f=!s&&"scroll"===e,d=s?null!==l?l+"Capture":null:l;s=[];for(var p,h=n;null!==h;){var g=(p=h).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==d&&(null!=(g=Ue(h,d))&&s.push(An(h,g,p)))),f)break;h=h.return}0<s.length&&(l=new u(l,c,null,r,o),i.push({event:l,listeners:s}))}}if(0===(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!==(16&t)||!(c=r.relatedTarget||r.fromElement)||!Zn(c)&&!c[Xn])&&(u||l)&&(l=o.window===o?o:(l=o.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=n,null!==(c=(c=r.relatedTarget||r.toElement)?Zn(c):null)&&(c!==(f=Ke(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=n),u!==c)){if(s=vr,g="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Or,g="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:to(u),p=null==c?l:to(c),(l=new s(g,h+"leave",u,r,o)).target=f,l.relatedTarget=p,g=null,Zn(o)===n&&((s=new s(d,h+"enter",c,r,o)).target=p,s.relatedTarget=f,g=s),f=g,u&&c)e:{for(d=c,h=0,p=s=u;p;p=jn(p))h++;for(p=0,g=d;g;g=jn(g))p++;for(;0<h-p;)s=jn(s),h--;for(;0<p-h;)d=jn(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=jn(s),d=jn(d)}s=null}else s=null;null!==u&&Mn(i,l,u,s,!1),null!==c&&null!==f&&Mn(i,f,c,s,!0)}if("select"===(u=(l=n?to(n):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var v=Yr;else if(Vr(l))if(Kr)v=an;else{v=nn;var m=rn}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(v=on);switch(v&&(v=v(e,n))?Hr(i,v,r,o):(m&&m(e,l,n),"focusout"===e&&(m=l._wrapperState)&&m.controlled&&"number"===l.type&&oe(l,"number",l.value)),m=n?to(n):window,e){case"focusin":(Vr(m)||"true"===m.contentEditable)&&(vn=m,mn=n,yn=null);break;case"focusout":yn=mn=vn=null;break;case"mousedown":bn=!0;break;case"contextmenu":case"mouseup":case"dragend":bn=!1,wn(i,r,o);break;case"selectionchange":if(gn)break;case"keydown":case"keyup":wn(i,r,o)}var y;if(Ar)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Fr?zr(e,r)&&(b="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(b="onCompositionStart");b&&(Mr&&"ko"!==r.locale&&(Fr||"onCompositionStart"!==b?"onCompositionEnd"===b&&Fr&&(y=nr()):(tr="value"in(er=o)?er.value:er.textContent,Fr=!0)),0<(m=In(n,b)).length&&(b=new kr(b,e,null,r,o),i.push({event:b,listeners:m}),y?b.data=y:null!==(y=Ur(r))&&(b.data=y))),(y=jr?function(e,t){switch(e){case"compositionend":return Ur(t);case"keypress":return 32!==t.which?null:(qr=!0,Dr);case"textInput":return(e=t.data)===Dr&&qr?null:e;default:return null}}(e,r):function(e,t){if(Fr)return"compositionend"===e||!Ar&&zr(e,t)?(e=nr(),rr=tr=er=null,Fr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Mr&&"ko"!==t.locale?null:t.data;default:return null}}(e,r))&&(0<(n=In(n,"onBeforeInput")).length&&(o=new kr("onBeforeInput","beforeinput",null,r,o),i.push({event:o,listeners:n}),o.data=y))}Tn(i,t)}))}function An(e,t,r){return{instance:e,listener:t,currentTarget:r}}function In(e,t){for(var r=t+"Capture",n=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Ue(e,r))&&n.unshift(An(e,a,o)),null!=(a=Ue(e,t))&&n.push(An(e,a,o))),e=e.return}return n}function jn(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Mn(e,t,r,n,o){for(var a=t._reactName,i=[];null!==r&&r!==n;){var l=r,u=l.alternate,c=l.stateNode;if(null!==u&&u===n)break;5===l.tag&&null!==c&&(l=c,o?null!=(u=Ue(r,a))&&i.unshift(An(r,u,l)):o||null!=(u=Ue(r,a))&&i.push(An(r,u,l))),r=r.return}0!==i.length&&e.push({event:t,listeners:i})}function Dn(){}var qn=null,zn=null;function Un(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Fn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Bn="function"===typeof setTimeout?setTimeout:void 0,Vn="function"===typeof clearTimeout?clearTimeout:void 0;function Hn(e){1===e.nodeType?e.textContent="":9===e.nodeType&&(null!=(e=e.body)&&(e.textContent=""))}function Wn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function $n(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var Gn=0;var Qn=Math.random().toString(36).slice(2),Yn="__reactFiber$"+Qn,Kn="__reactProps$"+Qn,Xn="__reactContainer$"+Qn,Jn="__reactEvents$"+Qn;function Zn(e){var t=e[Yn];if(t)return t;for(var r=e.parentNode;r;){if(t=r[Xn]||r[Yn]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=$n(e);null!==e;){if(r=e[Yn])return r;e=$n(e)}return t}r=(e=r).parentNode}return null}function eo(e){return!(e=e[Yn]||e[Xn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function to(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ro(e){return e[Kn]||null}function no(e){var t=e[Jn];return void 0===t&&(t=e[Jn]=new Set),t}var oo=[],ao=-1;function io(e){return{current:e}}function lo(e){0>ao||(e.current=oo[ao],oo[ao]=null,ao--)}function uo(e,t){ao++,oo[ao]=e.current,e.current=t}var co={},so=io(co),fo=io(!1),po=co;function ho(e,t){var r=e.type.contextTypes;if(!r)return co;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in r)a[o]=t[o];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function go(e){return null!==(e=e.childContextTypes)&&void 0!==e}function vo(){lo(fo),lo(so)}function mo(e,t,r){if(so.current!==co)throw Error(i(168));uo(so,t),uo(fo,r)}function yo(e,t,r){var n=e.stateNode;if(e=t.childContextTypes,"function"!==typeof n.getChildContext)return r;for(var a in n=n.getChildContext())if(!(a in e))throw Error(i(108,G(t)||"Unknown",a));return o({},r,n)}function bo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||co,po=so.current,uo(so,e),uo(fo,fo.current),!0}function wo(e,t,r){var n=e.stateNode;if(!n)throw Error(i(169));r?(e=yo(e,t,po),n.__reactInternalMemoizedMergedChildContext=e,lo(fo),lo(so),uo(so,e)):lo(fo),uo(fo,r)}var ko=null,Eo=null,xo=a.unstable_runWithPriority,So=a.unstable_scheduleCallback,_o=a.unstable_cancelCallback,To=a.unstable_shouldYield,Co=a.unstable_requestPaint,Oo=a.unstable_now,Po=a.unstable_getCurrentPriorityLevel,Ro=a.unstable_ImmediatePriority,No=a.unstable_UserBlockingPriority,Lo=a.unstable_NormalPriority,Ao=a.unstable_LowPriority,Io=a.unstable_IdlePriority,jo={},Mo=void 0!==Co?Co:function(){},Do=null,qo=null,zo=!1,Uo=Oo(),Fo=1e4>Uo?Oo:function(){return Oo()-Uo};function Bo(){switch(Po()){case Ro:return 99;case No:return 98;case Lo:return 97;case Ao:return 96;case Io:return 95;default:throw Error(i(332))}}function Vo(e){switch(e){case 99:return Ro;case 98:return No;case 97:return Lo;case 96:return Ao;case 95:return Io;default:throw Error(i(332))}}function Ho(e,t){return e=Vo(e),xo(e,t)}function Wo(e,t,r){return e=Vo(e),So(e,t,r)}function $o(){if(null!==qo){var e=qo;qo=null,_o(e)}Go()}function Go(){if(!zo&&null!==Do){zo=!0;var e=0;try{var t=Do;Ho(99,(function(){for(;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}})),Do=null}catch(t){throw null!==Do&&(Do=Do.slice(e+1)),So(Ro,$o),t}finally{zo=!1}}}var Qo=k.ReactCurrentBatchConfig;function Yo(e,t){if(e&&e.defaultProps){for(var r in t=o({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}var Ko=io(null),Xo=null,Jo=null,Zo=null;function ea(){Zo=Jo=Xo=null}function ta(e){var t=Ko.current;lo(Ko),e.type._context._currentValue=t}function ra(e,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)===t){if(null===r||(r.childLanes&t)===t)break;r.childLanes|=t}else e.childLanes|=t,null!==r&&(r.childLanes|=t);e=e.return}}function na(e,t){Xo=e,Zo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(Ii=!0),e.firstContext=null)}function oa(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"===typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Jo){if(null===Xo)throw Error(i(308));Jo=t,Xo.dependencies={lanes:0,firstContext:t,responders:null}}else Jo=Jo.next=t;return e._currentValue}var aa=!1;function ia(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function la(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ua(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ca(e,t){if(null!==(e=e.updateQueue)){var r=(e=e.shared).pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}}function sa(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var o=null,a=null;if(null!==(r=r.firstBaseUpdate)){do{var i={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===a?o=a=i:a=a.next=i,r=r.next}while(null!==r);null===a?o=a=t:a=a.next=t}else o=a=t;return r={baseState:n.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:n.shared,effects:n.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function fa(e,t,r,n){var a=e.updateQueue;aa=!1;var i=a.firstBaseUpdate,l=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var c=u,s=c.next;c.next=null,null===l?i=s:l.next=s,l=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==l&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==i){for(d=a.baseState,l=0,f=s=c=null;;){u=i.lane;var p=i.eventTime;if((n&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,g=i;switch(u=t,p=r,g.tag){case 1:if("function"===typeof(h=g.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null===(u="function"===typeof(h=g.payload)?h.call(p,d,u):h)||void 0===u)break e;d=o({},d,u);break e;case 2:aa=!0}}null!==i.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[i]:u.push(i))}else p={eventTime:p,lane:u,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,l|=u;if(null===(i=i.next)){if(null===(u=a.shared.pending))break;i=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(c=d),a.baseState=c,a.firstBaseUpdate=s,a.lastBaseUpdate=f,ql|=l,e.lanes=l,e.memoizedState=d}}function da(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],o=n.callback;if(null!==o){if(n.callback=null,n=r,"function"!==typeof o)throw Error(i(191,o));o.call(n)}}}var pa=(new n.Component).refs;function ha(e,t,r,n){r=null===(r=r(n,t=e.memoizedState))||void 0===r?t:o({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var ga={isMounted:function(e){return!!(e=e._reactInternals)&&Ke(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=cu(),o=su(e),a=ua(n,o);a.payload=t,void 0!==r&&null!==r&&(a.callback=r),ca(e,a),fu(e,o,n)},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=cu(),o=su(e),a=ua(n,o);a.tag=1,a.payload=t,void 0!==r&&null!==r&&(a.callback=r),ca(e,a),fu(e,o,n)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=cu(),n=su(e),o=ua(r,n);o.tag=2,void 0!==t&&null!==t&&(o.callback=t),ca(e,o),fu(e,n,r)}};function va(e,t,r,n,o,a,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!cn(r,n)||!cn(o,a))}function ma(e,t,r){var n=!1,o=co,a=t.contextType;return"object"===typeof a&&null!==a?a=oa(a):(o=go(t)?po:so.current,a=(n=null!==(n=t.contextTypes)&&void 0!==n)?ho(e,o):co),t=new t(r,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ga,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ya(e,t,r,n){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&ga.enqueueReplaceState(t,t.state,null)}function ba(e,t,r,n){var o=e.stateNode;o.props=r,o.state=e.memoizedState,o.refs=pa,ia(e);var a=t.contextType;"object"===typeof a&&null!==a?o.context=oa(a):(a=go(t)?po:so.current,o.context=ho(e,a)),fa(e,r,o,n),o.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(ha(e,t,a,r),o.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof o.getSnapshotBeforeUpdate||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||(t=o.state,"function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ga.enqueueReplaceState(o,o.state,null),fa(e,r,o,n),o.state=e.memoizedState),"function"===typeof o.componentDidMount&&(e.flags|=4)}var wa=Array.isArray;function ka(e,t,r){if(null!==(e=r.ref)&&"function"!==typeof e&&"object"!==typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(i(309));var n=r.stateNode}if(!n)throw Error(i(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=n.refs;t===pa&&(t=n.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!==typeof e)throw Error(i(284));if(!r._owner)throw Error(i(290,e))}return e}function Ea(e,t){if("textarea"!==e.type)throw Error(i(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function xa(e){function t(t,r){if(e){var n=t.lastEffect;null!==n?(n.nextEffect=r,t.lastEffect=r):t.firstEffect=t.lastEffect=r,r.nextEffect=null,r.flags=8}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Vu(e,t)).index=0,e.sibling=null,e}function a(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.flags=2,r):n:(t.flags=2,r):r}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,r,n){return null===t||6!==t.tag?((t=Gu(r,e.mode,n)).return=e,t):((t=o(t,r)).return=e,t)}function c(e,t,r,n){return null!==t&&t.elementType===r.type?((n=o(t,r.props)).ref=ka(e,t,r),n.return=e,n):((n=Hu(r.type,r.key,r.props,null,e.mode,n)).ref=ka(e,t,r),n.return=e,n)}function s(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Qu(r,e.mode,n)).return=e,t):((t=o(t,r.children||[])).return=e,t)}function f(e,t,r,n,a){return null===t||7!==t.tag?((t=Wu(r,e.mode,n,a)).return=e,t):((t=o(t,r)).return=e,t)}function d(e,t,r){if("string"===typeof t||"number"===typeof t)return(t=Gu(""+t,e.mode,r)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case E:return(r=Hu(t.type,t.key,t.props,null,e.mode,r)).ref=ka(e,null,t),r.return=e,r;case x:return(t=Qu(t,e.mode,r)).return=e,t}if(wa(t)||B(t))return(t=Wu(t,e.mode,r,null)).return=e,t;Ea(e,t)}return null}function p(e,t,r,n){var o=null!==t?t.key:null;if("string"===typeof r||"number"===typeof r)return null!==o?null:u(e,t,""+r,n);if("object"===typeof r&&null!==r){switch(r.$$typeof){case E:return r.key===o?r.type===S?f(e,t,r.props.children,n,o):c(e,t,r,n):null;case x:return r.key===o?s(e,t,r,n):null}if(wa(r)||B(r))return null!==o?null:f(e,t,r,n,null);Ea(e,r)}return null}function h(e,t,r,n,o){if("string"===typeof n||"number"===typeof n)return u(t,e=e.get(r)||null,""+n,o);if("object"===typeof n&&null!==n){switch(n.$$typeof){case E:return e=e.get(null===n.key?r:n.key)||null,n.type===S?f(t,e,n.props.children,o,n.key):c(t,e,n,o);case x:return s(t,e=e.get(null===n.key?r:n.key)||null,n,o)}if(wa(n)||B(n))return f(t,e=e.get(r)||null,n,o,null);Ea(t,n)}return null}function g(o,i,l,u){for(var c=null,s=null,f=i,g=i=0,v=null;null!==f&&g<l.length;g++){f.index>g?(v=f,f=null):v=f.sibling;var m=p(o,f,l[g],u);if(null===m){null===f&&(f=v);break}e&&f&&null===m.alternate&&t(o,f),i=a(m,i,g),null===s?c=m:s.sibling=m,s=m,f=v}if(g===l.length)return r(o,f),c;if(null===f){for(;g<l.length;g++)null!==(f=d(o,l[g],u))&&(i=a(f,i,g),null===s?c=f:s.sibling=f,s=f);return c}for(f=n(o,f);g<l.length;g++)null!==(v=h(f,o,g,l[g],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?g:v.key),i=a(v,i,g),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(o,e)})),c}function v(o,l,u,c){var s=B(u);if("function"!==typeof s)throw Error(i(150));if(null==(u=s.call(u)))throw Error(i(151));for(var f=s=null,g=l,v=l=0,m=null,y=u.next();null!==g&&!y.done;v++,y=u.next()){g.index>v?(m=g,g=null):m=g.sibling;var b=p(o,g,y.value,c);if(null===b){null===g&&(g=m);break}e&&g&&null===b.alternate&&t(o,g),l=a(b,l,v),null===f?s=b:f.sibling=b,f=b,g=m}if(y.done)return r(o,g),s;if(null===g){for(;!y.done;v++,y=u.next())null!==(y=d(o,y.value,c))&&(l=a(y,l,v),null===f?s=y:f.sibling=y,f=y);return s}for(g=n(o,g);!y.done;v++,y=u.next())null!==(y=h(g,o,v,y.value,c))&&(e&&null!==y.alternate&&g.delete(null===y.key?v:y.key),l=a(y,l,v),null===f?s=y:f.sibling=y,f=y);return e&&g.forEach((function(e){return t(o,e)})),s}return function(e,n,a,u){var c="object"===typeof a&&null!==a&&a.type===S&&null===a.key;c&&(a=a.props.children);var s="object"===typeof a&&null!==a;if(s)switch(a.$$typeof){case E:e:{for(s=a.key,c=n;null!==c;){if(c.key===s){switch(c.tag){case 7:if(a.type===S){r(e,c.sibling),(n=o(c,a.props.children)).return=e,e=n;break e}break;default:if(c.elementType===a.type){r(e,c.sibling),(n=o(c,a.props)).ref=ka(e,c,a),n.return=e,e=n;break e}}r(e,c);break}t(e,c),c=c.sibling}a.type===S?((n=Wu(a.props.children,e.mode,u,a.key)).return=e,e=n):((u=Hu(a.type,a.key,a.props,null,e.mode,u)).ref=ka(e,n,a),u.return=e,e=u)}return l(e);case x:e:{for(c=a.key;null!==n;){if(n.key===c){if(4===n.tag&&n.stateNode.containerInfo===a.containerInfo&&n.stateNode.implementation===a.implementation){r(e,n.sibling),(n=o(n,a.children||[])).return=e,e=n;break e}r(e,n);break}t(e,n),n=n.sibling}(n=Qu(a,e.mode,u)).return=e,e=n}return l(e)}if("string"===typeof a||"number"===typeof a)return a=""+a,null!==n&&6===n.tag?(r(e,n.sibling),(n=o(n,a)).return=e,e=n):(r(e,n),(n=Gu(a,e.mode,u)).return=e,e=n),l(e);if(wa(a))return g(e,n,a,u);if(B(a))return v(e,n,a,u);if(s&&Ea(e,a),"undefined"===typeof a&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(i(152,G(e.type)||"Component"))}return r(e,n)}}var Sa=xa(!0),_a=xa(!1),Ta={},Ca=io(Ta),Oa=io(Ta),Pa=io(Ta);function Ra(e){if(e===Ta)throw Error(i(174));return e}function Na(e,t){switch(uo(Pa,t),uo(Oa,e),uo(Ca,Ta),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:he(null,"");break;default:t=he(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}lo(Ca),uo(Ca,t)}function La(){lo(Ca),lo(Oa),lo(Pa)}function Aa(e){Ra(Pa.current);var t=Ra(Ca.current),r=he(t,e.type);t!==r&&(uo(Oa,e),uo(Ca,r))}function Ia(e){Oa.current===e&&(lo(Ca),lo(Oa))}var ja=io(0);function Ma(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Da=null,qa=null,za=!1;function Ua(e,t){var r=Fu(5,null,null,0);r.elementType="DELETED",r.type="DELETED",r.stateNode=t,r.return=e,r.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=r,e.lastEffect=r):e.firstEffect=e.lastEffect=r}function Fa(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ba(e){if(za){var t=qa;if(t){var r=t;if(!Fa(e,t)){if(!(t=Wn(r.nextSibling))||!Fa(e,t))return e.flags=-1025&e.flags|2,za=!1,void(Da=e);Ua(Da,r)}Da=e,qa=Wn(t.firstChild)}else e.flags=-1025&e.flags|2,za=!1,Da=e}}function Va(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Da=e}function Ha(e){if(e!==Da)return!1;if(!za)return Va(e),za=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Fn(t,e.memoizedProps))for(t=qa;t;)Ua(e,t),t=Wn(t.nextSibling);if(Va(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){qa=Wn(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}qa=null}}else qa=Da?Wn(e.stateNode.nextSibling):null;return!0}function Wa(){qa=Da=null,za=!1}var $a=[];function Ga(){for(var e=0;e<$a.length;e++)$a[e]._workInProgressVersionPrimary=null;$a.length=0}var Qa=k.ReactCurrentDispatcher,Ya=k.ReactCurrentBatchConfig,Ka=0,Xa=null,Ja=null,Za=null,ei=!1,ti=!1;function ri(){throw Error(i(321))}function ni(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!ln(e[r],t[r]))return!1;return!0}function oi(e,t,r,n,o,a){if(Ka=a,Xa=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Qa.current=null===e||null===e.memoizedState?Ri:Ni,e=r(n,o),ti){a=0;do{if(ti=!1,!(25>a))throw Error(i(301));a+=1,Za=Ja=null,t.updateQueue=null,Qa.current=Li,e=r(n,o)}while(ti)}if(Qa.current=Pi,t=null!==Ja&&null!==Ja.next,Ka=0,Za=Ja=Xa=null,ei=!1,t)throw Error(i(300));return e}function ai(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Za?Xa.memoizedState=Za=e:Za=Za.next=e,Za}function ii(){if(null===Ja){var e=Xa.alternate;e=null!==e?e.memoizedState:null}else e=Ja.next;var t=null===Za?Xa.memoizedState:Za.next;if(null!==t)Za=t,Ja=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Ja=e).memoizedState,baseState:Ja.baseState,baseQueue:Ja.baseQueue,queue:Ja.queue,next:null},null===Za?Xa.memoizedState=Za=e:Za=Za.next=e}return Za}function li(e,t){return"function"===typeof t?t(e):t}function ui(e){var t=ii(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=Ja,o=n.baseQueue,a=r.pending;if(null!==a){if(null!==o){var l=o.next;o.next=a.next,a.next=l}n.baseQueue=o=a,r.pending=null}if(null!==o){o=o.next,n=n.baseState;var u=l=a=null,c=o;do{var s=c.lane;if((Ka&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),n=c.eagerReducer===e?c.eagerState:e(n,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=f,a=n):u=u.next=f,Xa.lanes|=s,ql|=s}c=c.next}while(null!==c&&c!==o);null===u?a=n:u.next=l,ln(n,t.memoizedState)||(Ii=!0),t.memoizedState=n,t.baseState=a,t.baseQueue=u,r.lastRenderedState=n}return[t.memoizedState,r.dispatch]}function ci(e){var t=ii(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=r.dispatch,o=r.pending,a=t.memoizedState;if(null!==o){r.pending=null;var l=o=o.next;do{a=e(a,l.action),l=l.next}while(l!==o);ln(a,t.memoizedState)||(Ii=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),r.lastRenderedState=a}return[a,n]}function si(e,t,r){var n=t._getVersion;n=n(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===n:(e=e.mutableReadLanes,(e=(Ka&e)===e)&&(t._workInProgressVersionPrimary=n,$a.push(t))),e)return r(t._source);throw $a.push(t),Error(i(350))}function fi(e,t,r,n){var o=Rl;if(null===o)throw Error(i(349));var a=t._getVersion,l=a(t._source),u=Qa.current,c=u.useState((function(){return si(o,t,r)})),s=c[1],f=c[0];c=Za;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,g=d.source;d=d.subscribe;var v=Xa;return e.memoizedState={refs:p,source:t,subscribe:n},u.useEffect((function(){p.getSnapshot=r,p.setSnapshot=s;var e=a(t._source);if(!ln(l,e)){e=r(t._source),ln(f,e)||(s(e),e=su(v),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var n=o.entanglements,i=e;0<i;){var u=31-Ht(i),c=1<<u;n[u]|=e,i&=~c}}}),[r,t,n]),u.useEffect((function(){return n(t._source,(function(){var e=p.getSnapshot,r=p.setSnapshot;try{r(e(t._source));var n=su(v);o.mutableReadLanes|=n&o.pendingLanes}catch(e){r((function(){throw e}))}}))}),[t,n]),ln(h,r)&&ln(g,t)&&ln(d,n)||((e={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:f}).dispatch=s=Oi.bind(null,Xa,e),c.queue=e,c.baseQueue=null,f=si(o,t,r),c.memoizedState=c.baseState=f),f}function di(e,t,r){return fi(ii(),e,t,r)}function pi(e){var t=ai();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:li,lastRenderedState:e}).dispatch=Oi.bind(null,Xa,e),[t.memoizedState,e]}function hi(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=Xa.updateQueue)?(t={lastEffect:null},Xa.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function gi(e){return e={current:e},ai().memoizedState=e}function vi(){return ii().memoizedState}function mi(e,t,r,n){var o=ai();Xa.flags|=e,o.memoizedState=hi(1|t,r,void 0,void 0===n?null:n)}function yi(e,t,r,n){var o=ii();n=void 0===n?null:n;var a=void 0;if(null!==Ja){var i=Ja.memoizedState;if(a=i.destroy,null!==n&&ni(n,i.deps))return void hi(t,r,a,n)}Xa.flags|=e,o.memoizedState=hi(1|t,r,a,n)}function bi(e,t){return mi(516,4,e,t)}function wi(e,t){return yi(516,4,e,t)}function ki(e,t){return yi(4,2,e,t)}function Ei(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function xi(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,yi(4,2,Ei.bind(null,t,e),r)}function Si(){}function _i(e,t){var r=ii();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ni(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function Ti(e,t){var r=ii();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&ni(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function Ci(e,t){var r=Bo();Ho(98>r?98:r,(function(){e(!0)})),Ho(97<r?97:r,(function(){var r=Ya.transition;Ya.transition=1;try{e(!1),t()}finally{Ya.transition=r}}))}function Oi(e,t,r){var n=cu(),o=su(e),a={lane:o,action:r,eagerReducer:null,eagerState:null,next:null},i=t.pending;if(null===i?a.next=a:(a.next=i.next,i.next=a),t.pending=a,i=e.alternate,e===Xa||null!==i&&i===Xa)ti=ei=!0;else{if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=i(l,r);if(a.eagerReducer=i,a.eagerState=u,ln(u,l))return}catch(e){}fu(e,o,n)}}var Pi={readContext:oa,useCallback:ri,useContext:ri,useEffect:ri,useImperativeHandle:ri,useLayoutEffect:ri,useMemo:ri,useReducer:ri,useRef:ri,useState:ri,useDebugValue:ri,useDeferredValue:ri,useTransition:ri,useMutableSource:ri,useOpaqueIdentifier:ri,unstable_isNewReconciler:!1},Ri={readContext:oa,useCallback:function(e,t){return ai().memoizedState=[e,void 0===t?null:t],e},useContext:oa,useEffect:bi,useImperativeHandle:function(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,mi(4,2,Ei.bind(null,t,e),r)},useLayoutEffect:function(e,t){return mi(4,2,e,t)},useMemo:function(e,t){var r=ai();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=ai();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Oi.bind(null,Xa,e),[n.memoizedState,e]},useRef:gi,useState:pi,useDebugValue:Si,useDeferredValue:function(e){var t=pi(e),r=t[0],n=t[1];return bi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=pi(!1),t=e[0];return gi(e=Ci.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,r){var n=ai();return n.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:r},fi(n,e,t,r)},useOpaqueIdentifier:function(){if(za){var e=!1,t=function(e){return{$$typeof:j,toString:e,valueOf:e}}((function(){throw e||(e=!0,r("r:"+(Gn++).toString(36))),Error(i(355))})),r=pi(t)[1];return 0===(2&Xa.mode)&&(Xa.flags|=516,hi(5,(function(){r("r:"+(Gn++).toString(36))}),void 0,null)),t}return pi(t="r:"+(Gn++).toString(36)),t},unstable_isNewReconciler:!1},Ni={readContext:oa,useCallback:_i,useContext:oa,useEffect:wi,useImperativeHandle:xi,useLayoutEffect:ki,useMemo:Ti,useReducer:ui,useRef:vi,useState:function(){return ui(li)},useDebugValue:Si,useDeferredValue:function(e){var t=ui(li),r=t[0],n=t[1];return wi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=ui(li)[0];return[vi().current,e]},useMutableSource:di,useOpaqueIdentifier:function(){return ui(li)[0]},unstable_isNewReconciler:!1},Li={readContext:oa,useCallback:_i,useContext:oa,useEffect:wi,useImperativeHandle:xi,useLayoutEffect:ki,useMemo:Ti,useReducer:ci,useRef:vi,useState:function(){return ci(li)},useDebugValue:Si,useDeferredValue:function(e){var t=ci(li),r=t[0],n=t[1];return wi((function(){var t=Ya.transition;Ya.transition=1;try{n(e)}finally{Ya.transition=t}}),[e]),r},useTransition:function(){var e=ci(li)[0];return[vi().current,e]},useMutableSource:di,useOpaqueIdentifier:function(){return ci(li)[0]},unstable_isNewReconciler:!1},Ai=k.ReactCurrentOwner,Ii=!1;function ji(e,t,r,n){t.child=null===e?_a(t,null,r,n):Sa(t,e.child,r,n)}function Mi(e,t,r,n,o){r=r.render;var a=t.ref;return na(t,o),n=oi(e,t,r,n,a,o),null===e||Ii?(t.flags|=1,ji(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,rl(e,t,o))}function Di(e,t,r,n,o,a){if(null===e){var i=r.type;return"function"!==typeof i||Bu(i)||void 0!==i.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Hu(r.type,null,n,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,qi(e,t,i,n,o,a))}return i=e.child,0===(o&a)&&(o=i.memoizedProps,(r=null!==(r=r.compare)?r:cn)(o,n)&&e.ref===t.ref)?rl(e,t,a):(t.flags|=1,(e=Vu(i,n)).ref=t.ref,e.return=t,t.child=e)}function qi(e,t,r,n,o,a){if(null!==e&&cn(e.memoizedProps,n)&&e.ref===t.ref){if(Ii=!1,0===(a&o))return t.lanes=e.lanes,rl(e,t,a);0!==(16384&e.flags)&&(Ii=!0)}return Fi(e,t,r,n,a)}function zi(e,t,r){var n=t.pendingProps,o=n.children,a=null!==e?e.memoizedState:null;if("hidden"===n.mode||"unstable-defer-without-hiding"===n.mode)if(0===(4&t.mode))t.memoizedState={baseLanes:0},bu(t,r);else{if(0===(1073741824&r))return e=null!==a?a.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},bu(t,e),null;t.memoizedState={baseLanes:0},bu(t,null!==a?a.baseLanes:r)}else null!==a?(n=a.baseLanes|r,t.memoizedState=null):n=r,bu(t,n);return ji(e,t,o,r),t.child}function Ui(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=128)}function Fi(e,t,r,n,o){var a=go(r)?po:so.current;return a=ho(t,a),na(t,o),r=oi(e,t,r,n,a,o),null===e||Ii?(t.flags|=1,ji(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,rl(e,t,o))}function Bi(e,t,r,n,o){if(go(r)){var a=!0;bo(t)}else a=!1;if(na(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ma(t,r,n),ba(t,r,n,o),n=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=r.contextType;"object"===typeof c&&null!==c?c=oa(c):c=ho(t,c=go(r)?po:so.current);var s=r.getDerivedStateFromProps,f="function"===typeof s||"function"===typeof i.getSnapshotBeforeUpdate;f||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==n||u!==c)&&ya(t,i,n,c),aa=!1;var d=t.memoizedState;i.state=d,fa(t,n,i,o),u=t.memoizedState,l!==n||d!==u||fo.current||aa?("function"===typeof s&&(ha(t,r,s,n),u=t.memoizedState),(l=aa||va(t,r,l,n,d,u,c))?(f||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4)):("function"===typeof i.componentDidMount&&(t.flags|=4),t.memoizedProps=n,t.memoizedState=u),i.props=n,i.state=u,i.context=c,n=l):("function"===typeof i.componentDidMount&&(t.flags|=4),n=!1)}else{i=t.stateNode,la(e,t),l=t.memoizedProps,c=t.type===t.elementType?l:Yo(t.type,l),i.props=c,f=t.pendingProps,d=i.context,"object"===typeof(u=r.contextType)&&null!==u?u=oa(u):u=ho(t,u=go(r)?po:so.current);var p=r.getDerivedStateFromProps;(s="function"===typeof p||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(l!==f||d!==u)&&ya(t,i,n,u),aa=!1,d=t.memoizedState,i.state=d,fa(t,n,i,o);var h=t.memoizedState;l!==f||d!==h||fo.current||aa?("function"===typeof p&&(ha(t,r,p,n),h=t.memoizedState),(c=aa||va(t,r,c,n,d,h,u))?(s||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(n,h,u),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,h,u)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=n,t.memoizedState=h),i.props=n,i.state=h,i.context=u,n=c):("function"!==typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),n=!1)}return Vi(e,t,r,n,a,o)}function Vi(e,t,r,n,o,a){Ui(e,t);var i=0!==(64&t.flags);if(!n&&!i)return o&&wo(t,r,!1),rl(e,t,a);n=t.stateNode,Ai.current=t;var l=i&&"function"!==typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&i?(t.child=Sa(t,e.child,null,a),t.child=Sa(t,null,l,a)):ji(e,t,l,a),t.memoizedState=n.state,o&&wo(t,r,!0),t.child}function Hi(e){var t=e.stateNode;t.pendingContext?mo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&mo(0,t.context,!1),Na(e,t.containerInfo)}var Wi,$i,Gi,Qi={dehydrated:null,retryLane:0};function Yi(e,t,r){var n,o=t.pendingProps,a=ja.current,i=!1;return(n=0!==(64&t.flags))||(n=(null===e||null!==e.memoizedState)&&0!==(2&a)),n?(i=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),uo(ja,1&a),null===e?(void 0!==o.fallback&&Ba(t),e=o.children,a=o.fallback,i?(e=Ki(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Qi,e):"number"===typeof o.unstable_expectedLoadTime?(e=Ki(t,e,a,r),t.child.memoizedState={baseLanes:r},t.memoizedState=Qi,t.lanes=33554432,e):((r=$u({mode:"visible",children:e},t.mode,r,null)).return=t,t.child=r)):(e.memoizedState,i?(o=Ji(e,t,o.children,o.fallback,r),i=t.child,a=e.child.memoizedState,i.memoizedState=null===a?{baseLanes:r}:{baseLanes:a.baseLanes|r},i.childLanes=e.childLanes&~r,t.memoizedState=Qi,o):(r=Xi(e,t,o.children,r),t.memoizedState=null,r))}function Ki(e,t,r,n){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0===(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=$u(t,o,0,null),r=Wu(r,o,n,null),a.return=e,r.return=e,a.sibling=r,e.child=a,r}function Xi(e,t,r,n){var o=e.child;return e=o.sibling,r=Vu(o,{mode:"visible",children:r}),0===(2&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=r}function Ji(e,t,r,n,o){var a=t.mode,i=e.child;e=i.sibling;var l={mode:"hidden",children:r};return 0===(2&a)&&t.child!==i?((r=t.child).childLanes=0,r.pendingProps=l,null!==(i=r.lastEffect)?(t.firstEffect=r.firstEffect,t.lastEffect=i,i.nextEffect=null):t.firstEffect=t.lastEffect=null):r=Vu(i,l),null!==e?n=Vu(e,n):(n=Wu(n,a,o,null)).flags|=2,n.return=t,r.return=t,r.sibling=n,t.child=r,n}function Zi(e,t){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),ra(e.return,t)}function el(e,t,r,n,o,a){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:o,lastEffect:a}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=n,i.tail=r,i.tailMode=o,i.lastEffect=a)}function tl(e,t,r){var n=t.pendingProps,o=n.revealOrder,a=n.tail;if(ji(e,t,n.children,r),0!==(2&(n=ja.current)))n=1&n|2,t.flags|=64;else{if(null!==e&&0!==(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Zi(e,r);else if(19===e.tag)Zi(e,r);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(uo(ja,n),0===(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(r=t.child,o=null;null!==r;)null!==(e=r.alternate)&&null===Ma(e)&&(o=r),r=r.sibling;null===(r=o)?(o=t.child,t.child=null):(o=r.sibling,r.sibling=null),el(t,!1,o,r,a,t.lastEffect);break;case"backwards":for(r=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Ma(e)){t.child=o;break}e=o.sibling,o.sibling=r,r=o,o=e}el(t,!0,r,null,a,t.lastEffect);break;case"together":el(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function rl(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),ql|=t.lanes,0!==(r&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(r=Vu(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Vu(e,e.pendingProps)).return=t;r.sibling=null}return t.child}return null}function nl(e,t){if(!za)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function ol(e,t,r){var n=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return go(t.type)&&vo(),null;case 3:return La(),lo(fo),lo(so),Ga(),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(Ha(t)?t.flags|=4:n.hydrate||(t.flags|=256)),null;case 5:Ia(t);var a=Ra(Pa.current);if(r=t.type,null!==e&&null!=t.stateNode)$i(e,t,r,n),e.ref!==t.ref&&(t.flags|=128);else{if(!n){if(null===t.stateNode)throw Error(i(166));return null}if(e=Ra(Ca.current),Ha(t)){n=t.stateNode,r=t.type;var l=t.memoizedProps;switch(n[Yn]=t,n[Kn]=l,r){case"dialog":Cn("cancel",n),Cn("close",n);break;case"iframe":case"object":case"embed":Cn("load",n);break;case"video":case"audio":for(e=0;e<xn.length;e++)Cn(xn[e],n);break;case"source":Cn("error",n);break;case"img":case"image":case"link":Cn("error",n),Cn("load",n);break;case"details":Cn("toggle",n);break;case"input":ee(n,l),Cn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!l.multiple},Cn("invalid",n);break;case"textarea":ue(n,l),Cn("invalid",n)}for(var c in Se(r,l),e=null,l)l.hasOwnProperty(c)&&(a=l[c],"children"===c?"string"===typeof a?n.textContent!==a&&(e=["children",a]):"number"===typeof a&&n.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(c)&&null!=a&&"onScroll"===c&&Cn("scroll",n));switch(r){case"input":K(n),ne(n,l,!0);break;case"textarea":K(n),se(n);break;case"select":case"option":break;default:"function"===typeof l.onClick&&(n.onclick=Dn)}n=e,t.updateQueue=n,null!==n&&(t.flags|=4)}else{switch(c=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=pe(r)),e===fe?"script"===r?((e=c.createElement("div")).innerHTML="<script><\\/script>",e=e.removeChild(e.firstChild)):"string"===typeof n.is?e=c.createElement(r,{is:n.is}):(e=c.createElement(r),"select"===r&&(c=e,n.multiple?c.multiple=!0:n.size&&(c.size=n.size))):e=c.createElementNS(e,r),e[Yn]=t,e[Kn]=n,Wi(e,t),t.stateNode=e,c=_e(r,n),r){case"dialog":Cn("cancel",e),Cn("close",e),a=n;break;case"iframe":case"object":case"embed":Cn("load",e),a=n;break;case"video":case"audio":for(a=0;a<xn.length;a++)Cn(xn[a],e);a=n;break;case"source":Cn("error",e),a=n;break;case"img":case"image":case"link":Cn("error",e),Cn("load",e),a=n;break;case"details":Cn("toggle",e),a=n;break;case"input":ee(e,n),a=Z(e,n),Cn("invalid",e);break;case"option":a=ae(e,n);break;case"select":e._wrapperState={wasMultiple:!!n.multiple},a=o({},n,{value:void 0}),Cn("invalid",e);break;case"textarea":ue(e,n),a=le(e,n),Cn("invalid",e);break;default:a=n}Se(r,a);var s=a;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?Ee(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&me(e,f):"children"===l?"string"===typeof f?("textarea"!==r||""!==f)&&ye(e,f):"number"===typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=f&&"onScroll"===l&&Cn("scroll",e):null!=f&&w(e,l,f,c))}switch(r){case"input":K(e),ne(e,n,!1);break;case"textarea":K(e),se(e);break;case"option":null!=n.value&&e.setAttribute("value",""+Q(n.value));break;case"select":e.multiple=!!n.multiple,null!=(l=n.value)?ie(e,!!n.multiple,l,!1):null!=n.defaultValue&&ie(e,!!n.multiple,n.defaultValue,!0);break;default:"function"===typeof a.onClick&&(e.onclick=Dn)}Un(r,n)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Gi(0,t,e.memoizedProps,n);else{if("string"!==typeof n&&null===t.stateNode)throw Error(i(166));r=Ra(Pa.current),Ra(Ca.current),Ha(t)?(n=t.stateNode,r=t.memoizedProps,n[Yn]=t,n.nodeValue!==r&&(t.flags|=4)):((n=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[Yn]=t,t.stateNode=n)}return null;case 13:return lo(ja),n=t.memoizedState,0!==(64&t.flags)?(t.lanes=r,t):(n=null!==n,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ha(t):r=null!==e.memoizedState,n&&!r&&0!==(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!==(1&ja.current)?0===jl&&(jl=3):(0!==jl&&3!==jl||(jl=4),null===Rl||0===(134217727&ql)&&0===(134217727&zl)||gu(Rl,Ll))),(n||r)&&(t.flags|=4),null);case 4:return La(),null===e&&Pn(t.stateNode.containerInfo),null;case 10:return ta(t),null;case 17:return go(t.type)&&vo(),null;case 19:if(lo(ja),null===(n=t.memoizedState))return null;if(l=0!==(64&t.flags),null===(c=n.rendering))if(l)nl(n,!1);else{if(0!==jl||null!==e&&0!==(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Ma(e))){for(t.flags|=64,nl(n,!1),null!==(l=c.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===n.lastEffect&&(t.firstEffect=null),t.lastEffect=n.lastEffect,n=r,r=t.child;null!==r;)e=n,(l=r).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(c=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=c.childLanes,l.lanes=c.lanes,l.child=c.child,l.memoizedProps=c.memoizedProps,l.memoizedState=c.memoizedState,l.updateQueue=c.updateQueue,l.type=c.type,e=c.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return uo(ja,1&ja.current|2),t.child}e=e.sibling}null!==n.tail&&Fo()>Vl&&(t.flags|=64,l=!0,nl(n,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=Ma(c))){if(t.flags|=64,l=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),nl(n,!0),null===n.tail&&"hidden"===n.tailMode&&!c.alternate&&!za)return null!==(t=t.lastEffect=n.lastEffect)&&(t.nextEffect=null),null}else 2*Fo()-n.renderingStartTime>Vl&&1073741824!==r&&(t.flags|=64,l=!0,nl(n,!1),t.lanes=33554432);n.isBackwards?(c.sibling=t.child,t.child=c):(null!==(r=n.last)?r.sibling=c:t.child=c,n.last=c)}return null!==n.tail?(r=n.tail,n.rendering=r,n.tail=r.sibling,n.lastEffect=t.lastEffect,n.renderingStartTime=Fo(),r.sibling=null,t=ja.current,uo(ja,l?1&t|2:1&t),r):null;case 23:case 24:return wu(),null!==e&&null!==e.memoizedState!==(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==n.mode&&(t.flags|=4),null}throw Error(i(156,t.tag))}function al(e){switch(e.tag){case 1:go(e.type)&&vo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(La(),lo(fo),lo(so),Ga(),0!==(64&(t=e.flags)))throw Error(i(285));return e.flags=-4097&t|64,e;case 5:return Ia(e),null;case 13:return lo(ja),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return lo(ja),null;case 4:return La(),null;case 10:return ta(e),null;case 23:case 24:return wu(),null;default:return null}}function il(e,t){try{var r="",n=t;do{r+=$(n),n=n.return}while(n);var o=r}catch(e){o="\\nError generating stack: "+e.message+"\\n"+e.stack}return{value:e,source:t,stack:o}}function ll(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Wi=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},$i=function(e,t,r,n){var a=e.memoizedProps;if(a!==n){e=t.stateNode,Ra(Ca.current);var i,l=null;switch(r){case"input":a=Z(e,a),n=Z(e,n),l=[];break;case"option":a=ae(e,a),n=ae(e,n),l=[];break;case"select":a=o({},a,{value:void 0}),n=o({},n,{value:void 0}),l=[];break;case"textarea":a=le(e,a),n=le(e,n),l=[];break;default:"function"!==typeof a.onClick&&"function"===typeof n.onClick&&(e.onclick=Dn)}for(f in Se(r,n),r=null,a)if(!n.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var c=a[f];for(i in c)c.hasOwnProperty(i)&&(r||(r={}),r[i]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?l||(l=[]):(l=l||[]).push(f,null));for(f in n){var s=n[f];if(c=null!=a?a[f]:void 0,n.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(i in c)!c.hasOwnProperty(i)||s&&s.hasOwnProperty(i)||(r||(r={}),r[i]="");for(i in s)s.hasOwnProperty(i)&&c[i]!==s[i]&&(r||(r={}),r[i]=s[i])}else r||(l||(l=[]),l.push(f,r)),r=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(l=l||[]).push(f,s)):"children"===f?"string"!==typeof s&&"number"!==typeof s||(l=l||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Cn("scroll",e),l||c===s||(l=[])):"object"===typeof s&&null!==s&&s.$$typeof===j?s.toString():(l=l||[]).push(f,s))}r&&(l=l||[]).push("style",r);var f=l;(t.updateQueue=f)&&(t.flags|=4)}},Gi=function(e,t,r,n){r!==n&&(t.flags|=4)};var ul="function"===typeof WeakMap?WeakMap:Map;function cl(e,t,r){(r=ua(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){Gl||(Gl=!0,Ql=n),ll(0,t)},r}function sl(e,t,r){(r=ua(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"===typeof n){var o=t.value;r.payload=function(){return ll(0,t),n(o)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(r.callback=function(){"function"!==typeof n&&(null===Yl?Yl=new Set([this]):Yl.add(this),ll(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}var fl="function"===typeof WeakSet?WeakSet:Set;function dl(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(t){Du(e,t)}else t.current=null}function pl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var r=e.memoizedProps,n=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?r:Yo(t.type,r),n),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Hn(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(i(163))}function hl(e,t,r){switch(r.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3===(3&e.tag)){var n=e.create;e.destroy=n()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=r.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;n=o.next,0!==(4&(o=o.tag))&&0!==(1&o)&&(Iu(r,e),Au(r,e)),e=n}while(e!==t)}return;case 1:return e=r.stateNode,4&r.flags&&(null===t?e.componentDidMount():(n=r.elementType===r.type?t.memoizedProps:Yo(r.type,t.memoizedProps),e.componentDidUpdate(n,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=r.updateQueue)&&da(r,t,e));case 3:if(null!==(t=r.updateQueue)){if(e=null,null!==r.child)switch(r.child.tag){case 5:e=r.child.stateNode;break;case 1:e=r.child.stateNode}da(r,t,e)}return;case 5:return e=r.stateNode,void(null===t&&4&r.flags&&Un(r.type,r.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===r.memoizedState&&(r=r.alternate,null!==r&&(r=r.memoizedState,null!==r&&(r=r.dehydrated,null!==r&&Et(r)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(i(163))}function gl(e,t){for(var r=e;;){if(5===r.tag){var n=r.stateNode;if(t)"function"===typeof(n=n.style).setProperty?n.setProperty("display","none","important"):n.display="none";else{n=r.stateNode;var o=r.memoizedProps.style;o=void 0!==o&&null!==o&&o.hasOwnProperty("display")?o.display:null,n.style.display=ke("display",o)}}else if(6===r.tag)r.stateNode.nodeValue=t?"":r.memoizedProps;else if((23!==r.tag&&24!==r.tag||null===r.memoizedState||r===e)&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===e)break;for(;null===r.sibling;){if(null===r.return||r.return===e)return;r=r.return}r.sibling.return=r.return,r=r.sibling}}function vl(e,t){if(Eo&&"function"===typeof Eo.onCommitFiberUnmount)try{Eo.onCommitFiberUnmount(ko,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e=e.next;do{var n=r,o=n.destroy;if(n=n.tag,void 0!==o)if(0!==(4&n))Iu(t,r);else{n=t;try{o()}catch(e){Du(n,e)}}r=r.next}while(r!==e)}break;case 1:if(dl(t),"function"===typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Du(t,e)}break;case 5:dl(t);break;case 4:El(e,t)}}function ml(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function yl(e){return 5===e.tag||3===e.tag||4===e.tag}function bl(e){e:{for(var t=e.return;null!==t;){if(yl(t))break e;t=t.return}throw Error(i(160))}var r=t;switch(t=r.stateNode,r.tag){case 5:var n=!1;break;case 3:case 4:t=t.containerInfo,n=!0;break;default:throw Error(i(161))}16&r.flags&&(ye(t,""),r.flags&=-17);e:t:for(r=e;;){for(;null===r.sibling;){if(null===r.return||yl(r.return)){r=null;break e}r=r.return}for(r.sibling.return=r.return,r=r.sibling;5!==r.tag&&6!==r.tag&&18!==r.tag;){if(2&r.flags)continue t;if(null===r.child||4===r.tag)continue t;r.child.return=r,r=r.child}if(!(2&r.flags)){r=r.stateNode;break e}}n?wl(e,r,t):kl(e,r,t)}function wl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!==(r=r._reactRootContainer)&&void 0!==r||null!==t.onclick||(t.onclick=Dn));else if(4!==n&&null!==(e=e.child))for(wl(e,t,r),e=e.sibling;null!==e;)wl(e,t,r),e=e.sibling}function kl(e,t,r){var n=e.tag,o=5===n||6===n;if(o)e=o?e.stateNode:e.stateNode.instance,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==n&&null!==(e=e.child))for(kl(e,t,r),e=e.sibling;null!==e;)kl(e,t,r),e=e.sibling}function El(e,t){for(var r,n,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(i(160));switch(r=a.stateNode,a.tag){case 5:n=!1;break e;case 3:case 4:r=r.containerInfo,n=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,u=o,c=u;;)if(vl(l,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}n?(l=r,u=o.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,n=!0,o.child.return=o,o=o.child;continue}}else if(vl(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function xl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var n=r=r.next;do{3===(3&n.tag)&&(e=n.destroy,n.destroy=void 0,void 0!==e&&e()),n=n.next}while(n!==r)}return;case 1:return;case 5:if(null!=(r=t.stateNode)){n=t.memoizedProps;var o=null!==e?e.memoizedProps:n;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(r[Kn]=n,"input"===e&&"radio"===n.type&&null!=n.name&&te(r,n),_e(e,o),t=_e(e,n),o=0;o<a.length;o+=2){var l=a[o],u=a[o+1];"style"===l?Ee(r,u):"dangerouslySetInnerHTML"===l?me(r,u):"children"===l?ye(r,u):w(r,l,u,t)}switch(e){case"input":re(r,n);break;case"textarea":ce(r,n);break;case"select":e=r._wrapperState.wasMultiple,r._wrapperState.wasMultiple=!!n.multiple,null!=(a=n.value)?ie(r,!!n.multiple,a,!1):e!==!!n.multiple&&(null!=n.defaultValue?ie(r,!!n.multiple,n.defaultValue,!0):ie(r,!!n.multiple,n.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(i(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((r=t.stateNode).hydrate&&(r.hydrate=!1,Et(r.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Bl=Fo(),gl(t.child,!0)),void Sl(t);case 19:return void Sl(t);case 17:return;case 23:case 24:return void gl(t,null!==t.memoizedState)}throw Error(i(163))}function Sl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new fl),t.forEach((function(t){var n=zu.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}function _l(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&(null!==(t=t.memoizedState)&&null===t.dehydrated)}var Tl=Math.ceil,Cl=k.ReactCurrentDispatcher,Ol=k.ReactCurrentOwner,Pl=0,Rl=null,Nl=null,Ll=0,Al=0,Il=io(0),jl=0,Ml=null,Dl=0,ql=0,zl=0,Ul=0,Fl=null,Bl=0,Vl=1/0;function Hl(){Vl=Fo()+500}var Wl,$l=null,Gl=!1,Ql=null,Yl=null,Kl=!1,Xl=null,Jl=90,Zl=[],eu=[],tu=null,ru=0,nu=null,ou=-1,au=0,iu=0,lu=null,uu=!1;function cu(){return 0!==(48&Pl)?Fo():-1!==ou?ou:ou=Fo()}function su(e){if(0===(2&(e=e.mode)))return 1;if(0===(4&e))return 99===Bo()?1:2;if(0===au&&(au=Dl),0!==Qo.transition){0!==iu&&(iu=null!==Fl?Fl.pendingLanes:0),e=au;var t=4186112&~iu;return 0===(t&=-t)&&(0===(t=(e=4186112&~e)&-e)&&(t=8192)),t}return e=Bo(),0!==(4&Pl)&&98===e?e=Ut(12,au):e=Ut(e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),au),e}function fu(e,t,r){if(50<ru)throw ru=0,nu=null,Error(i(185));if(null===(e=du(e,t)))return null;Vt(e,t,r),e===Rl&&(zl|=t,4===jl&&gu(e,Ll));var n=Bo();1===t?0!==(8&Pl)&&0===(48&Pl)?vu(e):(pu(e,r),0===Pl&&(Hl(),$o())):(0===(4&Pl)||98!==n&&99!==n||(null===tu?tu=new Set([e]):tu.add(e)),pu(e,r)),Fl=e}function du(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}function pu(e,t){for(var r=e.callbackNode,n=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Ht(l),c=1<<u,s=a[u];if(-1===s){if(0===(c&n)||0!==(c&o)){s=t,Dt(c);var f=Mt;a[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);l&=~c}if(n=qt(e,e===Rl?Ll:0),t=Mt,0===n)null!==r&&(r!==jo&&_o(r),e.callbackNode=null,e.callbackPriority=0);else{if(null!==r){if(e.callbackPriority===t)return;r!==jo&&_o(r)}15===t?(r=vu.bind(null,e),null===Do?(Do=[r],qo=So(Ro,Go)):Do.push(r),r=jo):14===t?r=Wo(99,vu.bind(null,e)):r=Wo(r=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(i(358,e))}}(t),hu.bind(null,e)),e.callbackPriority=t,e.callbackNode=r}}function hu(e){if(ou=-1,iu=au=0,0!==(48&Pl))throw Error(i(327));var t=e.callbackNode;if(Lu()&&e.callbackNode!==t)return null;var r=qt(e,e===Rl?Ll:0);if(0===r)return null;var n=r,o=Pl;Pl|=16;var a=xu();for(Rl===e&&Ll===n||(Hl(),ku(e,n));;)try{Tu();break}catch(t){Eu(e,t)}if(ea(),Cl.current=a,Pl=o,null!==Nl?n=0:(Rl=null,Ll=0,n=jl),0!==(Dl&zl))ku(e,0);else if(0!==n){if(2===n&&(Pl|=64,e.hydrate&&(e.hydrate=!1,Hn(e.containerInfo)),0!==(r=zt(e))&&(n=Su(e,r))),1===n)throw t=Ml,ku(e,0),gu(e,r),pu(e,Fo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=r,n){case 0:case 1:throw Error(i(345));case 2:Pu(e);break;case 3:if(gu(e,r),(62914560&r)===r&&10<(n=Bl+500-Fo())){if(0!==qt(e,0))break;if(((o=e.suspendedLanes)&r)!==r){cu(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Bn(Pu.bind(null,e),n);break}Pu(e);break;case 4:if(gu(e,r),(4186112&r)===r)break;for(n=e.eventTimes,o=-1;0<r;){var l=31-Ht(r);a=1<<l,(l=n[l])>o&&(o=l),r&=~a}if(r=o,10<(r=(120>(r=Fo()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Tl(r/1960))-r)){e.timeoutHandle=Bn(Pu.bind(null,e),r);break}Pu(e);break;case 5:Pu(e);break;default:throw Error(i(329))}}return pu(e,Fo()),e.callbackNode===t?hu.bind(null,e):null}function gu(e,t){for(t&=~Ul,t&=~zl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-Ht(t),n=1<<r;e[r]=-1,t&=~n}}function vu(e){if(0!==(48&Pl))throw Error(i(327));if(Lu(),e===Rl&&0!==(e.expiredLanes&Ll)){var t=Ll,r=Su(e,t);0!==(Dl&zl)&&(r=Su(e,t=qt(e,t)))}else r=Su(e,t=qt(e,0));if(0!==e.tag&&2===r&&(Pl|=64,e.hydrate&&(e.hydrate=!1,Hn(e.containerInfo)),0!==(t=zt(e))&&(r=Su(e,t))),1===r)throw r=Ml,ku(e,0),gu(e,t),pu(e,Fo()),r;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Pu(e),pu(e,Fo()),null}function mu(e,t){var r=Pl;Pl|=1;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}}function yu(e,t){var r=Pl;Pl&=-2,Pl|=8;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}}function bu(e,t){uo(Il,Al),Al|=t,Dl|=t}function wu(){Al=Il.current,lo(Il)}function ku(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,Vn(r)),null!==Nl)for(r=Nl.return;null!==r;){var n=r;switch(n.tag){case 1:null!==(n=n.type.childContextTypes)&&void 0!==n&&vo();break;case 3:La(),lo(fo),lo(so),Ga();break;case 5:Ia(n);break;case 4:La();break;case 13:case 19:lo(ja);break;case 10:ta(n);break;case 23:case 24:wu()}r=r.return}Rl=e,Nl=Vu(e.current,null),Ll=Al=Dl=t,jl=0,Ml=null,Ul=zl=ql=0}function Eu(e,t){for(;;){var r=Nl;try{if(ea(),Qa.current=Pi,ei){for(var n=Xa.memoizedState;null!==n;){var o=n.queue;null!==o&&(o.pending=null),n=n.next}ei=!1}if(Ka=0,Za=Ja=Xa=null,ti=!1,Ol.current=null,null===r||null===r.return){jl=1,Ml=t,Nl=null;break}e:{var a=e,i=r.return,l=r,u=t;if(t=Ll,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u;if(0===(2&l.mode)){var s=l.alternate;s?(l.updateQueue=s.updateQueue,l.memoizedState=s.memoizedState,l.lanes=s.lanes):(l.updateQueue=null,l.memoizedState=null)}var f=0!==(1&ja.current),d=i;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var g=d.memoizedProps;p=void 0!==g.fallback&&(!0!==g.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var m=new Set;m.add(c),d.updateQueue=m}else v.add(c);if(0===(2&d.mode)){if(d.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=ua(-1,1);y.tag=2,ca(l,y)}l.lanes|=1;break e}u=void 0,l=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new ul,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(l)){u.add(l);var w=qu.bind(null,a,c,l);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((G(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==jl&&(jl=2),u=il(u,l),d=i;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,sa(d,cl(0,a,t));break e;case 1:a=u;var k=d.type,E=d.stateNode;if(0===(64&d.flags)&&("function"===typeof k.getDerivedStateFromError||null!==E&&"function"===typeof E.componentDidCatch&&(null===Yl||!Yl.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,sa(d,sl(d,a,t));break e}}d=d.return}while(null!==d)}Ou(r)}catch(e){t=e,Nl===r&&null!==r&&(Nl=r=r.return);continue}break}}function xu(){var e=Cl.current;return Cl.current=Pi,null===e?Pi:e}function Su(e,t){var r=Pl;Pl|=16;var n=xu();for(Rl===e&&Ll===t||ku(e,t);;)try{_u();break}catch(t){Eu(e,t)}if(ea(),Pl=r,Cl.current=n,null!==Nl)throw Error(i(261));return Rl=null,Ll=0,jl}function _u(){for(;null!==Nl;)Cu(Nl)}function Tu(){for(;null!==Nl&&!To();)Cu(Nl)}function Cu(e){var t=Wl(e.alternate,e,Al);e.memoizedProps=e.pendingProps,null===t?Ou(e):Nl=t,Ol.current=null}function Ou(e){var t=e;do{var r=t.alternate;if(e=t.return,0===(2048&t.flags)){if(null!==(r=ol(r,t,Al)))return void(Nl=r);if(24!==(r=t).tag&&23!==r.tag||null===r.memoizedState||0!==(1073741824&Al)||0===(4&r.mode)){for(var n=0,o=r.child;null!==o;)n|=o.lanes|o.childLanes,o=o.sibling;r.childLanes=n}null!==e&&0===(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(r=al(t)))return r.flags&=2047,void(Nl=r);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Nl=t);Nl=t=e}while(null!==t);0===jl&&(jl=5)}function Pu(e){var t=Bo();return Ho(99,Ru.bind(null,e,t)),null}function Ru(e,t){do{Lu()}while(null!==Xl);if(0!==(48&Pl))throw Error(i(327));var r=e.finishedWork;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(i(177));e.callbackNode=null;var n=r.lanes|r.childLanes,o=n,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<a;){var c=31-Ht(a),s=1<<c;o[c]=0,l[c]=-1,u[c]=-1,a&=~s}if(null!==tu&&0===(24&n)&&tu.has(e)&&tu.delete(e),e===Rl&&(Nl=Rl=null,Ll=0),1<r.flags?null!==r.lastEffect?(r.lastEffect.nextEffect=r,n=r.firstEffect):n=r:n=r.firstEffect,null!==n){if(o=Pl,Pl|=32,Ol.current=null,qn=Yt,hn(l=pn())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,a=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,g=0,v=l,m=null;t:for(;;){for(var y;v!==u||0!==a&&3!==v.nodeType||(d=f+a),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(y=v.firstChild);)m=v,v=y;for(;;){if(v===l)break t;if(m===u&&++h===a&&(d=f),m===c&&++g===s&&(p=f),null!==(y=v.nextSibling))break;m=(v=m).parentNode}v=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;zn={focusedElem:l,selectionRange:u},Yt=!1,lu=null,uu=!1,$l=n;do{try{Nu()}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);lu=null,$l=n;do{try{for(l=e;null!==$l;){var b=$l.flags;if(16&b&&ye($l.stateNode,""),128&b){var w=$l.alternate;if(null!==w){var k=w.ref;null!==k&&("function"===typeof k?k(null):k.current=null)}}switch(1038&b){case 2:bl($l),$l.flags&=-3;break;case 6:bl($l),$l.flags&=-3,xl($l.alternate,$l);break;case 1024:$l.flags&=-1025;break;case 1028:$l.flags&=-1025,xl($l.alternate,$l);break;case 4:xl($l.alternate,$l);break;case 8:El(l,u=$l);var E=u.alternate;ml(u),null!==E&&ml(E)}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);if(k=zn,w=pn(),b=k.focusedElem,l=k.selectionRange,w!==b&&b&&b.ownerDocument&&dn(b.ownerDocument.documentElement,b)){null!==l&&hn(b)&&(w=l.start,void 0===(k=l.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(l.start,u),l=void 0===l.end?E:Math.min(l.end,u),!k.extend&&E>l&&(u=l,l=E,E=u),u=fn(b,E),a=fn(b,l),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>l?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"===typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Yt=!!qn,zn=qn=null,e.current=r,$l=n;do{try{for(b=e;null!==$l;){var x=$l.flags;if(36&x&&hl(b,$l.alternate,$l),128&x){w=void 0;var S=$l.ref;if(null!==S){var _=$l.stateNode;switch($l.tag){case 5:w=_;break;default:w=_}"function"===typeof S?S(w):S.current=w}}$l=$l.nextEffect}}catch(e){if(null===$l)throw Error(i(330));Du($l,e),$l=$l.nextEffect}}while(null!==$l);$l=null,Mo(),Pl=o}else e.current=r;if(Kl)Kl=!1,Xl=e,Jl=t;else for($l=n;null!==$l;)t=$l.nextEffect,$l.nextEffect=null,8&$l.flags&&((x=$l).sibling=null,x.stateNode=null),$l=t;if(0===(n=e.pendingLanes)&&(Yl=null),1===n?e===nu?ru++:(ru=0,nu=e):ru=0,r=r.stateNode,Eo&&"function"===typeof Eo.onCommitFiberRoot)try{Eo.onCommitFiberRoot(ko,r,void 0,64===(64&r.current.flags))}catch(e){}if(pu(e,Fo()),Gl)throw Gl=!1,e=Ql,Ql=null,e;return 0!==(8&Pl)||$o(),null}function Nu(){for(;null!==$l;){var e=$l.alternate;uu||null===lu||(0!==(8&$l.flags)?et($l,lu)&&(uu=!0):13===$l.tag&&_l(e,$l)&&et($l,lu)&&(uu=!0));var t=$l.flags;0!==(256&t)&&pl(e,$l),0===(512&t)||Kl||(Kl=!0,Wo(97,(function(){return Lu(),null}))),$l=$l.nextEffect}}function Lu(){if(90!==Jl){var e=97<Jl?97:Jl;return Jl=90,Ho(e,ju)}return!1}function Au(e,t){Zl.push(t,e),Kl||(Kl=!0,Wo(97,(function(){return Lu(),null})))}function Iu(e,t){eu.push(t,e),Kl||(Kl=!0,Wo(97,(function(){return Lu(),null})))}function ju(){if(null===Xl)return!1;var e=Xl;if(Xl=null,0!==(48&Pl))throw Error(i(331));var t=Pl;Pl|=32;var r=eu;eu=[];for(var n=0;n<r.length;n+=2){var o=r[n],a=r[n+1],l=o.destroy;if(o.destroy=void 0,"function"===typeof l)try{l()}catch(e){if(null===a)throw Error(i(330));Du(a,e)}}for(r=Zl,Zl=[],n=0;n<r.length;n+=2){o=r[n],a=r[n+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(i(330));Du(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Pl=t,$o(),!0}function Mu(e,t,r){ca(e,t=cl(0,t=il(r,t),1)),t=cu(),null!==(e=du(e,1))&&(Vt(e,1,t),pu(e,t))}function Du(e,t){if(3===e.tag)Mu(e,e,t);else for(var r=e.return;null!==r;){if(3===r.tag){Mu(r,e,t);break}if(1===r.tag){var n=r.stateNode;if("function"===typeof r.type.getDerivedStateFromError||"function"===typeof n.componentDidCatch&&(null===Yl||!Yl.has(n))){var o=sl(r,e=il(t,e),1);if(ca(r,o),o=cu(),null!==(r=du(r,1)))Vt(r,1,o),pu(r,o);else if("function"===typeof n.componentDidCatch&&(null===Yl||!Yl.has(n)))try{n.componentDidCatch(t,e)}catch(e){}break}}r=r.return}}function qu(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=cu(),e.pingedLanes|=e.suspendedLanes&r,Rl===e&&(Ll&r)===r&&(4===jl||3===jl&&(62914560&Ll)===Ll&&500>Fo()-Bl?ku(e,0):Ul|=r),pu(e,t)}function zu(e,t){var r=e.stateNode;null!==r&&r.delete(t),0===(t=0)&&(0===(2&(t=e.mode))?t=1:0===(4&t)?t=99===Bo()?1:2:(0===au&&(au=Dl),0===(t=Ft(62914560&~au))&&(t=4194304))),r=cu(),null!==(e=du(e,t))&&(Vt(e,t,r),pu(e,r))}function Uu(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Fu(e,t,r,n){return new Uu(e,t,r,n)}function Bu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Vu(e,t){var r=e.alternate;return null===r?((r=Fu(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Hu(e,t,r,n,o,a){var l=2;if(n=e,"function"===typeof e)Bu(e)&&(l=1);else if("string"===typeof e)l=5;else e:switch(e){case S:return Wu(r.children,o,a,t);case M:l=8,o|=16;break;case _:l=8,o|=1;break;case T:return(e=Fu(12,r,t,8|o)).elementType=T,e.type=T,e.lanes=a,e;case R:return(e=Fu(13,r,t,o)).type=R,e.elementType=R,e.lanes=a,e;case N:return(e=Fu(19,r,t,o)).elementType=N,e.lanes=a,e;case D:return $u(r,o,a,t);case q:return(e=Fu(24,r,t,o)).elementType=q,e.lanes=a,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case C:l=10;break e;case O:l=9;break e;case P:l=11;break e;case L:l=14;break e;case A:l=16,n=null;break e;case I:l=22;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Fu(l,r,t,o)).elementType=e,t.type=n,t.lanes=a,t}function Wu(e,t,r,n){return(e=Fu(7,e,n,t)).lanes=r,e}function $u(e,t,r,n){return(e=Fu(23,e,n,t)).elementType=D,e.lanes=r,e}function Gu(e,t,r){return(e=Fu(6,e,null,t)).lanes=r,e}function Qu(e,t,r){return(t=Fu(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Yu(e,t,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=r,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function Ku(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==n?null:""+n,children:e,containerInfo:t,implementation:r}}function Xu(e,t,r,n){var o=t.current,a=cu(),l=su(o);e:if(r){t:{if(Ke(r=r._reactInternals)!==r||1!==r.tag)throw Error(i(170));var u=r;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(go(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(i(171))}if(1===r.tag){var c=r.type;if(go(c)){r=yo(r,c,u);break e}}r=u}else r=co;return null===t.context?t.context=r:t.pendingContext=r,(t=ua(a,l)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),ca(o,t),fu(o,l,a),l}function Ju(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Zu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function ec(e,t){Zu(e,t),(e=e.alternate)&&Zu(e,t)}function tc(e,t,r){var n=null!=r&&null!=r.hydrationOptions&&r.hydrationOptions.mutableSources||null;if(r=new Yu(e,t,null!=r&&!0===r.hydrate),t=Fu(3,null,null,2===t?7:1===t?3:0),r.current=t,t.stateNode=r,ia(t),e[Xn]=r.current,Pn(8===e.nodeType?e.parentNode:e),n)for(e=0;e<n.length;e++){var o=(t=n[e])._getVersion;o=o(t._source),null==r.mutableSourceEagerHydrationData?r.mutableSourceEagerHydrationData=[t,o]:r.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=r}function rc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function nc(e,t,r,n,o){var a=r._reactRootContainer;if(a){var i=a._internalRoot;if("function"===typeof o){var l=o;o=function(){var e=Ju(i);l.call(e)}}Xu(t,i,e,o)}else{if(a=r._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var r;r=e.lastChild;)e.removeChild(r);return new tc(e,0,t?{hydrate:!0}:void 0)}(r,n),i=a._internalRoot,"function"===typeof o){var u=o;o=function(){var e=Ju(i);u.call(e)}}yu((function(){Xu(t,i,e,o)}))}return Ju(i)}function oc(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rc(t))throw Error(i(200));return Ku(e,t,null,r)}Wl=function(e,t,r){var n=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||fo.current)Ii=!0;else{if(0===(r&n)){switch(Ii=!1,t.tag){case 3:Hi(t),Wa();break;case 5:Aa(t);break;case 1:go(t.type)&&bo(t);break;case 4:Na(t,t.stateNode.containerInfo);break;case 10:n=t.memoizedProps.value;var o=t.type._context;uo(Ko,o._currentValue),o._currentValue=n;break;case 13:if(null!==t.memoizedState)return 0!==(r&t.child.childLanes)?Yi(e,t,r):(uo(ja,1&ja.current),null!==(t=rl(e,t,r))?t.sibling:null);uo(ja,1&ja.current);break;case 19:if(n=0!==(r&t.childLanes),0!==(64&e.flags)){if(n)return tl(e,t,r);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),uo(ja,ja.current),n)break;return null;case 23:case 24:return t.lanes=0,zi(e,t,r)}return rl(e,t,r)}Ii=0!==(16384&e.flags)}else Ii=!1;switch(t.lanes=0,t.tag){case 2:if(n=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=ho(t,so.current),na(t,r),o=oi(null,t,n,e,o,r),t.flags|=1,"object"===typeof o&&null!==o&&"function"===typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,go(n)){var a=!0;bo(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ia(t);var l=n.getDerivedStateFromProps;"function"===typeof l&&ha(t,n,l,e),o.updater=ga,t.stateNode=o,o._reactInternals=t,ba(t,n,e,r),t=Vi(null,t,n,!0,a,r)}else t.tag=0,ji(null,t,o,r),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"===typeof e)return Bu(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===P)return 11;if(e===L)return 14}return 2}(o),e=Yo(o,e),a){case 0:t=Fi(null,t,o,e,r);break e;case 1:t=Bi(null,t,o,e,r);break e;case 11:t=Mi(null,t,o,e,r);break e;case 14:t=Di(null,t,o,Yo(o.type,e),n,r);break e}throw Error(i(306,o,""))}return t;case 0:return n=t.type,o=t.pendingProps,Fi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 1:return n=t.type,o=t.pendingProps,Bi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 3:if(Hi(t),n=t.updateQueue,null===e||null===n)throw Error(i(282));if(n=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,la(e,t),fa(t,n,null,r),(n=t.memoizedState.element)===o)Wa(),t=rl(e,t,r);else{if((a=(o=t.stateNode).hydrate)&&(qa=Wn(t.stateNode.containerInfo.firstChild),Da=t,a=za=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],$a.push(a);for(r=_a(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|1024,r=r.sibling}else ji(e,t,n,r),Wa();t=t.child}return t;case 5:return Aa(t),null===e&&Ba(t),n=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,Fn(n,o)?l=null:null!==a&&Fn(n,a)&&(t.flags|=16),Ui(e,t),ji(e,t,l,r),t.child;case 6:return null===e&&Ba(t),null;case 13:return Yi(e,t,r);case 4:return Na(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=Sa(t,null,n,r):ji(e,t,n,r),t.child;case 11:return n=t.type,o=t.pendingProps,Mi(e,t,n,o=t.elementType===n?o:Yo(n,o),r);case 7:return ji(e,t,t.pendingProps,r),t.child;case 8:case 12:return ji(e,t,t.pendingProps.children,r),t.child;case 10:e:{n=t.type._context,o=t.pendingProps,l=t.memoizedProps,a=o.value;var u=t.type._context;if(uo(Ko,u._currentValue),u._currentValue=a,null!==l)if(u=l.value,0===(a=ln(u,a)?0:0|("function"===typeof n._calculateChangedBits?n._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!fo.current){t=rl(e,t,r);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var s=c.firstContext;null!==s;){if(s.context===n&&0!==(s.observedBits&a)){1===u.tag&&((s=ua(-1,r&-r)).tag=2,ca(u,s)),u.lanes|=r,null!==(s=u.alternate)&&(s.lanes|=r),ra(u.return,r),c.lanes|=r;break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}ji(e,t,o.children,r),t=t.child}return t;case 9:return o=t.type,n=(a=t.pendingProps).children,na(t,r),n=n(o=oa(o,a.unstable_observedBits)),t.flags|=1,ji(e,t,n,r),t.child;case 14:return a=Yo(o=t.type,t.pendingProps),Di(e,t,o,a=Yo(o.type,a),n,r);case 15:return qi(e,t,t.type,t.pendingProps,n,r);case 17:return n=t.type,o=t.pendingProps,o=t.elementType===n?o:Yo(n,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,go(n)?(e=!0,bo(t)):e=!1,na(t,r),ma(t,n,o),ba(t,n,o,r),Vi(null,t,n,!0,e,r);case 19:return tl(e,t,r);case 23:case 24:return zi(e,t,r)}throw Error(i(156,t.tag))},tc.prototype.render=function(e){Xu(e,this._internalRoot,null,null)},tc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Xu(null,e,null,(function(){t[Xn]=null}))},tt=function(e){13===e.tag&&(fu(e,4,cu()),ec(e,4))},rt=function(e){13===e.tag&&(fu(e,67108864,cu()),ec(e,67108864))},nt=function(e){if(13===e.tag){var t=cu(),r=su(e);fu(e,r,t),ec(e,r)}},ot=function(e,t){return t()},Ce=function(e,t,r){switch(t){case"input":if(re(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+\'][type="radio"]\'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var o=ro(n);if(!o)throw Error(i(90));X(n),re(n,o)}}}break;case"textarea":ce(e,r);break;case"select":null!=(t=r.value)&&ie(e,!!r.multiple,t,!1)}},Ae=mu,Ie=function(e,t,r,n,o){var a=Pl;Pl|=4;try{return Ho(98,e.bind(null,t,r,n,o))}finally{0===(Pl=a)&&(Hl(),$o())}},je=function(){0===(49&Pl)&&(function(){if(null!==tu){var e=tu;tu=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,pu(e,Fo())}))}$o()}(),Lu())},Me=function(e,t){var r=Pl;Pl|=2;try{return e(t)}finally{0===(Pl=r)&&(Hl(),$o())}};var ac={Events:[eo,to,ro,Ne,Le,Lu,{current:!1}]},ic={findFiberByHostInstance:Zn,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},lc={bundleType:ic.bundleType,version:ic.version,rendererPackageName:ic.rendererPackageName,rendererConfig:ic.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:ic.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!==typeof{}){var uc={};if(!uc.isDisabled&&uc.supportsFiber)try{ko=uc.inject(lc),Eo=uc}catch(ve){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ac,t.createPortal=oc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw Error(i(268,Object.keys(e)))}return e=null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var r=Pl;if(0!==(48&r))return e(t);Pl|=1;try{if(e)return Ho(99,e.bind(null,t))}finally{Pl=r,$o()}},t.hydrate=function(e,t,r){if(!rc(t))throw Error(i(200));return nc(null,e,t,!0,r)},t.render=function(e,t,r){if(!rc(t))throw Error(i(200));return nc(null,e,t,!1,r)},t.unmountComponentAtNode=function(e){if(!rc(e))throw Error(i(40));return!!e._reactRootContainer&&(yu((function(){nc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Xn]=null}))})),!0)},t.unstable_batchedUpdates=mu,t.unstable_createPortal=function(e,t){return oc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,r,n){if(!rc(r))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return nc(e,t,r,!1,n)},t.version="17.0.1"},function(e,t,r){"use strict";e.exports=r(186)},function(e,t,r){"use strict";var n,o,a,i;if("object"===typeof performance&&"function"===typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var u=Date,c=u.now();t.unstable_now=function(){return u.now()-c}}if("undefined"===typeof window||"function"!==typeof MessageChannel){var s=null,f=null,d=function e(){if(null!==s)try{var r=t.unstable_now();s(!0,r),s=null}catch(t){throw setTimeout(e,0),t}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(d,0))},o=function(e,t){f=setTimeout(e,t)},a=function(){clearTimeout(f)},t.unstable_shouldYield=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var p=window.setTimeout,h=window.clearTimeout;if("undefined"!==typeof console){var g=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn\'t support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!==typeof g&&console.error("This browser doesn\'t support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var v=!1,m=null,y=-1,b=5,w=0;t.unstable_shouldYield=function(){return t.unstable_now()>=w},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<e?Math.floor(1e3/e):5};var k=new MessageChannel,E=k.port2;k.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();w=e+b;try{m(!0,e)?E.postMessage(null):(v=!1,m=null)}catch(e){throw E.postMessage(null),e}}else v=!1},n=function(e){m=e,v||(v=!0,E.postMessage(null))},o=function(e,r){y=p((function(){e(t.unstable_now())}),r)},a=function(){h(y),y=-1}}function x(e,t){var r=e.length;e.push(t);e:for(;;){var n=r-1>>>1,o=e[n];if(!(void 0!==o&&0<T(o,t)))break e;e[n]=t,e[r]=o,r=n}}function S(e){return void 0===(e=e[0])?null:e}function _(e){var t=e[0];if(void 0!==t){var r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,o=e.length;n<o;){var a=2*(n+1)-1,i=e[a],l=a+1,u=e[l];if(void 0!==i&&0>T(i,r))void 0!==u&&0>T(u,i)?(e[n]=u,e[l]=r,n=l):(e[n]=i,e[a]=r,n=a);else{if(!(void 0!==u&&0>T(u,r)))break e;e[n]=u,e[l]=r,n=l}}}return t}return null}function T(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}var C=[],O=[],P=1,R=null,N=3,L=!1,A=!1,I=!1;function j(e){for(var t=S(O);null!==t;){if(null===t.callback)_(O);else{if(!(t.startTime<=e))break;_(O),t.sortIndex=t.expirationTime,x(C,t)}t=S(O)}}function M(e){if(I=!1,j(e),!A)if(null!==S(C))A=!0,n(D);else{var t=S(O);null!==t&&o(M,t.startTime-e)}}function D(e,r){A=!1,I&&(I=!1,a()),L=!0;var n=N;try{for(j(r),R=S(C);null!==R&&(!(R.expirationTime>r)||e&&!t.unstable_shouldYield());){var i=R.callback;if("function"===typeof i){R.callback=null,N=R.priorityLevel;var l=i(R.expirationTime<=r);r=t.unstable_now(),"function"===typeof l?R.callback=l:R===S(C)&&_(C),j(r)}else _(C);R=S(C)}if(null!==R)var u=!0;else{var c=S(O);null!==c&&o(M,c.startTime-r),u=!1}return u}finally{R=null,N=n,L=!1}}var q=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){A||L||(A=!0,n(D))},t.unstable_getCurrentPriorityLevel=function(){return N},t.unstable_getFirstCallbackNode=function(){return S(C)},t.unstable_next=function(e){switch(N){case 1:case 2:case 3:var t=3;break;default:t=N}var r=N;N=t;try{return e()}finally{N=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=q,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=N;N=e;try{return t()}finally{N=r}},t.unstable_scheduleCallback=function(e,r,i){var l=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?l+i:l:i=l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:r,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,x(O,e),null===S(C)&&e===S(O)&&(I?a():I=!0,o(M,i-l))):(e.sortIndex=u,x(C,e),A||L||(A=!0,n(D))),e},t.unstable_wrapCallback=function(e){var t=N;return function(){var r=N;N=t;try{return e.apply(this,arguments)}finally{N=r}}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n={"&lt":"<","&gt":">","&quot":\'"\',"&apos":"\'","&amp":"&","&lt;":"<","&gt;":">","&quot;":\'"\',"&apos;":"\'","&amp;":"&"},o={60:"lt",62:"gt",34:"quot",39:"apos",38:"amp"},a={"<":"&lt;",">":"&gt;",\'"\':"&quot;","\'":"&apos;","&":"&amp;"},i=function(){function e(){}return e.prototype.encode=function(e){return e&&e.length?e.replace(/[<>"\'&]/g,(function(e){return a[e]})):""},e.encode=function(t){return(new e).encode(t)},e.prototype.decode=function(e){return e&&e.length?e.replace(/&#?[0-9a-zA-Z]+;?/g,(function(e){if("#"===e.charAt(1)){var t="x"===e.charAt(2).toLowerCase()?parseInt(e.substr(3),16):parseInt(e.substr(2));return isNaN(t)||t<-32768||t>65535?"":String.fromCharCode(t)}return n[e]||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var a=e.charCodeAt(n),i=o[a];i?(r+="&"+i+";",n++):(r+=a<32||a>126?"&#"+a+";":e.charAt(n),n++)}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.XmlEntities=i},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=["apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","Aelig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams"],o=[39,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,38,60,62,338,339,352,353,376,710,732,8194,8195,8201,8204,8205,8206,8207,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8240,8249,8250,8364,402,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,977,978,982,8226,8230,8242,8243,8254,8260,8472,8465,8476,8482,8501,8592,8593,8594,8595,8596,8629,8656,8657,8658,8659,8660,8704,8706,8707,8709,8711,8712,8713,8715,8719,8721,8722,8727,8730,8733,8734,8736,8743,8744,8745,8746,8747,8756,8764,8773,8776,8800,8801,8804,8805,8834,8835,8836,8838,8839,8853,8855,8869,8901,8968,8969,8970,8971,9001,9002,9674,9824,9827,9829,9830],a={},i={};!function(){for(var e=0,t=n.length;e<t;){var r=n[e],l=o[e];a[r]=String.fromCharCode(l),i[l]=r,e++}}();var l=function(){function e(){}return e.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,(function(e,t){var r;if("#"===t.charAt(0)){var n="x"===t.charAt(1).toLowerCase()?parseInt(t.substr(2),16):parseInt(t.substr(1));isNaN(n)||n<-32768||n>65535||(r=String.fromCharCode(n))}else r=a[t];return r||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=i[e.charCodeAt(n)];r+=o?"&"+o+";":e.charAt(n),n++}return r},e.encode=function(t){return(new e).encode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n),a=i[o];r+=a?"&"+a+";":o<32||o>126?"&#"+o+";":e.charAt(n),n++}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.Html4Entities=l},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=[["Aacute",[193]],["aacute",[225]],["Abreve",[258]],["abreve",[259]],["ac",[8766]],["acd",[8767]],["acE",[8766,819]],["Acirc",[194]],["acirc",[226]],["acute",[180]],["Acy",[1040]],["acy",[1072]],["AElig",[198]],["aelig",[230]],["af",[8289]],["Afr",[120068]],["afr",[120094]],["Agrave",[192]],["agrave",[224]],["alefsym",[8501]],["aleph",[8501]],["Alpha",[913]],["alpha",[945]],["Amacr",[256]],["amacr",[257]],["amalg",[10815]],["amp",[38]],["AMP",[38]],["andand",[10837]],["And",[10835]],["and",[8743]],["andd",[10844]],["andslope",[10840]],["andv",[10842]],["ang",[8736]],["ange",[10660]],["angle",[8736]],["angmsdaa",[10664]],["angmsdab",[10665]],["angmsdac",[10666]],["angmsdad",[10667]],["angmsdae",[10668]],["angmsdaf",[10669]],["angmsdag",[10670]],["angmsdah",[10671]],["angmsd",[8737]],["angrt",[8735]],["angrtvb",[8894]],["angrtvbd",[10653]],["angsph",[8738]],["angst",[197]],["angzarr",[9084]],["Aogon",[260]],["aogon",[261]],["Aopf",[120120]],["aopf",[120146]],["apacir",[10863]],["ap",[8776]],["apE",[10864]],["ape",[8778]],["apid",[8779]],["apos",[39]],["ApplyFunction",[8289]],["approx",[8776]],["approxeq",[8778]],["Aring",[197]],["aring",[229]],["Ascr",[119964]],["ascr",[119990]],["Assign",[8788]],["ast",[42]],["asymp",[8776]],["asympeq",[8781]],["Atilde",[195]],["atilde",[227]],["Auml",[196]],["auml",[228]],["awconint",[8755]],["awint",[10769]],["backcong",[8780]],["backepsilon",[1014]],["backprime",[8245]],["backsim",[8765]],["backsimeq",[8909]],["Backslash",[8726]],["Barv",[10983]],["barvee",[8893]],["barwed",[8965]],["Barwed",[8966]],["barwedge",[8965]],["bbrk",[9141]],["bbrktbrk",[9142]],["bcong",[8780]],["Bcy",[1041]],["bcy",[1073]],["bdquo",[8222]],["becaus",[8757]],["because",[8757]],["Because",[8757]],["bemptyv",[10672]],["bepsi",[1014]],["bernou",[8492]],["Bernoullis",[8492]],["Beta",[914]],["beta",[946]],["beth",[8502]],["between",[8812]],["Bfr",[120069]],["bfr",[120095]],["bigcap",[8898]],["bigcirc",[9711]],["bigcup",[8899]],["bigodot",[10752]],["bigoplus",[10753]],["bigotimes",[10754]],["bigsqcup",[10758]],["bigstar",[9733]],["bigtriangledown",[9661]],["bigtriangleup",[9651]],["biguplus",[10756]],["bigvee",[8897]],["bigwedge",[8896]],["bkarow",[10509]],["blacklozenge",[10731]],["blacksquare",[9642]],["blacktriangle",[9652]],["blacktriangledown",[9662]],["blacktriangleleft",[9666]],["blacktriangleright",[9656]],["blank",[9251]],["blk12",[9618]],["blk14",[9617]],["blk34",[9619]],["block",[9608]],["bne",[61,8421]],["bnequiv",[8801,8421]],["bNot",[10989]],["bnot",[8976]],["Bopf",[120121]],["bopf",[120147]],["bot",[8869]],["bottom",[8869]],["bowtie",[8904]],["boxbox",[10697]],["boxdl",[9488]],["boxdL",[9557]],["boxDl",[9558]],["boxDL",[9559]],["boxdr",[9484]],["boxdR",[9554]],["boxDr",[9555]],["boxDR",[9556]],["boxh",[9472]],["boxH",[9552]],["boxhd",[9516]],["boxHd",[9572]],["boxhD",[9573]],["boxHD",[9574]],["boxhu",[9524]],["boxHu",[9575]],["boxhU",[9576]],["boxHU",[9577]],["boxminus",[8863]],["boxplus",[8862]],["boxtimes",[8864]],["boxul",[9496]],["boxuL",[9563]],["boxUl",[9564]],["boxUL",[9565]],["boxur",[9492]],["boxuR",[9560]],["boxUr",[9561]],["boxUR",[9562]],["boxv",[9474]],["boxV",[9553]],["boxvh",[9532]],["boxvH",[9578]],["boxVh",[9579]],["boxVH",[9580]],["boxvl",[9508]],["boxvL",[9569]],["boxVl",[9570]],["boxVL",[9571]],["boxvr",[9500]],["boxvR",[9566]],["boxVr",[9567]],["boxVR",[9568]],["bprime",[8245]],["breve",[728]],["Breve",[728]],["brvbar",[166]],["bscr",[119991]],["Bscr",[8492]],["bsemi",[8271]],["bsim",[8765]],["bsime",[8909]],["bsolb",[10693]],["bsol",[92]],["bsolhsub",[10184]],["bull",[8226]],["bullet",[8226]],["bump",[8782]],["bumpE",[10926]],["bumpe",[8783]],["Bumpeq",[8782]],["bumpeq",[8783]],["Cacute",[262]],["cacute",[263]],["capand",[10820]],["capbrcup",[10825]],["capcap",[10827]],["cap",[8745]],["Cap",[8914]],["capcup",[10823]],["capdot",[10816]],["CapitalDifferentialD",[8517]],["caps",[8745,65024]],["caret",[8257]],["caron",[711]],["Cayleys",[8493]],["ccaps",[10829]],["Ccaron",[268]],["ccaron",[269]],["Ccedil",[199]],["ccedil",[231]],["Ccirc",[264]],["ccirc",[265]],["Cconint",[8752]],["ccups",[10828]],["ccupssm",[10832]],["Cdot",[266]],["cdot",[267]],["cedil",[184]],["Cedilla",[184]],["cemptyv",[10674]],["cent",[162]],["centerdot",[183]],["CenterDot",[183]],["cfr",[120096]],["Cfr",[8493]],["CHcy",[1063]],["chcy",[1095]],["check",[10003]],["checkmark",[10003]],["Chi",[935]],["chi",[967]],["circ",[710]],["circeq",[8791]],["circlearrowleft",[8634]],["circlearrowright",[8635]],["circledast",[8859]],["circledcirc",[8858]],["circleddash",[8861]],["CircleDot",[8857]],["circledR",[174]],["circledS",[9416]],["CircleMinus",[8854]],["CirclePlus",[8853]],["CircleTimes",[8855]],["cir",[9675]],["cirE",[10691]],["cire",[8791]],["cirfnint",[10768]],["cirmid",[10991]],["cirscir",[10690]],["ClockwiseContourIntegral",[8754]],["clubs",[9827]],["clubsuit",[9827]],["colon",[58]],["Colon",[8759]],["Colone",[10868]],["colone",[8788]],["coloneq",[8788]],["comma",[44]],["commat",[64]],["comp",[8705]],["compfn",[8728]],["complement",[8705]],["complexes",[8450]],["cong",[8773]],["congdot",[10861]],["Congruent",[8801]],["conint",[8750]],["Conint",[8751]],["ContourIntegral",[8750]],["copf",[120148]],["Copf",[8450]],["coprod",[8720]],["Coproduct",[8720]],["copy",[169]],["COPY",[169]],["copysr",[8471]],["CounterClockwiseContourIntegral",[8755]],["crarr",[8629]],["cross",[10007]],["Cross",[10799]],["Cscr",[119966]],["cscr",[119992]],["csub",[10959]],["csube",[10961]],["csup",[10960]],["csupe",[10962]],["ctdot",[8943]],["cudarrl",[10552]],["cudarrr",[10549]],["cuepr",[8926]],["cuesc",[8927]],["cularr",[8630]],["cularrp",[10557]],["cupbrcap",[10824]],["cupcap",[10822]],["CupCap",[8781]],["cup",[8746]],["Cup",[8915]],["cupcup",[10826]],["cupdot",[8845]],["cupor",[10821]],["cups",[8746,65024]],["curarr",[8631]],["curarrm",[10556]],["curlyeqprec",[8926]],["curlyeqsucc",[8927]],["curlyvee",[8910]],["curlywedge",[8911]],["curren",[164]],["curvearrowleft",[8630]],["curvearrowright",[8631]],["cuvee",[8910]],["cuwed",[8911]],["cwconint",[8754]],["cwint",[8753]],["cylcty",[9005]],["dagger",[8224]],["Dagger",[8225]],["daleth",[8504]],["darr",[8595]],["Darr",[8609]],["dArr",[8659]],["dash",[8208]],["Dashv",[10980]],["dashv",[8867]],["dbkarow",[10511]],["dblac",[733]],["Dcaron",[270]],["dcaron",[271]],["Dcy",[1044]],["dcy",[1076]],["ddagger",[8225]],["ddarr",[8650]],["DD",[8517]],["dd",[8518]],["DDotrahd",[10513]],["ddotseq",[10871]],["deg",[176]],["Del",[8711]],["Delta",[916]],["delta",[948]],["demptyv",[10673]],["dfisht",[10623]],["Dfr",[120071]],["dfr",[120097]],["dHar",[10597]],["dharl",[8643]],["dharr",[8642]],["DiacriticalAcute",[180]],["DiacriticalDot",[729]],["DiacriticalDoubleAcute",[733]],["DiacriticalGrave",[96]],["DiacriticalTilde",[732]],["diam",[8900]],["diamond",[8900]],["Diamond",[8900]],["diamondsuit",[9830]],["diams",[9830]],["die",[168]],["DifferentialD",[8518]],["digamma",[989]],["disin",[8946]],["div",[247]],["divide",[247]],["divideontimes",[8903]],["divonx",[8903]],["DJcy",[1026]],["djcy",[1106]],["dlcorn",[8990]],["dlcrop",[8973]],["dollar",[36]],["Dopf",[120123]],["dopf",[120149]],["Dot",[168]],["dot",[729]],["DotDot",[8412]],["doteq",[8784]],["doteqdot",[8785]],["DotEqual",[8784]],["dotminus",[8760]],["dotplus",[8724]],["dotsquare",[8865]],["doublebarwedge",[8966]],["DoubleContourIntegral",[8751]],["DoubleDot",[168]],["DoubleDownArrow",[8659]],["DoubleLeftArrow",[8656]],["DoubleLeftRightArrow",[8660]],["DoubleLeftTee",[10980]],["DoubleLongLeftArrow",[10232]],["DoubleLongLeftRightArrow",[10234]],["DoubleLongRightArrow",[10233]],["DoubleRightArrow",[8658]],["DoubleRightTee",[8872]],["DoubleUpArrow",[8657]],["DoubleUpDownArrow",[8661]],["DoubleVerticalBar",[8741]],["DownArrowBar",[10515]],["downarrow",[8595]],["DownArrow",[8595]],["Downarrow",[8659]],["DownArrowUpArrow",[8693]],["DownBreve",[785]],["downdownarrows",[8650]],["downharpoonleft",[8643]],["downharpoonright",[8642]],["DownLeftRightVector",[10576]],["DownLeftTeeVector",[10590]],["DownLeftVectorBar",[10582]],["DownLeftVector",[8637]],["DownRightTeeVector",[10591]],["DownRightVectorBar",[10583]],["DownRightVector",[8641]],["DownTeeArrow",[8615]],["DownTee",[8868]],["drbkarow",[10512]],["drcorn",[8991]],["drcrop",[8972]],["Dscr",[119967]],["dscr",[119993]],["DScy",[1029]],["dscy",[1109]],["dsol",[10742]],["Dstrok",[272]],["dstrok",[273]],["dtdot",[8945]],["dtri",[9663]],["dtrif",[9662]],["duarr",[8693]],["duhar",[10607]],["dwangle",[10662]],["DZcy",[1039]],["dzcy",[1119]],["dzigrarr",[10239]],["Eacute",[201]],["eacute",[233]],["easter",[10862]],["Ecaron",[282]],["ecaron",[283]],["Ecirc",[202]],["ecirc",[234]],["ecir",[8790]],["ecolon",[8789]],["Ecy",[1069]],["ecy",[1101]],["eDDot",[10871]],["Edot",[278]],["edot",[279]],["eDot",[8785]],["ee",[8519]],["efDot",[8786]],["Efr",[120072]],["efr",[120098]],["eg",[10906]],["Egrave",[200]],["egrave",[232]],["egs",[10902]],["egsdot",[10904]],["el",[10905]],["Element",[8712]],["elinters",[9191]],["ell",[8467]],["els",[10901]],["elsdot",[10903]],["Emacr",[274]],["emacr",[275]],["empty",[8709]],["emptyset",[8709]],["EmptySmallSquare",[9723]],["emptyv",[8709]],["EmptyVerySmallSquare",[9643]],["emsp13",[8196]],["emsp14",[8197]],["emsp",[8195]],["ENG",[330]],["eng",[331]],["ensp",[8194]],["Eogon",[280]],["eogon",[281]],["Eopf",[120124]],["eopf",[120150]],["epar",[8917]],["eparsl",[10723]],["eplus",[10865]],["epsi",[949]],["Epsilon",[917]],["epsilon",[949]],["epsiv",[1013]],["eqcirc",[8790]],["eqcolon",[8789]],["eqsim",[8770]],["eqslantgtr",[10902]],["eqslantless",[10901]],["Equal",[10869]],["equals",[61]],["EqualTilde",[8770]],["equest",[8799]],["Equilibrium",[8652]],["equiv",[8801]],["equivDD",[10872]],["eqvparsl",[10725]],["erarr",[10609]],["erDot",[8787]],["escr",[8495]],["Escr",[8496]],["esdot",[8784]],["Esim",[10867]],["esim",[8770]],["Eta",[919]],["eta",[951]],["ETH",[208]],["eth",[240]],["Euml",[203]],["euml",[235]],["euro",[8364]],["excl",[33]],["exist",[8707]],["Exists",[8707]],["expectation",[8496]],["exponentiale",[8519]],["ExponentialE",[8519]],["fallingdotseq",[8786]],["Fcy",[1060]],["fcy",[1092]],["female",[9792]],["ffilig",[64259]],["fflig",[64256]],["ffllig",[64260]],["Ffr",[120073]],["ffr",[120099]],["filig",[64257]],["FilledSmallSquare",[9724]],["FilledVerySmallSquare",[9642]],["fjlig",[102,106]],["flat",[9837]],["fllig",[64258]],["fltns",[9649]],["fnof",[402]],["Fopf",[120125]],["fopf",[120151]],["forall",[8704]],["ForAll",[8704]],["fork",[8916]],["forkv",[10969]],["Fouriertrf",[8497]],["fpartint",[10765]],["frac12",[189]],["frac13",[8531]],["frac14",[188]],["frac15",[8533]],["frac16",[8537]],["frac18",[8539]],["frac23",[8532]],["frac25",[8534]],["frac34",[190]],["frac35",[8535]],["frac38",[8540]],["frac45",[8536]],["frac56",[8538]],["frac58",[8541]],["frac78",[8542]],["frasl",[8260]],["frown",[8994]],["fscr",[119995]],["Fscr",[8497]],["gacute",[501]],["Gamma",[915]],["gamma",[947]],["Gammad",[988]],["gammad",[989]],["gap",[10886]],["Gbreve",[286]],["gbreve",[287]],["Gcedil",[290]],["Gcirc",[284]],["gcirc",[285]],["Gcy",[1043]],["gcy",[1075]],["Gdot",[288]],["gdot",[289]],["ge",[8805]],["gE",[8807]],["gEl",[10892]],["gel",[8923]],["geq",[8805]],["geqq",[8807]],["geqslant",[10878]],["gescc",[10921]],["ges",[10878]],["gesdot",[10880]],["gesdoto",[10882]],["gesdotol",[10884]],["gesl",[8923,65024]],["gesles",[10900]],["Gfr",[120074]],["gfr",[120100]],["gg",[8811]],["Gg",[8921]],["ggg",[8921]],["gimel",[8503]],["GJcy",[1027]],["gjcy",[1107]],["gla",[10917]],["gl",[8823]],["glE",[10898]],["glj",[10916]],["gnap",[10890]],["gnapprox",[10890]],["gne",[10888]],["gnE",[8809]],["gneq",[10888]],["gneqq",[8809]],["gnsim",[8935]],["Gopf",[120126]],["gopf",[120152]],["grave",[96]],["GreaterEqual",[8805]],["GreaterEqualLess",[8923]],["GreaterFullEqual",[8807]],["GreaterGreater",[10914]],["GreaterLess",[8823]],["GreaterSlantEqual",[10878]],["GreaterTilde",[8819]],["Gscr",[119970]],["gscr",[8458]],["gsim",[8819]],["gsime",[10894]],["gsiml",[10896]],["gtcc",[10919]],["gtcir",[10874]],["gt",[62]],["GT",[62]],["Gt",[8811]],["gtdot",[8919]],["gtlPar",[10645]],["gtquest",[10876]],["gtrapprox",[10886]],["gtrarr",[10616]],["gtrdot",[8919]],["gtreqless",[8923]],["gtreqqless",[10892]],["gtrless",[8823]],["gtrsim",[8819]],["gvertneqq",[8809,65024]],["gvnE",[8809,65024]],["Hacek",[711]],["hairsp",[8202]],["half",[189]],["hamilt",[8459]],["HARDcy",[1066]],["hardcy",[1098]],["harrcir",[10568]],["harr",[8596]],["hArr",[8660]],["harrw",[8621]],["Hat",[94]],["hbar",[8463]],["Hcirc",[292]],["hcirc",[293]],["hearts",[9829]],["heartsuit",[9829]],["hellip",[8230]],["hercon",[8889]],["hfr",[120101]],["Hfr",[8460]],["HilbertSpace",[8459]],["hksearow",[10533]],["hkswarow",[10534]],["hoarr",[8703]],["homtht",[8763]],["hookleftarrow",[8617]],["hookrightarrow",[8618]],["hopf",[120153]],["Hopf",[8461]],["horbar",[8213]],["HorizontalLine",[9472]],["hscr",[119997]],["Hscr",[8459]],["hslash",[8463]],["Hstrok",[294]],["hstrok",[295]],["HumpDownHump",[8782]],["HumpEqual",[8783]],["hybull",[8259]],["hyphen",[8208]],["Iacute",[205]],["iacute",[237]],["ic",[8291]],["Icirc",[206]],["icirc",[238]],["Icy",[1048]],["icy",[1080]],["Idot",[304]],["IEcy",[1045]],["iecy",[1077]],["iexcl",[161]],["iff",[8660]],["ifr",[120102]],["Ifr",[8465]],["Igrave",[204]],["igrave",[236]],["ii",[8520]],["iiiint",[10764]],["iiint",[8749]],["iinfin",[10716]],["iiota",[8489]],["IJlig",[306]],["ijlig",[307]],["Imacr",[298]],["imacr",[299]],["image",[8465]],["ImaginaryI",[8520]],["imagline",[8464]],["imagpart",[8465]],["imath",[305]],["Im",[8465]],["imof",[8887]],["imped",[437]],["Implies",[8658]],["incare",[8453]],["in",[8712]],["infin",[8734]],["infintie",[10717]],["inodot",[305]],["intcal",[8890]],["int",[8747]],["Int",[8748]],["integers",[8484]],["Integral",[8747]],["intercal",[8890]],["Intersection",[8898]],["intlarhk",[10775]],["intprod",[10812]],["InvisibleComma",[8291]],["InvisibleTimes",[8290]],["IOcy",[1025]],["iocy",[1105]],["Iogon",[302]],["iogon",[303]],["Iopf",[120128]],["iopf",[120154]],["Iota",[921]],["iota",[953]],["iprod",[10812]],["iquest",[191]],["iscr",[119998]],["Iscr",[8464]],["isin",[8712]],["isindot",[8949]],["isinE",[8953]],["isins",[8948]],["isinsv",[8947]],["isinv",[8712]],["it",[8290]],["Itilde",[296]],["itilde",[297]],["Iukcy",[1030]],["iukcy",[1110]],["Iuml",[207]],["iuml",[239]],["Jcirc",[308]],["jcirc",[309]],["Jcy",[1049]],["jcy",[1081]],["Jfr",[120077]],["jfr",[120103]],["jmath",[567]],["Jopf",[120129]],["jopf",[120155]],["Jscr",[119973]],["jscr",[119999]],["Jsercy",[1032]],["jsercy",[1112]],["Jukcy",[1028]],["jukcy",[1108]],["Kappa",[922]],["kappa",[954]],["kappav",[1008]],["Kcedil",[310]],["kcedil",[311]],["Kcy",[1050]],["kcy",[1082]],["Kfr",[120078]],["kfr",[120104]],["kgreen",[312]],["KHcy",[1061]],["khcy",[1093]],["KJcy",[1036]],["kjcy",[1116]],["Kopf",[120130]],["kopf",[120156]],["Kscr",[119974]],["kscr",[12e4]],["lAarr",[8666]],["Lacute",[313]],["lacute",[314]],["laemptyv",[10676]],["lagran",[8466]],["Lambda",[923]],["lambda",[955]],["lang",[10216]],["Lang",[10218]],["langd",[10641]],["langle",[10216]],["lap",[10885]],["Laplacetrf",[8466]],["laquo",[171]],["larrb",[8676]],["larrbfs",[10527]],["larr",[8592]],["Larr",[8606]],["lArr",[8656]],["larrfs",[10525]],["larrhk",[8617]],["larrlp",[8619]],["larrpl",[10553]],["larrsim",[10611]],["larrtl",[8610]],["latail",[10521]],["lAtail",[10523]],["lat",[10923]],["late",[10925]],["lates",[10925,65024]],["lbarr",[10508]],["lBarr",[10510]],["lbbrk",[10098]],["lbrace",[123]],["lbrack",[91]],["lbrke",[10635]],["lbrksld",[10639]],["lbrkslu",[10637]],["Lcaron",[317]],["lcaron",[318]],["Lcedil",[315]],["lcedil",[316]],["lceil",[8968]],["lcub",[123]],["Lcy",[1051]],["lcy",[1083]],["ldca",[10550]],["ldquo",[8220]],["ldquor",[8222]],["ldrdhar",[10599]],["ldrushar",[10571]],["ldsh",[8626]],["le",[8804]],["lE",[8806]],["LeftAngleBracket",[10216]],["LeftArrowBar",[8676]],["leftarrow",[8592]],["LeftArrow",[8592]],["Leftarrow",[8656]],["LeftArrowRightArrow",[8646]],["leftarrowtail",[8610]],["LeftCeiling",[8968]],["LeftDoubleBracket",[10214]],["LeftDownTeeVector",[10593]],["LeftDownVectorBar",[10585]],["LeftDownVector",[8643]],["LeftFloor",[8970]],["leftharpoondown",[8637]],["leftharpoonup",[8636]],["leftleftarrows",[8647]],["leftrightarrow",[8596]],["LeftRightArrow",[8596]],["Leftrightarrow",[8660]],["leftrightarrows",[8646]],["leftrightharpoons",[8651]],["leftrightsquigarrow",[8621]],["LeftRightVector",[10574]],["LeftTeeArrow",[8612]],["LeftTee",[8867]],["LeftTeeVector",[10586]],["leftthreetimes",[8907]],["LeftTriangleBar",[10703]],["LeftTriangle",[8882]],["LeftTriangleEqual",[8884]],["LeftUpDownVector",[10577]],["LeftUpTeeVector",[10592]],["LeftUpVectorBar",[10584]],["LeftUpVector",[8639]],["LeftVectorBar",[10578]],["LeftVector",[8636]],["lEg",[10891]],["leg",[8922]],["leq",[8804]],["leqq",[8806]],["leqslant",[10877]],["lescc",[10920]],["les",[10877]],["lesdot",[10879]],["lesdoto",[10881]],["lesdotor",[10883]],["lesg",[8922,65024]],["lesges",[10899]],["lessapprox",[10885]],["lessdot",[8918]],["lesseqgtr",[8922]],["lesseqqgtr",[10891]],["LessEqualGreater",[8922]],["LessFullEqual",[8806]],["LessGreater",[8822]],["lessgtr",[8822]],["LessLess",[10913]],["lesssim",[8818]],["LessSlantEqual",[10877]],["LessTilde",[8818]],["lfisht",[10620]],["lfloor",[8970]],["Lfr",[120079]],["lfr",[120105]],["lg",[8822]],["lgE",[10897]],["lHar",[10594]],["lhard",[8637]],["lharu",[8636]],["lharul",[10602]],["lhblk",[9604]],["LJcy",[1033]],["ljcy",[1113]],["llarr",[8647]],["ll",[8810]],["Ll",[8920]],["llcorner",[8990]],["Lleftarrow",[8666]],["llhard",[10603]],["lltri",[9722]],["Lmidot",[319]],["lmidot",[320]],["lmoustache",[9136]],["lmoust",[9136]],["lnap",[10889]],["lnapprox",[10889]],["lne",[10887]],["lnE",[8808]],["lneq",[10887]],["lneqq",[8808]],["lnsim",[8934]],["loang",[10220]],["loarr",[8701]],["lobrk",[10214]],["longleftarrow",[10229]],["LongLeftArrow",[10229]],["Longleftarrow",[10232]],["longleftrightarrow",[10231]],["LongLeftRightArrow",[10231]],["Longleftrightarrow",[10234]],["longmapsto",[10236]],["longrightarrow",[10230]],["LongRightArrow",[10230]],["Longrightarrow",[10233]],["looparrowleft",[8619]],["looparrowright",[8620]],["lopar",[10629]],["Lopf",[120131]],["lopf",[120157]],["loplus",[10797]],["lotimes",[10804]],["lowast",[8727]],["lowbar",[95]],["LowerLeftArrow",[8601]],["LowerRightArrow",[8600]],["loz",[9674]],["lozenge",[9674]],["lozf",[10731]],["lpar",[40]],["lparlt",[10643]],["lrarr",[8646]],["lrcorner",[8991]],["lrhar",[8651]],["lrhard",[10605]],["lrm",[8206]],["lrtri",[8895]],["lsaquo",[8249]],["lscr",[120001]],["Lscr",[8466]],["lsh",[8624]],["Lsh",[8624]],["lsim",[8818]],["lsime",[10893]],["lsimg",[10895]],["lsqb",[91]],["lsquo",[8216]],["lsquor",[8218]],["Lstrok",[321]],["lstrok",[322]],["ltcc",[10918]],["ltcir",[10873]],["lt",[60]],["LT",[60]],["Lt",[8810]],["ltdot",[8918]],["lthree",[8907]],["ltimes",[8905]],["ltlarr",[10614]],["ltquest",[10875]],["ltri",[9667]],["ltrie",[8884]],["ltrif",[9666]],["ltrPar",[10646]],["lurdshar",[10570]],["luruhar",[10598]],["lvertneqq",[8808,65024]],["lvnE",[8808,65024]],["macr",[175]],["male",[9794]],["malt",[10016]],["maltese",[10016]],["Map",[10501]],["map",[8614]],["mapsto",[8614]],["mapstodown",[8615]],["mapstoleft",[8612]],["mapstoup",[8613]],["marker",[9646]],["mcomma",[10793]],["Mcy",[1052]],["mcy",[1084]],["mdash",[8212]],["mDDot",[8762]],["measuredangle",[8737]],["MediumSpace",[8287]],["Mellintrf",[8499]],["Mfr",[120080]],["mfr",[120106]],["mho",[8487]],["micro",[181]],["midast",[42]],["midcir",[10992]],["mid",[8739]],["middot",[183]],["minusb",[8863]],["minus",[8722]],["minusd",[8760]],["minusdu",[10794]],["MinusPlus",[8723]],["mlcp",[10971]],["mldr",[8230]],["mnplus",[8723]],["models",[8871]],["Mopf",[120132]],["mopf",[120158]],["mp",[8723]],["mscr",[120002]],["Mscr",[8499]],["mstpos",[8766]],["Mu",[924]],["mu",[956]],["multimap",[8888]],["mumap",[8888]],["nabla",[8711]],["Nacute",[323]],["nacute",[324]],["nang",[8736,8402]],["nap",[8777]],["napE",[10864,824]],["napid",[8779,824]],["napos",[329]],["napprox",[8777]],["natural",[9838]],["naturals",[8469]],["natur",[9838]],["nbsp",[160]],["nbump",[8782,824]],["nbumpe",[8783,824]],["ncap",[10819]],["Ncaron",[327]],["ncaron",[328]],["Ncedil",[325]],["ncedil",[326]],["ncong",[8775]],["ncongdot",[10861,824]],["ncup",[10818]],["Ncy",[1053]],["ncy",[1085]],["ndash",[8211]],["nearhk",[10532]],["nearr",[8599]],["neArr",[8663]],["nearrow",[8599]],["ne",[8800]],["nedot",[8784,824]],["NegativeMediumSpace",[8203]],["NegativeThickSpace",[8203]],["NegativeThinSpace",[8203]],["NegativeVeryThinSpace",[8203]],["nequiv",[8802]],["nesear",[10536]],["nesim",[8770,824]],["NestedGreaterGreater",[8811]],["NestedLessLess",[8810]],["nexist",[8708]],["nexists",[8708]],["Nfr",[120081]],["nfr",[120107]],["ngE",[8807,824]],["nge",[8817]],["ngeq",[8817]],["ngeqq",[8807,824]],["ngeqslant",[10878,824]],["nges",[10878,824]],["nGg",[8921,824]],["ngsim",[8821]],["nGt",[8811,8402]],["ngt",[8815]],["ngtr",[8815]],["nGtv",[8811,824]],["nharr",[8622]],["nhArr",[8654]],["nhpar",[10994]],["ni",[8715]],["nis",[8956]],["nisd",[8954]],["niv",[8715]],["NJcy",[1034]],["njcy",[1114]],["nlarr",[8602]],["nlArr",[8653]],["nldr",[8229]],["nlE",[8806,824]],["nle",[8816]],["nleftarrow",[8602]],["nLeftarrow",[8653]],["nleftrightarrow",[8622]],["nLeftrightarrow",[8654]],["nleq",[8816]],["nleqq",[8806,824]],["nleqslant",[10877,824]],["nles",[10877,824]],["nless",[8814]],["nLl",[8920,824]],["nlsim",[8820]],["nLt",[8810,8402]],["nlt",[8814]],["nltri",[8938]],["nltrie",[8940]],["nLtv",[8810,824]],["nmid",[8740]],["NoBreak",[8288]],["NonBreakingSpace",[160]],["nopf",[120159]],["Nopf",[8469]],["Not",[10988]],["not",[172]],["NotCongruent",[8802]],["NotCupCap",[8813]],["NotDoubleVerticalBar",[8742]],["NotElement",[8713]],["NotEqual",[8800]],["NotEqualTilde",[8770,824]],["NotExists",[8708]],["NotGreater",[8815]],["NotGreaterEqual",[8817]],["NotGreaterFullEqual",[8807,824]],["NotGreaterGreater",[8811,824]],["NotGreaterLess",[8825]],["NotGreaterSlantEqual",[10878,824]],["NotGreaterTilde",[8821]],["NotHumpDownHump",[8782,824]],["NotHumpEqual",[8783,824]],["notin",[8713]],["notindot",[8949,824]],["notinE",[8953,824]],["notinva",[8713]],["notinvb",[8951]],["notinvc",[8950]],["NotLeftTriangleBar",[10703,824]],["NotLeftTriangle",[8938]],["NotLeftTriangleEqual",[8940]],["NotLess",[8814]],["NotLessEqual",[8816]],["NotLessGreater",[8824]],["NotLessLess",[8810,824]],["NotLessSlantEqual",[10877,824]],["NotLessTilde",[8820]],["NotNestedGreaterGreater",[10914,824]],["NotNestedLessLess",[10913,824]],["notni",[8716]],["notniva",[8716]],["notnivb",[8958]],["notnivc",[8957]],["NotPrecedes",[8832]],["NotPrecedesEqual",[10927,824]],["NotPrecedesSlantEqual",[8928]],["NotReverseElement",[8716]],["NotRightTriangleBar",[10704,824]],["NotRightTriangle",[8939]],["NotRightTriangleEqual",[8941]],["NotSquareSubset",[8847,824]],["NotSquareSubsetEqual",[8930]],["NotSquareSuperset",[8848,824]],["NotSquareSupersetEqual",[8931]],["NotSubset",[8834,8402]],["NotSubsetEqual",[8840]],["NotSucceeds",[8833]],["NotSucceedsEqual",[10928,824]],["NotSucceedsSlantEqual",[8929]],["NotSucceedsTilde",[8831,824]],["NotSuperset",[8835,8402]],["NotSupersetEqual",[8841]],["NotTilde",[8769]],["NotTildeEqual",[8772]],["NotTildeFullEqual",[8775]],["NotTildeTilde",[8777]],["NotVerticalBar",[8740]],["nparallel",[8742]],["npar",[8742]],["nparsl",[11005,8421]],["npart",[8706,824]],["npolint",[10772]],["npr",[8832]],["nprcue",[8928]],["nprec",[8832]],["npreceq",[10927,824]],["npre",[10927,824]],["nrarrc",[10547,824]],["nrarr",[8603]],["nrArr",[8655]],["nrarrw",[8605,824]],["nrightarrow",[8603]],["nRightarrow",[8655]],["nrtri",[8939]],["nrtrie",[8941]],["nsc",[8833]],["nsccue",[8929]],["nsce",[10928,824]],["Nscr",[119977]],["nscr",[120003]],["nshortmid",[8740]],["nshortparallel",[8742]],["nsim",[8769]],["nsime",[8772]],["nsimeq",[8772]],["nsmid",[8740]],["nspar",[8742]],["nsqsube",[8930]],["nsqsupe",[8931]],["nsub",[8836]],["nsubE",[10949,824]],["nsube",[8840]],["nsubset",[8834,8402]],["nsubseteq",[8840]],["nsubseteqq",[10949,824]],["nsucc",[8833]],["nsucceq",[10928,824]],["nsup",[8837]],["nsupE",[10950,824]],["nsupe",[8841]],["nsupset",[8835,8402]],["nsupseteq",[8841]],["nsupseteqq",[10950,824]],["ntgl",[8825]],["Ntilde",[209]],["ntilde",[241]],["ntlg",[8824]],["ntriangleleft",[8938]],["ntrianglelefteq",[8940]],["ntriangleright",[8939]],["ntrianglerighteq",[8941]],["Nu",[925]],["nu",[957]],["num",[35]],["numero",[8470]],["numsp",[8199]],["nvap",[8781,8402]],["nvdash",[8876]],["nvDash",[8877]],["nVdash",[8878]],["nVDash",[8879]],["nvge",[8805,8402]],["nvgt",[62,8402]],["nvHarr",[10500]],["nvinfin",[10718]],["nvlArr",[10498]],["nvle",[8804,8402]],["nvlt",[60,8402]],["nvltrie",[8884,8402]],["nvrArr",[10499]],["nvrtrie",[8885,8402]],["nvsim",[8764,8402]],["nwarhk",[10531]],["nwarr",[8598]],["nwArr",[8662]],["nwarrow",[8598]],["nwnear",[10535]],["Oacute",[211]],["oacute",[243]],["oast",[8859]],["Ocirc",[212]],["ocirc",[244]],["ocir",[8858]],["Ocy",[1054]],["ocy",[1086]],["odash",[8861]],["Odblac",[336]],["odblac",[337]],["odiv",[10808]],["odot",[8857]],["odsold",[10684]],["OElig",[338]],["oelig",[339]],["ofcir",[10687]],["Ofr",[120082]],["ofr",[120108]],["ogon",[731]],["Ograve",[210]],["ograve",[242]],["ogt",[10689]],["ohbar",[10677]],["ohm",[937]],["oint",[8750]],["olarr",[8634]],["olcir",[10686]],["olcross",[10683]],["oline",[8254]],["olt",[10688]],["Omacr",[332]],["omacr",[333]],["Omega",[937]],["omega",[969]],["Omicron",[927]],["omicron",[959]],["omid",[10678]],["ominus",[8854]],["Oopf",[120134]],["oopf",[120160]],["opar",[10679]],["OpenCurlyDoubleQuote",[8220]],["OpenCurlyQuote",[8216]],["operp",[10681]],["oplus",[8853]],["orarr",[8635]],["Or",[10836]],["or",[8744]],["ord",[10845]],["order",[8500]],["orderof",[8500]],["ordf",[170]],["ordm",[186]],["origof",[8886]],["oror",[10838]],["orslope",[10839]],["orv",[10843]],["oS",[9416]],["Oscr",[119978]],["oscr",[8500]],["Oslash",[216]],["oslash",[248]],["osol",[8856]],["Otilde",[213]],["otilde",[245]],["otimesas",[10806]],["Otimes",[10807]],["otimes",[8855]],["Ouml",[214]],["ouml",[246]],["ovbar",[9021]],["OverBar",[8254]],["OverBrace",[9182]],["OverBracket",[9140]],["OverParenthesis",[9180]],["para",[182]],["parallel",[8741]],["par",[8741]],["parsim",[10995]],["parsl",[11005]],["part",[8706]],["PartialD",[8706]],["Pcy",[1055]],["pcy",[1087]],["percnt",[37]],["period",[46]],["permil",[8240]],["perp",[8869]],["pertenk",[8241]],["Pfr",[120083]],["pfr",[120109]],["Phi",[934]],["phi",[966]],["phiv",[981]],["phmmat",[8499]],["phone",[9742]],["Pi",[928]],["pi",[960]],["pitchfork",[8916]],["piv",[982]],["planck",[8463]],["planckh",[8462]],["plankv",[8463]],["plusacir",[10787]],["plusb",[8862]],["pluscir",[10786]],["plus",[43]],["plusdo",[8724]],["plusdu",[10789]],["pluse",[10866]],["PlusMinus",[177]],["plusmn",[177]],["plussim",[10790]],["plustwo",[10791]],["pm",[177]],["Poincareplane",[8460]],["pointint",[10773]],["popf",[120161]],["Popf",[8473]],["pound",[163]],["prap",[10935]],["Pr",[10939]],["pr",[8826]],["prcue",[8828]],["precapprox",[10935]],["prec",[8826]],["preccurlyeq",[8828]],["Precedes",[8826]],["PrecedesEqual",[10927]],["PrecedesSlantEqual",[8828]],["PrecedesTilde",[8830]],["preceq",[10927]],["precnapprox",[10937]],["precneqq",[10933]],["precnsim",[8936]],["pre",[10927]],["prE",[10931]],["precsim",[8830]],["prime",[8242]],["Prime",[8243]],["primes",[8473]],["prnap",[10937]],["prnE",[10933]],["prnsim",[8936]],["prod",[8719]],["Product",[8719]],["profalar",[9006]],["profline",[8978]],["profsurf",[8979]],["prop",[8733]],["Proportional",[8733]],["Proportion",[8759]],["propto",[8733]],["prsim",[8830]],["prurel",[8880]],["Pscr",[119979]],["pscr",[120005]],["Psi",[936]],["psi",[968]],["puncsp",[8200]],["Qfr",[120084]],["qfr",[120110]],["qint",[10764]],["qopf",[120162]],["Qopf",[8474]],["qprime",[8279]],["Qscr",[119980]],["qscr",[120006]],["quaternions",[8461]],["quatint",[10774]],["quest",[63]],["questeq",[8799]],["quot",[34]],["QUOT",[34]],["rAarr",[8667]],["race",[8765,817]],["Racute",[340]],["racute",[341]],["radic",[8730]],["raemptyv",[10675]],["rang",[10217]],["Rang",[10219]],["rangd",[10642]],["range",[10661]],["rangle",[10217]],["raquo",[187]],["rarrap",[10613]],["rarrb",[8677]],["rarrbfs",[10528]],["rarrc",[10547]],["rarr",[8594]],["Rarr",[8608]],["rArr",[8658]],["rarrfs",[10526]],["rarrhk",[8618]],["rarrlp",[8620]],["rarrpl",[10565]],["rarrsim",[10612]],["Rarrtl",[10518]],["rarrtl",[8611]],["rarrw",[8605]],["ratail",[10522]],["rAtail",[10524]],["ratio",[8758]],["rationals",[8474]],["rbarr",[10509]],["rBarr",[10511]],["RBarr",[10512]],["rbbrk",[10099]],["rbrace",[125]],["rbrack",[93]],["rbrke",[10636]],["rbrksld",[10638]],["rbrkslu",[10640]],["Rcaron",[344]],["rcaron",[345]],["Rcedil",[342]],["rcedil",[343]],["rceil",[8969]],["rcub",[125]],["Rcy",[1056]],["rcy",[1088]],["rdca",[10551]],["rdldhar",[10601]],["rdquo",[8221]],["rdquor",[8221]],["CloseCurlyDoubleQuote",[8221]],["rdsh",[8627]],["real",[8476]],["realine",[8475]],["realpart",[8476]],["reals",[8477]],["Re",[8476]],["rect",[9645]],["reg",[174]],["REG",[174]],["ReverseElement",[8715]],["ReverseEquilibrium",[8651]],["ReverseUpEquilibrium",[10607]],["rfisht",[10621]],["rfloor",[8971]],["rfr",[120111]],["Rfr",[8476]],["rHar",[10596]],["rhard",[8641]],["rharu",[8640]],["rharul",[10604]],["Rho",[929]],["rho",[961]],["rhov",[1009]],["RightAngleBracket",[10217]],["RightArrowBar",[8677]],["rightarrow",[8594]],["RightArrow",[8594]],["Rightarrow",[8658]],["RightArrowLeftArrow",[8644]],["rightarrowtail",[8611]],["RightCeiling",[8969]],["RightDoubleBracket",[10215]],["RightDownTeeVector",[10589]],["RightDownVectorBar",[10581]],["RightDownVector",[8642]],["RightFloor",[8971]],["rightharpoondown",[8641]],["rightharpoonup",[8640]],["rightleftarrows",[8644]],["rightleftharpoons",[8652]],["rightrightarrows",[8649]],["rightsquigarrow",[8605]],["RightTeeArrow",[8614]],["RightTee",[8866]],["RightTeeVector",[10587]],["rightthreetimes",[8908]],["RightTriangleBar",[10704]],["RightTriangle",[8883]],["RightTriangleEqual",[8885]],["RightUpDownVector",[10575]],["RightUpTeeVector",[10588]],["RightUpVectorBar",[10580]],["RightUpVector",[8638]],["RightVectorBar",[10579]],["RightVector",[8640]],["ring",[730]],["risingdotseq",[8787]],["rlarr",[8644]],["rlhar",[8652]],["rlm",[8207]],["rmoustache",[9137]],["rmoust",[9137]],["rnmid",[10990]],["roang",[10221]],["roarr",[8702]],["robrk",[10215]],["ropar",[10630]],["ropf",[120163]],["Ropf",[8477]],["roplus",[10798]],["rotimes",[10805]],["RoundImplies",[10608]],["rpar",[41]],["rpargt",[10644]],["rppolint",[10770]],["rrarr",[8649]],["Rrightarrow",[8667]],["rsaquo",[8250]],["rscr",[120007]],["Rscr",[8475]],["rsh",[8625]],["Rsh",[8625]],["rsqb",[93]],["rsquo",[8217]],["rsquor",[8217]],["CloseCurlyQuote",[8217]],["rthree",[8908]],["rtimes",[8906]],["rtri",[9657]],["rtrie",[8885]],["rtrif",[9656]],["rtriltri",[10702]],["RuleDelayed",[10740]],["ruluhar",[10600]],["rx",[8478]],["Sacute",[346]],["sacute",[347]],["sbquo",[8218]],["scap",[10936]],["Scaron",[352]],["scaron",[353]],["Sc",[10940]],["sc",[8827]],["sccue",[8829]],["sce",[10928]],["scE",[10932]],["Scedil",[350]],["scedil",[351]],["Scirc",[348]],["scirc",[349]],["scnap",[10938]],["scnE",[10934]],["scnsim",[8937]],["scpolint",[10771]],["scsim",[8831]],["Scy",[1057]],["scy",[1089]],["sdotb",[8865]],["sdot",[8901]],["sdote",[10854]],["searhk",[10533]],["searr",[8600]],["seArr",[8664]],["searrow",[8600]],["sect",[167]],["semi",[59]],["seswar",[10537]],["setminus",[8726]],["setmn",[8726]],["sext",[10038]],["Sfr",[120086]],["sfr",[120112]],["sfrown",[8994]],["sharp",[9839]],["SHCHcy",[1065]],["shchcy",[1097]],["SHcy",[1064]],["shcy",[1096]],["ShortDownArrow",[8595]],["ShortLeftArrow",[8592]],["shortmid",[8739]],["shortparallel",[8741]],["ShortRightArrow",[8594]],["ShortUpArrow",[8593]],["shy",[173]],["Sigma",[931]],["sigma",[963]],["sigmaf",[962]],["sigmav",[962]],["sim",[8764]],["simdot",[10858]],["sime",[8771]],["simeq",[8771]],["simg",[10910]],["simgE",[10912]],["siml",[10909]],["simlE",[10911]],["simne",[8774]],["simplus",[10788]],["simrarr",[10610]],["slarr",[8592]],["SmallCircle",[8728]],["smallsetminus",[8726]],["smashp",[10803]],["smeparsl",[10724]],["smid",[8739]],["smile",[8995]],["smt",[10922]],["smte",[10924]],["smtes",[10924,65024]],["SOFTcy",[1068]],["softcy",[1100]],["solbar",[9023]],["solb",[10692]],["sol",[47]],["Sopf",[120138]],["sopf",[120164]],["spades",[9824]],["spadesuit",[9824]],["spar",[8741]],["sqcap",[8851]],["sqcaps",[8851,65024]],["sqcup",[8852]],["sqcups",[8852,65024]],["Sqrt",[8730]],["sqsub",[8847]],["sqsube",[8849]],["sqsubset",[8847]],["sqsubseteq",[8849]],["sqsup",[8848]],["sqsupe",[8850]],["sqsupset",[8848]],["sqsupseteq",[8850]],["square",[9633]],["Square",[9633]],["SquareIntersection",[8851]],["SquareSubset",[8847]],["SquareSubsetEqual",[8849]],["SquareSuperset",[8848]],["SquareSupersetEqual",[8850]],["SquareUnion",[8852]],["squarf",[9642]],["squ",[9633]],["squf",[9642]],["srarr",[8594]],["Sscr",[119982]],["sscr",[120008]],["ssetmn",[8726]],["ssmile",[8995]],["sstarf",[8902]],["Star",[8902]],["star",[9734]],["starf",[9733]],["straightepsilon",[1013]],["straightphi",[981]],["strns",[175]],["sub",[8834]],["Sub",[8912]],["subdot",[10941]],["subE",[10949]],["sube",[8838]],["subedot",[10947]],["submult",[10945]],["subnE",[10955]],["subne",[8842]],["subplus",[10943]],["subrarr",[10617]],["subset",[8834]],["Subset",[8912]],["subseteq",[8838]],["subseteqq",[10949]],["SubsetEqual",[8838]],["subsetneq",[8842]],["subsetneqq",[10955]],["subsim",[10951]],["subsub",[10965]],["subsup",[10963]],["succapprox",[10936]],["succ",[8827]],["succcurlyeq",[8829]],["Succeeds",[8827]],["SucceedsEqual",[10928]],["SucceedsSlantEqual",[8829]],["SucceedsTilde",[8831]],["succeq",[10928]],["succnapprox",[10938]],["succneqq",[10934]],["succnsim",[8937]],["succsim",[8831]],["SuchThat",[8715]],["sum",[8721]],["Sum",[8721]],["sung",[9834]],["sup1",[185]],["sup2",[178]],["sup3",[179]],["sup",[8835]],["Sup",[8913]],["supdot",[10942]],["supdsub",[10968]],["supE",[10950]],["supe",[8839]],["supedot",[10948]],["Superset",[8835]],["SupersetEqual",[8839]],["suphsol",[10185]],["suphsub",[10967]],["suplarr",[10619]],["supmult",[10946]],["supnE",[10956]],["supne",[8843]],["supplus",[10944]],["supset",[8835]],["Supset",[8913]],["supseteq",[8839]],["supseteqq",[10950]],["supsetneq",[8843]],["supsetneqq",[10956]],["supsim",[10952]],["supsub",[10964]],["supsup",[10966]],["swarhk",[10534]],["swarr",[8601]],["swArr",[8665]],["swarrow",[8601]],["swnwar",[10538]],["szlig",[223]],["Tab",[9]],["target",[8982]],["Tau",[932]],["tau",[964]],["tbrk",[9140]],["Tcaron",[356]],["tcaron",[357]],["Tcedil",[354]],["tcedil",[355]],["Tcy",[1058]],["tcy",[1090]],["tdot",[8411]],["telrec",[8981]],["Tfr",[120087]],["tfr",[120113]],["there4",[8756]],["therefore",[8756]],["Therefore",[8756]],["Theta",[920]],["theta",[952]],["thetasym",[977]],["thetav",[977]],["thickapprox",[8776]],["thicksim",[8764]],["ThickSpace",[8287,8202]],["ThinSpace",[8201]],["thinsp",[8201]],["thkap",[8776]],["thksim",[8764]],["THORN",[222]],["thorn",[254]],["tilde",[732]],["Tilde",[8764]],["TildeEqual",[8771]],["TildeFullEqual",[8773]],["TildeTilde",[8776]],["timesbar",[10801]],["timesb",[8864]],["times",[215]],["timesd",[10800]],["tint",[8749]],["toea",[10536]],["topbot",[9014]],["topcir",[10993]],["top",[8868]],["Topf",[120139]],["topf",[120165]],["topfork",[10970]],["tosa",[10537]],["tprime",[8244]],["trade",[8482]],["TRADE",[8482]],["triangle",[9653]],["triangledown",[9663]],["triangleleft",[9667]],["trianglelefteq",[8884]],["triangleq",[8796]],["triangleright",[9657]],["trianglerighteq",[8885]],["tridot",[9708]],["trie",[8796]],["triminus",[10810]],["TripleDot",[8411]],["triplus",[10809]],["trisb",[10701]],["tritime",[10811]],["trpezium",[9186]],["Tscr",[119983]],["tscr",[120009]],["TScy",[1062]],["tscy",[1094]],["TSHcy",[1035]],["tshcy",[1115]],["Tstrok",[358]],["tstrok",[359]],["twixt",[8812]],["twoheadleftarrow",[8606]],["twoheadrightarrow",[8608]],["Uacute",[218]],["uacute",[250]],["uarr",[8593]],["Uarr",[8607]],["uArr",[8657]],["Uarrocir",[10569]],["Ubrcy",[1038]],["ubrcy",[1118]],["Ubreve",[364]],["ubreve",[365]],["Ucirc",[219]],["ucirc",[251]],["Ucy",[1059]],["ucy",[1091]],["udarr",[8645]],["Udblac",[368]],["udblac",[369]],["udhar",[10606]],["ufisht",[10622]],["Ufr",[120088]],["ufr",[120114]],["Ugrave",[217]],["ugrave",[249]],["uHar",[10595]],["uharl",[8639]],["uharr",[8638]],["uhblk",[9600]],["ulcorn",[8988]],["ulcorner",[8988]],["ulcrop",[8975]],["ultri",[9720]],["Umacr",[362]],["umacr",[363]],["uml",[168]],["UnderBar",[95]],["UnderBrace",[9183]],["UnderBracket",[9141]],["UnderParenthesis",[9181]],["Union",[8899]],["UnionPlus",[8846]],["Uogon",[370]],["uogon",[371]],["Uopf",[120140]],["uopf",[120166]],["UpArrowBar",[10514]],["uparrow",[8593]],["UpArrow",[8593]],["Uparrow",[8657]],["UpArrowDownArrow",[8645]],["updownarrow",[8597]],["UpDownArrow",[8597]],["Updownarrow",[8661]],["UpEquilibrium",[10606]],["upharpoonleft",[8639]],["upharpoonright",[8638]],["uplus",[8846]],["UpperLeftArrow",[8598]],["UpperRightArrow",[8599]],["upsi",[965]],["Upsi",[978]],["upsih",[978]],["Upsilon",[933]],["upsilon",[965]],["UpTeeArrow",[8613]],["UpTee",[8869]],["upuparrows",[8648]],["urcorn",[8989]],["urcorner",[8989]],["urcrop",[8974]],["Uring",[366]],["uring",[367]],["urtri",[9721]],["Uscr",[119984]],["uscr",[120010]],["utdot",[8944]],["Utilde",[360]],["utilde",[361]],["utri",[9653]],["utrif",[9652]],["uuarr",[8648]],["Uuml",[220]],["uuml",[252]],["uwangle",[10663]],["vangrt",[10652]],["varepsilon",[1013]],["varkappa",[1008]],["varnothing",[8709]],["varphi",[981]],["varpi",[982]],["varpropto",[8733]],["varr",[8597]],["vArr",[8661]],["varrho",[1009]],["varsigma",[962]],["varsubsetneq",[8842,65024]],["varsubsetneqq",[10955,65024]],["varsupsetneq",[8843,65024]],["varsupsetneqq",[10956,65024]],["vartheta",[977]],["vartriangleleft",[8882]],["vartriangleright",[8883]],["vBar",[10984]],["Vbar",[10987]],["vBarv",[10985]],["Vcy",[1042]],["vcy",[1074]],["vdash",[8866]],["vDash",[8872]],["Vdash",[8873]],["VDash",[8875]],["Vdashl",[10982]],["veebar",[8891]],["vee",[8744]],["Vee",[8897]],["veeeq",[8794]],["vellip",[8942]],["verbar",[124]],["Verbar",[8214]],["vert",[124]],["Vert",[8214]],["VerticalBar",[8739]],["VerticalLine",[124]],["VerticalSeparator",[10072]],["VerticalTilde",[8768]],["VeryThinSpace",[8202]],["Vfr",[120089]],["vfr",[120115]],["vltri",[8882]],["vnsub",[8834,8402]],["vnsup",[8835,8402]],["Vopf",[120141]],["vopf",[120167]],["vprop",[8733]],["vrtri",[8883]],["Vscr",[119985]],["vscr",[120011]],["vsubnE",[10955,65024]],["vsubne",[8842,65024]],["vsupnE",[10956,65024]],["vsupne",[8843,65024]],["Vvdash",[8874]],["vzigzag",[10650]],["Wcirc",[372]],["wcirc",[373]],["wedbar",[10847]],["wedge",[8743]],["Wedge",[8896]],["wedgeq",[8793]],["weierp",[8472]],["Wfr",[120090]],["wfr",[120116]],["Wopf",[120142]],["wopf",[120168]],["wp",[8472]],["wr",[8768]],["wreath",[8768]],["Wscr",[119986]],["wscr",[120012]],["xcap",[8898]],["xcirc",[9711]],["xcup",[8899]],["xdtri",[9661]],["Xfr",[120091]],["xfr",[120117]],["xharr",[10231]],["xhArr",[10234]],["Xi",[926]],["xi",[958]],["xlarr",[10229]],["xlArr",[10232]],["xmap",[10236]],["xnis",[8955]],["xodot",[10752]],["Xopf",[120143]],["xopf",[120169]],["xoplus",[10753]],["xotime",[10754]],["xrarr",[10230]],["xrArr",[10233]],["Xscr",[119987]],["xscr",[120013]],["xsqcup",[10758]],["xuplus",[10756]],["xutri",[9651]],["xvee",[8897]],["xwedge",[8896]],["Yacute",[221]],["yacute",[253]],["YAcy",[1071]],["yacy",[1103]],["Ycirc",[374]],["ycirc",[375]],["Ycy",[1067]],["ycy",[1099]],["yen",[165]],["Yfr",[120092]],["yfr",[120118]],["YIcy",[1031]],["yicy",[1111]],["Yopf",[120144]],["yopf",[120170]],["Yscr",[119988]],["yscr",[120014]],["YUcy",[1070]],["yucy",[1102]],["yuml",[255]],["Yuml",[376]],["Zacute",[377]],["zacute",[378]],["Zcaron",[381]],["zcaron",[382]],["Zcy",[1047]],["zcy",[1079]],["Zdot",[379]],["zdot",[380]],["zeetrf",[8488]],["ZeroWidthSpace",[8203]],["Zeta",[918]],["zeta",[950]],["zfr",[120119]],["Zfr",[8488]],["ZHcy",[1046]],["zhcy",[1078]],["zigrarr",[8669]],["zopf",[120171]],["Zopf",[8484]],["Zscr",[119989]],["zscr",[120015]],["zwj",[8205]],["zwnj",[8204]]],o={},a={};!function(e,t){var r=n.length;for(;r--;){var o=n[r],a=o[0],i=o[1],l=i[0],u=l<32||l>126||62===l||60===l||38===l||34===l||39===l,c=void 0;if(u&&(c=t[l]=t[l]||{}),i[1]){var s=i[1];e[a]=String.fromCharCode(l)+String.fromCharCode(s),u&&(c[s]=a)}else e[a]=String.fromCharCode(l),u&&(c[""]=a)}}(o,a);var i=function(){function e(){}return e.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,(function(e,t){var r;if("#"===t.charAt(0)){var n="x"===t.charAt(1)?parseInt(t.substr(2).toLowerCase(),16):parseInt(t.substr(1));isNaN(n)||n<-32768||n>65535||(r=String.fromCharCode(n))}else r=o[t];return r||e})):""},e.decode=function(t){return(new e).decode(t)},e.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=a[e.charCodeAt(n)];if(o){var i=o[e.charCodeAt(n+1)];if(i?n++:i=o[""],i){r+="&"+i+";",n++;continue}}r+=e.charAt(n),n++}return r},e.encode=function(t){return(new e).encode(t)},e.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n),i=a[o];if(i){var l=i[e.charCodeAt(n+1)];if(l?n++:l=i[""],l){r+="&"+l+";",n++;continue}}r+=o<32||o>126?"&#"+o+";":e.charAt(n),n++}return r},e.encodeNonUTF=function(t){return(new e).encodeNonUTF(t)},e.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,r="",n=0;n<t;){var o=e.charCodeAt(n);o<=255?r+=e[n++]:(r+="&#"+o+";",n++)}return r},e.encodeNonASCII=function(t){return(new e).encodeNonASCII(t)},e}();t.Html5Entities=i},function(e,t,r){"use strict";var n=r(52),o=r(193);Object.defineProperty(t,"__esModule",{value:!0}),t.shouldHighlight=b,t.getChalk=w,t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(b(t)){var r=w(t),n=f(r);return y(n,e)}return e};var a,i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==typeof e&&"function"!==typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=n?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(r,o,a):r[o]=e[o]}r.default=e,t&&t.set(e,r);return r}(r(195)),l=r(196),u=(a=r(199))&&a.__esModule?a:{default:a};function c(){if("function"!==typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}var s=new Set(["as","async","from","get","of","set"]);function f(e){return{keyword:e.cyan,capitalized:e.yellow,jsxIdentifier:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}var d,p=/\\r\\n|[\\n\\r\\u2028\\u2029]/,h=/^[()[\\]{}]$/,g=i.matchToToken,v=/^[a-z][\\w-]*$/i,m=function(e,t,r){if("name"===e.type){if((0,l.isKeyword)(e.value)||(0,l.isStrictReservedWord)(e.value,!0)||s.has(e.value))return"keyword";if(v.test(e.value)&&("<"===r[t-1]||"</"==r.substr(t-2,2)))return"jsxIdentifier";if(e.value[0]!==e.value[0].toLowerCase())return"capitalized"}return"punctuator"===e.type&&h.test(e.value)?"bracket":"invalid"!==e.type||"@"!==e.value&&"#"!==e.value?e.type:"punctuator"};function y(e,t){var r,o="",a=n(d(t));try{var i=function(){var t=r.value,n=t.type,a=t.value,i=e[n];o+=i?a.split(p).map((function(e){return i(e)})).join("\\n"):a};for(a.s();!(r=a.n()).done;)i()}catch(e){a.e(e)}finally{a.f()}return o}function b(e){return u.default.supportsColor||e.forceColor}function w(e){var t=u.default;return e.forceColor&&(t=new u.default.constructor({enabled:!0,level:1})),t}d=o.mark((function e(t){var r,n;return o.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(r=i.default.exec(t))){e.next=6;break}return n=g(r),e.next=4,{type:m(n,r.index,t),value:n.value};case 4:e.next=0;break;case 6:case"end":return e.stop()}}),e)}))},function(e,t,r){var n=r(192);e.exports=function(e,t){if(e){if("string"===typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}},function(e,t){e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}},function(e,t,r){e.exports=r(194)},function(e,t,r){var n=function(e){"use strict";var t,r=Object.prototype,n=r.hasOwnProperty,o="function"===typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag";function u(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,r){return e[t]=r}}function c(e,t,r,n){var o=t&&t.prototype instanceof v?t:v,a=Object.create(o.prototype),i=new O(n||[]);return a._invoke=function(e,t,r){var n=f;return function(o,a){if(n===p)throw new Error("Generator is already running");if(n===h){if("throw"===o)throw a;return R()}for(r.method=o,r.arg=a;;){var i=r.delegate;if(i){var l=_(i,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===f)throw n=h,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=p;var u=s(e,t,r);if("normal"===u.type){if(n=r.done?h:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=h,r.method="throw",r.arg=u.arg)}}}(e,r,i),a}function s(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var f="suspendedStart",d="suspendedYield",p="executing",h="completed",g={};function v(){}function m(){}function y(){}var b={};b[a]=function(){return this};var w=Object.getPrototypeOf,k=w&&w(w(P([])));k&&k!==r&&n.call(k,a)&&(b=k);var E=y.prototype=v.prototype=Object.create(b);function x(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function r(o,a,i,l){var u=s(e[o],e,a);if("throw"!==u.type){var c=u.arg,f=c.value;return f&&"object"===typeof f&&n.call(f,"__await")?t.resolve(f.__await).then((function(e){r("next",e,i,l)}),(function(e){r("throw",e,i,l)})):t.resolve(f).then((function(e){c.value=e,i(c)}),(function(e){return r("throw",e,i,l)}))}l(u.arg)}var o;this._invoke=function(e,n){function a(){return new t((function(t,o){r(e,n,t,o)}))}return o=o?o.then(a,a):a()}}function _(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,_(e,r),"throw"===r.method))return g;r.method="throw",r.arg=new TypeError("The iterator does not provide a \'throw\' method")}return g}var o=s(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,g;var a=o.arg;return a?a.done?(r[e.resultName]=a.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):a:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function P(e){if(e){var r=e[a];if(r)return r.call(e);if("function"===typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}return{next:R}}function R(){return{value:t,done:!0}}return m.prototype=E.constructor=y,y.constructor=m,m.displayName=u(y,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"===typeof e&&e.constructor;return!!t&&(t===m||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,u(e,l,"GeneratorFunction")),e.prototype=Object.create(E),e},e.awrap=function(e){return{__await:e}},x(S.prototype),S.prototype[i]=function(){return this},e.AsyncIterator=S,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new S(c(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},x(E),u(E,l,"Generator"),E[a]=function(){return this},E.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=P,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(C),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return l.type="throw",l.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],l=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(u&&c){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),C(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;C(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:P(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=n}catch(e){Function("r","regeneratorRuntime = r")(n)}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=/(([\'"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\\'"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:void 0};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isIdentifierName",{enumerable:!0,get:function(){return n.isIdentifierName}}),Object.defineProperty(t,"isIdentifierChar",{enumerable:!0,get:function(){return n.isIdentifierChar}}),Object.defineProperty(t,"isIdentifierStart",{enumerable:!0,get:function(){return n.isIdentifierStart}}),Object.defineProperty(t,"isReservedWord",{enumerable:!0,get:function(){return o.isReservedWord}}),Object.defineProperty(t,"isStrictBindOnlyReservedWord",{enumerable:!0,get:function(){return o.isStrictBindOnlyReservedWord}}),Object.defineProperty(t,"isStrictBindReservedWord",{enumerable:!0,get:function(){return o.isStrictBindReservedWord}}),Object.defineProperty(t,"isStrictReservedWord",{enumerable:!0,get:function(){return o.isStrictReservedWord}}),Object.defineProperty(t,"isKeyword",{enumerable:!0,get:function(){return o.isKeyword}});var n=r(197),o=r(198)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isIdentifierStart=s,t.isIdentifierChar=f,t.isIdentifierName=function(e){for(var t=!0,r=0,n=Array.from(e);r<n.length;r++){var o=n[r].codePointAt(0);if(t){if(!s(o))return!1;t=!1}else if(!f(o))return!1}return!t};var n="\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08C7\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\u9FFC\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7BF\uA7C2-\uA7CA\uA7F5-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC",o="\u200C\u200D\xb7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF\u1AC0\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F",a=new RegExp("["+n+"]"),i=new RegExp("["+n+o+"]");n=o=null;var l=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938],u=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];function c(e,t){for(var r=65536,n=0,o=t.length;n<o;n+=2){if((r+=t[n])>e)return!1;if((r+=t[n+1])>=e)return!0}return!1}function s(e){return e<65?36===e:e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&a.test(String.fromCharCode(e)):c(e,l)))}function f(e){return e<48?36===e:e<58||!(e<65)&&(e<=90||(e<97?95===e:e<=122||(e<=65535?e>=170&&i.test(String.fromCharCode(e)):c(e,l)||c(e,u))))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isReservedWord=u,t.isStrictReservedWord=c,t.isStrictBindOnlyReservedWord=s,t.isStrictBindReservedWord=function(e,t){return c(e,t)||s(e)},t.isKeyword=function(e){return a.has(e)};var n=["implements","interface","let","package","private","protected","public","static","yield"],o=["eval","arguments"],a=new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),i=new Set(n),l=new Set(o);function u(e,t){return t&&"await"===e||"enum"===e}function c(e,t){return u(e,t)||i.has(e)}function s(e){return l.has(e)}},function(e,t,r){"use strict";(function(t){var n=r(52),o=r(200),a=r(201),i=r(206).stdout,l=r(207),u="win32"===t.platform&&!(Object({NODE_ENV:"production"}).TERM||"").toLowerCase().startsWith("xterm"),c=["ansi","ansi","ansi256","ansi16m"],s=new Set(["gray"]),f=Object.create(null);function d(e,t){t=t||{};var r=i?i.level:0;e.level=void 0===t.level?r:t.level,e.enabled="enabled"in t?t.enabled:e.level>0}function p(e){if(!this||!(this instanceof p)||this.template){var t={};return d(t,e),t.template=function(){var e=[].slice.call(arguments);return T.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,p.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=p,t.template}d(this,e)}u&&(a.blue.open="\x1b[94m");for(var h=function(){var e=v[g];a[e].closeRe=new RegExp(o(a[e].close),"g"),f[e]={get:function(){var t=a[e];return S.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}}},g=0,v=Object.keys(a);g<v.length;g++)h();f.visible={get:function(){return S.call(this,this._styles||[],!0,"visible")}},a.color.closeRe=new RegExp(o(a.color.close),"g");for(var m=function(){var e=b[y];if(s.has(e))return"continue";f[e]={get:function(){var t=this.level;return function(){var r=a.color[c[t]][e].apply(null,arguments),n={open:r,close:a.color.close,closeRe:a.color.closeRe};return S.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},y=0,b=Object.keys(a.color.ansi);y<b.length;y++)m();a.bgColor.closeRe=new RegExp(o(a.bgColor.close),"g");for(var w=function(){var e=E[k];if(s.has(e))return"continue";var t="bg"+e[0].toUpperCase()+e.slice(1);f[t]={get:function(){var t=this.level;return function(){var r=a.bgColor[c[t]][e].apply(null,arguments),n={open:r,close:a.bgColor.close,closeRe:a.bgColor.closeRe};return S.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},k=0,E=Object.keys(a.bgColor.ansi);k<E.length;k++)w();var x=Object.defineProperties((function(){}),f);function S(e,t,r){var n=function e(){return _.apply(e,arguments)};n._styles=e,n._empty=t;var o=this;return Object.defineProperty(n,"level",{enumerable:!0,get:function(){return o.level},set:function(e){o.level=e}}),Object.defineProperty(n,"enabled",{enumerable:!0,get:function(){return o.enabled},set:function(e){o.enabled=e}}),n.hasGrey=this.hasGrey||"gray"===r||"grey"===r,n.__proto__=x,n}function _(){var e=arguments,t=e.length,r=String(arguments[0]);if(0===t)return"";if(t>1)for(var o=1;o<t;o++)r+=" "+e[o];if(!this.enabled||this.level<=0||!r)return this._empty?"":r;var i=a.dim.open;u&&this.hasGrey&&(a.dim.open="");var l,c=n(this._styles.slice().reverse());try{for(c.s();!(l=c.n()).done;){var s=l.value;r=(r=s.open+r.replace(s.closeRe,s.open)+s.close).replace(/\\r?\\n/g,"".concat(s.close,"$&").concat(s.open))}}catch(e){c.e(e)}finally{c.f()}return a.dim.open=i,r}function T(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");for(var r=[].slice.call(arguments,2),n=[t.raw[0]],o=1;o<t.length;o++)n.push(String(r[o-1]).replace(/[{}\\\\]/g,"\\\\$&")),n.push(String(t.raw[o]));return l(e,n.join(""))}Object.defineProperties(p.prototype,f),e.exports=p(),e.exports.supportsColor=i,e.exports.default=e.exports}).call(this,r(51))},function(e,t,r){"use strict";var n=/[|\\\\{}()[\\]^$+*?.]/g;e.exports=function(e){if("string"!==typeof e)throw new TypeError("Expected a string");return e.replace(n,"\\\\$&")}},function(e,t,r){"use strict";(function(e){var t=r(203),n=function(e,r){return function(){var n=e.apply(t,arguments);return"\x1b[".concat(n+r,"m")}},o=function(e,r){return function(){var n=e.apply(t,arguments);return"\x1b[".concat(38+r,";5;").concat(n,"m")}},a=function(e,r){return function(){var n=e.apply(t,arguments);return"\x1b[".concat(38+r,";2;").concat(n[0],";").concat(n[1],";").concat(n[2],"m")}};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){var e=new Map,r={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};r.color.grey=r.color.gray;for(var i=0,l=Object.keys(r);i<l.length;i++){for(var u=l[i],c=r[u],s=0,f=Object.keys(c);s<f.length;s++){var d=f[s],p=c[d];r[d]={open:"\x1b[".concat(p[0],"m"),close:"\x1b[".concat(p[1],"m")},c[d]=r[d],e.set(p[0],p[1])}Object.defineProperty(r,u,{value:c,enumerable:!1}),Object.defineProperty(r,"codes",{value:e,enumerable:!1})}var h=function(e){return e},g=function(e,t,r){return[e,t,r]};r.color.close="\x1b[39m",r.bgColor.close="\x1b[49m",r.color.ansi={ansi:n(h,0)},r.color.ansi256={ansi256:o(h,0)},r.color.ansi16m={rgb:a(g,0)},r.bgColor.ansi={ansi:n(h,10)},r.bgColor.ansi256={ansi256:o(h,10)},r.bgColor.ansi16m={rgb:a(g,10)};for(var v=0,m=Object.keys(t);v<m.length;v++){var y=m[v];if("object"===typeof t[y]){var b=t[y];"ansi16"===y&&(y="ansi"),"ansi16"in b&&(r.color.ansi[y]=n(b.ansi16,0),r.bgColor.ansi[y]=n(b.ansi16,10)),"ansi256"in b&&(r.color.ansi256[y]=o(b.ansi256,0),r.bgColor.ansi256[y]=o(b.ansi256,10)),"rgb"in b&&(r.color.ansi16m[y]=a(b.rgb,0),r.bgColor.ansi16m[y]=a(b.rgb,10))}}return r}})}).call(this,r(202)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,r){var n=r(87),o=r(205),a={};Object.keys(n).forEach((function(e){a[e]={},Object.defineProperty(a[e],"channels",{value:n[e].channels}),Object.defineProperty(a[e],"labels",{value:n[e].labels});var t=o(e);Object.keys(t).forEach((function(r){var n=t[r];a[e][r]=function(e){var t=function(t){if(void 0===t||null===t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var r=e(t);if("object"===typeof r)for(var n=r.length,o=0;o<n;o++)r[o]=Math.round(r[o]);return r};return"conversion"in e&&(t.conversion=e.conversion),t}(n),a[e][r].raw=function(e){var t=function(t){return void 0===t||null===t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(n)}))})),e.exports=a},function(e,t,r){"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},function(e,t,r){var n=r(87);function o(e){var t=function(){for(var e={},t=Object.keys(n),r=t.length,o=0;o<r;o++)e[t[o]]={distance:-1,parent:null};return e}(),r=[e];for(t[e].distance=0;r.length;)for(var o=r.pop(),a=Object.keys(n[o]),i=a.length,l=0;l<i;l++){var u=a[l],c=t[u];-1===c.distance&&(c.distance=t[o].distance+1,c.parent=o,r.unshift(u))}return t}function a(e,t){return function(r){return t(e(r))}}function i(e,t){for(var r=[t[e].parent,e],o=n[t[e].parent][e],i=t[e].parent;t[i].parent;)r.unshift(t[i].parent),o=a(n[t[i].parent][i],o),i=t[i].parent;return o.conversion=r,o}e.exports=function(e){for(var t=o(e),r={},n=Object.keys(t),a=n.length,l=0;l<a;l++){var u=n[l];null!==t[u].parent&&(r[u]=i(u,t))}return r}},function(e,t,r){"use strict";e.exports={stdout:!1,stderr:!1}},function(e,t,r){"use strict";var n=r(52),o=/(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi,a=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g,i=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/,l=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,u=new Map([["n","\\n"],["r","\\r"],["t","\\t"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","\x1b"],["a","\x07"]]);function c(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):u.get(e)||e}function s(e,t){var r,o,a=[],u=t.trim().split(/\\s*,\\s*/g),s=n(u);try{for(s.s();!(o=s.n()).done;){var f=o.value;if(isNaN(f)){if(!(r=f.match(i)))throw new Error("Invalid Chalk template style argument: ".concat(f," (in style \'").concat(e,"\')"));a.push(r[2].replace(l,(function(e,t,r){return t?c(t):r})))}else a.push(Number(f))}}catch(e){s.e(e)}finally{s.f()}return a}function f(e){a.lastIndex=0;for(var t,r=[];null!==(t=a.exec(e));){var n=t[1];if(t[2]){var o=s(n,t[2]);r.push([n].concat(o))}else r.push([n])}return r}function d(e,t){var r,o={},a=n(t);try{for(a.s();!(r=a.n()).done;){var i,l=r.value,u=n(l.styles);try{for(u.s();!(i=u.n()).done;){var c=i.value;o[c[0]]=l.inverse?null:c.slice(1)}}catch(e){u.e(e)}finally{u.f()}}}catch(e){a.e(e)}finally{a.f()}for(var s=e,f=0,d=Object.keys(o);f<d.length;f++){var p=d[f];if(Array.isArray(o[p])){if(!(p in s))throw new Error("Unknown Chalk style: ".concat(p));s=o[p].length>0?s[p].apply(s,o[p]):s[p]}}return s}e.exports=function(e,t){var r=[],n=[],a=[];if(t.replace(o,(function(t,o,i,l,u,s){if(o)a.push(c(o));else if(l){var p=a.join("");a=[],n.push(0===r.length?p:d(e,r)(p)),r.push({inverse:i,styles:f(l)})}else if(u){if(0===r.length)throw new Error("Found extraneous } in Chalk template literal");n.push(d(e,r)(a.join(""))),a=[],r.pop()}else a.push(s)})),n.push(a.join("")),r.length>0){var i="Chalk template literal is missing ".concat(r.length," closing bracket").concat(1===r.length?"":"s"," (`}`)");throw new Error(i)}return n.join("")}},function(e,t,r){"use strict";r.r(t),r.d(t,"ThemeContext",(function(){return me}));r(90);var n=r(0),o=r.n(n),a=r(53),i=r.n(a),l=function(e){return{position:"relative",display:"inline-flex",flexDirection:"column",height:"100%",width:"1024px",maxWidth:"100%",overflowX:"hidden",overflowY:"auto",padding:"0.5rem",boxSizing:"border-box",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"11px",whiteSpace:"pre-wrap",wordBreak:"break-word",lineHeight:1.5,color:e.color}},u=null;var c=function(e){var t=Object(n.useContext)(me),r=e.shortcutHandler;return Object(n.useEffect)((function(){var e=function(e){r&&r(e.key)};return window.addEventListener("keydown",e),u&&u.addEventListener("keydown",e),function(){window.removeEventListener("keydown",e),u&&u.removeEventListener("keydown",e)}}),[r]),o.a.createElement("div",{style:l(t),ref:function(e){if(e){var t=e.ownerDocument;u=t.defaultView}}},e.children)},s=function(e){return{fontFamily:"sans-serif",color:e.footer,marginTop:"0.5rem",flex:"0 0 auto"}};var f=function(e){var t=Object(n.useContext)(me);return o.a.createElement("div",{style:s(t)},e.line1,o.a.createElement("br",null),e.line2)},d=function(e){return{fontSize:"2em",fontFamily:"sans-serif",color:e.headerColor,whiteSpace:"pre-wrap",margin:"0 2rem 0.75rem 0",flex:"0 0 auto",maxHeight:"50%",overflow:"auto"}};var p=function(e){var t=Object(n.useContext)(me);return o.a.createElement("div",{style:d(t)},e.headerText)};function h(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function g(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function v(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?g(Object(r),!0).forEach((function(t){h(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):g(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var m={position:"relative",display:"block",padding:"0.5em",marginTop:"0.5em",marginBottom:"0.5em",overflowX:"auto",whiteSpace:"pre-wrap",borderRadius:"0.25rem"},y={fontFamily:"Consolas, Menlo, monospace"};var b=function(e){var t=e.main,r=e.codeHTML,a=Object(n.useContext)(me),i=v(v({},m),{},{backgroundColor:a.primaryPreBackground,color:a.primaryPreColor}),l=v(v({},m),{},{backgroundColor:a.secondaryPreBackground,color:a.secondaryPreColor}),u=t?i:l,c={__html:r};return o.a.createElement("pre",{style:u},o.a.createElement("code",{style:y,dangerouslySetInnerHTML:c}))},w=r(33),k=r.n(w),E=new(r(88).AllHtmlEntities),x=function(e){return{reset:[e.base05,"transparent"],black:e.base05,red:e.base08,green:e.base0B,yellow:e.base08,blue:e.base0C,magenta:e.base0C,cyan:e.base0E,gray:e.base03,lightgrey:e.base01,darkgrey:e.base03}},S={"ansi-bright-black":"black","ansi-bright-yellow":"yellow","ansi-yellow":"yellow","ansi-bright-green":"green","ansi-green":"green","ansi-bright-cyan":"cyan","ansi-cyan":"cyan","ansi-bright-red":"red","ansi-red":"red","ansi-bright-magenta":"magenta","ansi-magenta":"magenta","ansi-white":"darkgrey"};var _=function(e,t){for(var r=(new k.a).ansiToJson(E.encode(e),{use_classes:!0}),n="",o=!1,a=0;a<r.length;++a)for(var i=r[a],l=i.content,u=i.fg,c=l.split("\\n"),s=0;s<c.length;++s){o||(n+=\'<span data-ansi-line="true">\',o=!0);var f=c[s].replace("\\r",""),d=x(t)[S[u]];null!=d?n+=\'<span style="color: \'+d+\';">\'+f+"</span>":(null!=u&&console.log("Missing color mapping: ",u),n+="<span>"+f+"</span>"),s<c.length-1&&(n+="</span>",o=!1,n+="<br/>")}return o&&(n+="</span>",o=!1),n},T=/^\\.(\\/[^/\\n ]+)+\\.[^/\\n ]+$/,C=[/^.*\\((\\d+):(\\d+)\\)$/,/^Line (\\d+):.+$/];var O=function(e){for(var t=e.split("\\n"),r="",n=0,o=0,a=0;a<t.length;a++){var i=k.a.ansiToText(t[a]).trim();if(i){!r&&i.match(T)&&(r=i);for(var l=0;l<C.length;){var u=i.match(C[l]);if(u){n=parseInt(u[1],10),o=parseInt(u[2],10)+1||1;break}l++}if(r&&n)break}}return r&&n?{fileName:r,lineNumber:n,colNumber:o}:null},P={cursor:"pointer"};var R=function(e){var t=Object(n.useContext)(me),r=e.error,a=e.editorHandler,i=O(r),l=null!==i&&null!==a;return o.a.createElement(c,null,o.a.createElement(p,{headerText:"Failed to compile"}),o.a.createElement("div",{onClick:l&&i?function(){return a(i)}:null,style:l?P:null},o.a.createElement(b,{main:!0,codeHTML:_(r,t)})),o.a.createElement(f,{line1:"This error occurred during the build time and cannot be dismissed."}))};function N(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function L(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function A(e,t,r){return t&&L(e.prototype,t),r&&L(e,r),e}function I(e,t){return(I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}function M(e){return(M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function D(e){return(D="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){return!t||"object"!==D(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return e}(e):t}function z(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=M(e);if(t){var o=M(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return q(this,r)}}var U=function(e){return{color:e.closeColor,lineHeight:"1rem",fontSize:"1.5rem",padding:"1rem",cursor:"pointer",position:"absolute",right:0,top:0}};var F=function(e){var t=e.close,r=Object(n.useContext)(me);return o.a.createElement("span",{title:"Click or press Escape to dismiss.",onClick:t,style:U(r)},"\xd7")},B={marginBottom:"0.5rem"},V={marginRight:"1em"},H={border:"none",borderRadius:"4px",padding:"3px 6px",cursor:"pointer"},W=function(e){return v(v({},H),{},{backgroundColor:e.navBackground,color:e.navArrow,borderTopRightRadius:"0px",borderBottomRightRadius:"0px",marginRight:"1px"})},$=function(e){return v(v({},H),{},{backgroundColor:e.navBackground,color:e.navArrow,borderTopLeftRadius:"0px",borderBottomLeftRadius:"0px"})};var G=function(e){var t=Object(n.useContext)(me),r=e.currentError,a=e.totalErrors,i=e.previous,l=e.next;return o.a.createElement("div",{style:B},o.a.createElement("span",{style:V},o.a.createElement("button",{onClick:i,style:W(t)},"\u2190"),o.a.createElement("button",{onClick:l,style:$(t)},"\u2192")),"".concat(r," of ").concat(a," errors on the page"))};function Q(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Y(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return r}}(e,t)||function(e,t){if(e){if("string"===typeof e)return Q(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Q(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function K(e,t){for(;null!=t&&"br"!==t.tagName.toLowerCase();)t=t.nextElementSibling;null!=t&&e.removeChild(t)}var X=r(89);var J=function(e){var t=Object(n.useContext)(me),r=e.lines,a=e.lineNum,i=e.columnNum,l=e.contextSize,u=e.main,c=[],s=1/0;r.forEach((function(e){var t=e.content,r=t.match(/^\\s*/);""!==t&&(s=r&&r[0]?Math.min(s,r[0].length):0)})),r.forEach((function(e){var t=e.content,r=e.lineNumber;isFinite(s)&&(t=t.substring(s)),c[r-1]=t}));var f=Object(X.codeFrameColumns)(c.join("\\n"),{start:{line:a,column:null==i?0:i-(isFinite(s)?s:0)}},{forceColor:!0,linesAbove:l,linesBelow:l}),d=_(f,t),p=document.createElement("code");p.innerHTML=d,function(e){for(var t=e.childNodes,r=0;r<t.length;++r){var n=t[r];if("span"===n.tagName.toLowerCase()){var o=n.innerText;null!=o&&"|^"===o.replace(/\\s/g,"")&&(n.style.position="absolute",K(e,n))}}}(p);var h=p.childNodes;e:for(var g=0;g<h.length;++g)for(var v=h[g].childNodes,m=0;m<v.length;++m){var y=v[m].innerText;if(null!=y&&-1!==y.indexOf(" "+a+" |"))break e}return o.a.createElement(b,{main:u,codeHTML:p.innerHTML})};function Z(e,t,r,n,o,a,i){var l;if(!i&&e&&"number"===typeof t){var u=/^[/|\\\\].*?[/|\\\\]((src|node_modules)[/|\\\\].*)/.exec(e);l=u&&u[1]?u[1]:e,l+=":"+t,r&&(l+=":"+r)}else n&&"number"===typeof o?(l=n+":"+o,a&&(l+=":"+a)):l="unknown";return l.replace("webpack://",".")}var ee=function(e){return{textDecoration:"none",color:e.anchorColor,cursor:"pointer"}},te=function(e){return{marginBottom:"1.5em",color:e.toggleColor,cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",background:e.toggleBackground,fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"}};var re=function(e){var t=Object(n.useContext)(me),r=Y(Object(n.useState)(!1),2),a=r[0],i=r[1],l=function(){var t=e.frame,r=t._originalFileName,n=t._originalLineNumber;return r?-1!==r.trim().indexOf(" ")?null:{fileName:r,lineNumber:n||1}:null},u=function(){var t=l();t&&e.editorHandler(t)},c=e.frame,s=e.contextSize,f=e.critical,d=e.showCode,p=c.fileName,h=c.lineNumber,g=c.columnNumber,v=c._scriptCode,m=c._originalFileName,y=c._originalLineNumber,b=c._originalColumnNumber,w=c._originalScriptCode,k=c.getFunctionName(),E=Z(m,y,b,p,h,g,a),x=null;d&&(a&&v&&0!==v.length&&null!=h?x={lines:v,lineNum:h,columnNum:g,contextSize:s,main:f}:!a&&w&&0!==w.length&&null!=y&&(x={lines:w,lineNum:y,columnNum:b,contextSize:s,main:f}));var S=null!==l()&&null!==e.editorHandler;return o.a.createElement("div",null,o.a.createElement("div",null,k),o.a.createElement("div",{style:{fontSize:"0.9em",marginBottom:"0.9em"}},o.a.createElement("span",{style:S?ee(t):null,onClick:S?u:null,onKeyDown:S?function(e){"Enter"===e.key&&u()}:null,tabIndex:S?"0":null},E)),x&&o.a.createElement("span",null,o.a.createElement("span",{onClick:S?u:null,style:S?{cursor:"pointer"}:null},o.a.createElement(J,x)),o.a.createElement("button",{style:te(t),onClick:function(){i(!a)}},"View "+(a?"source":"compiled"))))},ne={cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"},oe=function(e){return v(v({},ne),{},{color:e.color,background:e.background,marginBottom:"1.5em"})},ae=function(e){return v(v({},ne),{},{color:e.color,background:e.background,marginBottom:"0.6em"})};var ie=function(e){var t=Object(n.useContext)(me),r=Y(Object(n.useState)(!0),2),a=r[0],i=r[1],l=function(){i(!a)},u=e.children.length;return o.a.createElement("div",null,o.a.createElement("button",{onClick:l,style:a?oe(t):ae(t)},(a?"\u25B6":"\u25BC")+" ".concat(u," stack frames were ")+(a?"collapsed.":"expanded.")),o.a.createElement("div",{style:{display:a?"none":"block"}},e.children,o.a.createElement("button",{onClick:l,style:ae(t)},"\u25B2 ".concat(u," stack frames were expanded."))))};function le(e){switch(e){case"EvalError":case"InternalError":case"RangeError":case"ReferenceError":case"SyntaxError":case"TypeError":case"URIError":return!0;default:return!1}}var ue={fontSize:"1em",flex:"0 1 auto",minHeight:"0px",overflow:"auto"},ce=function(e){j(r,e);var t=z(r);function r(){return N(this,r),t.apply(this,arguments)}return A(r,[{key:"renderFrames",value:function(){var e=this.props,t=e.stackFrames,r=e.errorName,n=e.contextSize,a=e.editorHandler,i=[],l=!1,u=[],c=0;return t.forEach((function(e,s){var f=e.fileName,d=function(e,t){return null==e||""===e||-1!==e.indexOf("/~/")||-1!==e.indexOf("/node_modules/")||-1!==e.trim().indexOf(" ")||null==t||""===t}(e._originalFileName,f),p=!le(r),h=d&&(p||l);d||(l=!0);var g=o.a.createElement(re,{key:"frame-"+s,frame:e,contextSize:n,critical:0===s,showCode:!h,editorHandler:a}),v=s===t.length-1;h&&u.push(g),h&&!v||(1===u.length?i.push(u[0]):u.length>1&&(c++,i.push(o.a.createElement(ie,{key:"bundle-"+c},u))),u=[]),h||i.push(g)})),i}},{key:"render",value:function(){return o.a.createElement("div",{style:ue},this.renderFrames())}}]),r}(n.Component),se={display:"flex",flexDirection:"column"};var fe=function(e){var t=e.errorRecord,r=e.editorHandler,n=t.error,a=t.unhandledRejection,i=t.contextSize,l=t.stackFrames,u=a?"Unhandled Rejection ("+n.name+")":n.name,c=n.message,s=c.match(/^\\w*:/)||!u?c:u+": "+c;return s=s.replace(/^Invariant Violation:\\s*/,"").replace(/^Warning:\\s*/,"").replace(" Check the render method","\\n\\nCheck the render method").replace(" Check your code at","\\n\\nCheck your code at"),o.a.createElement("div",{style:se},o.a.createElement(p,{headerText:s}),o.a.createElement(ce,{stackFrames:l,errorName:u,contextSize:i,editorHandler:r}))},de=function(e){j(r,e);var t=z(r);function r(){var e;N(this,r);for(var n=arguments.length,o=new Array(n),a=0;a<n;a++)o[a]=arguments[a];return(e=t.call.apply(t,[this].concat(o))).state={currentIndex:0},e.previous=function(){e.setState((function(e,t){return{currentIndex:e.currentIndex>0?e.currentIndex-1:t.errorRecords.length-1}}))},e.next=function(){e.setState((function(e,t){return{currentIndex:e.currentIndex<t.errorRecords.length-1?e.currentIndex+1:0}}))},e.shortcutHandler=function(t){"Escape"===t?e.props.close():"ArrowLeft"===t?e.previous():"ArrowRight"===t&&e.next()},e}return A(r,[{key:"render",value:function(){var e=this.props,t=e.errorRecords,r=e.close,n=t.length;return o.a.createElement(c,{shortcutHandler:this.shortcutHandler},o.a.createElement(F,{close:r}),n>1&&o.a.createElement(G,{currentError:this.state.currentIndex+1,totalErrors:n,previous:this.previous,next:this.next}),o.a.createElement(fe,{errorRecord:t[this.state.currentIndex],editorHandler:this.props.editorHandler}),o.a.createElement(f,{line1:"This screen is visible only in development. It will not appear if the app crashes in production.",line2:"Open your browser\u2019s developer console to further inspect this error.  Click the \'X\' or hit ESC to dismiss this message."}))}}]),r}(n.PureComponent),pe={background:"white",color:"black",headerColor:"#ce1126",primaryPreBackground:"rgba(206, 17, 38, 0.05)",primaryPreColor:"inherit",secondaryPreBackground:"rgba(251, 245, 180, 0.3)",secondaryPreColor:"inherit",footer:"#878e91",anchorColor:"#878e91",toggleBackground:"transparent",toggleColor:"#878e91",closeColor:"#293238",navBackground:"rgba(206, 17, 38, 0.05)",navArrow:"#ce1126",base01:"#f5f5f5",base03:"#6e6e6e",base05:"#333333",base08:"#881280",base0B:"#1155cc",base0C:"#994500",base0E:"#c80000"},he={background:"#353535",color:"white",headerColor:"#e83b46",primaryPreBackground:"rgba(206, 17, 38, 0.1)",primaryPreColor:"#fccfcf",secondaryPreBackground:"rgba(251, 245, 180, 0.1)",secondaryPreColor:"#fbf5b4",footer:"#878e91",anchorColor:"#878e91",toggleBackground:"transparent",toggleColor:"#878e91",closeColor:"#ffffff",navBackground:"rgba(206, 17, 38, 0.2)",navArrow:"#ce1126",base01:"#282a2e",base03:"#969896",base05:"#c5c8c6",base08:"#cc6666",base0B:"#b5bd68",base0C:"#8abeb7",base0E:"#b294bb"};var ge=null,ve=window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?he:pe,me=Object(n.createContext)();window.updateContent=function(e){var t,r,n,a,l,u=(r=(t=e).currentBuildError,n=t.currentRuntimeErrorRecords,a=t.dismissRuntimeErrors,l=t.editorHandler,r?o.a.createElement(me.Provider,{value:ve},o.a.createElement(R,{error:r,editorHandler:l})):n.length>0?o.a.createElement(me.Provider,{value:ve},o.a.createElement(de,{errorRecords:n,close:a,editorHandler:l})):null);return null===u?(i.a.unmountComponentAtNode(ge),!1):(i.a.render(u,ge),!0)},document.body.style.margin="0",document.body.style["max-width"]="100vw",function(e,t){for(var r in e.setAttribute("style",""),t)t.hasOwnProperty(r)&&(e.style[r]=t[r])}(ge=document.createElement("div"),{width:"100%",height:"100%","box-sizing":"border-box","text-align":"center","background-color":ve.background}),document.body.appendChild(ge),window.parent.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady()}]);', ee = null, te = !1, re = !1, ne = null, oe = null, ae = [], ie = null, le = null;
            function ue(e) {
                ne = e, ee && me();
            }
            function ce(e) {
                oe = e, me();
            }
            function se(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                ie = t, X(pe(t))(e);
            }
            function fe() {
                oe = null, me();
            }
            function de(e) {
                if (null !== le) throw new Error("Already listening");
                e.launchEditorEndpoint && console.warn("Warning: `startReportingRuntimeErrors` doesn\u2019t accept `launchEditorEndpoint` argument anymore. Use `listenToOpenInEditor` instead with your own implementation to open errors in editor "), ie = e, le = K(pe(e), e.filename);
            }
            var pe = function(e) {
                return function(t) {
                    try {
                        "function" == typeof e.onError && e.onError.call(null);
                    } finally{
                        if (ae.some(function(e) {
                            return e.error === t.error;
                        })) return;
                        ae = ae.concat([
                            t
                        ]), me();
                    }
                };
            };
            function he() {
                ae = [], me();
            }
            function ge() {
                if (null === le) throw new Error("Not currently listening");
                ie = null;
                try {
                    le();
                } finally{
                    le = null;
                }
            }
            function me() {
                if (!te) {
                    if (re) ve();
                    else {
                        te = !0;
                        var e = window.document.createElement("iframe");
                        !function(e, t) {
                            for(var r in e.setAttribute("style", ""), t)t.hasOwnProperty(r) && (e.style[r] = t[r]);
                        }(e, J), e.onload = function() {
                            var t = e.contentDocument;
                            if (null != t && null != t.body) {
                                ee = e;
                                var r = e.contentWindow.document.createElement("script");
                                r.type = "text/javascript", r.innerHTML = Z, t.body.appendChild(r);
                            }
                        }, window.document.body.appendChild(e);
                    }
                }
            }
            function ve() {
                if (!ie) throw new Error("Expected options to be injected.");
                if (!ee) throw new Error("Iframe has not been created yet.");
                ee.contentWindow.updateContent({
                    currentBuildError: oe,
                    currentRuntimeErrorRecords: ae,
                    dismissRuntimeErrors: he,
                    editorHandler: ne
                }) || (window.document.body.removeChild(ee), ee = null, re = !1);
            }
            window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ = window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ || {}, window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady = function() {
                re = !0, te = !1, ve();
            };
        }
    ]);
});

},{"d1546958eb39fdcf":"d5jf4"}],"d5jf4":[function(require,module,exports) {
// shim for using process in browser
var process = module.exports = {};
// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var cachedSetTimeout;
var cachedClearTimeout;
function defaultSetTimout() {
    throw new Error("setTimeout has not been defined");
}
function defaultClearTimeout() {
    throw new Error("clearTimeout has not been defined");
}
(function() {
    try {
        if (typeof setTimeout === "function") cachedSetTimeout = setTimeout;
        else cachedSetTimeout = defaultSetTimout;
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === "function") cachedClearTimeout = clearTimeout;
        else cachedClearTimeout = defaultClearTimeout;
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations
    return setTimeout(fun, 0);
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations
    return clearTimeout(marker);
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;
function cleanUpNextTick() {
    if (!draining || !currentQueue) return;
    draining = false;
    if (currentQueue.length) queue = currentQueue.concat(queue);
    else queueIndex = -1;
    if (queue.length) drainQueue();
}
function drainQueue() {
    if (draining) return;
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while(len){
        currentQueue = queue;
        queue = [];
        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}
process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) runTimeout(drainQueue);
};
// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function() {
    this.fun.apply(null, this.array);
};
process.title = "browser";
process.browser = true;
process.env = {};
process.argv = [];
process.version = ""; // empty string to avoid regexp issues
process.versions = {};
function noop() {}
process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;
process.listeners = function(name) {
    return [];
};
process.binding = function(name) {
    throw new Error("process.binding is not supported");
};
process.cwd = function() {
    return "/";
};
process.chdir = function(dir) {
    throw new Error("process.chdir is not supported");
};
process.umask = function() {
    return 0;
};

},{}],"d8Dch":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$98a3 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$98a3.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _client = require("react-dom/client");
var _clientDefault = parcelHelpers.interopDefault(_client);
var _app = require("./App");
const app = document.getElementById("app");
const root = (0, _clientDefault.default).createRoot(app);
root.render(/*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _app.App), {}, void 0, false, {
    fileName: "src/index.jsx",
    lineNumber: 7,
    columnNumber: 13
}, undefined));

  $parcel$ReactRefreshHelpers$98a3.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","react-dom/client":"lOjBx","./App":"e9Zfo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"iTorj":[function(require,module,exports) {
"use strict";
module.exports = require("ee51401569654d91");

},{"ee51401569654d91":"48uCM"}],"48uCM":[function(require,module,exports) {
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    var React = require("58362d9d82be395f");
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for("react.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator";
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== "object") return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === "function") return maybeIterator;
        return null;
    }
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning("error", format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== "") {
            format += "%s";
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift("Warning: " + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
    function isValidElementType(type) {
        if (typeof type === "string" || typeof type === "function") return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || "Context";
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === "number") error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === "function") return type.displayName || type.name || null;
        if (typeof type === "string") return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return "\n" + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, "props", {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === "string") {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = "\n" + sampleLines[s].replace(" at new ", " at "); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes("<anonymous>")) _frame = _frame.replace("<anonymous>", fn.displayName);
                            if (typeof fn === "function") componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : "";
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        if (typeof fn === "function") componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return "";
        if (typeof type === "function") return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === "string") return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return "";
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== "function") {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error("Failed %s type: %s", location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;
    var didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
            var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function warnIfStringRefCannotBeAutoConverted(config, self) {
        if (typeof config.ref === "string" && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, "validated", {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, "_self", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, "_source", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */ function jsxDEV(type, config, maybeKey, source, self) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
        // but as an intermediary step, we will use jsxDEV for everything except
        // <div {...props} key="Hi" />, because we aren't currently able to tell if
        // key is explicitly declared to be undefined or not.
        if (maybeKey !== undefined) {
            checkKeyStringCoercion(maybeKey);
            key = "" + maybeKey;
        }
        if (hasValidKey(config)) {
            checkKeyStringCoercion(config.key);
            key = "" + config.key;
        }
        if (hasValidRef(config)) {
            ref = config.ref;
            warnIfStringRefCannotBeAutoConverted(config, self);
        } // Remaining properties are added to a new props object
        for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
         // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner$1.current) {
            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
            if (name) return "\n\nCheck the render method of `" + name + "`.";
        }
        return "";
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
        }
        return "";
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = "";
        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== "object") return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === "string") return;
        var propTypes;
        if (typeof type === "function") propTypes = type.propTypes;
        else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
        }
        if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error("Invalid attribute `ref` supplied to `React.Fragment`.");
            setCurrentlyValidatingElement$1(null);
        }
    }
    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = "";
            if (type === undefined || typeof type === "object" && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendum(source);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = "null";
            else if (isArray(type)) typeString = "array";
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
            } else typeString = typeof type;
            error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) {
            var children = props.children;
            if (children !== undefined) {
                if (isStaticChildren) {
                    if (isArray(children)) {
                        for(var i = 0; i < children.length; i++)validateChildKeys(children[i], type);
                        if (Object.freeze) Object.freeze(children);
                    } else error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                } else validateChildKeys(children, type);
            }
        }
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    } // These two functions exist to still get child warnings in dev
    var jsxDEV$1 = jsxWithValidation;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = jsxDEV$1;
})();

},{"58362d9d82be395f":"21dqq"}],"21dqq":[function(require,module,exports) {
"use strict";
module.exports = require("a569817e6ea559f6");

},{"a569817e6ea559f6":"6YvXz"}],"6YvXz":[function(require,module,exports) {
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var ReactVersion = "18.2.0";
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for("react.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator";
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== "object") return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === "function") return maybeIterator;
        return null;
    }
    /**
 * Keeps track of the current dispatcher.
 */ var ReactCurrentDispatcher = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    /**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */ var ReactCurrentBatchConfig = {
        transition: null
    };
    var ReactCurrentActQueue = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: false,
        didScheduleLegacyUpdate: false
    };
    /**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */ var ReactCurrentOwner = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    var ReactDebugCurrentFrame = {};
    var currentExtraStackFrame = null;
    function setExtraStackFrame(stack) {
        currentExtraStackFrame = stack;
    }
    ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
        currentExtraStackFrame = stack;
    }; // Stack implementation injected by the current renderer.
    ReactDebugCurrentFrame.getCurrentStack = null;
    ReactDebugCurrentFrame.getStackAddendum = function() {
        var stack = ""; // Add an extra top frame while an element is being validated
        if (currentExtraStackFrame) stack += currentExtraStackFrame;
         // Delegate to the injected renderer-specific implementation
        var impl = ReactDebugCurrentFrame.getCurrentStack;
        if (impl) stack += impl() || "";
        return stack;
    };
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    var ReactSharedInternals = {
        ReactCurrentDispatcher: ReactCurrentDispatcher,
        ReactCurrentBatchConfig: ReactCurrentBatchConfig,
        ReactCurrentOwner: ReactCurrentOwner
    };
    ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
    ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        printWarning("warn", format, args);
    }
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning("error", format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== "") {
            format += "%s";
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift("Warning: " + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var didWarnStateUpdateForUnmountedComponent = {};
    function warnNoop(publicInstance, callerName) {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
        var warningKey = componentName + "." + callerName;
        if (didWarnStateUpdateForUnmountedComponent[warningKey]) return;
        error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
    }
    /**
 * This is the abstract API for an update queue.
 */ var ReactNoopUpdateQueue = {
        /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */ isMounted: function(publicInstance) {
            return false;
        },
        /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, "forceUpdate");
        },
        /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, "replaceState");
        },
        /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, "setState");
        }
    };
    var assign = Object.assign;
    var emptyObject = {};
    Object.freeze(emptyObject);
    /**
 * Base class helpers for the updating state of a component.
 */ function Component(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
    }
    Component.prototype.isReactComponent = {};
    /**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */ Component.prototype.setState = function(partialState, callback) {
        if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, "setState");
    };
    /**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */ Component.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
    };
    var deprecatedAPIs = {
        isMounted: [
            "isMounted",
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            "replaceState",
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    };
    var defineDeprecationWarning = function(methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
            get: function() {
                warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                return undefined;
            }
        });
    };
    for(var fnName in deprecatedAPIs)if (deprecatedAPIs.hasOwnProperty(fnName)) defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    function ComponentDummy() {}
    ComponentDummy.prototype = Component.prototype;
    /**
 * Convenience component with default shallow equality check for sCU.
 */ function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
    assign(pureComponentPrototype, Component.prototype);
    pureComponentPrototype.isPureReactComponent = true;
    // an immutable object with a single mutable value
    function createRef() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || "Context";
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === "number") error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === "function") return type.displayName || type.name || null;
        if (typeof type === "string") return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
            var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    function warnIfStringRefCannotBeAutoConverted(config) {
        if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, "validated", {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, "_self", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, "_source", {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */ function createElement(type, config, children) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null;
        var self = null;
        var source = null;
        if (config != null) {
            if (hasValidRef(config)) {
                ref = config.ref;
                warnIfStringRefCannotBeAutoConverted(config);
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = "" + config.key;
            }
            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            if (Object.freeze) Object.freeze(childArray);
            props.children = childArray;
        } // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
        return newElement;
    }
    /**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */ function cloneElement(element, config, children) {
        if (element === null || element === undefined) throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        var propName; // Original props are copied
        var props = assign({}, element.props); // Reserved names are extracted
        var key = element.key;
        var ref = element.ref; // Self is preserved since the owner is preserved.
        var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
        // transpiler, and the original source is probably a better indicator of the
        // true owner.
        var source = element._source; // Owner will be preserved, unless ref is overridden
        var owner = element._owner;
        if (config != null) {
            if (hasValidRef(config)) {
                // Silently steal the ref from the parent.
                ref = config.ref;
                owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = "" + config.key;
            } // Remaining properties override existing props
            var defaultProps;
            if (element.type && element.type.defaultProps) defaultProps = element.type.defaultProps;
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) // Resolve default props
                props[propName] = defaultProps[propName];
                else props[propName] = config[propName];
            }
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            props.children = childArray;
        }
        return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    var SEPARATOR = ".";
    var SUBSEPARATOR = ":";
    /**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */ function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
            "=": "=0",
            ":": "=2"
        };
        var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
        });
        return "$" + escapedString;
    }
    /**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */ var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
        return text.replace(userProvidedKeyEscapeRegex, "$&/");
    }
    /**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */ function getElementKey(element, index) {
        // Do some typechecking here since we call this blindly. We want to ensure
        // that we don't block potential future ES APIs.
        if (typeof element === "object" && element !== null && element.key != null) {
            checkKeyStringCoercion(element.key);
            return escape("" + element.key);
        } // Implicit key determined by the index in the set
        return index.toString(36);
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if (type === "undefined" || type === "boolean") // All of the above are perceived as null.
        children = null;
        var invokeCallback = false;
        if (children === null) invokeCallback = true;
        else switch(type){
            case "string":
            case "number":
                invokeCallback = true;
                break;
            case "object":
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = true;
                }
        }
        if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
            // so that it's consistent if the number of children grows:
            var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray(mappedChild)) {
                var escapedChildKey = "";
                if (childKey != null) escapedChildKey = escapeUserProvidedKey(childKey) + "/";
                mapIntoArray(mappedChild, array, escapedChildKey, "", function(c) {
                    return c;
                });
            } else if (mappedChild != null) {
                if (isValidElement(mappedChild)) {
                    // The `if` statement here prevents auto-disabling of the safe
                    // coercion ESLint rule, so we must manually disable it below.
                    // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                    if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) checkKeyStringCoercion(mappedChild.key);
                    mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children
                    escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // eslint-disable-next-line react-internal/safe-string-coercion
                    escapeUserProvidedKey("" + mappedChild.key) + "/" : "") + childKey);
                }
                array.push(mappedChild);
            }
            return 1;
        }
        var child;
        var nextName;
        var subtreeCount = 0; // Count of children found in the current subtree.
        var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
        if (isArray(children)) for(var i = 0; i < children.length; i++){
            child = children[i];
            nextName = nextNamePrefix + getElementKey(child, i);
            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        }
        else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === "function") {
                var iterableChildren = children;
                // Warn about using Maps as children
                if (iteratorFn === iterableChildren.entries) {
                    if (!didWarnAboutMaps) warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                    didWarnAboutMaps = true;
                }
                var iterator = iteratorFn.call(iterableChildren);
                var step;
                var ii = 0;
                while(!(step = iterator.next()).done){
                    child = step.value;
                    nextName = nextNamePrefix + getElementKey(child, ii++);
                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                }
            } else if (type === "object") {
                // eslint-disable-next-line react-internal/safe-string-coercion
                var childrenString = String(children);
                throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). " + "If you meant to render a collection of children, use an array " + "instead.");
            }
        }
        return subtreeCount;
    }
    /**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */ function mapChildren(children, func, context) {
        if (children == null) return children;
        var result = [];
        var count = 0;
        mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    /**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */ function countChildren(children) {
        var n = 0;
        mapChildren(children, function() {
            n++; // Don't return anything
        });
        return n;
    }
    /**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */ function forEachChildren(children, forEachFunc, forEachContext) {
        mapChildren(children, function() {
            forEachFunc.apply(this, arguments); // Don't return anything.
        }, forEachContext);
    }
    /**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */ function toArray(children) {
        return mapChildren(children, function(child) {
            return child;
        }) || [];
    }
    /**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */ function onlyChild(children) {
        if (!isValidElement(children)) throw new Error("React.Children.only expected to receive a single React element child.");
        return children;
    }
    function createContext(defaultValue) {
        // TODO: Second argument used to be an optional `calculateChangedBits`
        // function. Warn to reserve for future use?
        var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            _defaultValue: null,
            _globalName: null
        };
        context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
        };
        var hasWarnedAboutUsingNestedContextConsumers = false;
        var hasWarnedAboutUsingConsumerProvider = false;
        var hasWarnedAboutDisplayNameOnConsumer = false;
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
            $$typeof: REACT_CONTEXT_TYPE,
            _context: context
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here
        Object.defineProperties(Consumer, {
            Provider: {
                get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                        hasWarnedAboutUsingConsumerProvider = true;
                        error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                },
                set: function(_Provider) {
                    context.Provider = _Provider;
                }
            },
            _currentValue: {
                get: function() {
                    return context._currentValue;
                },
                set: function(_currentValue) {
                    context._currentValue = _currentValue;
                }
            },
            _currentValue2: {
                get: function() {
                    return context._currentValue2;
                },
                set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                }
            },
            _threadCount: {
                get: function() {
                    return context._threadCount;
                },
                set: function(_threadCount) {
                    context._threadCount = _threadCount;
                }
            },
            Consumer: {
                get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                        hasWarnedAboutUsingNestedContextConsumers = true;
                        error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                }
            },
            displayName: {
                get: function() {
                    return context.displayName;
                },
                set: function(displayName) {
                    if (!hasWarnedAboutDisplayNameOnConsumer) {
                        warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                        hasWarnedAboutDisplayNameOnConsumer = true;
                    }
                }
            }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
        context.Consumer = Consumer;
        context._currentRenderer = null;
        context._currentRenderer2 = null;
        return context;
    }
    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;
    function lazyInitializer(payload) {
        if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor(); // Transition to the next state.
            // This might throw either because it's missing or throws. If so, we treat it
            // as still uninitialized and try again next time. Which is the same as what
            // happens if the ctor or any wrappers processing the ctor throws. This might
            // end up fixing it if the resolution was a concurrency bug.
            thenable.then(function(moduleObject) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var resolved = payload;
                    resolved._status = Resolved;
                    resolved._result = moduleObject;
                }
            }, function(error) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var rejected = payload;
                    rejected._status = Rejected;
                    rejected._result = error;
                }
            });
            if (payload._status === Uninitialized) {
                // In case, we're still uninitialized, then we're waiting for the thenable
                // to resolve. Set it as pending in the meantime.
                var pending = payload;
                pending._status = Pending;
                pending._result = thenable;
            }
        }
        if (payload._status === Resolved) {
            var moduleObject = payload._result;
            if (moduleObject === undefined) error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
            if (!("default" in moduleObject)) error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
            return moduleObject.default;
        } else throw payload._result;
    }
    function lazy(ctor) {
        var payload = {
            // We use these fields to store the result.
            _status: Uninitialized,
            _result: ctor
        };
        var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
        };
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes; // $FlowFixMe
        Object.defineProperties(lazyType, {
            defaultProps: {
                configurable: true,
                get: function() {
                    return defaultProps;
                },
                set: function(newDefaultProps) {
                    error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps = newDefaultProps; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, "defaultProps", {
                        enumerable: true
                    });
                }
            },
            propTypes: {
                configurable: true,
                get: function() {
                    return propTypes;
                },
                set: function(newPropTypes) {
                    error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, "propTypes", {
                        enumerable: true
                    });
                }
            }
        });
        return lazyType;
    }
    function forwardRef(render) {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
        else if (typeof render !== "function") error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
        else if (render.length !== 0 && render.length !== 2) error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
        if (render != null) {
            if (render.defaultProps != null || render.propTypes != null) error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        }
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        };
        var ownName;
        Object.defineProperty(elementType, "displayName", {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.forwardRef((props, ref) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!render.name && !render.displayName) render.displayName = name;
            }
        });
        return elementType;
    }
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
    function isValidElementType(type) {
        if (typeof type === "string" || typeof type === "function") return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function memo(type, compare) {
        if (!isValidElementType(type)) error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
        var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: compare === undefined ? null : compare
        };
        var ownName;
        Object.defineProperty(elementType, "displayName", {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.memo((props) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!type.name && !type.displayName) type.displayName = name;
            }
        });
        return elementType;
    }
    function resolveDispatcher() {
        var dispatcher = ReactCurrentDispatcher.current;
        if (dispatcher === null) error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        // intentionally don't throw our own error because this is in a hot path.
        // Also helps ensure this is inlined.
        return dispatcher;
    }
    function useContext(Context) {
        var dispatcher = resolveDispatcher();
        // TODO: add a more generic warning for invalid values.
        if (Context._context !== undefined) {
            var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
            // and nobody should be using this in existing code.
            if (realContext.Consumer === Context) error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
            else if (realContext.Provider === Context) error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return dispatcher.useContext(Context);
    }
    function useState(initialState) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useState(initialState);
    }
    function useReducer(reducer, initialArg, init) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useReducer(reducer, initialArg, init);
    }
    function useRef(initialValue) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useRef(initialValue);
    }
    function useEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useEffect(create, deps);
    }
    function useInsertionEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useInsertionEffect(create, deps);
    }
    function useLayoutEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useLayoutEffect(create, deps);
    }
    function useCallback(callback, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useCallback(callback, deps);
    }
    function useMemo(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useMemo(create, deps);
    }
    function useImperativeHandle(ref, create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useImperativeHandle(ref, create, deps);
    }
    function useDebugValue(value, formatterFn) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
    }
    function useTransition() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useTransition();
    }
    function useDeferredValue(value) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDeferredValue(value);
    }
    function useId() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useId();
    }
    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return "\n" + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher$1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, "props", {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === "string") {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = "\n" + sampleLines[s].replace(" at new ", " at "); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes("<anonymous>")) _frame = _frame.replace("<anonymous>", fn.displayName);
                            if (typeof fn === "function") componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher$1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : "";
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        if (typeof fn === "function") componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return "";
        if (typeof type === "function") return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === "string") return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return "";
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== "function") {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error("Failed %s type: %s", location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            setExtraStackFrame(stack);
        } else setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) return "\n\nCheck the render method of `" + name + "`.";
        }
        return "";
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
        }
        return "";
    }
    function getSourceInfoErrorAddendumForProps(elementProps) {
        if (elementProps !== null && elementProps !== undefined) return getSourceInfoErrorAddendum(elementProps.__source);
        return "";
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = "";
        if (element && element._owner && element._owner !== ReactCurrentOwner.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== "object") return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === "string") return;
        var propTypes;
        if (typeof type === "function") propTypes = type.propTypes;
        else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
        }
        if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error("Invalid attribute `ref` supplied to `React.Fragment`.");
            setCurrentlyValidatingElement$1(null);
        }
    }
    function createElementWithValidation(type, props, children) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = "";
            if (type === undefined || typeof type === "object" && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = "null";
            else if (isArray(type)) typeString = "array";
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info = " Did you accidentally export a JSX literal instead of a component?";
            } else typeString = typeof type;
            error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], type);
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    }
    var didWarnAboutDeprecatedCreateFactory = false;
    function createFactoryWithValidation(type) {
        var validatedFactory = createElementWithValidation.bind(null, type);
        validatedFactory.type = type;
        if (!didWarnAboutDeprecatedCreateFactory) {
            didWarnAboutDeprecatedCreateFactory = true;
            warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
        } // Legacy hook: remove it
        Object.defineProperty(validatedFactory, "type", {
            enumerable: false,
            get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                    value: type
                });
                return type;
            }
        });
        return validatedFactory;
    }
    function cloneElementWithValidation(element, props, children) {
        var newElement = cloneElement.apply(this, arguments);
        for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], newElement.type);
        validatePropTypes(newElement);
        return newElement;
    }
    function startTransition(scope, options) {
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = {};
        var currentTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition._updatedFibers = new Set();
        try {
            scope();
        } finally{
            ReactCurrentBatchConfig.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    var didWarnAboutMessageChannel = false;
    var enqueueTaskImpl = null;
    function enqueueTask(task) {
        if (enqueueTaskImpl === null) try {
            // read require off the module object to get around the bundlers.
            // we don't want them to detect a require and bundle a Node polyfill.
            var requireString = ("require" + Math.random()).slice(0, 7);
            var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
            // version of setImmediate, bypassing fake timers if any.
            enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
        } catch (_err) {
            // we're in a browser
            // we can't use regular timers because they may still be faked
            // so we try MessageChannel+postMessage instead
            enqueueTaskImpl = function(callback) {
                if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === "undefined") error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(undefined);
            };
        }
        return enqueueTaskImpl(task);
    }
    var actScopeDepth = 0;
    var didWarnNoAwaitAct = false;
    function act(callback) {
        // `act` calls can be nested, so we track the depth. This represents the
        // number of `act` scopes on the stack.
        var prevActScopeDepth = actScopeDepth;
        actScopeDepth++;
        if (ReactCurrentActQueue.current === null) // This is the outermost `act` scope. Initialize the queue. The reconciler
        // will detect the queue and use it instead of Scheduler.
        ReactCurrentActQueue.current = [];
        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
        var result;
        try {
            // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
            // set to `true` while the given callback is executed, not for updates
            // triggered during an async event, because this is how the legacy
            // implementation of `act` behaved.
            ReactCurrentActQueue.isBatchingLegacy = true;
            result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
            // which flushed updates immediately after the scope function exits, even
            // if it's an async function.
            if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                    ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                    flushActQueue(queue);
                }
            }
        } catch (error) {
            popActScope(prevActScopeDepth);
            throw error;
        } finally{
            ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
        }
        if (result !== null && typeof result === "object" && typeof result.then === "function") {
            var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
            // for it to resolve before exiting the current scope.
            var wasAwaited = false;
            var thenable = {
                then: function(resolve, reject) {
                    wasAwaited = true;
                    thenableResult.then(function(returnValue) {
                        popActScope(prevActScopeDepth);
                        if (actScopeDepth === 0) // We've exited the outermost act scope. Recursively flush the
                        // queue until there's no remaining work.
                        recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        else resolve(returnValue);
                    }, function(error) {
                        // The callback threw an error.
                        popActScope(prevActScopeDepth);
                        reject(error);
                    });
                }
            };
            if (!didWarnNoAwaitAct && typeof Promise !== "undefined") // eslint-disable-next-line no-undef
            Promise.resolve().then(function() {}).then(function() {
                if (!wasAwaited) {
                    didWarnNoAwaitAct = true;
                    error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                }
            });
            return thenable;
        } else {
            var returnValue = result; // The callback is not an async function. Exit the current scope
            // immediately, without awaiting.
            popActScope(prevActScopeDepth);
            if (actScopeDepth === 0) {
                // Exiting the outermost act scope. Flush the queue.
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                    flushActQueue(_queue);
                    ReactCurrentActQueue.current = null;
                } // Return a thenable. If the user awaits it, we'll flush again in
                // case additional work was scheduled by a microtask.
                var _thenable = {
                    then: function(resolve, reject) {
                        // Confirm we haven't re-entered another `act` scope, in case
                        // the user does something weird like await the thenable
                        // multiple times.
                        if (ReactCurrentActQueue.current === null) {
                            // Recursively flush the queue until there's no remaining work.
                            ReactCurrentActQueue.current = [];
                            recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        } else resolve(returnValue);
                    }
                };
                return _thenable;
            } else {
                // Since we're inside a nested `act` scope, the returned thenable
                // immediately resolves. The outer scope will flush the queue.
                var _thenable2 = {
                    then: function(resolve, reject) {
                        resolve(returnValue);
                    }
                };
                return _thenable2;
            }
        }
    }
    function popActScope(prevActScopeDepth) {
        if (prevActScopeDepth !== actScopeDepth - 1) error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
        actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        var queue = ReactCurrentActQueue.current;
        if (queue !== null) try {
            flushActQueue(queue);
            enqueueTask(function() {
                if (queue.length === 0) {
                    // No additional work was scheduled. Finish.
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                } else // Keep flushing work until there's none left.
                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            });
        } catch (error) {
            reject(error);
        }
        else resolve(returnValue);
    }
    var isFlushing = false;
    function flushActQueue(queue) {
        if (!isFlushing) {
            // Prevent re-entrance.
            isFlushing = true;
            var i = 0;
            try {
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(true);
                    while (callback !== null);
                }
                queue.length = 0;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                queue = queue.slice(i + 1);
                throw error;
            } finally{
                isFlushing = false;
            }
        }
    }
    var createElement$1 = createElementWithValidation;
    var cloneElement$1 = cloneElementWithValidation;
    var createFactory = createFactoryWithValidation;
    var Children = {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
    };
    exports.Children = Children;
    exports.Component = Component;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
    exports.cloneElement = cloneElement$1;
    exports.createContext = createContext;
    exports.createElement = createElement$1;
    exports.createFactory = createFactory;
    exports.createRef = createRef;
    exports.forwardRef = forwardRef;
    exports.isValidElement = isValidElement;
    exports.lazy = lazy;
    exports.memo = memo;
    exports.startTransition = startTransition;
    exports.unstable_act = act;
    exports.useCallback = useCallback;
    exports.useContext = useContext;
    exports.useDebugValue = useDebugValue;
    exports.useDeferredValue = useDeferredValue;
    exports.useEffect = useEffect;
    exports.useId = useId;
    exports.useImperativeHandle = useImperativeHandle;
    exports.useInsertionEffect = useInsertionEffect;
    exports.useLayoutEffect = useLayoutEffect;
    exports.useMemo = useMemo;
    exports.useReducer = useReducer;
    exports.useRef = useRef;
    exports.useState = useState;
    exports.useSyncExternalStore = useSyncExternalStore;
    exports.useTransition = useTransition;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"lOjBx":[function(require,module,exports) {
"use strict";
var m = require("aaccff5d309d9239");
var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
exports.createRoot = function(c, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.createRoot(c, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};
exports.hydrateRoot = function(c, h, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.hydrateRoot(c, h, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};

},{"aaccff5d309d9239":"j6uA9"}],"j6uA9":[function(require,module,exports) {
"use strict";
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error("^_^");
}
module.exports = require("b0f0e6b9e8349dac");

},{"b0f0e6b9e8349dac":"3iA9v"}],"3iA9v":[function(require,module,exports) {
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var React = require("6f0162e9ab224cd4");
    var Scheduler = require("8ad4ca65319d28a7");
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    var suppressWarning = false;
    function setSuppressWarning(newSuppressWarning) {
        suppressWarning = newSuppressWarning;
    } // In DEV, calls to console.warn and console.error get replaced
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        if (!suppressWarning) {
            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
            printWarning("warn", format, args);
        }
    }
    function error(format) {
        if (!suppressWarning) {
            for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
            printWarning("error", format, args);
        }
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== "") {
            format += "%s";
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift("Warning: " + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class
    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var ScopeComponent = 21;
    var OffscreenComponent = 22;
    var LegacyHiddenComponent = 23;
    var CacheComponent = 24;
    var TracingMarkerComponent = 25;
    // -----------------------------------------------------------------------------
    var enableClientRenderFallbackOnTextMismatch = true; // TODO: Need to review this code one more time before landing
    // the react-reconciler package.
    var enableNewReconciler = false; // Support legacy Primer support on internal FB www
    var enableLazyContextPropagation = false; // FB-only usage. The new API has different semantics.
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    var enableSuspenseAvoidThisFallback = false; // Enables unstable_avoidThisFallback feature in Fizz
    // React DOM Chopping Block
    //
    // Similar to main Chopping Block but only flags related to React DOM. These are
    // grouped because we will likely batch all of them into a single major release.
    // -----------------------------------------------------------------------------
    // Disable support for comment nodes as React DOM containers. Already disabled
    // in open source, but www codebase still relies on it. Need to remove.
    var disableCommentsAsDOMContainers = true; // Disable javascript: URL strings in href for XSS protection.
    // and client rendering, mostly to allow JSX attributes to apply to the custom
    // element's object properties instead of only HTML attributes.
    // https://github.com/facebook/react/issues/11347
    var enableCustomElementPropertySupport = false; // Disables children for <textarea> elements
    var warnAboutStringRefs = false; // -----------------------------------------------------------------------------
    // Debugging and DevTools
    // -----------------------------------------------------------------------------
    // Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
    // for an experimental timeline tool.
    var enableSchedulingProfiler = true; // Helps identify side effects in render-phase lifecycle hooks and setState
    var enableProfilerTimer = true; // Record durations for commit and passive effects phases.
    var enableProfilerCommitHooks = true; // Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".
    var allNativeEvents = new Set();
    /**
 * Mapping from registration name to event name
 */ var registrationNameDependencies = {};
    /**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */ var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + "Capture", dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        if (registrationNameDependencies[registrationName]) error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;
        if (registrationName === "onDoubleClick") possibleRegistrationNames.ondblclick = registrationName;
        for(var i = 0; i < dependencies.length; i++)allNativeEvents.add(dependencies[i]);
    }
    var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkPropStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.
    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the filter are presumed to have this type.
    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.
    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.
    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.
    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.
    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */ var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */ var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return true;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return false;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
        }
        illegalAttributeNameCache[attributeName] = true;
        error("Invalid attribute name: `%s`", attributeName);
        return false;
    }
    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null) return propertyInfo.type === RESERVED;
        if (isCustomComponentTag) return false;
        if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) return true;
        return false;
    }
    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED) return false;
        switch(typeof value){
            case "function":
            case "symbol":
                // eslint-disable-line
                return true;
            case "boolean":
                if (isCustomComponentTag) return false;
                if (propertyInfo !== null) return !propertyInfo.acceptsBooleans;
                else {
                    var prefix = name.toLowerCase().slice(0, 5);
                    return prefix !== "data-" && prefix !== "aria-";
                }
            default:
                return false;
        }
    }
    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
        if (value === null || typeof value === "undefined") return true;
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) return true;
        if (isCustomComponentTag) return false;
        if (propertyInfo !== null) switch(propertyInfo.type){
            case BOOLEAN:
                return !value;
            case OVERLOADED_BOOLEAN:
                return value === false;
            case NUMERIC:
                return isNaN(value);
            case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
        }
        return false;
    }
    function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
    }
    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
        this.attributeName = attributeName;
        this.attributeNamespace = attributeNamespace;
        this.mustUseProperty = mustUseProperty;
        this.propertyName = name;
        this.type = type;
        this.sanitizeURL = sanitizeURL;
        this.removeEmptyString = removeEmptyString;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.
    var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.
    var reservedProps = [
        "children",
        "dangerouslySetInnerHTML",
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        "defaultValue",
        "defaultChecked",
        "innerHTML",
        "suppressContentEditableWarning",
        "suppressHydrationWarning",
        "style"
    ];
    reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.
    [
        [
            "acceptCharset",
            "accept-charset"
        ],
        [
            "className",
            "class"
        ],
        [
            "htmlFor",
            "for"
        ],
        [
            "httpEquiv",
            "http-equiv"
        ]
    ].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    [
        "contentEditable",
        "draggable",
        "spellCheck",
        "value"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.
    [
        "autoReverse",
        "externalResourcesRequired",
        "focusable",
        "preserveAlpha"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
    }); // These are HTML boolean attributes.
    [
        "allowFullScreen",
        "async",
        // on the client side because the browsers are inconsistent. Instead we call focus().
        "autoFocus",
        "autoPlay",
        "controls",
        "default",
        "defer",
        "disabled",
        "disablePictureInPicture",
        "disableRemotePlayback",
        "formNoValidate",
        "hidden",
        "loop",
        "noModule",
        "noValidate",
        "open",
        "playsInline",
        "readOnly",
        "required",
        "reversed",
        "scoped",
        "seamless",
        "itemScope"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.
    [
        "checked",
        // disabled with `removeAttribute`. We have special logic for handling this.
        "multiple",
        "muted",
        "selected" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.
    [
        "capture",
        "download" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
    }); // These are HTML attributes that must be positive numbers.
    [
        "cols",
        "rows",
        "size",
        "span" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
    }); // These are HTML attributes that must be numbers.
    [
        "rowSpan",
        "start"
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;
    var capitalize = function(token) {
        return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML attribute filter.
    // Some of these attributes can be hard to find. This list was created by
    // scraping the MDN documentation.
    [
        "accent-height",
        "alignment-baseline",
        "arabic-form",
        "baseline-shift",
        "cap-height",
        "clip-path",
        "clip-rule",
        "color-interpolation",
        "color-interpolation-filters",
        "color-profile",
        "color-rendering",
        "dominant-baseline",
        "enable-background",
        "fill-opacity",
        "fill-rule",
        "flood-color",
        "flood-opacity",
        "font-family",
        "font-size",
        "font-size-adjust",
        "font-stretch",
        "font-style",
        "font-variant",
        "font-weight",
        "glyph-name",
        "glyph-orientation-horizontal",
        "glyph-orientation-vertical",
        "horiz-adv-x",
        "horiz-origin-x",
        "image-rendering",
        "letter-spacing",
        "lighting-color",
        "marker-end",
        "marker-mid",
        "marker-start",
        "overline-position",
        "overline-thickness",
        "paint-order",
        "panose-1",
        "pointer-events",
        "rendering-intent",
        "shape-rendering",
        "stop-color",
        "stop-opacity",
        "strikethrough-position",
        "strikethrough-thickness",
        "stroke-dasharray",
        "stroke-dashoffset",
        "stroke-linecap",
        "stroke-linejoin",
        "stroke-miterlimit",
        "stroke-opacity",
        "stroke-width",
        "text-anchor",
        "text-decoration",
        "text-rendering",
        "underline-position",
        "underline-thickness",
        "unicode-bidi",
        "unicode-range",
        "units-per-em",
        "v-alphabetic",
        "v-hanging",
        "v-ideographic",
        "v-mathematical",
        "vector-effect",
        "vert-adv-y",
        "vert-origin-x",
        "vert-origin-y",
        "word-spacing",
        "writing-mode",
        "xmlns:xlink",
        "x-height" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // String SVG attributes with the xlink namespace.
    [
        "xlink:actuate",
        "xlink:arcrole",
        "xlink:role",
        "xlink:show",
        "xlink:title",
        "xlink:type" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/1999/xlink", false, false);
    }); // String SVG attributes with the xml namespace.
    [
        "xml:base",
        "xml:lang",
        "xml:space" // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, "http://www.w3.org/XML/1998/namespace", false, false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.
    [
        "tabIndex",
        "crossOrigin"
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.
    var xlinkHref = "xlinkHref";
    properties[xlinkHref] = new PropertyInfoRecord("xlinkHref", STRING, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
    [
        "src",
        "href",
        "action",
        "formAction"
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
    });
    // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space
    /* eslint-disable max-len */ var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;
    function sanitizeURL(url) {
        if (!didWarn && isJavaScriptProtocol.test(url)) {
            didWarn = true;
            error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
        }
    }
    /**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */ function getValueForProperty(node, name, expected, propertyInfo) {
        if (propertyInfo.mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            return node[propertyName];
        } else {
            checkAttributeStringCoercion(expected, name);
            if (propertyInfo.sanitizeURL) // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            // eslint-disable-next-line react-internal/safe-string-coercion
            sanitizeURL("" + expected);
            var attributeName = propertyInfo.attributeName;
            var stringValue = null;
            if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === "") return true;
                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return value;
                     // eslint-disable-next-line react-internal/safe-string-coercion
                    if (value === "" + expected) return expected;
                    return value;
                }
            } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) // We had an attribute but shouldn't have had one, so read it
                // for the error message.
                return node.getAttribute(attributeName);
                if (propertyInfo.type === BOOLEAN) // If this was a boolean, it doesn't matter what the value is
                // the fact that we have it is the same as the expected.
                return expected;
                 // Even if this property uses a namespace we use getAttribute
                // because we assume its namespaced name is the same as our config.
                // To use getAttributeNS we need the local name which we don't have
                // in our config atm.
                stringValue = node.getAttribute(attributeName);
            }
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return stringValue === null ? expected : stringValue; // eslint-disable-next-line react-internal/safe-string-coercion
            else if (stringValue === "" + expected) return expected;
            else return stringValue;
        }
    }
    /**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */ function getValueForAttribute(node, name, expected, isCustomComponentTag) {
        if (!isAttributeNameSafe(name)) return;
        if (!node.hasAttribute(name)) return expected === undefined ? undefined : null;
        var value = node.getAttribute(name);
        checkAttributeStringCoercion(expected, name);
        if (value === "" + expected) return expected;
        return value;
    }
    /**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */ function setValueForProperty(node, name, value, isCustomComponentTag) {
        var propertyInfo = getPropertyInfo(name);
        if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) return;
        if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) value = null;
        if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) node.removeAttribute(_attributeName);
                else {
                    checkAttributeStringCoercion(value, name);
                    node.setAttribute(_attributeName, "" + value);
                }
            }
            return;
        }
        var mustUseProperty = propertyInfo.mustUseProperty;
        if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
                var type = propertyInfo.type;
                node[propertyName] = type === BOOLEAN ? false : "";
            } else // Contrary to `setAttribute`, object properties are properly
            // `toString`ed by IE8/9.
            node[propertyName] = value;
            return;
        } // The rest are treated as attributes with special cases.
        var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
        if (value === null) node.removeAttribute(attributeName);
        else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) // If attribute type is boolean, we know for sure it won't be an execution sink
            // and we won't require Trusted Type here.
            attributeValue = "";
            else {
                checkAttributeStringCoercion(value, attributeName);
                attributeValue = "" + value;
                if (propertyInfo.sanitizeURL) sanitizeURL(attributeValue.toString());
            }
            if (attributeNamespace) node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            else node.setAttribute(attributeName, attributeValue);
        }
    }
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types.
    var REACT_ELEMENT_TYPE = Symbol.for("react.element");
    var REACT_PORTAL_TYPE = Symbol.for("react.portal");
    var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
    var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
    var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
    var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
    var REACT_CONTEXT_TYPE = Symbol.for("react.context");
    var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
    var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
    var REACT_MEMO_TYPE = Symbol.for("react.memo");
    var REACT_LAZY_TYPE = Symbol.for("react.lazy");
    var REACT_SCOPE_TYPE = Symbol.for("react.scope");
    var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
    var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
    var REACT_CACHE_TYPE = Symbol.for("react.cache");
    var REACT_TRACING_MARKER_TYPE = Symbol.for("react.tracing_marker");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator";
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== "object") return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === "function") return maybeIterator;
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || "";
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return "\n" + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return "";
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, "props", {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === "string") {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = "\n" + sampleLines[s].replace(" at new ", " at "); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes("<anonymous>")) _frame = _frame.replace("<anonymous>", fn.displayName);
                            if (typeof fn === "function") componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0);
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : "";
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        if (typeof fn === "function") componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, true);
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return "";
        if (typeof type === "function") return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === "string") return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return "";
    }
    function describeFiber(fiber) {
        var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
        var source = fiber._debugSource;
        switch(fiber.tag){
            case HostComponent:
                return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
                return describeBuiltInComponentFrame("Lazy");
            case SuspenseComponent:
                return describeBuiltInComponentFrame("Suspense");
            case SuspenseListComponent:
                return describeBuiltInComponentFrame("SuspenseList");
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
                return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
                return describeFunctionComponentFrame(fiber.type.render);
            case ClassComponent:
                return describeClassComponentFrame(fiber.type);
            default:
                return "";
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = "";
            var node = workInProgress;
            do {
                info += describeFiber(node);
                node = node.return;
            }while (node);
            return info;
        } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || "Context";
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === "number") error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === "function") return type.displayName || type.name || null;
        if (typeof type === "string") return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
        }
        if (typeof type === "object") switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    function getWrappedName$1(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || "";
        return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
    } // Keep in sync with shared/getComponentNameFromType
    function getContextName$1(type) {
        return type.displayName || "Context";
    }
    function getComponentNameFromFiber(fiber) {
        var tag = fiber.tag, type = fiber.type;
        switch(tag){
            case CacheComponent:
                return "Cache";
            case ContextConsumer:
                var context = type;
                return getContextName$1(context) + ".Consumer";
            case ContextProvider:
                var provider = type;
                return getContextName$1(provider._context) + ".Provider";
            case DehydratedFragment:
                return "DehydratedFragment";
            case ForwardRef:
                return getWrappedName$1(type, type.render, "ForwardRef");
            case Fragment:
                return "Fragment";
            case HostComponent:
                // Host component type is the display name (e.g. "div", "View")
                return type;
            case HostPortal:
                return "Portal";
            case HostRoot:
                return "Root";
            case HostText:
                return "Text";
            case LazyComponent:
                // Name comes from the type in this case; we don't have a tag.
                return getComponentNameFromType(type);
            case Mode:
                if (type === REACT_STRICT_MODE_TYPE) // Don't be less specific than shared/getComponentNameFromType
                return "StrictMode";
                return "Mode";
            case OffscreenComponent:
                return "Offscreen";
            case Profiler:
                return "Profiler";
            case ScopeComponent:
                return "Scope";
            case SuspenseComponent:
                return "Suspense";
            case SuspenseListComponent:
                return "SuspenseList";
            case TracingMarkerComponent:
                return "TracingMarker";
            // The display name for this tags come from the user-provided type:
            case ClassComponent:
            case FunctionComponent:
            case IncompleteClassComponent:
            case IndeterminateComponent:
            case MemoComponent:
            case SimpleMemoComponent:
                if (typeof type === "function") return type.displayName || type.name || null;
                if (typeof type === "string") return type;
                break;
        }
        return null;
    }
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var current = null;
    var isRendering = false;
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (current === null) return null;
        var owner = current._debugOwner;
        if (owner !== null && typeof owner !== "undefined") return getComponentNameFromFiber(owner);
        return null;
    }
    function getCurrentFiberStackInDev() {
        if (current === null) return "";
         // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.
        return getStackByFiberInDevAndProd(current);
    }
    function resetCurrentFiber() {
        ReactDebugCurrentFrame.getCurrentStack = null;
        current = null;
        isRendering = false;
    }
    function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
        current = fiber;
        isRendering = false;
    }
    function getCurrentFiber() {
        return current;
    }
    function setIsRendering(rendering) {
        isRendering = rendering;
    }
    // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.
    function toString(value) {
        // The coercion safety check is performed in getToStringValue().
        // eslint-disable-next-line react-internal/safe-string-coercion
        return "" + value;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case "boolean":
            case "number":
            case "string":
            case "undefined":
                return value;
            case "object":
                checkFormFieldValueStringCoercion(value);
                return value;
            default:
                // function, symbol are assigned as empty strings
                return "";
        }
    }
    var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
    };
    function checkControlledValueProps(tagName, props) {
        if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
        if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isCheckable(elem) {
        var type = elem.type;
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
    }
    function getTracker(node) {
        return node._valueTracker;
    }
    function detachTracker(node) {
        node._valueTracker = null;
    }
    function getValueFromNode(node) {
        var value = "";
        if (!node) return value;
        if (isCheckable(node)) value = node.checked ? "true" : "false";
        else value = node.value;
        return value;
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? "checked" : "value";
        var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = "" + node[valueField]; // if someone has already defined a value or Safari, then bail
        // and don't track value will cause over reporting of changes,
        // but it's better then a hard failure
        // (needed for certain tests that spyOn input values and Safari)
        if (node.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") return;
        var get = descriptor.get, set = descriptor.set;
        Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
                return get.call(this);
            },
            set: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = "" + value;
                set.call(this, value);
            }
        }); // We could've passed this the first time
        // but it triggers a bug in IE11 and Edge 14/15.
        // Calling defineProperty() again should be equivalent.
        // https://github.com/facebook/react/issues/11768
        Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
        });
        var tracker = {
            getValue: function() {
                return currentValue;
            },
            setValue: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = "" + value;
            },
            stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
            }
        };
        return tracker;
    }
    function track(node) {
        if (getTracker(node)) return;
         // TODO: Once it's just Fiber we can move this to node._wrapperState
        node._valueTracker = trackValueOnNode(node);
    }
    function updateValueIfChanged(node) {
        if (!node) return false;
        var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
        // that trying again will succeed
        if (!tracker) return true;
        var lastValue = tracker.getValue();
        var nextValue = getValueFromNode(node);
        if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
        }
        return false;
    }
    function getActiveElement(doc) {
        doc = doc || (typeof document !== "undefined" ? document : undefined);
        if (typeof doc === "undefined") return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function isControlled(props) {
        var usesChecked = props.type === "checkbox" || props.type === "radio";
        return usesChecked ? props.checked != null : props.value != null;
    }
    /**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */ function getHostProps(element, props) {
        var node = element;
        var checked = props.checked;
        var hostProps = assign({}, props, {
            defaultChecked: undefined,
            defaultValue: undefined,
            value: undefined,
            checked: checked != null ? checked : node._wrapperState.initialChecked
        });
        return hostProps;
    }
    function initWrapperState(element, props) {
        checkControlledValueProps("input", props);
        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
            didWarnCheckedDefaultChecked = true;
        }
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
            didWarnValueDefaultValue = true;
        }
        var node = element;
        var defaultValue = props.defaultValue == null ? "" : props.defaultValue;
        node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
        };
    }
    function updateChecked(element, props) {
        var node = element;
        var checked = props.checked;
        if (checked != null) setValueForProperty(node, "checked", checked, false);
    }
    function updateWrapper(element, props) {
        var node = element;
        var controlled = isControlled(props);
        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnUncontrolledToControlled = true;
        }
        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnControlledToUncontrolled = true;
        }
        updateChecked(element, props);
        var value = getToStringValue(props.value);
        var type = props.type;
        if (value != null) {
            if (type === "number") {
                if (value === 0 && node.value === "" || // We explicitly want to coerce to number here if possible.
                // eslint-disable-next-line
                node.value != value) node.value = toString(value);
            } else if (node.value !== toString(value)) node.value = toString(value);
        } else if (type === "submit" || type === "reset") {
            // Submit/reset inputs need the attribute removed completely to avoid
            // blank-text buttons.
            node.removeAttribute("value");
            return;
        }
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty("value")) setDefaultValue(node, props.type, value);
        else if (props.hasOwnProperty("defaultValue")) setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) node.defaultChecked = !!props.defaultChecked;
    }
    function postMountWrapper(element, props, isHydrating) {
        var node = element; // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.
        if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
            var type = props.type;
            var isButton = type === "submit" || type === "reset"; // Avoid setting value attribute on submit/reset inputs as it overrides the
            // default value provided by the browser. See: #12872
            if (isButton && (props.value === undefined || props.value === null)) return;
            var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
            // from being lost during SSR hydration.
            if (!isHydrating) // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            {
                if (initialValue !== node.value) node.value = initialValue;
            }
            // Otherwise, the value attribute is synchronized to the property,
            // so we assign defaultValue to the same thing as the value property
            // assignment step above.
            node.defaultValue = initialValue;
        } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
        // this is needed to work around a chrome bug where setting defaultChecked
        // will sometimes influence the value of checked (even after detachment).
        // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
        // We need to temporarily unset name to avoid disrupting radio button groups.
        var name = node.name;
        if (name !== "") node.name = "";
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
        if (name !== "") node.name = name;
    }
    function restoreControlledState(element, props) {
        var node = element;
        updateWrapper(node, props);
        updateNamedCousins(node, props);
    }
    function updateNamedCousins(rootNode, props) {
        var name = props.name;
        if (props.type === "radio" && name != null) {
            var queryRoot = rootNode;
            while(queryRoot.parentNode)queryRoot = queryRoot.parentNode;
             // If `rootNode.form` was non-null, then we could try `form.elements`,
            checkAttributeStringCoercion(name, "name");
            var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]');
            for(var i = 0; i < group.length; i++){
                var otherNode = group[i];
                if (otherNode === rootNode || otherNode.form !== rootNode.form) continue;
                 // This will throw if radio buttons rendered by different copies of React
                // and the same name are rendered into the same form (same as #1939).
                // That's probably okay; we don't support it just as we don't support
                // mixing React radio buttons with non-React ones.
                var otherProps = getFiberCurrentPropsFromNode(otherNode);
                if (!otherProps) throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                 // We need update the tracked value on the named cousin since the value
                // was changed but the input saw no event or value set
                updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
                // was previously checked to update will cause it to be come re-checked
                // as appropriate.
                updateWrapper(otherNode, otherProps);
            }
        }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253
    function setDefaultValue(node, type, value) {
        if (type !== "number" || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) node.defaultValue = toString(node._wrapperState.initialValue);
            else if (node.defaultValue !== toString(value)) node.defaultValue = toString(value);
        }
    }
    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;
    var didWarnInvalidInnerHTML = false;
    /**
 * Implements an <option> host component that warns when `selected` is set.
 */ function validateProps(element, props) {
        // If a value is not provided, then the children must be simple.
        if (props.value == null) {
            if (typeof props.children === "object" && props.children !== null) React.Children.forEach(props.children, function(child) {
                if (child == null) return;
                if (typeof child === "string" || typeof child === "number") return;
                if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                }
            });
            else if (props.dangerouslySetInnerHTML != null) {
                if (!didWarnInvalidInnerHTML) {
                    didWarnInvalidInnerHTML = true;
                    error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                }
            }
        } // TODO: Remove support for `selected` in <option>.
        if (props.selected != null && !didWarnSelectedSetOnOption) {
            error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
            didWarnSelectedSetOnOption = true;
        }
    }
    function postMountWrapper$1(element, props) {
        // value="" should make a value attribute (#6219)
        if (props.value != null) element.setAttribute("value", toString(getToStringValue(props.value)));
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    var didWarnValueDefaultValue$1;
    didWarnValueDefaultValue$1 = false;
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        if (ownerName) return "\n\nCheck the render method of `" + ownerName + "`.";
        return "";
    }
    var valuePropNames = [
        "value",
        "defaultValue"
    ];
    /**
 * Validation function for `value` and `defaultValue`.
 */ function checkSelectPropTypes(props) {
        checkControlledValueProps("select", props);
        for(var i = 0; i < valuePropNames.length; i++){
            var propName = valuePropNames[i];
            if (props[propName] == null) continue;
            var propNameIsArray = isArray(props[propName]);
            if (props.multiple && !propNameIsArray) error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
            else if (!props.multiple && propNameIsArray) error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
        }
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        var options = node.options;
        if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for(var i = 0; i < selectedValues.length; i++)// Prefix to avoid chaos with special keys.
            selectedValue["$" + selectedValues[i]] = true;
            for(var _i = 0; _i < options.length; _i++){
                var selected = selectedValue.hasOwnProperty("$" + options[_i].value);
                if (options[_i].selected !== selected) options[_i].selected = selected;
                if (selected && setDefaultSelected) options[_i].defaultSelected = true;
            }
        } else {
            // Do not set `select.value` as exact behavior isn't consistent across all
            // browsers for all cases.
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for(var _i2 = 0; _i2 < options.length; _i2++){
                if (options[_i2].value === _selectedValue) {
                    options[_i2].selected = true;
                    if (setDefaultSelected) options[_i2].defaultSelected = true;
                    return;
                }
                if (defaultSelected === null && !options[_i2].disabled) defaultSelected = options[_i2];
            }
            if (defaultSelected !== null) defaultSelected.selected = true;
        }
    }
    /**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */ function getHostProps$1(element, props) {
        return assign({}, props, {
            value: undefined
        });
    }
    function initWrapperState$1(element, props) {
        var node = element;
        checkSelectPropTypes(props);
        node._wrapperState = {
            wasMultiple: !!props.multiple
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
            error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
            didWarnValueDefaultValue$1 = true;
        }
    }
    function postMountWrapper$2(element, props) {
        var node = element;
        node.multiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
    }
    function postUpdateWrapper(element, props) {
        var node = element;
        var wasMultiple = node._wrapperState.wasMultiple;
        node._wrapperState.wasMultiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (wasMultiple !== !!props.multiple) {
            // For simplicity, reapply `defaultValue` if `multiple` is toggled.
            if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
            else // Revert the select back to its default unselected state.
            updateOptions(node, !!props.multiple, props.multiple ? [] : "", false);
        }
    }
    function restoreControlledState$1(element, props) {
        var node = element;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
    }
    var didWarnValDefaultVal = false;
    /**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */ function getHostProps$2(element, props) {
        var node = element;
        if (props.dangerouslySetInnerHTML != null) throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
         // Always set children to the same thing. In IE9, the selection range will
        // get reset if `textContent` is mutated.  We could add a check in setTextContent
        // to only set the value if/when the value differs from the node value (which would
        // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
        // solution. The value can be a boolean or object so that's why it's forced
        // to be a string.
        var hostProps = assign({}, props, {
            value: undefined,
            defaultValue: undefined,
            children: toString(node._wrapperState.initialValue)
        });
        return hostProps;
    }
    function initWrapperState$2(element, props) {
        var node = element;
        checkControlledValueProps("textarea", props);
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
            didWarnValDefaultVal = true;
        }
        var initialValue = props.value; // Only bother fetching default value if we're going to use it
        if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
                error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                if (defaultValue != null) throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                if (isArray(children)) {
                    if (children.length > 1) throw new Error("<textarea> can only have at most one child.");
                    children = children[0];
                }
                defaultValue = children;
            }
            if (defaultValue == null) defaultValue = "";
            initialValue = defaultValue;
        }
        node._wrapperState = {
            initialValue: getToStringValue(initialValue)
        };
    }
    function updateWrapper$1(element, props) {
        var node = element;
        var value = getToStringValue(props.value);
        var defaultValue = getToStringValue(props.defaultValue);
        if (value != null) {
            // Cast `value` to a string to ensure the value is set correctly. While
            // browsers typically do this as necessary, jsdom doesn't.
            var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed
            if (newValue !== node.value) node.value = newValue;
            if (props.defaultValue == null && node.defaultValue !== newValue) node.defaultValue = newValue;
        }
        if (defaultValue != null) node.defaultValue = toString(defaultValue);
    }
    function postMountWrapper$3(element, props) {
        var node = element; // This is in postMount because we need access to the DOM node, which is not
        // available until after the component has mounted.
        var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
        // initial value. In IE10/IE11 there is a bug where the placeholder attribute
        // will populate textContent as well.
        // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
        if (textContent === node._wrapperState.initialValue) {
            if (textContent !== "" && textContent !== null) node.value = textContent;
        }
    }
    function restoreControlledState$2(element, props) {
        // DOM component is still mounted; update
        updateWrapper$1(element, props);
    }
    var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
    var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
    var SVG_NAMESPACE = "http://www.w3.org/2000/svg"; // Assumes there is no parent namespace.
    function getIntrinsicNamespace(type) {
        switch(type){
            case "svg":
                return SVG_NAMESPACE;
            case "math":
                return MATH_NAMESPACE;
            default:
                return HTML_NAMESPACE;
        }
    }
    function getChildNamespace(parentNamespace, type) {
        if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
        if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") // We're leaving SVG.
        return HTML_NAMESPACE;
         // By default, pass namespace below.
        return parentNamespace;
    }
    /* globals MSApp */ /**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */ var createMicrosoftUnsafeLocalFunction = function(func) {
        if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) return function(arg0, arg1, arg2, arg3) {
            MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
            });
        };
        else return func;
    };
    var reusableSVGContainer;
    /**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */ var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
        if (node.namespaceURI === SVG_NAMESPACE) {
            if (!("innerHTML" in node)) {
                // IE does not have innerHTML for SVG nodes, so instead we inject the
                // new markup in a temp node and then move the child nodes across into
                // the target node
                reusableSVGContainer = reusableSVGContainer || document.createElement("div");
                reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
                var svgNode = reusableSVGContainer.firstChild;
                while(node.firstChild)node.removeChild(node.firstChild);
                while(svgNode.firstChild)node.appendChild(svgNode.firstChild);
                return;
            }
        }
        node.innerHTML = html;
    });
    /**
 * HTML nodeType values that represent the type of the node
 */ var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */ var setTextContent = function(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    };
    // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
    var shorthandToLonghand = {
        animation: [
            "animationDelay",
            "animationDirection",
            "animationDuration",
            "animationFillMode",
            "animationIterationCount",
            "animationName",
            "animationPlayState",
            "animationTimingFunction"
        ],
        background: [
            "backgroundAttachment",
            "backgroundClip",
            "backgroundColor",
            "backgroundImage",
            "backgroundOrigin",
            "backgroundPositionX",
            "backgroundPositionY",
            "backgroundRepeat",
            "backgroundSize"
        ],
        backgroundPosition: [
            "backgroundPositionX",
            "backgroundPositionY"
        ],
        border: [
            "borderBottomColor",
            "borderBottomStyle",
            "borderBottomWidth",
            "borderImageOutset",
            "borderImageRepeat",
            "borderImageSlice",
            "borderImageSource",
            "borderImageWidth",
            "borderLeftColor",
            "borderLeftStyle",
            "borderLeftWidth",
            "borderRightColor",
            "borderRightStyle",
            "borderRightWidth",
            "borderTopColor",
            "borderTopStyle",
            "borderTopWidth"
        ],
        borderBlockEnd: [
            "borderBlockEndColor",
            "borderBlockEndStyle",
            "borderBlockEndWidth"
        ],
        borderBlockStart: [
            "borderBlockStartColor",
            "borderBlockStartStyle",
            "borderBlockStartWidth"
        ],
        borderBottom: [
            "borderBottomColor",
            "borderBottomStyle",
            "borderBottomWidth"
        ],
        borderColor: [
            "borderBottomColor",
            "borderLeftColor",
            "borderRightColor",
            "borderTopColor"
        ],
        borderImage: [
            "borderImageOutset",
            "borderImageRepeat",
            "borderImageSlice",
            "borderImageSource",
            "borderImageWidth"
        ],
        borderInlineEnd: [
            "borderInlineEndColor",
            "borderInlineEndStyle",
            "borderInlineEndWidth"
        ],
        borderInlineStart: [
            "borderInlineStartColor",
            "borderInlineStartStyle",
            "borderInlineStartWidth"
        ],
        borderLeft: [
            "borderLeftColor",
            "borderLeftStyle",
            "borderLeftWidth"
        ],
        borderRadius: [
            "borderBottomLeftRadius",
            "borderBottomRightRadius",
            "borderTopLeftRadius",
            "borderTopRightRadius"
        ],
        borderRight: [
            "borderRightColor",
            "borderRightStyle",
            "borderRightWidth"
        ],
        borderStyle: [
            "borderBottomStyle",
            "borderLeftStyle",
            "borderRightStyle",
            "borderTopStyle"
        ],
        borderTop: [
            "borderTopColor",
            "borderTopStyle",
            "borderTopWidth"
        ],
        borderWidth: [
            "borderBottomWidth",
            "borderLeftWidth",
            "borderRightWidth",
            "borderTopWidth"
        ],
        columnRule: [
            "columnRuleColor",
            "columnRuleStyle",
            "columnRuleWidth"
        ],
        columns: [
            "columnCount",
            "columnWidth"
        ],
        flex: [
            "flexBasis",
            "flexGrow",
            "flexShrink"
        ],
        flexFlow: [
            "flexDirection",
            "flexWrap"
        ],
        font: [
            "fontFamily",
            "fontFeatureSettings",
            "fontKerning",
            "fontLanguageOverride",
            "fontSize",
            "fontSizeAdjust",
            "fontStretch",
            "fontStyle",
            "fontVariant",
            "fontVariantAlternates",
            "fontVariantCaps",
            "fontVariantEastAsian",
            "fontVariantLigatures",
            "fontVariantNumeric",
            "fontVariantPosition",
            "fontWeight",
            "lineHeight"
        ],
        fontVariant: [
            "fontVariantAlternates",
            "fontVariantCaps",
            "fontVariantEastAsian",
            "fontVariantLigatures",
            "fontVariantNumeric",
            "fontVariantPosition"
        ],
        gap: [
            "columnGap",
            "rowGap"
        ],
        grid: [
            "gridAutoColumns",
            "gridAutoFlow",
            "gridAutoRows",
            "gridTemplateAreas",
            "gridTemplateColumns",
            "gridTemplateRows"
        ],
        gridArea: [
            "gridColumnEnd",
            "gridColumnStart",
            "gridRowEnd",
            "gridRowStart"
        ],
        gridColumn: [
            "gridColumnEnd",
            "gridColumnStart"
        ],
        gridColumnGap: [
            "columnGap"
        ],
        gridGap: [
            "columnGap",
            "rowGap"
        ],
        gridRow: [
            "gridRowEnd",
            "gridRowStart"
        ],
        gridRowGap: [
            "rowGap"
        ],
        gridTemplate: [
            "gridTemplateAreas",
            "gridTemplateColumns",
            "gridTemplateRows"
        ],
        listStyle: [
            "listStyleImage",
            "listStylePosition",
            "listStyleType"
        ],
        margin: [
            "marginBottom",
            "marginLeft",
            "marginRight",
            "marginTop"
        ],
        marker: [
            "markerEnd",
            "markerMid",
            "markerStart"
        ],
        mask: [
            "maskClip",
            "maskComposite",
            "maskImage",
            "maskMode",
            "maskOrigin",
            "maskPositionX",
            "maskPositionY",
            "maskRepeat",
            "maskSize"
        ],
        maskPosition: [
            "maskPositionX",
            "maskPositionY"
        ],
        outline: [
            "outlineColor",
            "outlineStyle",
            "outlineWidth"
        ],
        overflow: [
            "overflowX",
            "overflowY"
        ],
        padding: [
            "paddingBottom",
            "paddingLeft",
            "paddingRight",
            "paddingTop"
        ],
        placeContent: [
            "alignContent",
            "justifyContent"
        ],
        placeItems: [
            "alignItems",
            "justifyItems"
        ],
        placeSelf: [
            "alignSelf",
            "justifySelf"
        ],
        textDecoration: [
            "textDecorationColor",
            "textDecorationLine",
            "textDecorationStyle"
        ],
        textEmphasis: [
            "textEmphasisColor",
            "textEmphasisStyle"
        ],
        transition: [
            "transitionDelay",
            "transitionDuration",
            "transitionProperty",
            "transitionTimingFunction"
        ],
        wordWrap: [
            "overflowWrap"
        ]
    };
    /**
 * CSS properties which accept numbers but are not in units of "px".
 */ var isUnitlessNumber = {
        animationIterationCount: true,
        aspectRatio: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        columns: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridArea: true,
        gridRow: true,
        gridRowEnd: true,
        gridRowSpan: true,
        gridRowStart: true,
        gridColumn: true,
        gridColumnEnd: true,
        gridColumnSpan: true,
        gridColumnStart: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,
        // SVG-related properties
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true
    };
    /**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */ function prefixKey(prefix, key) {
        return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */ var prefixes = [
        "Webkit",
        "ms",
        "Moz",
        "O"
    ]; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.
    Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes.forEach(function(prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
        });
    });
    /**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */ function dangerousStyleValue(name, value, isCustomProperty) {
        // Note that we've removed escapeTextForBrowser() calls here since the
        // whole string will be escaped when the attribute is injected into
        // the markup. If you provide unsafe user data here they can inject
        // arbitrary CSS which may be problematic (I couldn't repro this):
        // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
        // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
        // This is not an XSS hole but instead a potential CSS injection issue
        // which has lead to a greater discussion about how we're going to
        // trust URLs moving forward. See #2115901
        var isEmpty = value == null || typeof value === "boolean" || value === "";
        if (isEmpty) return "";
        if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + "px"; // Presumes implicit 'px' suffix for unitless numbers
        checkCSSPropertyStringCoercion(value, name);
        return ("" + value).trim();
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */ function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
    }
    var warnValidStyle = function() {};
    // 'msTransform' is correct, but the other prefixes should be capitalized
    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
    var msPattern$1 = /^-ms-/;
    var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon
    var badStyleValueWithSemicolonPattern = /;\s*$/;
    var warnedStyleNames = {};
    var warnedStyleValues = {};
    var warnedForNaNValue = false;
    var warnedForInfinityValue = false;
    var camelize = function(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    };
    var warnHyphenatedStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error("Unsupported style property %s. Did you mean %s?", name, // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, "ms-")));
    };
    var warnBadVendoredStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
    };
    var warnStyleValueWithSemicolon = function(name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) return;
        warnedStyleValues[value] = true;
        error('Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ""));
    };
    var warnStyleValueIsNaN = function(name, value) {
        if (warnedForNaNValue) return;
        warnedForNaNValue = true;
        error("`NaN` is an invalid value for the `%s` css style property.", name);
    };
    var warnStyleValueIsInfinity = function(name, value) {
        if (warnedForInfinityValue) return;
        warnedForInfinityValue = true;
        error("`Infinity` is an invalid value for the `%s` css style property.", name);
    };
    warnValidStyle = function(name, value) {
        if (name.indexOf("-") > -1) warnHyphenatedStyleName(name);
        else if (badVendoredStyleNamePattern.test(name)) warnBadVendoredStyleName(name);
        else if (badStyleValueWithSemicolonPattern.test(value)) warnStyleValueWithSemicolon(name, value);
        if (typeof value === "number") {
            if (isNaN(value)) warnStyleValueIsNaN(name, value);
            else if (!isFinite(value)) warnStyleValueIsInfinity(name, value);
        }
    };
    var warnValidStyle$1 = warnValidStyle;
    /**
 * Operations for dealing with CSS properties.
 */ /**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */ function createDangerousStringForStyles(styles) {
        var serialized = "";
        var delimiter = "";
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var styleValue = styles[styleName];
            if (styleValue != null) {
                var isCustomProperty = styleName.indexOf("--") === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ";";
            }
        }
        return serialized || null;
    }
    /**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */ function setValueForStyles(node, styles) {
        var style = node.style;
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var isCustomProperty = styleName.indexOf("--") === 0;
            if (!isCustomProperty) warnValidStyle$1(styleName, styles[styleName]);
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === "float") styleName = "cssFloat";
            if (isCustomProperty) style.setProperty(styleName, styleValue);
            else style[styleName] = styleValue;
        }
    }
    function isValueEmpty(value) {
        return value == null || typeof value === "boolean" || value === "";
    }
    /**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */ function expandShorthandMap(styles) {
        var expanded = {};
        for(var key in styles){
            var longhands = shorthandToLonghand[key] || [
                key
            ];
            for(var i = 0; i < longhands.length; i++)expanded[longhands[i]] = key;
        }
        return expanded;
    }
    /**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */ function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
        if (!nextStyles) return;
        var expandedUpdates = expandShorthandMap(styleUpdates);
        var expandedStyles = expandShorthandMap(nextStyles);
        var warnedAbout = {};
        for(var key in expandedUpdates){
            var originalKey = expandedUpdates[key];
            var correctOriginalKey = expandedStyles[key];
            if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + "," + correctOriginalKey;
                if (warnedAbout[warningKey]) continue;
                warnedAbout[warningKey] = true;
                error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
            }
        }
    }
    // For HTML, certain tags should omit their close tag. We keep a list for
    // those special-case tags.
    var omittedCloseTags = {
        area: true,
        base: true,
        br: true,
        col: true,
        embed: true,
        hr: true,
        img: true,
        input: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.
    };
    // `omittedCloseTags` except that `menuitem` should still have its closing tag.
    var voidElementTags = assign({
        menuitem: true
    }, omittedCloseTags);
    var HTML = "__html";
    function assertValidProps(tag, props) {
        if (!props) return;
         // Note the use of `==` which checks for null or undefined.
        if (voidElementTags[tag]) {
            if (props.children != null || props.dangerouslySetInnerHTML != null) throw new Error(tag + " is a void element tag and must neither have `children` nor " + "use `dangerouslySetInnerHTML`.");
        }
        if (props.dangerouslySetInnerHTML != null) {
            if (props.children != null) throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            if (typeof props.dangerouslySetInnerHTML !== "object" || !(HTML in props.dangerouslySetInnerHTML)) throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
        if (props.style != null && typeof props.style !== "object") throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
    }
    function isCustomComponent(tagName, props) {
        if (tagName.indexOf("-") === -1) return typeof props.is === "string";
        switch(tagName){
            // These are reserved SVG and MathML elements.
            // We don't mind this list too much because we expect it to never grow.
            // The alternative is to track the namespace in a few places which is convoluted.
            // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return false;
            default:
                return true;
        }
    }
    // When adding attributes to the HTML or SVG allowed attribute list, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.
    var possibleStandardNames = {
        // HTML
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        // SVG
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
    };
    var ariaProperties = {
        "aria-current": 0,
        // state
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        // state
        "aria-hidden": 0,
        // state
        "aria-invalid": 0,
        // state
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        // Widget Attributes
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        // Live Region Attributes
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        // Drag-and-Drop Attributes
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        // Relationship Attributes
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
    };
    var warnedProperties = {};
    var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
    var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
    function validateProperty(tagName, name) {
        if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) return true;
        if (rARIACamel.test(name)) {
            var ariaName = "aria-" + name.slice(4).toLowerCase();
            var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (correctName == null) {
                error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== correctName) {
                error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
            }
        }
        if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (standardName == null) {
                warnedProperties[name] = true;
                return false;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== standardName) {
                error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
            }
        }
        return true;
    }
    function warnInvalidARIAProps(type, props) {
        var invalidProps = [];
        for(var key in props){
            var isValid = validateProperty(type, key);
            if (!isValid) invalidProps.push(key);
        }
        var unknownPropString = invalidProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        if (invalidProps.length === 1) error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        else if (invalidProps.length > 1) error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
    }
    function validateProperties(type, props) {
        if (isCustomComponent(type, props)) return;
        warnInvalidARIAProps(type, props);
    }
    var didWarnValueNull = false;
    function validateProperties$1(type, props) {
        if (type !== "input" && type !== "textarea" && type !== "select") return;
        if (props != null && props.value === null && !didWarnValueNull) {
            didWarnValueNull = true;
            if (type === "select" && props.multiple) error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
            else error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
        }
    }
    var validateProperty$1 = function() {};
    var warnedProperties$1 = {};
    var EVENT_NAME_REGEX = /^on./;
    var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
    var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
    var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
    validateProperty$1 = function(tagName, name, value, eventRegistry) {
        if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return true;
        var lowerCasedName = name.toLowerCase();
        if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
            error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
            warnedProperties$1[name] = true;
            return true;
        } // We can't rely on the event system being injected on the server.
        if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name)) return true;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null) {
                error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
            }
            if (EVENT_NAME_REGEX.test(name)) {
                error("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (EVENT_NAME_REGEX.test(name)) {
            // If no event plugins have been injected, we are in a server environment.
            // So we can't tell if the event name is correct for sure, but we can filter
            // out known bad ones like `onclick`. We can't suggest a specific replacement though.
            if (INVALID_EVENT_NAME_REGEX.test(name)) error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
            warnedProperties$1[name] = true;
            return true;
        } // Let the ARIA attribute hook validate ARIA attributes
        if (rARIA$1.test(name) || rARIACamel$1.test(name)) return true;
        if (lowerCasedName === "innerhtml") {
            error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === "aria") {
            error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === "is" && value !== null && value !== undefined && typeof value !== "string") {
            error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === "number" && isNaN(value)) {
            error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
            warnedProperties$1[name] = true;
            return true;
        }
        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name) {
                error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (!isReserved && name !== lowerCasedName) {
            // Unknown attributes should have lowercase casing since that's how they
            // will be cased anyway with server rendering.
            error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            if (value) error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
            else error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
            warnedProperties$1[name] = true;
            return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props
        if (isReserved) return true;
         // Warn when a known attribute is a bad type
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            warnedProperties$1[name] = true;
            return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop
        if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
            error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
            warnedProperties$1[name] = true;
            return true;
        }
        return true;
    };
    var warnUnknownProperties = function(type, props, eventRegistry) {
        var unknownProps = [];
        for(var key in props){
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            if (!isValid) unknownProps.push(key);
        }
        var unknownPropString = unknownProps.map(function(prop) {
            return "`" + prop + "`";
        }).join(", ");
        if (unknownProps.length === 1) error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        else if (unknownProps.length > 1) error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
    };
    function validateProperties$2(type, props, eventRegistry) {
        if (isCustomComponent(type, props)) return;
        warnUnknownProperties(type, props, eventRegistry);
    }
    var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
    var IS_NON_DELEGATED = 2;
    var IS_CAPTURE_PHASE = 4;
    // set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
    // we call willDeferLaterForLegacyFBSupport, thus not bailing out
    // will result in endless cycles like an infinite loop.
    // We also don't want to defer during event replaying.
    var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
    // This exists to avoid circular dependency between ReactDOMEventReplaying
    // and DOMPluginEventSystem.
    var currentReplayingEvent = null;
    function setReplayingEvent(event) {
        if (currentReplayingEvent !== null) error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = event;
    }
    function resetReplayingEvent() {
        if (currentReplayingEvent === null) error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = null;
    }
    function isReplayingEvent(event) {
        return event === currentReplayingEvent;
    }
    /**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */ function getEventTarget(nativeEvent) {
        // Fallback to nativeEvent.srcElement for IE9
        // https://github.com/facebook/react/issues/12506
        var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963
        if (target.correspondingUseElement) target = target.correspondingUseElement;
         // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
        // @see http://www.quirksmode.org/js/events_properties.html
        return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }
    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;
    function restoreStateOfTarget(target) {
        // We perform this translation at the end of the event loop so that we
        // always receive the correct fiber here
        var internalInstance = getInstanceFromNode(target);
        if (!internalInstance) // Unmounted
        return;
        if (typeof restoreImpl !== "function") throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.
        if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
        }
    }
    function setRestoreImplementation(impl) {
        restoreImpl = impl;
    }
    function enqueueStateRestore(target) {
        if (restoreTarget) {
            if (restoreQueue) restoreQueue.push(target);
            else restoreQueue = [
                target
            ];
        } else restoreTarget = target;
    }
    function needsStateRestore() {
        return restoreTarget !== null || restoreQueue !== null;
    }
    function restoreStateIfNeeded() {
        if (!restoreTarget) return;
        var target = restoreTarget;
        var queuedTargets = restoreQueue;
        restoreTarget = null;
        restoreQueue = null;
        restoreStateOfTarget(target);
        if (queuedTargets) for(var i = 0; i < queuedTargets.length; i++)restoreStateOfTarget(queuedTargets[i]);
    }
    // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults
    var batchedUpdatesImpl = function(fn, bookkeeping) {
        return fn(bookkeeping);
    };
    var flushSyncImpl = function() {};
    var isInsideEventHandler = false;
    function finishEventHandler() {
        // Here we wait until all updates have propagated, which is important
        // when using controlled components within layers:
        // https://github.com/facebook/react/issues/1698
        // Then we restore state of any controlled component.
        var controlledComponentsHavePendingUpdates = needsStateRestore();
        if (controlledComponentsHavePendingUpdates) {
            // If a controlled event was fired, we may need to restore the state of
            // the DOM node back to the controlled value. This is necessary when React
            // bails out of the update without touching the DOM.
            // TODO: Restore state in the microtask, after the discrete updates flush,
            // instead of early flushing them here.
            flushSyncImpl();
            restoreStateIfNeeded();
        }
    }
    function batchedUpdates(fn, a, b) {
        if (isInsideEventHandler) // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
        isInsideEventHandler = true;
        try {
            return batchedUpdatesImpl(fn, a, b);
        } finally{
            isInsideEventHandler = false;
            finishEventHandler();
        }
    } // TODO: Replace with flushSync
    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
        batchedUpdatesImpl = _batchedUpdatesImpl;
        flushSyncImpl = _flushSyncImpl;
    }
    function isInteractive(tag) {
        return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
    }
    function shouldPreventMouseEvent(name, type, props) {
        switch(name){
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
                return !!(props.disabled && isInteractive(type));
            default:
                return false;
        }
    }
    /**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */ function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (stateNode === null) // Work in progress (ex: onload events in incremental mode).
        return null;
        var props = getFiberCurrentPropsFromNode(stateNode);
        if (props === null) // Work in progress.
        return null;
        var listener = props[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        if (listener && typeof listener !== "function") throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        return listener;
    }
    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
    if (canUseDOM) try {
        var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value
        Object.defineProperty(options, "passive", {
            get: function() {
                passiveBrowserEventsSupported = true;
            }
        });
        window.addEventListener("test", options, options);
        window.removeEventListener("test", options, options);
    } catch (e) {
        passiveBrowserEventsSupported = false;
    }
    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
            func.apply(context, funcArgs);
        } catch (error) {
            this.onError(error);
        }
    }
    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
    // In DEV mode, we swap out invokeGuardedCallback for a special version
    // that plays more nicely with the browser's DevTools. The idea is to preserve
    // "Pause on exceptions" behavior. Because React wraps all user-provided
    // functions in invokeGuardedCallback, and the production version of
    // invokeGuardedCallback uses a try-catch, all user exceptions are treated
    // like caught exceptions, and the DevTools won't pause unless the developer
    // takes the extra step of enabling pause on caught exceptions. This is
    // unintuitive, though, because even though React has caught the error, from
    // the developer's perspective, the error is uncaught.
    //
    // To preserve the expected "Pause on exceptions" behavior, we don't use a
    // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
    // DOM node, and call the user-provided callback from inside an event handler
    // for that fake event. If the callback throws, the error is "captured" using
    // a global event handler. But because the error happens in a different
    // event loop context, it does not interrupt the normal program flow.
    // Effectively, this gives us try-catch behavior without actually using
    // try-catch. Neat!
    // Check that the browser supports the APIs we need to implement our special
    // DEV version of invokeGuardedCallback
    if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
        var fakeNode = document.createElement("react");
        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
            // If document doesn't exist we know for sure we will crash in this method
            // when we call document.createEvent(). However this can cause confusing
            // errors: https://github.com/facebook/create-react-app/issues/3482
            // So we preemptively throw with a better message instead.
            if (typeof document === "undefined" || document === null) throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
            var evt = document.createEvent("Event");
            var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
            // set this to true at the beginning, then set it to false right after
            // calling the function. If the function errors, `didError` will never be
            // set to false. This strategy works even if the browser is flaky and
            // fails to call our global error handler, because it doesn't rely on
            // the error event at all.
            var didError = true; // Keeps track of the value of window.event so that we can reset it
            // during the callback to let user code access window.event in the
            // browsers that support it.
            var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
            // dispatching: https://github.com/facebook/react/issues/13688
            var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
            function restoreAfterDispatch() {
                // We immediately remove the callback from event listeners so that
                // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                // nested call would trigger the fake event handlers of any call higher
                // in the stack.
                fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
                // window.event assignment in both IE <= 10 as they throw an error
                // "Member not found" in strict mode, and in Firefox which does not
                // support window.event.
                if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) window.event = windowEvent;
            } // Create an event handler for our fake event. We will synchronously
            // dispatch our fake event using `dispatchEvent`. Inside the handler, we
            // call the user-provided callback.
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            function callCallback() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
            } // Create a global error event handler. We use this to capture the value
            // that was thrown. It's possible that this error handler will fire more
            // than once; for example, if non-React code also calls `dispatchEvent`
            // and a handler for that event throws. We should be resilient to most of
            // those cases. Even if our error event handler fires more than once, the
            // last error event is always used. If the callback actually does error,
            // we know that the last error event is the correct one, because it's not
            // possible for anything else to have happened in between our callback
            // erroring and the code that follows the `dispatchEvent` call below. If
            // the callback doesn't error, but the error event was fired, we know to
            // ignore it because `didError` will be false, as described above.
            var error; // Use this to track whether the error event is ever called.
            var didSetError = false;
            var isCrossOriginError = false;
            function handleWindowError(event) {
                error = event.error;
                didSetError = true;
                if (error === null && event.colno === 0 && event.lineno === 0) isCrossOriginError = true;
                if (event.defaultPrevented) {
                    // Some other error handler has prevented default.
                    // Browsers silence the error report if this happens.
                    // We'll remember this to later decide whether to log it or not.
                    if (error != null && typeof error === "object") try {
                        error._suppressLogging = true;
                    } catch (inner) {}
                }
            } // Create a fake event type.
            var evtType = "react-" + (name ? name : "invokeguardedcallback"); // Attach our event handlers
            window.addEventListener("error", handleWindowError);
            fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
            // errors, it will trigger our global error handler.
            evt.initEvent(evtType, false, false);
            fakeNode.dispatchEvent(evt);
            if (windowEventDescriptor) Object.defineProperty(window, "event", windowEventDescriptor);
            if (didCall && didError) {
                if (!didSetError) // The callback errored, but the error event never fired.
                // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the \"Pause on exceptions\" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.");
                else if (isCrossOriginError) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                this.onError(error);
            } // Remove our event listeners
            window.removeEventListener("error", handleWindowError);
            if (!didCall) {
                // Something went really wrong, and our event was not dispatched.
                // https://github.com/facebook/react/issues/16734
                // https://github.com/facebook/react/issues/16585
                // Fall back to the production implementation.
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
            }
        };
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.
    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
        onError: function(error) {
            hasError = true;
            caughtError = error;
        }
    };
    /**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        hasError = false;
        caughtError = null;
        invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        invokeGuardedCallback.apply(this, arguments);
        if (hasError) {
            var error = clearCaughtError();
            if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error;
            }
        }
    }
    /**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */ function rethrowCaughtError() {
        if (hasRethrowError) {
            var error = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error;
        }
    }
    function hasCaughtError() {
        return hasError;
    }
    function clearCaughtError() {
        if (hasError) {
            var error = caughtError;
            hasError = false;
            caughtError = null;
            return error;
        } else throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    /**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */ function get(key) {
        return key._reactInternals;
    }
    function has(key) {
        return key._reactInternals !== undefined;
    }
    function set(key, value) {
        key._reactInternals = value;
    }
    // Don't change these two values. They're used by React Dev Tools.
    var NoFlags = /*                      */ 0;
    var PerformedWork = /*                */ 1; // You can change the rest (and add more).
    var Placement = /*                    */ 2;
    var Update = /*                       */ 4;
    var ChildDeletion = /*                */ 16;
    var ContentReset = /*                 */ 32;
    var Callback = /*                     */ 64;
    var DidCapture = /*                   */ 128;
    var ForceClientRender = /*            */ 256;
    var Ref = /*                          */ 512;
    var Snapshot = /*                     */ 1024;
    var Passive = /*                      */ 2048;
    var Hydrating = /*                    */ 4096;
    var Visibility = /*                   */ 8192;
    var StoreConsistency = /*             */ 16384;
    var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)
    var HostEffectMask = /*               */ 32767; // These are not really side effects, but we still reuse this field.
    var Incomplete = /*                   */ 32768;
    var ShouldCapture = /*                */ 65536;
    var ForceUpdateForLegacySuspense = /* */ 131072;
    var Forked = /*                       */ 1048576; // Static tags describe aspects of a fiber that are not specific to a render,
    // e.g. a fiber uses a passive effect (even if there are no updates on this particular render).
    // This enables us to defer more work in the unmount case,
    // since we can defer traversing the tree during layout to look for Passive effects,
    // and instead rely on the static flag as a signal that there may be cleanup work.
    var RefStatic = /*                    */ 2097152;
    var LayoutStatic = /*                 */ 4194304;
    var PassiveStatic = /*                */ 8388608; // These flags allow us to traverse to fibers that have effects on mount
    // without traversing the entire tree after every commit for
    // double invoking
    var MountLayoutDev = /*               */ 16777216;
    var MountPassiveDev = /*              */ 33554432; // Groups of flags that are used in the commit phase to skip over trees that
    // don't contain effects, by checking subtreeFlags.
    var BeforeMutationMask = // flag logic (see #20043)
    Update | Snapshot | 0;
    var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
    var LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask
    var PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.
    // This allows certain concepts to persist without recalculating them,
    // e.g. whether a subtree contains passive effects or portals.
    var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    function getNearestMountedFiber(fiber) {
        var node = fiber;
        var nearestMounted = fiber;
        if (!fiber.alternate) {
            // If there is no alternate, this might be a new tree that isn't inserted
            // yet. If it is, then it will have a pending insertion effect on it.
            var nextNode = node;
            do {
                node = nextNode;
                if ((node.flags & (Placement | Hydrating)) !== NoFlags) // This is an insertion or in-progress hydration. The nearest possible
                // mounted fiber is the parent but we need to continue to figure out
                // if that one is still mounted.
                nearestMounted = node.return;
                nextNode = node.return;
            }while (nextNode);
        } else while(node.return)node = node.return;
        if (node.tag === HostRoot) // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
         // If we didn't hit the root, that means that we're in an disconnected tree
        // that has been unmounted.
        return null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
                var current = fiber.alternate;
                if (current !== null) suspenseState = current.memoizedState;
            }
            if (suspenseState !== null) return suspenseState.dehydrated;
        }
        return null;
    }
    function getContainerFromFiber(fiber) {
        return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }
    function isFiberMounted(fiber) {
        return getNearestMountedFiber(fiber) === fiber;
    }
    function isMounted(component) {
        var owner = ReactCurrentOwner.current;
        if (owner !== null && owner.tag === ClassComponent) {
            var ownerFiber = owner;
            var instance = ownerFiber.stateNode;
            if (!instance._warnedAboutRefsInRender) error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || "A component");
            instance._warnedAboutRefsInRender = true;
        }
        var fiber = get(component);
        if (!fiber) return false;
        return getNearestMountedFiber(fiber) === fiber;
    }
    function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber) throw new Error("Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            // If there is no alternate, then we only need to check if it is mounted.
            var nearestMounted = getNearestMountedFiber(fiber);
            if (nearestMounted === null) throw new Error("Unable to find node on an unmounted component.");
            if (nearestMounted !== fiber) return null;
            return fiber;
        } // If we have two possible branches, we'll walk backwards up to the root
        // to see what path the root points to. On the way we may hit one of the
        // special cases and we'll deal with them.
        var a = fiber;
        var b = alternate;
        while(true){
            var parentA = a.return;
            if (parentA === null) break;
            var parentB = parentA.alternate;
            if (parentB === null) {
                // There is no alternate. This is an unusual case. Currently, it only
                // happens when a Suspense component is hidden. An extra fragment fiber
                // is inserted in between the Suspense fiber and its children. Skip
                // over this extra fragment fiber and proceed to the next parent.
                var nextParent = parentA.return;
                if (nextParent !== null) {
                    a = b = nextParent;
                    continue;
                } // If there's no parent, we're at the root.
                break;
            } // If both copies of the parent fiber point to the same child, we can
            // assume that the child is current. This happens when we bailout on low
            // priority: the bailed out fiber's child reuses the current child.
            if (parentA.child === parentB.child) {
                var child = parentA.child;
                while(child){
                    if (child === a) {
                        // We've determined that A is the current branch.
                        assertIsMounted(parentA);
                        return fiber;
                    }
                    if (child === b) {
                        // We've determined that B is the current branch.
                        assertIsMounted(parentA);
                        return alternate;
                    }
                    child = child.sibling;
                } // We should never have an alternate for any mounting node. So the only
                // way this could possibly happen is if this was unmounted, if at all.
                throw new Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) {
                // The return pointer of A and the return pointer of B point to different
                // fibers. We assume that return pointers never criss-cross, so A must
                // belong to the child set of A.return, and B must belong to the child
                // set of B.return.
                a = parentA;
                b = parentB;
            } else {
                // The return pointers point to the same fiber. We'll have to use the
                // default, slow path: scan the child sets of each parent alternate to see
                // which child belongs to which set.
                //
                // Search parent A's child set
                var didFindChild = false;
                var _child = parentA.child;
                while(_child){
                    if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    // Search parent B's child set
                    _child = parentB.child;
                    while(_child){
                        if (_child === a) {
                            didFindChild = true;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = true;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (a.alternate !== b) throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        } // If the root is not a host container, we're in a disconnected tree. I.e.
        // unmounted.
        if (a.tag !== HostRoot) throw new Error("Unable to find node on an unmounted component.");
        if (a.stateNode.current === a) // We've determined that A is the current branch.
        return fiber;
         // Otherwise B has to be current branch.
        return alternate;
    }
    function findCurrentHostFiber(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
    }
    function findCurrentHostFiberImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            var match = findCurrentHostFiberImpl(child);
            if (match !== null) return match;
            child = child.sibling;
        }
        return null;
    }
    function findCurrentHostFiberWithNoPortals(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
    }
    function findCurrentHostFiberWithNoPortalsImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            if (child.tag !== HostPortal) {
                var match = findCurrentHostFiberWithNoPortalsImpl(child);
                if (match !== null) return match;
            }
            child = child.sibling;
        }
        return null;
    }
    // This module only exists as an ESM wrapper around the external CommonJS
    var scheduleCallback = Scheduler.unstable_scheduleCallback;
    var cancelCallback = Scheduler.unstable_cancelCallback;
    var shouldYield = Scheduler.unstable_shouldYield;
    var requestPaint = Scheduler.unstable_requestPaint;
    var now = Scheduler.unstable_now;
    var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
    var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
    var NormalPriority = Scheduler.unstable_NormalPriority;
    var LowPriority = Scheduler.unstable_LowPriority;
    var IdlePriority = Scheduler.unstable_IdlePriority;
    // this doesn't actually exist on the scheduler, but it *does*
    // on scheduler/unstable_mock, which we'll need for internal testing
    var unstable_yieldValue = Scheduler.unstable_yieldValue;
    var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;
    var rendererID = null;
    var injectedHook = null;
    var injectedProfilingHooks = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
    function injectInternals(internals) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") // No DevTools
        return false;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
        if (!hook.supportsFiber) {
            error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            return true;
        }
        try {
            if (enableSchedulingProfiler) // Conditionally inject these hooks only if Timeline profiler is supported by this build.
            // This gives DevTools a way to feature detect that isn't tied to version number
            // (since profiling and timeline are controlled by different feature flags).
            internals = assign({}, internals, {
                getLaneLabelMap: getLaneLabelMap,
                injectProfilingHooks: injectProfilingHooks
            });
            rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.
            injectedHook = hook;
        } catch (err) {
            error("React instrumentation encountered an error: %s.", err);
        }
        if (hook.checkDCE) // This is the real DevTools.
        return true;
        else // This is likely a hook installed by Fast Refresh runtime.
        return false;
    }
    function onScheduleRoot(root, children) {
        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") try {
            injectedHook.onScheduleFiberRoot(rendererID, root, children);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function onCommitRoot(root, eventPriority) {
        if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") try {
            var didError = (root.current.flags & DidCapture) === DidCapture;
            if (enableProfilerTimer) {
                var schedulerPriority;
                switch(eventPriority){
                    case DiscreteEventPriority:
                        schedulerPriority = ImmediatePriority;
                        break;
                    case ContinuousEventPriority:
                        schedulerPriority = UserBlockingPriority;
                        break;
                    case DefaultEventPriority:
                        schedulerPriority = NormalPriority;
                        break;
                    case IdleEventPriority:
                        schedulerPriority = IdlePriority;
                        break;
                    default:
                        schedulerPriority = NormalPriority;
                        break;
                }
                injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);
            } else injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function onPostCommitRoot(root) {
        if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === "function") try {
            injectedHook.onPostCommitFiberRoot(rendererID, root);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function onCommitUnmount(fiber) {
        if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") try {
            injectedHook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
        if (typeof unstable_yieldValue === "function") {
            // We're in a test because Scheduler.unstable_yieldValue only exists
            // in SchedulerMock. To reduce the noise in strict mode tests,
            // suppress warnings and disable scheduler yielding during the double render
            unstable_setDisableYieldValue(newIsStrictMode);
            setSuppressWarning(newIsStrictMode);
        }
        if (injectedHook && typeof injectedHook.setStrictMode === "function") try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error("React instrumentation encountered an error: %s", err);
            }
        }
    } // Profiler API hooks
    function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
    }
    function getLaneLabelMap() {
        var map = new Map();
        var lane = 1;
        for(var index = 0; index < TotalLanes; index++){
            var label = getLabelForLane(lane);
            map.set(lane, label);
            lane *= 2;
        }
        return map;
    }
    function markCommitStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === "function") injectedProfilingHooks.markCommitStarted(lanes);
    }
    function markCommitStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === "function") injectedProfilingHooks.markCommitStopped();
    }
    function markComponentRenderStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === "function") injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
    function markComponentRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === "function") injectedProfilingHooks.markComponentRenderStopped();
    }
    function markComponentPassiveEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === "function") injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
    }
    function markComponentPassiveEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === "function") injectedProfilingHooks.markComponentPassiveEffectMountStopped();
    }
    function markComponentPassiveEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === "function") injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
    }
    function markComponentPassiveEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === "function") injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
    }
    function markComponentLayoutEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === "function") injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
    }
    function markComponentLayoutEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === "function") injectedProfilingHooks.markComponentLayoutEffectMountStopped();
    }
    function markComponentLayoutEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === "function") injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
    }
    function markComponentLayoutEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === "function") injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
    }
    function markComponentErrored(fiber, thrownValue, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === "function") injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
    }
    function markComponentSuspended(fiber, wakeable, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === "function") injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
    }
    function markLayoutEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === "function") injectedProfilingHooks.markLayoutEffectsStarted(lanes);
    }
    function markLayoutEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === "function") injectedProfilingHooks.markLayoutEffectsStopped();
    }
    function markPassiveEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === "function") injectedProfilingHooks.markPassiveEffectsStarted(lanes);
    }
    function markPassiveEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === "function") injectedProfilingHooks.markPassiveEffectsStopped();
    }
    function markRenderStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === "function") injectedProfilingHooks.markRenderStarted(lanes);
    }
    function markRenderYielded() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === "function") injectedProfilingHooks.markRenderYielded();
    }
    function markRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === "function") injectedProfilingHooks.markRenderStopped();
    }
    function markRenderScheduled(lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === "function") injectedProfilingHooks.markRenderScheduled(lane);
    }
    function markForceUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === "function") injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
    }
    function markStateUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === "function") injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
    var NoMode = /*                         */ 0; // TODO: Remove ConcurrentMode by reading from the root tag instead
    var ConcurrentMode = /*                 */ 1;
    var ProfileMode = /*                    */ 2;
    var StrictLegacyMode = /*               */ 8;
    var StrictEffectsMode = /*              */ 16;
    // TODO: This is pretty well supported by browsers. Maybe we can drop it.
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.
    // Based on:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(x) {
        var asUint = x >>> 0;
        if (asUint === 0) return 32;
        return 31 - (log(asUint) / LN2 | 0) | 0;
    }
    // If those values are changed that package should be rebuilt and redeployed.
    var TotalLanes = 31;
    var NoLanes = /*                        */ 0;
    var NoLane = /*                          */ 0;
    var SyncLane = /*                        */ 1;
    var InputContinuousHydrationLane = /*    */ 2;
    var InputContinuousLane = /*             */ 4;
    var DefaultHydrationLane = /*            */ 8;
    var DefaultLane = /*                     */ 16;
    var TransitionHydrationLane = /*                */ 32;
    var TransitionLanes = /*                       */ 4194240;
    var TransitionLane1 = /*                        */ 64;
    var TransitionLane2 = /*                        */ 128;
    var TransitionLane3 = /*                        */ 256;
    var TransitionLane4 = /*                        */ 512;
    var TransitionLane5 = /*                        */ 1024;
    var TransitionLane6 = /*                        */ 2048;
    var TransitionLane7 = /*                        */ 4096;
    var TransitionLane8 = /*                        */ 8192;
    var TransitionLane9 = /*                        */ 16384;
    var TransitionLane10 = /*                       */ 32768;
    var TransitionLane11 = /*                       */ 65536;
    var TransitionLane12 = /*                       */ 131072;
    var TransitionLane13 = /*                       */ 262144;
    var TransitionLane14 = /*                       */ 524288;
    var TransitionLane15 = /*                       */ 1048576;
    var TransitionLane16 = /*                       */ 2097152;
    var RetryLanes = /*                            */ 130023424;
    var RetryLane1 = /*                             */ 4194304;
    var RetryLane2 = /*                             */ 8388608;
    var RetryLane3 = /*                             */ 16777216;
    var RetryLane4 = /*                             */ 33554432;
    var RetryLane5 = /*                             */ 67108864;
    var SomeRetryLane = RetryLane1;
    var SelectiveHydrationLane = /*          */ 134217728;
    var NonIdleLanes = /*                          */ 268435455;
    var IdleHydrationLane = /*               */ 268435456;
    var IdleLane = /*                        */ 536870912;
    var OffscreenLane = /*                   */ 1073741824; // This function is used for the experimental timeline (react-devtools-timeline)
    // It should be kept in sync with the Lanes values above.
    function getLabelForLane(lane) {
        if (lane & SyncLane) return "Sync";
        if (lane & InputContinuousHydrationLane) return "InputContinuousHydration";
        if (lane & InputContinuousLane) return "InputContinuous";
        if (lane & DefaultHydrationLane) return "DefaultHydration";
        if (lane & DefaultLane) return "Default";
        if (lane & TransitionHydrationLane) return "TransitionHydration";
        if (lane & TransitionLanes) return "Transition";
        if (lane & RetryLanes) return "Retry";
        if (lane & SelectiveHydrationLane) return "SelectiveHydration";
        if (lane & IdleHydrationLane) return "IdleHydration";
        if (lane & IdleLane) return "Idle";
        if (lane & OffscreenLane) return "Offscreen";
    }
    var NoTimestamp = -1;
    var nextTransitionLane = TransitionLane1;
    var nextRetryLane = RetryLane1;
    function getHighestPriorityLanes(lanes) {
        switch(getHighestPriorityLane(lanes)){
            case SyncLane:
                return SyncLane;
            case InputContinuousHydrationLane:
                return InputContinuousHydrationLane;
            case InputContinuousLane:
                return InputContinuousLane;
            case DefaultHydrationLane:
                return DefaultHydrationLane;
            case DefaultLane:
                return DefaultLane;
            case TransitionHydrationLane:
                return TransitionHydrationLane;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return lanes & TransitionLanes;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                return lanes & RetryLanes;
            case SelectiveHydrationLane:
                return SelectiveHydrationLane;
            case IdleHydrationLane:
                return IdleHydrationLane;
            case IdleLane:
                return IdleLane;
            case OffscreenLane:
                return OffscreenLane;
            default:
                error("Should have found matching lanes. This is a bug in React.");
                return lanes;
        }
    }
    function getNextLanes(root, wipLanes) {
        // Early bailout if there's no pending work left.
        var pendingLanes = root.pendingLanes;
        if (pendingLanes === NoLanes) return NoLanes;
        var nextLanes = NoLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,
        // even if the work is suspended.
        var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
        if (nonIdlePendingLanes !== NoLanes) {
            var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
            if (nonIdleUnblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
            else {
                var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                if (nonIdlePingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
            }
        } else {
            // The only remaining work is Idle.
            var unblockedLanes = pendingLanes & ~suspendedLanes;
            if (unblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(unblockedLanes);
            else if (pingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(pingedLanes);
        }
        if (nextLanes === NoLanes) // This should only be reachable if we're suspended
        // TODO: Consider warning in this path if a fallback timer is not scheduled.
        return NoLanes;
         // If we're already in the middle of a render, switching lanes will interrupt
        // it and we'll lose our progress. We should only do this if the new lanes are
        // higher priority.
        if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
        // bother waiting until the root is complete.
        (wipLanes & suspendedLanes) === NoLanes) {
            var nextLane = getHighestPriorityLane(nextLanes);
            var wipLane = getHighestPriorityLane(wipLanes);
            if (// one. This works because the bits decrease in priority as you go left.
            nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The
            // only difference between default updates and transition updates is that
            // default updates do not support refresh transitions.
            nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) // Keep working on the existing in-progress tree. Do not interrupt.
            return wipLanes;
        }
        if ((nextLanes & InputContinuousLane) !== NoLanes) // When updates are sync by default, we entangle continuous priority updates
        // and default updates, so they render in the same batch. The only reason
        // they use separate lanes is because continuous updates should interrupt
        // transitions, but default updates should not.
        nextLanes |= pendingLanes & DefaultLane;
         // Check for entangled lanes and add them to the batch.
        //
        // A lane is said to be entangled with another when it's not allowed to render
        // in a batch that does not also include the other lane. Typically we do this
        // when multiple updates have the same source, and we only want to respond to
        // the most recent event from that source.
        //
        // Note that we apply entanglements *after* checking for partial work above.
        // This means that if a lane is entangled during an interleaved event while
        // it's already rendering, we won't interrupt it. This is intentional, since
        // entanglement is usually "best effort": we'll try our best to render the
        // lanes in the same batch, but it's not worth throwing out partially
        // completed work in order to do it.
        // TODO: Reconsider this. The counter-argument is that the partial work
        // represents an intermediate state, which we don't want to show to the user.
        // And by spending extra time finishing it, we're increasing the amount of
        // time it takes to show the final state, which is what they are actually
        // waiting for.
        //
        // For those exceptions where entanglement is semantically important, like
        // useMutableSource, we should ensure that there is no partial work at the
        // time we apply the entanglement.
        var entangledLanes = root.entangledLanes;
        if (entangledLanes !== NoLanes) {
            var entanglements = root.entanglements;
            var lanes = nextLanes & entangledLanes;
            while(lanes > 0){
                var index = pickArbitraryLaneIndex(lanes);
                var lane = 1 << index;
                nextLanes |= entanglements[index];
                lanes &= ~lane;
            }
        }
        return nextLanes;
    }
    function getMostRecentEventTime(root, lanes) {
        var eventTimes = root.eventTimes;
        var mostRecentEventTime = NoTimestamp;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var eventTime = eventTimes[index];
            if (eventTime > mostRecentEventTime) mostRecentEventTime = eventTime;
            lanes &= ~lane;
        }
        return mostRecentEventTime;
    }
    function computeExpirationTime(lane, currentTime) {
        switch(lane){
            case SyncLane:
            case InputContinuousHydrationLane:
            case InputContinuousLane:
                // User interactions should expire slightly more quickly.
                //
                // NOTE: This is set to the corresponding constant as in Scheduler.js.
                // When we made it larger, a product metric in www regressed, suggesting
                // there's a user interaction that's being starved by a series of
                // synchronous updates. If that theory is correct, the proper solution is
                // to fix the starvation. However, this scenario supports the idea that
                // expiration times are an important safeguard when starvation
                // does happen.
                return currentTime + 250;
            case DefaultHydrationLane:
            case DefaultLane:
            case TransitionHydrationLane:
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return currentTime + 5000;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                // TODO: Retries should be allowed to expire if they are CPU bound for
                // too long, but when I made this change it caused a spike in browser
                // crashes. There must be some other underlying bug; not super urgent but
                // ideally should figure out why and fix it. Unfortunately we don't have
                // a repro for the crashes, only detected via production metrics.
                return NoTimestamp;
            case SelectiveHydrationLane:
            case IdleHydrationLane:
            case IdleLane:
            case OffscreenLane:
                // Anything idle priority or lower should never expire.
                return NoTimestamp;
            default:
                error("Should have found matching lanes. This is a bug in React.");
                return NoTimestamp;
        }
    }
    function markStarvedLanesAsExpired(root, currentTime) {
        // TODO: This gets called every time we yield. We can optimize by storing
        // the earliest expiration time on the root. Then use that to quickly bail out
        // of this function.
        var pendingLanes = root.pendingLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes;
        var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
        // expiration time. If so, we'll assume the update is being starved and mark
        // it as expired to force it to finish.
        var lanes = pendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var expirationTime = expirationTimes[index];
            if (expirationTime === NoTimestamp) // Found a pending lane with no expiration time. If it's not suspended, or
            // if it's pinged, assume it's CPU-bound. Compute a new expiration time
            // using the current time.
            {
                if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) // Assumes timestamps are monotonically increasing.
                expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else if (expirationTime <= currentTime) // This lane expired
            root.expiredLanes |= lane;
            lanes &= ~lane;
        }
    } // This returns the highest priority pending lanes regardless of whether they
    // are suspended.
    function getHighestPriorityPendingLanes(root) {
        return getHighestPriorityLanes(root.pendingLanes);
    }
    function getLanesToRetrySynchronouslyOnError(root) {
        var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;
        if (everythingButOffscreen !== NoLanes) return everythingButOffscreen;
        if (everythingButOffscreen & OffscreenLane) return OffscreenLane;
        return NoLanes;
    }
    function includesSyncLane(lanes) {
        return (lanes & SyncLane) !== NoLanes;
    }
    function includesNonIdleWork(lanes) {
        return (lanes & NonIdleLanes) !== NoLanes;
    }
    function includesOnlyRetries(lanes) {
        return (lanes & RetryLanes) === lanes;
    }
    function includesOnlyNonUrgentLanes(lanes) {
        var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
        return (lanes & UrgentLanes) === NoLanes;
    }
    function includesOnlyTransitions(lanes) {
        return (lanes & TransitionLanes) === lanes;
    }
    function includesBlockingLane(root, lanes) {
        var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
        return (lanes & SyncDefaultLanes) !== NoLanes;
    }
    function includesExpiredLane(root, lanes) {
        // This is a separate check from includesBlockingLane because a lane can
        // expire after a render has already started.
        return (lanes & root.expiredLanes) !== NoLanes;
    }
    function isTransitionLane(lane) {
        return (lane & TransitionLanes) !== NoLanes;
    }
    function claimNextTransitionLane() {
        // Cycle through the lanes, assigning each new transition to the next lane.
        // In most cases, this means every transition gets its own lane, until we
        // run out of lanes and cycle back to the beginning.
        var lane = nextTransitionLane;
        nextTransitionLane <<= 1;
        if ((nextTransitionLane & TransitionLanes) === NoLanes) nextTransitionLane = TransitionLane1;
        return lane;
    }
    function claimNextRetryLane() {
        var lane = nextRetryLane;
        nextRetryLane <<= 1;
        if ((nextRetryLane & RetryLanes) === NoLanes) nextRetryLane = RetryLane1;
        return lane;
    }
    function getHighestPriorityLane(lanes) {
        return lanes & -lanes;
    }
    function pickArbitraryLane(lanes) {
        // This wrapper function gets inlined. Only exists so to communicate that it
        // doesn't matter which bit is selected; you can pick any bit without
        // affecting the algorithms where its used. Here I'm using
        // getHighestPriorityLane because it requires the fewest operations.
        return getHighestPriorityLane(lanes);
    }
    function pickArbitraryLaneIndex(lanes) {
        return 31 - clz32(lanes);
    }
    function laneToIndex(lane) {
        return pickArbitraryLaneIndex(lane);
    }
    function includesSomeLane(a, b) {
        return (a & b) !== NoLanes;
    }
    function isSubsetOfLanes(set, subset) {
        return (set & subset) === subset;
    }
    function mergeLanes(a, b) {
        return a | b;
    }
    function removeLanes(set, subset) {
        return set & ~subset;
    }
    function intersectLanes(a, b) {
        return a & b;
    } // Seems redundant, but it changes the type from a single lane (used for
    // updates) to a group of lanes (used for flushing work).
    function laneToLanes(lane) {
        return lane;
    }
    function higherPriorityLane(a, b) {
        // This works because the bit ranges decrease in priority as you go left.
        return a !== NoLane && a < b ? a : b;
    }
    function createLaneMap(initial) {
        // Intentionally pushing one by one.
        // https://v8.dev/blog/elements-kinds#avoid-creating-holes
        var laneMap = [];
        for(var i = 0; i < TotalLanes; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated(root, updateLane, eventTime) {
        root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update
        // could unblock them. Clear the suspended lanes so that we can try rendering
        // them again.
        //
        // TODO: We really only need to unsuspend only lanes that are in the
        // `subtreeLanes` of the updated fiber, or the update lanes of the return
        // path. This would exclude suspended updates in an unrelated sibling tree,
        // since there's no way for this update to unblock it.
        //
        // We don't do this if the incoming update is idle, because we never process
        // idle updates until after all the regular updates have finished; there's no
        // way it could unblock a transition.
        if (updateLane !== IdleLane) {
            root.suspendedLanes = NoLanes;
            root.pingedLanes = NoLanes;
        }
        var eventTimes = root.eventTimes;
        var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
        // recent event, and we assume time is monotonically increasing.
        eventTimes[index] = eventTime;
    }
    function markRootSuspended(root, suspendedLanes) {
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.
        var expirationTimes = root.expirationTimes;
        var lanes = suspendedLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootPinged(root, pingedLanes, eventTime) {
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
    }
    function markRootFinished(root, remainingLanes) {
        var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
        root.pendingLanes = remainingLanes; // Let's try everything again
        root.suspendedLanes = NoLanes;
        root.pingedLanes = NoLanes;
        root.expiredLanes &= remainingLanes;
        root.mutableReadLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        var entanglements = root.entanglements;
        var eventTimes = root.eventTimes;
        var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work
        var lanes = noLongerPendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            entanglements[index] = NoLanes;
            eventTimes[index] = NoTimestamp;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootEntangled(root, entangledLanes) {
        // In addition to entangling each of the given lanes with each other, we also
        // have to consider _transitive_ entanglements. For each lane that is already
        // entangled with *any* of the given lanes, that lane is now transitively
        // entangled with *all* the given lanes.
        //
        // Translated: If C is entangled with A, then entangling A with B also
        // entangles C with B.
        //
        // If this is hard to grasp, it might help to intentionally break this
        // function and look at the tests that fail in ReactTransition-test.js. Try
        // commenting out one of the conditions below.
        var rootEntangledLanes = root.entangledLanes |= entangledLanes;
        var entanglements = root.entanglements;
        var lanes = rootEntangledLanes;
        while(lanes){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            if (lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?
            entanglements[index] & entangledLanes) entanglements[index] |= entangledLanes;
            lanes &= ~lane;
        }
    }
    function getBumpedLaneForHydration(root, renderLanes) {
        var renderLane = getHighestPriorityLane(renderLanes);
        var lane;
        switch(renderLane){
            case InputContinuousLane:
                lane = InputContinuousHydrationLane;
                break;
            case DefaultLane:
                lane = DefaultHydrationLane;
                break;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                lane = TransitionHydrationLane;
                break;
            case IdleLane:
                lane = IdleHydrationLane;
                break;
            default:
                // Everything else is already either a hydration lane, or shouldn't
                // be retried at a hydration lane.
                lane = NoLane;
                break;
        } // Check if the lane we chose is suspended. If so, that indicates that we
        // already attempted and failed to hydrate at that level. Also check if we're
        // already rendering that lane, which is rare but could happen.
        if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) // Give up trying to hydrate and fall back to client render.
        return NoLane;
        return lane;
    }
    function addFiberToLanesMap(root, fiber, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            updaters.add(fiber);
            lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        var memoizedUpdaters = root.memoizedUpdaters;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            if (updaters.size > 0) {
                updaters.forEach(function(fiber) {
                    var alternate = fiber.alternate;
                    if (alternate === null || !memoizedUpdaters.has(alternate)) memoizedUpdaters.add(fiber);
                });
                updaters.clear();
            }
            lanes &= ~lane;
        }
    }
    function getTransitionsForLanes(root, lanes) {
        return null;
    }
    var DiscreteEventPriority = SyncLane;
    var ContinuousEventPriority = InputContinuousLane;
    var DefaultEventPriority = DefaultLane;
    var IdleEventPriority = IdleLane;
    var currentUpdatePriority = NoLane;
    function getCurrentUpdatePriority() {
        return currentUpdatePriority;
    }
    function setCurrentUpdatePriority(newPriority) {
        currentUpdatePriority = newPriority;
    }
    function runWithPriority(priority, fn) {
        var previousPriority = currentUpdatePriority;
        try {
            currentUpdatePriority = priority;
            return fn();
        } finally{
            currentUpdatePriority = previousPriority;
        }
    }
    function higherEventPriority(a, b) {
        return a !== 0 && a < b ? a : b;
    }
    function lowerEventPriority(a, b) {
        return a === 0 || a > b ? a : b;
    }
    function isHigherEventPriority(a, b) {
        return a !== 0 && a < b;
    }
    function lanesToEventPriority(lanes) {
        var lane = getHighestPriorityLane(lanes);
        if (!isHigherEventPriority(DiscreteEventPriority, lane)) return DiscreteEventPriority;
        if (!isHigherEventPriority(ContinuousEventPriority, lane)) return ContinuousEventPriority;
        if (includesNonIdleWork(lane)) return DefaultEventPriority;
        return IdleEventPriority;
    }
    // This is imported by the event replaying implementation in React DOM. It's
    // in a separate file to break a circular dependency between the renderer and
    // the reconciler.
    function isRootDehydrated(root) {
        var currentState = root.current.memoizedState;
        return currentState.isDehydrated;
    }
    var _attemptSynchronousHydration;
    function setAttemptSynchronousHydration(fn) {
        _attemptSynchronousHydration = fn;
    }
    function attemptSynchronousHydration(fiber) {
        _attemptSynchronousHydration(fiber);
    }
    var attemptContinuousHydration;
    function setAttemptContinuousHydration(fn) {
        attemptContinuousHydration = fn;
    }
    var attemptHydrationAtCurrentPriority;
    function setAttemptHydrationAtCurrentPriority(fn) {
        attemptHydrationAtCurrentPriority = fn;
    }
    var getCurrentUpdatePriority$1;
    function setGetCurrentUpdatePriority(fn) {
        getCurrentUpdatePriority$1 = fn;
    }
    var attemptHydrationAtPriority;
    function setAttemptHydrationAtPriority(fn) {
        attemptHydrationAtPriority = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that
    // has this definition built-in.
    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.
    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.
    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.
    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.
    var queuedExplicitHydrationTargets = [];
    var discreteReplayableEvents = [
        "mousedown",
        "mouseup",
        "touchcancel",
        "touchend",
        "touchstart",
        "auxclick",
        "dblclick",
        "pointercancel",
        "pointerdown",
        "pointerup",
        "dragend",
        "dragstart",
        "drop",
        "compositionend",
        "compositionstart",
        "keydown",
        "keypress",
        "keyup",
        "input",
        "textInput",
        "copy",
        "cut",
        "paste",
        "click",
        "change",
        "contextmenu",
        "reset",
        "submit"
    ];
    function isDiscreteEventThatRequiresHydration(eventType) {
        return discreteReplayableEvents.indexOf(eventType) > -1;
    }
    function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        return {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        };
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case "focusin":
            case "focusout":
                queuedFocus = null;
                break;
            case "dragenter":
            case "dragleave":
                queuedDrag = null;
                break;
            case "mouseover":
            case "mouseout":
                queuedMouse = null;
                break;
            case "pointerover":
            case "pointerout":
                var pointerId = nativeEvent.pointerId;
                queuedPointers.delete(pointerId);
                break;
            case "gotpointercapture":
            case "lostpointercapture":
                var _pointerId = nativeEvent.pointerId;
                queuedPointerCaptures.delete(_pointerId);
                break;
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
                var _fiber2 = getInstanceFromNode(blockedOn);
                if (_fiber2 !== null) // Attempt to increase the priority of this target.
                attemptContinuousHydration(_fiber2);
            }
            return queuedEvent;
        } // If we have already queued this exact event, then it's because
        // the different event systems have different DOM event listeners.
        // We can accumulate the flags, and the targetContainers, and
        // store a single event to be replayed.
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        var targetContainers = existingQueuedEvent.targetContainers;
        if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) targetContainers.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // These set relatedTarget to null because the replayed event will be treated as if we
        // moved from outside the window (no target) onto the target once it hydrates.
        // Instead of mutating we could clone the event.
        switch(domEventName){
            case "focusin":
                var focusEvent = nativeEvent;
                queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                return true;
            case "dragenter":
                var dragEvent = nativeEvent;
                queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                return true;
            case "mouseover":
                var mouseEvent = nativeEvent;
                queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                return true;
            case "pointerover":
                var pointerEvent = nativeEvent;
                var pointerId = pointerEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                return true;
            case "gotpointercapture":
                var _pointerEvent = nativeEvent;
                var _pointerId2 = _pointerEvent.pointerId;
                queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                return true;
        }
        return false;
    } // Check if this target is unblocked. Returns true if it's unblocked.
    function attemptExplicitHydrationTarget(queuedTarget) {
        // TODO: This function shares a lot of logic with findInstanceBlockingEvent.
        // Try to unify them. It's a bit tricky since it would require two return
        // values.
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) {
                        // We're blocked on hydrating this boundary.
                        // Increase its priority.
                        queuedTarget.blockedOn = instance;
                        attemptHydrationAtPriority(queuedTarget.priority, function() {
                            attemptHydrationAtCurrentPriority(nearestMounted);
                        });
                        return;
                    }
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) {
                        queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
                        // a root other than sync.
                        return;
                    }
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function queueExplicitHydrationTarget(target) {
        // TODO: This will read the priority if it's dispatched by the React
        // event system but not native events. Should read window.event.type, like
        // we do for updates (getCurrentEventPriority).
        var updatePriority = getCurrentUpdatePriority$1();
        var queuedTarget = {
            blockedOn: null,
            target: target,
            priority: updatePriority
        };
        var i = 0;
        for(; i < queuedExplicitHydrationTargets.length; i++){
            // Stop once we hit the first target with lower priority than
            if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) break;
        }
        queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);
        if (i === 0) attemptExplicitHydrationTarget(queuedTarget);
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (queuedEvent.blockedOn !== null) return false;
        var targetContainers = queuedEvent.targetContainers;
        while(targetContainers.length > 0){
            var targetContainer = targetContainers[0];
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn === null) {
                var nativeEvent = queuedEvent.nativeEvent;
                var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                setReplayingEvent(nativeEventClone);
                nativeEvent.target.dispatchEvent(nativeEventClone);
                resetReplayingEvent();
            } else {
                // We're still blocked. Try again later.
                var _fiber3 = getInstanceFromNode(nextBlockedOn);
                if (_fiber3 !== null) attemptContinuousHydration(_fiber3);
                queuedEvent.blockedOn = nextBlockedOn;
                return false;
            } // This target container was successfully dispatched. Try the next.
            targetContainers.shift();
        }
        return true;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        if (attemptReplayContinuousQueuedEvent(queuedEvent)) map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = false;
        if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) queuedFocus = null;
        if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) queuedDrag = null;
        if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) queuedMouse = null;
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
                hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
                // now unblocked. This first might not actually be unblocked yet.
                // We could check it early to avoid scheduling an unnecessary callback.
                Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
        }
    }
    function retryIfBlockedOn(unblocked) {
        // Mark anything that was blocked on this as no longer blocked
        // and eligible for a replay.
        if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
            // worth it because we expect very few discrete events to queue up and once
            // we are actually fully unblocked it will be fast to replay them.
            for(var i = 1; i < queuedDiscreteEvents.length; i++){
                var queuedEvent = queuedDiscreteEvents[i];
                if (queuedEvent.blockedOn === unblocked) queuedEvent.blockedOn = null;
            }
        }
        if (queuedFocus !== null) scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        if (queuedDrag !== null) scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        if (queuedMouse !== null) scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        var unblock = function(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        };
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++){
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) queuedTarget.blockedOn = null;
        }
        while(queuedExplicitHydrationTargets.length > 0){
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) break;
            else {
                attemptExplicitHydrationTarget(nextExplicitTarget);
                if (nextExplicitTarget.blockedOn === null) // We're unblocked.
                queuedExplicitHydrationTargets.shift();
            }
        }
    }
    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig; // TODO: can we stop exporting these?
    var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
    // We'd like to remove this but it's not clear if this is safe.
    function setEnabled(enabled) {
        _enabled = !!enabled;
    }
    function isEnabled() {
        return _enabled;
    }
    function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
        var eventPriority = getEventPriority(domEventName);
        var listenerWrapper;
        switch(eventPriority){
            case DiscreteEventPriority:
                listenerWrapper = dispatchDiscreteEvent;
                break;
            case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
            case DefaultEventPriority:
            default:
                listenerWrapper = dispatchEvent;
                break;
        }
        return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(DiscreteEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(ContinuousEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (!_enabled) return;
        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
    }
    function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
        if (blockedOn === null) {
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
            clearIfContinuousEvent(domEventName, nativeEvent);
            return;
        }
        if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
            nativeEvent.stopPropagation();
            return;
        } // We need to clear only if we didn't queue because
        // queueing is accumulative.
        clearIfContinuousEvent(domEventName, nativeEvent);
        if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
            while(blockedOn !== null){
                var fiber = getInstanceFromNode(blockedOn);
                if (fiber !== null) attemptSynchronousHydration(fiber);
                var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
                if (nextBlockedOn === null) dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                if (nextBlockedOn === blockedOn) break;
                blockedOn = nextBlockedOn;
            }
            if (blockedOn !== null) nativeEvent.stopPropagation();
            return;
        } // This is not replayable so we'll invoke it but without a target,
        // in case the event system needs to trace it.
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
    }
    var return_targetInst = null; // Returns a SuspenseInstance or Container if it's blocked.
    // The return_targetInst field above is conceptually part of the return value.
    function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // TODO: Warn if _enabled is false.
        return_targetInst = null;
        var nativeEventTarget = getEventTarget(nativeEvent);
        var targetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) // This tree has been unmounted already. Dispatch without a target.
            targetInst = null;
            else {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) // Queue the event to be replayed later. Abort dispatching since we
                    // don't want this event dispatched twice through the event system.
                    // TODO: If this is the first discrete event in the queue. Schedule an increased
                    // priority for this boundary.
                    return instance;
                     // This shouldn't happen, something went wrong but to avoid blocking
                    // the whole system, dispatch the event without a target.
                    // TODO: Warn.
                    targetInst = null;
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) // If this happens during a replay something went wrong and it might block
                    // the whole system.
                    return getContainerFromFiber(nearestMounted);
                    targetInst = null;
                } else if (nearestMounted !== targetInst) // If we get an event (ex: img onload) before committing that
                // component's mount, ignore it for now (that is, treat it as if it was an
                // event on a non-React tree). We might also consider queueing events and
                // dispatching them after the mount.
                targetInst = null;
            }
        }
        return_targetInst = targetInst; // We're not blocked on anything.
        return null;
    }
    function getEventPriority(domEventName) {
        switch(domEventName){
            // Used by SimpleEventPlugin:
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            // eslint-disable-next-line no-fallthrough
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            // eslint-disable-next-line no-fallthrough
            case "beforeblur":
            case "afterblur":
            // eslint-disable-next-line no-fallthrough
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
                return DiscreteEventPriority;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "toggle":
            case "touchmove":
            case "wheel":
            // eslint-disable-next-line no-fallthrough
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
                return ContinuousEventPriority;
            case "message":
                // We might be in the Scheduler callback.
                // Eventually this mechanism will be replaced by a check
                // of the current priority on the native scheduler.
                var schedulerPriority = getCurrentPriorityLevel();
                switch(schedulerPriority){
                    case ImmediatePriority:
                        return DiscreteEventPriority;
                    case UserBlockingPriority:
                        return ContinuousEventPriority;
                    case NormalPriority:
                    case LowPriority:
                        // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
                        return DefaultEventPriority;
                    case IdlePriority:
                        return IdleEventPriority;
                    default:
                        return DefaultEventPriority;
                }
            default:
                return DefaultEventPriority;
        }
    }
    function addEventBubbleListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, false);
        return listener;
    }
    function addEventCaptureListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, true);
        return listener;
    }
    function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            capture: true,
            passive: passive
        });
        return listener;
    }
    function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            passive: passive
        });
        return listener;
    }
    /**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */ var root = null;
    var startText = null;
    var fallbackText = null;
    function initialize(nativeEventTarget) {
        root = nativeEventTarget;
        startText = getText();
        return true;
    }
    function reset() {
        root = null;
        startText = null;
        fallbackText = null;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start;
        var startValue = startText;
        var startLength = startValue.length;
        var end;
        var endValue = getText();
        var endLength = endValue.length;
        for(start = 0; start < startLength; start++){
            if (startValue[start] !== endValue[start]) break;
        }
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd; end++){
            if (startValue[startLength - end] !== endValue[endLength - end]) break;
        }
        var sliceTail = end > 1 ? 1 - end : undefined;
        fallbackText = endValue.slice(start, sliceTail);
        return fallbackText;
    }
    function getText() {
        if ("value" in root) return root.value;
        return root.textContent;
    }
    /**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */ function getEventCharCode(nativeEvent) {
        var charCode;
        var keyCode = nativeEvent.keyCode;
        if ("charCode" in nativeEvent) {
            charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.
            if (charCode === 0 && keyCode === 13) charCode = 13;
        } else // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
         // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
        // report Enter as charCode 10 when ctrl is pressed.
        if (charCode === 10) charCode = 13;
         // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
        // Must not discard the (non-)printable Enter-key.
        if (charCode >= 32 || charCode === 13) return charCode;
        return 0;
    }
    function functionThatReturnsTrue() {
        return true;
    }
    function functionThatReturnsFalse() {
        return false;
    } // This is intentionally a factory so that we have different returned constructors.
    // If we had a single constructor, it would be megamorphic and engines would deopt.
    function createSyntheticEvent(Interface) {
        /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */ function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var _propName in Interface){
                if (!Interface.hasOwnProperty(_propName)) continue;
                var normalize = Interface[_propName];
                if (normalize) this[_propName] = normalize(nativeEvent);
                else this[_propName] = nativeEvent[_propName];
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) this.isDefaultPrevented = functionThatReturnsTrue;
            else this.isDefaultPrevented = functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) return;
                if (event.preventDefault) event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.returnValue !== "unknown") event.returnValue = false;
                this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) return;
                if (event.stopPropagation) event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.cancelBubble !== "unknown") // The ChangeEventPlugin registers a "propertychange" event for
                // IE. This event does not support bubbling or cancelling, and
                // any references to cancelBubble throw "Member not found".  A
                // typeof check of "unknown" circumvents this issue (and is also
                // IE specific).
                event.cancelBubble = true;
                this.isPropagationStopped = functionThatReturnsTrue;
            },
            /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */ persist: function() {},
            /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */ isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    };
    var SyntheticEvent = createSyntheticEvent(EventInterface);
    var UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
    });
    var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
    var lastMovementX;
    var lastMovementY;
    var lastMouseEvent;
    function updateMouseMovementPolyfillState(event) {
        if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === "mousemove") {
                lastMovementX = event.screenX - lastMouseEvent.screenX;
                lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
                lastMovementX = 0;
                lastMovementY = 0;
            }
            lastMouseEvent = event;
        }
    }
    /**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
        },
        movementX: function(event) {
            if ("movementX" in event) return event.movementX;
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
        },
        movementY: function(event) {
            if ("movementY" in event) return event.movementY;
             // Don't need to call updateMouseMovementPolyfillState() here
            // because it's guaranteed to have already run when movementX
            // was copied.
            return lastMovementY;
        }
    });
    var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
    /**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
    });
    var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
    /**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
    });
    var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */ var AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */ var ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
            return "clipboardData" in event ? event.clipboardData : window.clipboardData;
        }
    });
    var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */ var CompositionEventInterface = assign({}, EventInterface, {
        data: 0
    });
    var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */ // Happens to share the same list for now.
    var SyntheticInputEvent = SyntheticCompositionEvent;
    /**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var normalizeKey = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
    };
    /**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var translateToKey = {
        "8": "Backspace",
        "9": "Tab",
        "12": "Clear",
        "13": "Enter",
        "16": "Shift",
        "17": "Control",
        "18": "Alt",
        "19": "Pause",
        "20": "CapsLock",
        "27": "Escape",
        "32": " ",
        "33": "PageUp",
        "34": "PageDown",
        "35": "End",
        "36": "Home",
        "37": "ArrowLeft",
        "38": "ArrowUp",
        "39": "ArrowRight",
        "40": "ArrowDown",
        "45": "Insert",
        "46": "Delete",
        "112": "F1",
        "113": "F2",
        "114": "F3",
        "115": "F4",
        "116": "F5",
        "117": "F6",
        "118": "F7",
        "119": "F8",
        "120": "F9",
        "121": "F10",
        "122": "F11",
        "123": "F12",
        "144": "NumLock",
        "145": "ScrollLock",
        "224": "Meta"
    };
    /**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */ function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
            // Normalize inconsistent values reported by browsers due to
            // implementations of a working draft specification.
            // FireFox implements `key` but returns `MozPrintableKey` for all
            // printable characters (normalized to `Unidentified`), ignore it.
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== "Unidentified") return key;
        } // Browser does not implement `key`, polyfill as much of it as we can.
        if (nativeEvent.type === "keypress") {
            var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
            // thus be captured by `keypress`, no other non-printable key should.
            return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
        }
        if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || "Unidentified";
        return "";
    }
    /**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */ var modifierKeyToProp = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.
    function modifierStateGetter(keyArg) {
        var syntheticEvent = this;
        var nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState) return nativeEvent.getModifierState(keyArg);
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : false;
    }
    function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
    }
    /**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var KeyboardEventInterface = assign({}, UIEventInterface, {
        key: getEventKey,
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function(event) {
            // `charCode` is the result of a KeyPress event and represents the value of
            // the actual printable character.
            // KeyPress is deprecated, but its replacement is not yet final and not
            // implemented in any major browser. Only KeyPress has charCode.
            if (event.type === "keypress") return getEventCharCode(event);
            return 0;
        },
        keyCode: function(event) {
            // `keyCode` is the result of a KeyDown/Up event and represents the value of
            // physical keyboard key.
            // The actual meaning of the value depends on the users' keyboard layout
            // which cannot be detected. Assuming that it is a US keyboard layout
            // provides a surprisingly accurate mapping for US and European users.
            // Due to this, it is left to the user to implement at this time.
            if (event.type === "keydown" || event.type === "keyup") return event.keyCode;
            return 0;
        },
        which: function(event) {
            // `which` is an alias for either `keyCode` or `charCode` depending on the
            // type of the event.
            if (event.type === "keypress") return getEventCharCode(event);
            if (event.type === "keydown" || event.type === "keyup") return event.keyCode;
            return 0;
        }
    });
    var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
    /**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */ var PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    });
    var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
    /**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */ var TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    });
    var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */ var TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
    /**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
            return "deltaX" in event ? event.deltaX : "wheelDeltaX" in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return "deltaY" in event ? event.deltaY : "wheelDeltaY" in event ? -event.wheelDeltaY : "wheelDelta" in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: 0
    });
    var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
    var END_KEYCODES = [
        9,
        13,
        27,
        32
    ]; // Tab, Return, Esc, Space
    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && "CompositionEvent" in window;
    var documentMode = null;
    if (canUseDOM && "documentMode" in document) documentMode = document.documentMode;
     // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.
    var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.
    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
    function registerEvents() {
        registerTwoPhaseEvent("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste"
        ]);
        registerTwoPhaseEvent("onCompositionEnd", [
            "compositionend",
            "focusout",
            "keydown",
            "keypress",
            "keyup",
            "mousedown"
        ]);
        registerTwoPhaseEvent("onCompositionStart", [
            "compositionstart",
            "focusout",
            "keydown",
            "keypress",
            "keyup",
            "mousedown"
        ]);
        registerTwoPhaseEvent("onCompositionUpdate", [
            "compositionupdate",
            "focusout",
            "keydown",
            "keypress",
            "keyup",
            "mousedown"
        ]);
    } // Track whether we've ever handled a keypress on the space key.
    var hasSpaceKeypress = false;
    /**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */ function isKeypressCommand(nativeEvent) {
        return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
        !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
 * Translate native top level events into event types.
 */ function getCompositionEventType(domEventName) {
        switch(domEventName){
            case "compositionstart":
                return "onCompositionStart";
            case "compositionend":
                return "onCompositionEnd";
            case "compositionupdate":
                return "onCompositionUpdate";
        }
    }
    /**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */ function isFallbackCompositionStart(domEventName, nativeEvent) {
        return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
 * Does our fallback mode think that this event is the end of composition?
 */ function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case "keyup":
                // Command keys insert or clear IME input.
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case "keydown":
                // Expect IME keyCode on each keydown. If we get any other
                // code we must have exited earlier.
                return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
                // Events are not possible without cancelling IME.
                return true;
            default:
                return false;
        }
    }
    /**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */ function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        if (typeof detail === "object" && "data" in detail) return detail.data;
        return null;
    }
    /**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */ function isUsingKoreanIME(nativeEvent) {
        return nativeEvent.locale === "ko";
    } // Track the current IME composition status, if any.
    var isComposing = false;
    /**
 * @return {?object} A SyntheticCompositionEvent.
 */ function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var eventType;
        var fallbackData;
        if (canUseCompositionEvent) eventType = getCompositionEventType(domEventName);
        else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) eventType = "onCompositionStart";
        } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) eventType = "onCompositionEnd";
        if (!eventType) return null;
        if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            // The current composition is stored statically and must not be
            // overwritten while composition continues.
            if (!isComposing && eventType === "onCompositionStart") isComposing = initialize(nativeEventTarget);
            else if (eventType === "onCompositionEnd") {
                if (isComposing) fallbackData = getData();
            }
        }
        var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
        if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            if (fallbackData) // Inject data generated from fallback path into the synthetic event.
            // This matches the property of native CompositionEventInterface.
            event.data = fallbackData;
            else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) event.data = customData;
            }
        }
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case "compositionend":
                return getDataFromCustomEvent(nativeEvent);
            case "keypress":
                /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */ var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;
            case "textInput":
                // Record the characters to be added to the DOM.
                var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
                // it at the keypress level and bail immediately. Android Chrome
                // doesn't give us keycodes, so we need to ignore it.
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) return null;
                return chars;
            default:
                // For other native event types, do nothing.
                return null;
        }
    }
    /**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */ function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        // If we are currently composing (IME) and using a fallback to do so,
        // try to extract the composed characters from the fallback object.
        // If composition event is available, we extract a string only at
        // compositionevent, otherwise extract it at fallback events.
        if (isComposing) {
            if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
            }
            return null;
        }
        switch(domEventName){
            case "paste":
                // If a paste event occurs after a keypress, throw out the input
                // chars. Paste events should not lead to BeforeInput events.
                return null;
            case "keypress":
                /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */ if (!isKeypressCommand(nativeEvent)) {
                    // IE fires the `keypress` event when a user types an emoji via
                    // Touch keyboard of Windows.  In such a case, the `char` property
                    // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                    // is 2, the property `which` does not represent an emoji correctly.
                    // In such a case, we directly return the `char` property instead of
                    // using `which`.
                    if (nativeEvent.char && nativeEvent.char.length > 1) return nativeEvent.char;
                    else if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case "compositionend":
                return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    /**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */ function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var chars;
        if (canUseTextInputEvent) chars = getNativeBeforeInputChars(domEventName, nativeEvent);
        else chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
         // If no characters are being inserted, no BeforeInput event should
        // be fired.
        if (!chars) return null;
        var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
        if (listeners.length > 0) {
            var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            event.data = chars;
        }
    }
    /**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */ function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    }
    /**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */ var supportedInputTypes = {
        color: true,
        date: true,
        datetime: true,
        "datetime-local": true,
        email: true,
        month: true,
        number: true,
        password: true,
        range: true,
        search: true,
        tel: true,
        text: true,
        time: true,
        url: true,
        week: true
    };
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        if (nodeName === "input") return !!supportedInputTypes[elem.type];
        if (nodeName === "textarea") return true;
        return false;
    }
    /**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */ function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return false;
        var eventName = "on" + eventNameSuffix;
        var isSupported = eventName in document;
        if (!isSupported) {
            var element = document.createElement("div");
            element.setAttribute(eventName, "return;");
            isSupported = typeof element[eventName] === "function";
        }
        return isSupported;
    }
    function registerEvents$1() {
        registerTwoPhaseEvent("onChange", [
            "change",
            "click",
            "focusin",
            "focusout",
            "input",
            "keydown",
            "keyup",
            "selectionchange"
        ]);
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        // Flag this event loop as needing state restore.
        enqueueStateRestore(target);
        var listeners = accumulateTwoPhaseListeners(inst, "onChange");
        if (listeners.length > 0) {
            var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
        }
    }
    /**
 * For IE shims
 */ var activeElement = null;
    var activeElementInst = null;
    /**
 * SECTION: handle `change` event
 */ function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === "select" || nodeName === "input" && elem.type === "file";
    }
    function manualDispatchChangeEvent(nativeEvent) {
        var dispatchQueue = [];
        createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
        // other events and have it go through ReactBrowserEventEmitter. Since it
        // doesn't, we manually listen for the events and so we have to enqueue and
        // process the abstract event manually.
        //
        // Batching is necessary here in order to ensure that all event handlers run
        // before the next rerender (including event handlers attached to ancestor
        // elements instead of directly on the input). Without this, controlled
        // components don't work properly in conjunction with event bubbling because
        // the component is rerendered and the value reverted before all the event
        // handlers can run. See https://github.com/facebook/react/issues/708.
        batchedUpdates(runEventInBatch, dispatchQueue);
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if (domEventName === "change") return targetInst;
    }
    /**
 * SECTION: handle `input` event
 */ var isInputEventSupported = false;
    if (canUseDOM) // IE9 claims to support the input event but fails to trigger it when
    // deleting text, so we ignore its input events.
    isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
    /**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */ function startWatchingForValueChange(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElement.attachEvent("onpropertychange", handlePropertyChange);
    }
    /**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */ function stopWatchingForValueChange() {
        if (!activeElement) return;
        activeElement.detachEvent("onpropertychange", handlePropertyChange);
        activeElement = null;
        activeElementInst = null;
    }
    /**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */ function handlePropertyChange(nativeEvent) {
        if (nativeEvent.propertyName !== "value") return;
        if (getInstIfValueChanged(activeElementInst)) manualDispatchChangeEvent(nativeEvent);
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        if (domEventName === "focusin") {
            // In IE9, propertychange fires for most input events but is buggy and
            // doesn't fire when text is deleted, but conveniently, selectionchange
            // appears to fire in all of the remaining cases so we catch those and
            // forward the event if the value has changed
            // In either case, we don't want to call the event handler if the value
            // is changed from JS so we redefine a setter for `.value` that updates
            // our activeElementValue variable, allowing us to ignore those changes
            //
            // stopWatching() should be a noop here but we call it just in case we
            // missed a blur event somehow.
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
        } else if (domEventName === "focusout") stopWatchingForValueChange();
    } // For IE8 and IE9.
    function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
        if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
    }
    /**
 * SECTION: handle `click` event
 */ function shouldUseClickEvent(elem) {
        // Use the `click` event to detect changes to checkbox and radio inputs.
        // This approach works across all browsers, whereas `change` does not fire
        // until `blur` in IE8.
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if (domEventName === "click") return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if (domEventName === "input" || domEventName === "change") return getInstIfValueChanged(targetInst);
    }
    function handleControlledInputBlur(node) {
        var state = node._wrapperState;
        if (!state || !state.controlled || node.type !== "number") return;
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, "number", node.value);
    }
    /**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */ function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) getTargetInstFunc = getTargetInstForChangeEvent;
        else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
            }
        } else if (shouldUseClickEvent(targetNode)) getTargetInstFunc = getTargetInstForClickEvent;
        if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
                createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                return;
            }
        }
        if (handleEventFunc) handleEventFunc(domEventName, targetNode, targetInst);
         // When blurring, set the value attribute for number inputs
        if (domEventName === "focusout") handleControlledInputBlur(targetNode);
    }
    function registerEvents$2() {
        registerDirectEvent("onMouseEnter", [
            "mouseout",
            "mouseover"
        ]);
        registerDirectEvent("onMouseLeave", [
            "mouseout",
            "mouseover"
        ]);
        registerDirectEvent("onPointerEnter", [
            "pointerout",
            "pointerover"
        ]);
        registerDirectEvent("onPointerLeave", [
            "pointerout",
            "pointerover"
        ]);
    }
    /**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */ function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
        var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
        if (isOverEvent && !isReplayingEvent(nativeEvent)) {
            // If this is an over event with a target, we might have already dispatched
            // the event in the out event of the other target. If this is replayed,
            // then it's because we couldn't dispatch against this target previously
            // so we have to do it now instead.
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
                // If the related node is managed by React, we can assume that we have
                // already dispatched the corresponding events during its mouseout.
                if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) return;
            }
        }
        if (!isOutEvent && !isOverEvent) // Must not be a mouse or pointer in or out - ignoring.
        return;
        var win; // TODO: why is this nullable in the types but we read from it?
        if (nativeEventTarget.window === nativeEventTarget) // `nativeEventTarget` is probably a window object.
        win = nativeEventTarget;
        else {
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            var doc = nativeEventTarget.ownerDocument;
            if (doc) win = doc.defaultView || doc.parentWindow;
            else win = window;
        }
        var from;
        var to;
        if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
                var nearestMounted = getNearestMountedFiber(to);
                if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) to = null;
            }
        } else {
            // Moving to a node from outside the window.
            from = null;
            to = targetInst;
        }
        if (from === to) // Nothing pertains to our managed components.
        return;
        var SyntheticEventCtor = SyntheticMouseEvent;
        var leaveEventType = "onMouseLeave";
        var enterEventType = "onMouseEnter";
        var eventTypePrefix = "mouse";
        if (domEventName === "pointerout" || domEventName === "pointerover") {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = "onPointerLeave";
            enterEventType = "onPointerEnter";
            eventTypePrefix = "pointer";
        }
        var fromNode = from == null ? win : getNodeFromInstance(from);
        var toNode = to == null ? win : getNodeFromInstance(to);
        var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = null; // We should only process this nativeEvent if we are processing
        // the first ancestor. Next time, we will ignore the event.
        var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
        }
        accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
    }
    /**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */ function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
        ;
    }
    var objectIs = typeof Object.is === "function" ? Object.is : is;
    /**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */ function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return true;
        if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) return false;
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return false;
         // Test for A's keys different from B.
        for(var i = 0; i < keysA.length; i++){
            var currentKey = keysA[i];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return false;
        }
        return true;
    }
    /**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */ function getLeafNode(node) {
        while(node && node.firstChild)node = node.firstChild;
        return node;
    }
    /**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */ function getSiblingNode(node) {
        while(node){
            if (node.nextSibling) return node.nextSibling;
            node = node.parentNode;
        }
    }
    /**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */ function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        var nodeStart = 0;
        var nodeEnd = 0;
        while(node){
            if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;
                if (nodeStart <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - nodeStart
                };
                nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
        }
    }
    /**
 * @param {DOMElement} outerNode
 * @return {?object}
 */ function getOffsets(outerNode) {
        var ownerDocument = outerNode.ownerDocument;
        var win = ownerDocument && ownerDocument.defaultView || window;
        var selection = win.getSelection && win.getSelection();
        if (!selection || selection.rangeCount === 0) return null;
        var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
        // up/down buttons on an <input type="number">. Anonymous divs do not seem to
        // expose properties, triggering a "Permission denied error" if any of its
        // properties are accessed. The only seemingly possible way to avoid erroring
        // is to access a property that typically works for non-anonymous divs and
        // catch any error that may otherwise arise. See
        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
        try {
            /* eslint-disable no-unused-expressions */ anchorNode.nodeType;
            focusNode.nodeType;
        /* eslint-enable no-unused-expressions */ } catch (e) {
            return null;
        }
        return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */ function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
        var length = 0;
        var start = -1;
        var end = -1;
        var indexWithinAnchor = 0;
        var indexWithinFocus = 0;
        var node = outerNode;
        var parentNode = null;
        outer: while(true){
            var next = null;
            while(true){
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) start = length + anchorOffset;
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) end = length + focusOffset;
                if (node.nodeType === TEXT_NODE) length += node.nodeValue.length;
                if ((next = node.firstChild) === null) break;
                 // Moving from `node` to its first child `next`.
                parentNode = node;
                node = next;
            }
            while(true){
                if (node === outerNode) break outer;
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) start = length;
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) end = length;
                if ((next = node.nextSibling) !== null) break;
                node = parentNode;
                parentNode = node.parentNode;
            } // Moving from `node` to its next sibling `next`.
            node = next;
        }
        if (start === -1 || end === -1) // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
        return {
            start: start,
            end: end
        };
    }
    /**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */ function setOffsets(node, offsets) {
        var doc = node.ownerDocument || document;
        var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
        // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
        // fails when pasting 100+ items)
        if (!win.getSelection) return;
        var selection = win.getSelection();
        var length = node.textContent.length;
        var start = Math.min(offsets.start, length);
        var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
        // Flip backward selections, so we can set with a single range.
        if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
        }
        var startMarker = getNodeForCharacterOffset(node, start);
        var endMarker = getNodeForCharacterOffset(node, end);
        if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) return;
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
            } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
            }
        }
    }
    function isTextNode(node) {
        return node && node.nodeType === TEXT_NODE;
    }
    function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) return false;
        else if (outerNode === innerNode) return true;
        else if (isTextNode(outerNode)) return false;
        else if (isTextNode(innerNode)) return containsNode(outerNode, innerNode.parentNode);
        else if ("contains" in outerNode) return outerNode.contains(innerNode);
        else if (outerNode.compareDocumentPosition) return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        else return false;
    }
    function isInDocument(node) {
        return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }
    function isSameOriginFrame(iframe) {
        try {
            // Accessing the contentDocument of a HTMLIframeElement can cause the browser
            // to throw, e.g. if it has a cross-origin src attribute.
            // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
            // iframe.contentDocument.defaultView;
            // A safety way is to access one of the cross origin properties: Window or Location
            // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
            // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
            return typeof iframe.contentWindow.location.href === "string";
        } catch (err) {
            return false;
        }
    }
    function getActiveElementDeep() {
        var win = window;
        var element = getActiveElement();
        while(element instanceof win.HTMLIFrameElement){
            if (isSameOriginFrame(element)) win = element.contentWindow;
            else return element;
            element = getActiveElement(win.document);
        }
        return element;
    }
    /**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */ /**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */ function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
    }
    function getSelectionInformation() {
        var focusedElem = getActiveElementDeep();
        return {
            focusedElem: focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
        };
    }
    /**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */ function restoreSelection(priorSelectionInformation) {
        var curFocusedElem = getActiveElementDeep();
        var priorFocusedElem = priorSelectionInformation.focusedElem;
        var priorSelectionRange = priorSelectionInformation.selectionRange;
        if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) setSelection(priorFocusedElem, priorSelectionRange);
             // Focusing a node can change the scroll position, which is undesirable
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while(ancestor = ancestor.parentNode)if (ancestor.nodeType === ELEMENT_NODE) ancestors.push({
                element: ancestor,
                left: ancestor.scrollLeft,
                top: ancestor.scrollTop
            });
            if (typeof priorFocusedElem.focus === "function") priorFocusedElem.focus();
            for(var i = 0; i < ancestors.length; i++){
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
            }
        }
    }
    /**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */ function getSelection(input) {
        var selection;
        if ("selectionStart" in input) // Modern browser with input or textarea.
        selection = {
            start: input.selectionStart,
            end: input.selectionEnd
        };
        else // Content editable or old IE textarea.
        selection = getOffsets(input);
        return selection || {
            start: 0,
            end: 0
        };
    }
    /**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */ function setSelection(input, offsets) {
        var start = offsets.start;
        var end = offsets.end;
        if (end === undefined) end = start;
        if ("selectionStart" in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
        } else setOffsets(input, offsets);
    }
    var skipSelectionChangeEvent = canUseDOM && "documentMode" in document && document.documentMode <= 11;
    function registerEvents$3() {
        registerTwoPhaseEvent("onSelect", [
            "focusout",
            "contextmenu",
            "dragend",
            "focusin",
            "keydown",
            "keyup",
            "mousedown",
            "mouseup",
            "selectionchange"
        ]);
    }
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */ function getSelection$1(node) {
        if ("selectionStart" in node && hasSelectionCapabilities(node)) return {
            start: node.selectionStart,
            end: node.selectionEnd
        };
        else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
            };
        }
    }
    /**
 * Get document associated with the event target.
 */ function getEventTargetDocument(eventTarget) {
        return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */ function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        // Ensure we have the right element, and that the user is not dragging a
        // selection (this matches native `select` event behavior). In HTML5, select
        // fires only on input and textarea thus if there's no focused element we
        // won't dispatch.
        var doc = getEventTargetDocument(nativeEventTarget);
        if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) return;
         // Only fire when selection has actually changed.
        var currentSelection = getSelection$1(activeElement$1);
        if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
            if (listeners.length > 0) {
                var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                    event: event,
                    listeners: listeners
                });
                event.target = activeElement$1;
            }
        }
    }
    /**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */ function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        switch(domEventName){
            // Track the input node that has focus.
            case "focusin":
                if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                    activeElement$1 = targetNode;
                    activeElementInst$1 = targetInst;
                    lastSelection = null;
                }
                break;
            case "focusout":
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
            // Don't fire the event while the user is dragging. This matches the
            // semantics of the native select event.
            case "mousedown":
                mouseDown = true;
                break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
                mouseDown = false;
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                break;
            // Chrome and IE fire non-standard event when selection is changed (and
            // sometimes when it hasn't). IE's event fires out of order with respect
            // to key and input events on deletion, so we discard it.
            //
            // Firefox doesn't support selectionchange, so check selection status
            // after each key entry. The selection changes after keydown and before
            // keyup, but we check on keydown as well in the case of holding down a
            // key, when multiple keydown events are fired but only one keyup is.
            // This is also our approach for IE handling, for the reason above.
            case "selectionchange":
                if (skipSelectionChangeEvent) break;
            // falls through
            case "keydown":
            case "keyup":
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
        }
    }
    /**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */ function makePrefixMap(styleProp, eventName) {
        var prefixes = {};
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes["Webkit" + styleProp] = "webkit" + eventName;
        prefixes["Moz" + styleProp] = "moz" + eventName;
        return prefixes;
    }
    /**
 * A list of event names to a configurable list of vendor prefixes.
 */ var vendorPrefixes = {
        animationend: makePrefixMap("Animation", "AnimationEnd"),
        animationiteration: makePrefixMap("Animation", "AnimationIteration"),
        animationstart: makePrefixMap("Animation", "AnimationStart"),
        transitionend: makePrefixMap("Transition", "TransitionEnd")
    };
    /**
 * Event names that have already been detected and prefixed (if applicable).
 */ var prefixedEventNames = {};
    /**
 * Element to check for prefixes on.
 */ var style = {};
    /**
 * Bootstrap if a DOM exists.
 */ if (canUseDOM) {
        style = document.createElement("div").style; // On some platforms, in particular some releases of Android 4.x,
        // the un-prefixed "animation" and "transition" properties are defined on the
        // style object but the events that fire will still be prefixed, so we need
        // to check if the un-prefixed events are usable, and if not remove them from the map.
        if (!("AnimationEvent" in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
        } // Same as above
        if (!("TransitionEvent" in window)) delete vendorPrefixes.transitionend.transition;
    }
    /**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */ function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        else if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName];
        for(var styleProp in prefixMap){
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
        return eventName;
    }
    var ANIMATION_END = getVendorPrefixedEventName("animationend");
    var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
    var ANIMATION_START = getVendorPrefixedEventName("animationstart");
    var TRANSITION_END = getVendorPrefixedEventName("transitionend");
    var topLevelEventsToReactNames = new Map(); // NOTE: Capitalization is important in this list!
    //
    // E.g. it needs "pointerDown", not "pointerdown".
    // This is because we derive both React name ("onPointerDown")
    // and DOM name ("pointerdown") from the same list.
    //
    // Exceptions that don't match this convention are listed separately.
    //
    // prettier-ignore
    var simpleEventPluginEvents = [
        "abort",
        "auxClick",
        "cancel",
        "canPlay",
        "canPlayThrough",
        "click",
        "close",
        "contextMenu",
        "copy",
        "cut",
        "drag",
        "dragEnd",
        "dragEnter",
        "dragExit",
        "dragLeave",
        "dragOver",
        "dragStart",
        "drop",
        "durationChange",
        "emptied",
        "encrypted",
        "ended",
        "error",
        "gotPointerCapture",
        "input",
        "invalid",
        "keyDown",
        "keyPress",
        "keyUp",
        "load",
        "loadedData",
        "loadedMetadata",
        "loadStart",
        "lostPointerCapture",
        "mouseDown",
        "mouseMove",
        "mouseOut",
        "mouseOver",
        "mouseUp",
        "paste",
        "pause",
        "play",
        "playing",
        "pointerCancel",
        "pointerDown",
        "pointerMove",
        "pointerOut",
        "pointerOver",
        "pointerUp",
        "progress",
        "rateChange",
        "reset",
        "resize",
        "seeked",
        "seeking",
        "stalled",
        "submit",
        "suspend",
        "timeUpdate",
        "touchCancel",
        "touchEnd",
        "touchStart",
        "volumeChange",
        "scroll",
        "toggle",
        "touchMove",
        "waiting",
        "wheel"
    ];
    function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName);
        registerTwoPhaseEvent(reactName, [
            domEventName
        ]);
    }
    function registerSimpleEvents() {
        for(var i = 0; i < simpleEventPluginEvents.length; i++){
            var eventName = simpleEventPluginEvents[i];
            var domEventName = eventName.toLowerCase();
            var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, "on" + capitalizedEvent);
        } // Special cases where event names don't match.
        registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
        registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
        registerSimpleEvent(ANIMATION_START, "onAnimationStart");
        registerSimpleEvent("dblclick", "onDoubleClick");
        registerSimpleEvent("focusin", "onFocus");
        registerSimpleEvent("focusout", "onBlur");
        registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
    }
    function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var reactName = topLevelEventsToReactNames.get(domEventName);
        if (reactName === undefined) return;
        var SyntheticEventCtor = SyntheticEvent;
        var reactEventType = domEventName;
        switch(domEventName){
            case "keypress":
                // Firefox creates a keypress event for function keys too. This removes
                // the unwanted keypress events. Enter is however both printable and
                // non-printable. One would expect Tab to be as well (but it isn't).
                if (getEventCharCode(nativeEvent) === 0) return;
            /* falls through */ case "keydown":
            case "keyup":
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
            case "focusin":
                reactEventType = "focus";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case "focusout":
                reactEventType = "blur";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case "beforeblur":
            case "afterblur":
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case "click":
                // Firefox creates a click event on right mouse clicks. This removes the
                // unwanted click events.
                if (nativeEvent.button === 2) return;
            /* falls through */ case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            /* falls through */ case "mouseout":
            case "mouseover":
            case "contextmenu":
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
                SyntheticEventCtor = SyntheticDragEvent;
                break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
            case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
            case "scroll":
                SyntheticEventCtor = SyntheticUIEvent;
                break;
            case "wheel":
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
            case "copy":
            case "cut":
            case "paste":
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
        }
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        // Some events don't bubble in the browser.
        // In the past, React has always bubbled them, but this can be surprising.
        // We're going to try aligning closer to the browser behavior by not bubbling
        // them in React either. We'll start by not bubbling onScroll, and then expand.
        var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
        // nonDelegatedEvents list in DOMPluginEventSystem.
        // Then we can remove this special list.
        // This is a breaking change that can wait until React 18.
        domEventName === "scroll";
        var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
        if (_listeners.length > 0) {
            // Intentionally create event lazily.
            var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: _event,
                listeners: _listeners
            });
        }
    }
    // TODO: remove top-level side effect.
    registerSimpleEvents();
    registerEvents$2();
    registerEvents$1();
    registerEvents$3();
    registerEvents();
    function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        // TODO: we should remove the concept of a "SimpleEventPlugin".
        // This is the basic functionality of the event system. All
        // the other plugins are essentially polyfills. So the plugin
        // should probably be inlined somewhere and have its logic
        // be core the to event system. This would potentially allow
        // us to ship builds of React without the polyfilled plugins below.
        extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
        // event's native "bubble" phase, which means that we're
        // not in the capture phase. That's because we emulate
        // the capture phase here still. This is a trade-off,
        // because in an ideal world we would not emulate and use
        // the phases properly, like we do with the SimpleEvent
        // plugin. However, the plugins below either expect
        // emulation (EnterLeave) or use state localized to that
        // plugin (BeforeInput, Change, Select). The state in
        // these modules complicates things, as you'll essentially
        // get the case where the capture phase event might change
        // state, only for the following bubble event to come in
        // later and not trigger anything as the state now
        // invalidates the heuristics of the event plugin. We
        // could alter all these plugins to work in such ways, but
        // that might cause other unknown side-effects that we
        // can't foresee right now.
        if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
    } // List of events that need to be individually attached to media elements.
    var mediaEventTypes = [
        "abort",
        "canplay",
        "canplaythrough",
        "durationchange",
        "emptied",
        "encrypted",
        "ended",
        "error",
        "loadeddata",
        "loadedmetadata",
        "loadstart",
        "pause",
        "play",
        "playing",
        "progress",
        "ratechange",
        "resize",
        "seeked",
        "seeking",
        "stalled",
        "suspend",
        "timeupdate",
        "volumechange",
        "waiting"
    ]; // We should not delegate these events to the container, but rather
    // set them on the actual target element itself. This is primarily
    // because these events do not consistently bubble in the DOM.
    var nonDelegatedEvents = new Set([
        "cancel",
        "close",
        "invalid",
        "load",
        "scroll",
        "toggle"
    ].concat(mediaEventTypes));
    function executeDispatch(event, listener, currentTarget) {
        var type = event.type || "unknown-event";
        event.currentTarget = currentTarget;
        invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
        event.currentTarget = null;
    }
    function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
        var previousInstance;
        if (inCapturePhase) for(var i = dispatchListeners.length - 1; i >= 0; i--){
            var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
            if (instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, listener, currentTarget);
            previousInstance = instance;
        }
        else for(var _i = 0; _i < dispatchListeners.length; _i++){
            var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
            if (_instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, _listener, _currentTarget);
            previousInstance = _instance;
        }
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
        } // This would be a good time to rethrow if any of the event handlers threw.
        rethrowCaughtError();
    }
    function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var nativeEventTarget = getEventTarget(nativeEvent);
        var dispatchQueue = [];
        extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        processDispatchQueue(dispatchQueue, eventSystemFlags);
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        if (!nonDelegatedEvents.has(domEventName)) error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var isCapturePhaseListener = false;
        var listenerSet = getEventListenerSet(targetElement);
        var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
        if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
        }
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        if (isCapturePhaseListener) eventSystemFlags |= IS_CAPTURE_PHASE;
        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    } // This is only used by createEventHandle when the
    var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
    function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
                // We handle selectionchange separately because it
                // doesn't bubble and needs to be on the document.
                if (domEventName !== "selectionchange") {
                    if (!nonDelegatedEvents.has(domEventName)) listenToNativeEvent(domEventName, false, rootContainerElement);
                    listenToNativeEvent(domEventName, true, rootContainerElement);
                }
            });
            var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
            if (ownerDocument !== null) // The selectionchange event also needs deduplication
            // but it is attached to the document.
            {
                if (!ownerDocument[listeningMarker]) {
                    ownerDocument[listeningMarker] = true;
                    listenToNativeEvent("selectionchange", false, ownerDocument);
                }
            }
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
        var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
        // active and not passive.
        var isPassiveListener = undefined;
        if (passiveBrowserEventsSupported) // Browsers introduced an intervention, making these events
        // passive by default on document. React doesn't bind them
        // to document anymore, but changing this now would undo
        // the performance wins from the change. So we emulate
        // the existing behavior manually on the roots now.
        // https://github.com/facebook/react/issues/19651
        {
            if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") isPassiveListener = true;
        }
        targetContainer;
        var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we
        if (isCapturePhaseListener) {
            if (isPassiveListener !== undefined) unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            else unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
        } else if (isPassiveListener !== undefined) unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
        else unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
    function isMatchingRootContainer(grandContainer, targetContainer) {
        return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var ancestorInst = targetInst;
        if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we
            if (targetInst !== null) {
                // The below logic attempts to work out if we need to change
                // the target fiber to a different ancestor. We had similar logic
                // in the legacy event system, except the big difference between
                // systems is that the modern event system now has an event listener
                // attached to each React Root and React Portal Root. Together,
                // the DOM nodes representing these roots are the "rootContainer".
                // To figure out which ancestor instance we should use, we traverse
                // up the fiber tree from the target instance and attempt to find
                // root boundaries that match that of our current "rootContainer".
                // If we find that "rootContainer", we find the parent fiber
                // sub-tree for that root and make that our ancestor instance.
                var node = targetInst;
                mainLoop: while(true){
                    if (node === null) return;
                    var nodeTag = node.tag;
                    if (nodeTag === HostRoot || nodeTag === HostPortal) {
                        var container = node.stateNode.containerInfo;
                        if (isMatchingRootContainer(container, targetContainerNode)) break;
                        if (nodeTag === HostPortal) {
                            // The target is a portal, but it's not the rootContainer we're looking for.
                            // Normally portals handle their own events all the way down to the root.
                            // So we should be able to stop now. However, we don't know if this portal
                            // was part of *our* root.
                            var grandNode = node.return;
                            while(grandNode !== null){
                                var grandTag = grandNode.tag;
                                if (grandTag === HostRoot || grandTag === HostPortal) {
                                    var grandContainer = grandNode.stateNode.containerInfo;
                                    if (isMatchingRootContainer(grandContainer, targetContainerNode)) // This is the rootContainer we're looking for and we found it as
                                    // a parent of the Portal. That means we can ignore it because the
                                    // Portal will bubble through to us.
                                    return;
                                }
                                grandNode = grandNode.return;
                            }
                        } // Now we need to find it's corresponding host fiber in the other
                        // tree. To do this we can use getClosestInstanceFromNode, but we
                        // need to validate that the fiber is a host instance, otherwise
                        // we need to traverse up through the DOM till we find the correct
                        // node that is from the other tree.
                        while(container !== null){
                            var parentNode = getClosestInstanceFromNode(container);
                            if (parentNode === null) return;
                            var parentTag = parentNode.tag;
                            if (parentTag === HostComponent || parentTag === HostText) {
                                node = ancestorInst = parentNode;
                                continue mainLoop;
                            }
                            container = container.parentNode;
                        }
                    }
                    node = node.return;
                }
            }
        }
        batchedUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
        var captureName = reactName !== null ? reactName + "Capture" : null;
        var reactEventName = inCapturePhase ? captureName : reactName;
        var listeners = [];
        var instance = targetFiber;
        var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                lastHostComponent = stateNode; // createEventHandle listeners
                if (reactEventName !== null) {
                    var listener = getListener(instance, reactEventName);
                    if (listener != null) listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
            } // If we are only accumulating events for the target, then we don't
            // continue to propagate through the React fiber tree to find other
            // listeners.
            if (accumulateTargetOnly) break;
             // If we are processing the onBeforeBlur event, then we need to take
            instance = instance.return;
        }
        return listeners;
    } // We should only use this function for:
    // - BeforeInputEventPlugin
    // - ChangeEventPlugin
    // - SelectEventPlugin
    // This is because we only process these plugins
    // in the bubble phase, so we need to accumulate two
    // phase event listeners (via emulation).
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        var captureName = reactName + "Capture";
        var listeners = [];
        var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                var captureListener = getListener(instance, captureName);
                if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                var bubbleListener = getListener(instance, reactName);
                if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
            }
            instance = instance.return;
        }
        return listeners;
    }
    function getParent(inst) {
        if (inst === null) return null;
        do inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        while (inst && inst.tag !== HostComponent);
        if (inst) return inst;
        return null;
    }
    /**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */ function getLowestCommonAncestor(instA, instB) {
        var nodeA = instA;
        var nodeB = instB;
        var depthA = 0;
        for(var tempA = nodeA; tempA; tempA = getParent(tempA))depthA++;
        var depthB = 0;
        for(var tempB = nodeB; tempB; tempB = getParent(tempB))depthB++;
         // If A is deeper, crawl up.
        while(depthA - depthB > 0){
            nodeA = getParent(nodeA);
            depthA--;
        } // If B is deeper, crawl up.
        while(depthB - depthA > 0){
            nodeB = getParent(nodeB);
            depthB--;
        } // Walk in lockstep until we find a match.
        var depth = depthA;
        while(depth--){
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) return nodeA;
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
        }
        return null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        var registrationName = event._reactName;
        var listeners = [];
        var instance = target;
        while(instance !== null){
            if (instance === common) break;
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) break;
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                if (inCapturePhase) {
                    var captureListener = getListener(instance, registrationName);
                    if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                } else if (!inCapturePhase) {
                    var bubbleListener = getListener(instance, registrationName);
                    if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
            }
            instance = instance.return;
        }
        if (listeners.length !== 0) dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    } // We should only use this function for:
    // - EnterLeaveEventPlugin
    // This is because we only process this plugin
    // in the bubble phase, so we need to accumulate two
    // phase event listeners.
    function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
        var common = from && to ? getLowestCommonAncestor(from, to) : null;
        if (from !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
        if (to !== null && enterEvent !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
    }
    function getListenerSetKey(domEventName, capture) {
        return domEventName + "__" + (capture ? "capture" : "bubble");
    }
    var didWarnInvalidHydration = false;
    var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
    var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
    var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
    var AUTOFOCUS = "autoFocus";
    var CHILDREN = "children";
    var STYLE = "style";
    var HTML$1 = "__html";
    var warnedUnknownTags;
    var validatePropertiesInDevelopment;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeHTML;
    warnedUnknownTags = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
    };
    validatePropertiesInDevelopment = function(type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props, {
            registrationNameDependencies: registrationNameDependencies,
            possibleRegistrationNames: possibleRegistrationNames
        });
    }; // IE 11 parses & normalizes the style attribute as opposed to other
    // browsers. It adds spaces and sorts the properties in some
    // non-alphabetical order. Handling that would require sorting CSS
    // properties in the client & server versions or applying
    // `expectedStyle` to a temporary DOM node to read its `style` attribute
    // normalized. Since it only affects IE, we're skipping style warnings
    // in that browser completely in favor of doing all that work.
    // See https://github.com/facebook/react/issues/11807
    canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
    warnForPropDifference = function(propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) return;
        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
        if (normalizedServerValue === normalizedClientValue) return;
        didWarnInvalidHydration = true;
        error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
    };
    warnForExtraAttributes = function(attributeNames) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function(name) {
            names.push(name);
        });
        error("Extra attributes from the server: %s", names);
    };
    warnForInvalidEventListener = function(registrationName, listener) {
        if (listener === false) error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
        else error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
    }; // Parse the HTML and read it back to normalize the HTML string so that it
    // can be used for comparison.
    normalizeHTML = function(parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
    };
    // It also can turn \u0000 into \uFFFD inside attributes.
    // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
    // If we have a mismatch, it might be caused by that.
    // We will still patch up in this case but not fire the warning.
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
    var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
    function normalizeMarkupForTextOrAttribute(markup) {
        checkHtmlStringCoercion(markup);
        var markupString = typeof markup === "string" ? markup : "" + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
    }
    function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
        if (normalizedServerText === normalizedClientText) return;
        if (shouldWarnDev) {
            if (!didWarnInvalidHydration) {
                didWarnInvalidHydration = true;
                error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
            }
        }
        if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) // In concurrent roots, we throw when there's a text mismatch and revert to
        // client rendering, up to the nearest Suspense boundary.
        throw new Error("Text content does not match server-rendered HTML.");
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function noop() {}
    function trapClickOnNonInteractiveElement(node) {
        // Mobile Safari does not fire properly bubble click events on
        // non-interactive elements, which means delegated click listeners do not
        // fire. The workaround for this bug involves attaching an empty click
        // listener on the target node.
        // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
        // Just set it using the onclick property so that we don't have to manage any
        // bookkeeping for it. Not sure if we need to clear it when the listener is
        // removed.
        // TODO: Only do this for the relevant Safaris maybe?
        node.onclick = noop;
    }
    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
        for(var propKey in nextProps){
            if (!nextProps.hasOwnProperty(propKey)) continue;
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                if (nextHtml != null) setInnerHTML(domElement, nextHtml);
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string") {
                    // Avoid setting initial textContent when the text is empty. In IE11 setting
                    // textContent on a <textarea> will cause the placeholder to not
                    // show within the <textarea> until it has been focused and blurred again.
                    // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                    var canSetTextContent = tag !== "textarea" || nextProp !== "";
                    if (canSetTextContent) setTextContent(domElement, nextProp);
                } else if (typeof nextProp === "number") setTextContent(domElement, "" + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== "function") warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === "onScroll") listenToNonDelegatedEvent("scroll", domElement);
                }
            } else if (nextProp != null) setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
    }
    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
        // TODO: Handle wasCustomComponentTag
        for(var i = 0; i < updatePayload.length; i += 2){
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) setValueForStyles(domElement, propValue);
            else if (propKey === DANGEROUSLY_SET_INNER_HTML) setInnerHTML(domElement, propValue);
            else if (propKey === CHILDREN) setTextContent(domElement, propValue);
            else setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
    }
    function createElement(type, props, rootContainerElement, parentNamespace) {
        var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
        // tags get no namespace.
        var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
        var domElement;
        var namespaceURI = parentNamespace;
        if (namespaceURI === HTML_NAMESPACE) namespaceURI = getIntrinsicNamespace(type);
        if (namespaceURI === HTML_NAMESPACE) {
            isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
            // allow <SVG> or <mATH>.
            if (!isCustomComponentTag && type !== type.toLowerCase()) error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
            if (type === "script") {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement("div");
                div.innerHTML = "<script></script>"; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
            } else if (typeof props.is === "string") // $FlowIssue `createElement` should be updated for Web Components
            domElement = ownerDocument.createElement(type, {
                is: props.is
            });
            else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
                // attributes on `select`s needs to be added before `option`s are inserted.
                // This prevents:
                // - a bug where the `select` does not scroll to the correct option because singular
                //  `select` elements automatically pick the first item #13222
                // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
                // See https://github.com/facebook/react/issues/13222
                // and https://github.com/facebook/react/issues/14239
                if (type === "select") {
                    var node = domElement;
                    if (props.multiple) node.multiple = true;
                    else if (props.size) // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
                    // it is possible that no option is selected.
                    //
                    // This is only necessary when a select in "single selection mode".
                    node.size = props.size;
                }
            }
        } else domElement = ownerDocument.createElementNS(namespaceURI, type);
        if (namespaceURI === HTML_NAMESPACE) {
            if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
            }
        }
        return domElement;
    }
    function createTextNode(text, rootContainerElement) {
        return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }
    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
        var isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        var props;
        switch(tag){
            case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                props = rawProps;
                break;
            case "iframe":
            case "object":
            case "embed":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent("load", domElement);
                props = rawProps;
                break;
            case "video":
            case "audio":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                props = rawProps;
                break;
            case "source":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent("error", domElement);
                props = rawProps;
                break;
            case "img":
            case "image":
            case "link":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                props = rawProps;
                break;
            case "details":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent("toggle", domElement);
                props = rawProps;
                break;
            case "input":
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "option":
                validateProps(domElement, rawProps);
                props = rawProps;
                break;
            case "select":
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "textarea":
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            default:
                props = rawProps;
        }
        assertValidProps(tag, props);
        setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
        switch(tag){
            case "input":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
            case "textarea":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case "option":
                postMountWrapper$1(domElement, rawProps);
                break;
            case "select":
                postMountWrapper$2(domElement, rawProps);
                break;
            default:
                if (typeof props.onClick === "function") // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
    } // Calculate the diff between the two objects.
    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
        validatePropertiesInDevelopment(tag, nextRawProps);
        var updatePayload = null;
        var lastProps;
        var nextProps;
        switch(tag){
            case "input":
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
            case "select":
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
            case "textarea":
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
            default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        assertValidProps(tag, nextProps);
        var propKey;
        var styleName;
        var styleUpdates = null;
        for(propKey in lastProps){
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) continue;
            if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for(styleName in lastStyle)if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) styleUpdates = {};
                    styleUpdates[styleName] = "";
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) // This is a special case. If any listener updates we need to ensure
            // that the "current" fiber pointer gets updated so we need a commit
            // to update this element.
            {
                if (!updatePayload) updatePayload = [];
            } else // For all other deleted properties we add it to the queue. We use
            // the allowed property list in the commit phase instead.
            (updatePayload = updatePayload || []).push(propKey, null);
        }
        for(propKey in nextProps){
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : undefined;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) continue;
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                if (lastProp) {
                    // Unset styles on `lastProp` but not on `nextProp`.
                    for(styleName in lastProp)if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = "";
                    }
                     // Update styles that changed since `lastProp`.
                    for(styleName in nextProp)if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = nextProp[styleName];
                    }
                } else {
                    // Relies on `updateStylesByID` not mutating `styleUpdates`.
                    if (!styleUpdates) {
                        if (!updatePayload) updatePayload = [];
                        updatePayload.push(propKey, styleUpdates);
                    }
                    styleUpdates = nextProp;
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                var lastHtml = lastProp ? lastProp[HTML$1] : undefined;
                if (nextHtml != null) {
                    if (lastHtml !== nextHtml) (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === "string" || typeof nextProp === "number") (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    // We eagerly listen to this even though we haven't committed yet.
                    if (typeof nextProp !== "function") warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === "onScroll") listenToNonDelegatedEvent("scroll", domElement);
                }
                if (!updatePayload && lastProp !== nextProp) // This is a special case. If any listener updates we need to ensure
                // that the "current" props pointer gets updated so we need a commit
                // to update this element.
                updatePayload = [];
            } else // For any other property we always add it to the queue and then we
            // filter it out using the allowed property list during the commit.
            (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
        if (styleUpdates) {
            validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
        }
        return updatePayload;
    } // Apply the diff.
    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
        // Update checked *before* name.
        // In the middle of an update, it is possible to have multiple checked.
        // When a checked radio tries to change name, browser makes another radio's checked false.
        if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) updateChecked(domElement, nextRawProps);
        var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
        var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.
        updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
        // changed.
        switch(tag){
            case "input":
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                updateWrapper(domElement, nextRawProps);
                break;
            case "textarea":
                updateWrapper$1(domElement, nextRawProps);
                break;
            case "select":
                // <select> value update needs to occur after <option> children
                // reconciliation
                postUpdateWrapper(domElement, nextRawProps);
                break;
        }
    }
    function getPossibleStandardName(propName) {
        var lowerCasedName = propName.toLowerCase();
        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) return null;
        return possibleStandardNames[lowerCasedName] || null;
    }
    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
        var isCustomComponentTag;
        var extraAttributeNames;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        switch(tag){
            case "dialog":
                listenToNonDelegatedEvent("cancel", domElement);
                listenToNonDelegatedEvent("close", domElement);
                break;
            case "iframe":
            case "object":
            case "embed":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "video":
            case "audio":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                break;
            case "source":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent("error", domElement);
                break;
            case "img":
            case "image":
            case "link":
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent("error", domElement);
                listenToNonDelegatedEvent("load", domElement);
                break;
            case "details":
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent("toggle", domElement);
                break;
            case "input":
                initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "option":
                validateProps(domElement, rawProps);
                break;
            case "select":
                initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
            case "textarea":
                initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent("invalid", domElement);
                break;
        }
        assertValidProps(tag, rawProps);
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;
        for(var _i = 0; _i < attributes.length; _i++){
            var name = attributes[_i].name.toLowerCase();
            switch(name){
                // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                case "value":
                    break;
                case "checked":
                    break;
                case "selected":
                    break;
                default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[_i].name);
            }
        }
        var updatePayload = null;
        for(var propKey in rawProps){
            if (!rawProps.hasOwnProperty(propKey)) continue;
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === "string") {
                    if (domElement.textContent !== nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            nextProp
                        ];
                    }
                } else if (typeof nextProp === "number") {
                    if (domElement.textContent !== "" + nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            "" + nextProp
                        ];
                    }
                }
            } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== "function") warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === "onScroll") listenToNonDelegatedEvent("scroll", domElement);
                }
            } else if (shouldWarnDev && true && // Convince Flow we've calculated it (it's DEV-only in this method.)
            typeof isCustomComponentTag === "boolean") {
                // Validate that the properties correspond to their expected values.
                var serverValue = void 0;
                var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
                if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) ;
                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                propKey === "value" || propKey === "checked" || propKey === "selected") ;
                else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                    var serverHTML = domElement.innerHTML;
                    var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                    if (nextHtml != null) {
                        var expectedHTML = normalizeHTML(domElement, nextHtml);
                        if (expectedHTML !== serverHTML) warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                } else if (propKey === STYLE) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey);
                    if (canDiffStyleForHydrationWarning) {
                        var expectedStyle = createDangerousStringForStyles(nextProp);
                        serverValue = domElement.getAttribute("style");
                        if (expectedStyle !== serverValue) warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey.toLowerCase());
                    serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    if (nextProp !== serverValue) warnForPropDifference(propKey, serverValue, nextProp);
                } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                    var isMismatchDueToBadCasing = false;
                    if (propertyInfo !== null) {
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propertyInfo.attributeName);
                        serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                    } else {
                        var ownNamespace = parentNamespace;
                        if (ownNamespace === HTML_NAMESPACE) ownNamespace = getIntrinsicNamespace(tag);
                        if (ownNamespace === HTML_NAMESPACE) // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propKey.toLowerCase());
                        else {
                            var standardName = getPossibleStandardName(propKey);
                            if (standardName !== null && standardName !== propKey) {
                                // If an SVG prop is supplied with bad casing, it will
                                // be successfully parsed from HTML, but will produce a mismatch
                                // (and would be incorrectly rendered on the client).
                                // However, we already warn about bad casing elsewhere.
                                // So we'll skip the misleading extra mismatch warning in this case.
                                isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.
                                extraAttributeNames.delete(standardName);
                            } // $FlowFixMe - Should be inferred as not undefined.
                            extraAttributeNames.delete(propKey);
                        }
                        serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    }
                    var dontWarnCustomElement = enableCustomElementPropertySupport;
                    if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) warnForPropDifference(propKey, serverValue, nextProp);
                }
            }
        }
        if (shouldWarnDev) {
            if (extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) // $FlowFixMe - Should be inferred as not undefined.
            warnForExtraAttributes(extraAttributeNames);
        }
        switch(tag){
            case "input":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
            case "textarea":
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case "select":
            case "option":
                break;
            default:
                if (typeof rawProps.onClick === "function") // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        return updatePayload;
    }
    function diffHydratedText(textNode, text, isConcurrentMode) {
        var isDifferent = textNode.nodeValue !== text;
        return isDifferent;
    }
    function warnForDeletedHydratableElement(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
    }
    function warnForDeletedHydratableText(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedElement(parentNode, tag, props) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedText(parentNode, text) {
        if (text === "") // We expect to insert empty text nodes since they're not represented in
        // the HTML.
        // TODO: Remove this special case if we can just avoid inserting empty
        // text nodes.
        return;
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
    }
    function restoreControlledState$3(domElement, tag, props) {
        switch(tag){
            case "input":
                restoreControlledState(domElement, props);
                return;
            case "textarea":
                restoreControlledState$2(domElement, props);
                return;
            case "select":
                restoreControlledState$1(domElement, props);
                return;
        }
    }
    var validateDOMNesting = function() {};
    var updatedAncestorInfo = function() {};
    // This validation code was written based on the HTML5 parsing spec:
    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    //
    // Note: this does not catch all invalid nesting, nor does it try to (as it's
    // not clear what practical benefit doing so provides); instead, we warn only
    // for cases where the parser will give a parse tree differing from what React
    // intended. For example, <b><div></div></b> is invalid but we don't warn
    // because it still parses correctly; we do warn for other cases like nested
    // <p> tags where the beginning of the second element implicitly closes the
    // first, causing a confusing mess.
    // https://html.spec.whatwg.org/multipage/syntax.html#special
    var specialTags = [
        "address",
        "applet",
        "area",
        "article",
        "aside",
        "base",
        "basefont",
        "bgsound",
        "blockquote",
        "body",
        "br",
        "button",
        "caption",
        "center",
        "col",
        "colgroup",
        "dd",
        "details",
        "dir",
        "div",
        "dl",
        "dt",
        "embed",
        "fieldset",
        "figcaption",
        "figure",
        "footer",
        "form",
        "frame",
        "frameset",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "head",
        "header",
        "hgroup",
        "hr",
        "html",
        "iframe",
        "img",
        "input",
        "isindex",
        "li",
        "link",
        "listing",
        "main",
        "marquee",
        "menu",
        "menuitem",
        "meta",
        "nav",
        "noembed",
        "noframes",
        "noscript",
        "object",
        "ol",
        "p",
        "param",
        "plaintext",
        "pre",
        "script",
        "section",
        "select",
        "source",
        "style",
        "summary",
        "table",
        "tbody",
        "td",
        "template",
        "textarea",
        "tfoot",
        "th",
        "thead",
        "title",
        "tr",
        "track",
        "ul",
        "wbr",
        "xmp"
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    var inScopeTags = [
        "applet",
        "caption",
        "html",
        "table",
        "td",
        "th",
        "marquee",
        "object",
        "template",
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        "foreignObject",
        "desc",
        "title"
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
    var buttonScopeTags = inScopeTags.concat([
        "button"
    ]); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
    var impliedEndTags = [
        "dd",
        "dt",
        "li",
        "option",
        "optgroup",
        "p",
        "rp",
        "rt"
    ];
    var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
    };
    updatedAncestorInfo = function(oldInfo, tag) {
        var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
        var info = {
            tag: tag
        };
        if (inScopeTags.indexOf(tag) !== -1) {
            ancestorInfo.aTagInScope = null;
            ancestorInfo.buttonTagInScope = null;
            ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) ancestorInfo.pTagInButtonScope = null;
         // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
            ancestorInfo.listItemTagAutoclosing = null;
            ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === "form") ancestorInfo.formTag = info;
        if (tag === "a") ancestorInfo.aTagInScope = info;
        if (tag === "button") ancestorInfo.buttonTagInScope = info;
        if (tag === "nobr") ancestorInfo.nobrTagInScope = info;
        if (tag === "p") ancestorInfo.pTagInButtonScope = info;
        if (tag === "li") ancestorInfo.listItemTagAutoclosing = info;
        if (tag === "dd" || tag === "dt") ancestorInfo.dlItemTagAutoclosing = info;
        return ancestorInfo;
    };
    /**
   * Returns whether
   */ var isTagValidWithParent = function(tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch(parentTag){
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
            case "select":
                return tag === "option" || tag === "optgroup" || tag === "#text";
            case "optgroup":
                return tag === "option" || tag === "#text";
            // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
            // but
            case "option":
                return tag === "#text";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
            // No special behavior since these rules fall back to "in body" mode for
            // all except special table nodes which cause bad parsing behavior anyway.
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
            case "tr":
                return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
            case "tbody":
            case "thead":
            case "tfoot":
                return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
            case "colgroup":
                return tag === "col" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
            case "table":
                return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
            case "head":
                return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
            // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
            case "html":
                return tag === "head" || tag === "body" || tag === "frameset";
            case "frameset":
                return tag === "frame";
            case "#document":
                return tag === "html";
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        switch(tag){
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
            case "rp":
            case "rt":
                return impliedEndTags.indexOf(parentTag) === -1;
            case "body":
            case "caption":
            case "col":
            case "colgroup":
            case "frameset":
            case "frame":
            case "head":
            case "html":
            case "tbody":
            case "td":
            case "tfoot":
            case "th":
            case "thead":
            case "tr":
                // These tags are only valid with a few parents that have special child
                // parsing rules -- if we're down here, then none of those matched and
                // so we allow it only if we don't know what the parent is, as all other
                // cases are invalid.
                return parentTag == null;
        }
        return true;
    };
    /**
   * Returns whether
   */ var findInvalidAncestorForTag = function(tag, ancestorInfo) {
        switch(tag){
            case "address":
            case "article":
            case "aside":
            case "blockquote":
            case "center":
            case "details":
            case "dialog":
            case "dir":
            case "div":
            case "dl":
            case "fieldset":
            case "figcaption":
            case "figure":
            case "footer":
            case "header":
            case "hgroup":
            case "main":
            case "menu":
            case "nav":
            case "ol":
            case "p":
            case "section":
            case "summary":
            case "ul":
            case "pre":
            case "listing":
            case "table":
            case "hr":
            case "xmp":
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
                return ancestorInfo.pTagInButtonScope;
            case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case "li":
                return ancestorInfo.listItemTagAutoclosing;
            case "dd":
            case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
            case "button":
                return ancestorInfo.buttonTagInScope;
            case "a":
                // Spec says something about storing a list of markers, but it sounds
                // equivalent to this check.
                return ancestorInfo.aTagInScope;
            case "nobr":
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    };
    var didWarn$1 = {};
    validateDOMNesting = function(childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        if (childText != null) {
            if (childTag != null) error("validateDOMNesting: when childText is passed, childTag should be null");
            childTag = "#text";
        }
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;
        if (!invalidParentOrAncestor) return;
        var ancestorTag = invalidParentOrAncestor.tag;
        var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
        if (didWarn$1[warnKey]) return;
        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = "";
        if (childTag === "#text") {
            if (/\S/.test(childText)) tagDisplayName = "Text nodes";
            else {
                tagDisplayName = "Whitespace text nodes";
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
            }
        } else tagDisplayName = "<" + childTag + ">";
        if (invalidParent) {
            var info = "";
            if (ancestorTag === "table" && childTag === "tr") info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
            error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
        } else error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
    };
    var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
    var SUSPENSE_START_DATA = "$";
    var SUSPENSE_END_DATA = "/$";
    var SUSPENSE_PENDING_START_DATA = "$?";
    var SUSPENSE_FALLBACK_START_DATA = "$!";
    var STYLE$1 = "style";
    var eventsEnabled = null;
    var selectionInformation = null;
    function getRootHostContext(rootContainerInstance) {
        var type;
        var namespace;
        var nodeType = rootContainerInstance.nodeType;
        switch(nodeType){
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE:
                type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
                var root = rootContainerInstance.documentElement;
                namespace = root ? root.namespaceURI : getChildNamespace(null, "");
                break;
            default:
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
        }
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getPublicInstance(instance) {
        return instance;
    }
    function prepareForCommit(containerInfo) {
        eventsEnabled = isEnabled();
        selectionInformation = getSelectionInformation();
        var activeInstance = null;
        setEnabled(false);
        return activeInstance;
    }
    function resetAfterCommit(containerInfo) {
        restoreSelection(selectionInformation);
        setEnabled(eventsEnabled);
        eventsEnabled = null;
        selectionInformation = null;
    }
    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var parentNamespace;
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);
        if (typeof props.children === "string" || typeof props.children === "number") {
            var string = "" + props.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        parentNamespace = hostContextDev.namespace;
        var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
        precacheFiberNode(internalInstanceHandle, domElement);
        updateFiberProps(domElement, props);
        return domElement;
    }
    function appendInitialChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
        setInitialProperties(domElement, type, props, rootContainerInstance);
        switch(type){
            case "button":
            case "input":
            case "select":
            case "textarea":
                return !!props.autoFocus;
            case "img":
                return true;
            default:
                return false;
        }
    }
    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
        var hostContextDev = hostContext;
        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
            var string = "" + newProps.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        return diffProperties(domElement, type, oldProps, newProps);
    }
    function shouldSetTextContent(type, props) {
        return type === "textarea" || type === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }
    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
        var textNode = createTextNode(text, rootContainerInstance);
        precacheFiberNode(internalInstanceHandle, textNode);
        return textNode;
    }
    function getCurrentEventPriority() {
        var currentEvent = window.event;
        if (currentEvent === undefined) return DefaultEventPriority;
        return getEventPriority(currentEvent.type);
    }
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.
    var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : undefined;
    var noTimeout = -1;
    var localPromise = typeof Promise === "function" ? Promise : undefined; // -------------------
    var scheduleMicrotask = typeof queueMicrotask === "function" ? queueMicrotask : typeof localPromise !== "undefined" ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    } : scheduleTimeout; // TODO: Determine the best fallback here.
    function handleErrorInNextTick(error) {
        setTimeout(function() {
            throw error;
        });
    } // -------------------
    function commitMount(domElement, type, newProps, internalInstanceHandle) {
        // Despite the naming that might imply otherwise, this method only
        // fires if there is an `Update` effect scheduled during mounting.
        // This happens if `finalizeInitialChildren` returns `true` (which it
        // does to implement the `autoFocus` attribute on the client). But
        // there are also other cases when this might happen (such as patching
        // up text content during hydration mismatch). So we'll check this again.
        switch(type){
            case "button":
            case "input":
            case "select":
            case "textarea":
                if (newProps.autoFocus) domElement.focus();
                return;
            case "img":
                if (newProps.src) domElement.src = newProps.src;
                return;
        }
    }
    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
        // Apply the diff to the DOM node.
        updateProperties(domElement, updatePayload, type, oldProps, newProps); // Update the props handle so that we know which props are the ones with
        // with current event handlers.
        updateFiberProps(domElement, newProps);
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, "");
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function appendChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function appendChildToContainer(container, child) {
        var parentNode;
        if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
        } else {
            parentNode = container;
            parentNode.appendChild(child);
        } // This container might be used for a portal.
        // If something inside a portal is clicked, that click should bubble
        // through the React tree. However, on Mobile Safari the click would
        // never bubble through the *DOM* tree unless an ancestor with onclick
        // event exists. So we wouldn't see it and dispatch it.
        // This is why we ensure that non React root containers have inline onclick
        // defined.
        // https://github.com/facebook/react/issues/11918
        var reactRootContainer = container._reactRootContainer;
        if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
    }
    function insertBefore(parentInstance, child, beforeChild) {
        parentInstance.insertBefore(child, beforeChild);
    }
    function insertInContainerBefore(container, child, beforeChild) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.insertBefore(child, beforeChild);
        else container.insertBefore(child, beforeChild);
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.removeChild(child);
        else container.removeChild(child);
    }
    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance; // Delete all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && nextNode.nodeType === COMMENT_NODE) {
                var data = nextNode.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) {
                        parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.
                        retryIfBlockedOn(suspenseInstance);
                        return;
                    } else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) depth++;
            }
            node = nextNode;
        }while (node); // TODO: Warn, we didn't find the end comment boundary.
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
        if (container.nodeType === COMMENT_NODE) clearSuspenseBoundary(container.parentNode, suspenseInstance);
        else if (container.nodeType === ELEMENT_NODE) clearSuspenseBoundary(container, suspenseInstance);
         // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function hideInstance(instance) {
        // TODO: Does this work for all element types? What about MathML? Should we
        // pass host context to this method?
        instance;
        var style = instance.style;
        if (typeof style.setProperty === "function") style.setProperty("display", "none", "important");
        else style.display = "none";
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = "";
    }
    function unhideInstance(instance, props) {
        instance;
        var styleProp = props[STYLE$1];
        var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
        instance.style.display = dangerousStyleValue("display", display);
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainer(container) {
        if (container.nodeType === ELEMENT_NODE) container.textContent = "";
        else if (container.nodeType === DOCUMENT_NODE) {
            if (container.documentElement) container.removeChild(container.documentElement);
        }
    } // -------------------
    function canHydrateInstance(instance, type, props) {
        if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) return null;
         // This has now been refined to an element node.
        return instance;
    }
    function canHydrateTextInstance(instance, text) {
        if (text === "" || instance.nodeType !== TEXT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a text node.
        return instance;
    }
    function canHydrateSuspenseInstance(instance) {
        if (instance.nodeType !== COMMENT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a suspense node.
        return instance;
    }
    function isSuspenseInstancePending(instance) {
        return instance.data === SUSPENSE_PENDING_START_DATA;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }
    function getSuspenseInstanceFallbackErrorDetails(instance) {
        var dataset = instance.nextSibling && instance.nextSibling.dataset;
        var digest, message, stack;
        if (dataset) {
            digest = dataset.dgst;
            message = dataset.msg;
            stack = dataset.stck;
        }
        return {
            message: message,
            digest: digest,
            stack: stack
        };
    // const nextSibling = instance.nextSibling;
    // if (nextSibling) {
    //   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;
    //   value.message = dataset.msg;
    //   value.hash = dataset.hash;
    //   if (true) {
    //     value.stack = dataset.stack;
    //   }
    // }
    // return value;
    }
    function registerSuspenseInstanceRetry(instance, callback) {
        instance._reactRetry = callback;
    }
    function getNextHydratable(node) {
        // Skip non-hydratable nodes.
        for(; node != null; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) break;
            if (nodeType === COMMENT_NODE) {
                var nodeData = node.data;
                if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) break;
                if (nodeData === SUSPENSE_END_DATA) return null;
            }
        }
        return node;
    }
    function getNextHydratableSibling(instance) {
        return getNextHydratable(instance.nextSibling);
    }
    function getFirstHydratableChild(parentInstance) {
        return getNextHydratable(parentInstance.firstChild);
    }
    function getFirstHydratableChildWithinContainer(parentContainer) {
        return getNextHydratable(parentContainer.firstChild);
    }
    function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
        return getNextHydratable(parentInstance.nextSibling);
    }
    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
        // get attached.
        updateFiberProps(instance, props);
        var parentNamespace;
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
    }
    function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, textInstance); // TODO: Temporary hack to check if we're in a concurrent root. We can delete
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedText(textInstance, text);
    }
    function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, suspenseInstance);
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) return getNextHydratableSibling(node);
                    else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) depth++;
            }
            node = node.nextSibling;
        } // TODO: Warn, we didn't find the end comment boundary.
        return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.
    function getParentSuspenseInstance(targetInstance) {
        var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (depth === 0) return node;
                    else depth--;
                } else if (data === SUSPENSE_END_DATA) depth++;
            }
            node = node.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function shouldDeleteUnhydratedTailInstances(parentType) {
        return parentType !== "head" && parentType !== "body";
    }
    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
        var shouldWarnDev = true;
        checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
    }
    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            var shouldWarnDev = true;
            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
        }
    }
    function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
        if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentContainer, instance);
        else if (instance.nodeType === COMMENT_NODE) ;
        else warnForDeletedHydratableText(parentContainer, instance);
    }
    function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentNode, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentNode, instance);
        }
    }
    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentInstance, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentInstance, instance);
        }
    }
    function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
        warnForInsertedHydratedElement(parentContainer, type);
    }
    function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
        warnForInsertedHydratedText(parentContainer, text);
    }
    function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedElement(parentNode, type);
    }
    function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedText(parentNode, text);
    }
    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedElement(parentInstance, type);
    }
    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedText(parentInstance, text);
    }
    function errorHydratingContainer(parentContainer) {
        // TODO: This gets logged by onRecoverableError, too, so we should be
        // able to remove it.
        error("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", parentContainer.nodeName.toLowerCase());
    }
    function preparePortalMount(portalInstance) {
        listenToAllSupportedEvents(portalInstance);
    }
    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = "__reactFiber$" + randomKey;
    var internalPropsKey = "__reactProps$" + randomKey;
    var internalContainerInstanceKey = "__reactContainer$" + randomKey;
    var internalEventHandlersKey = "__reactEvents$" + randomKey;
    var internalEventHandlerListenersKey = "__reactListeners$" + randomKey;
    var internalEventHandlesSetKey = "__reactHandles$" + randomKey;
    function detachDeletedInstance(node) {
        // TODO: This function is only called on host components. I don't think all of
        // these fields are relevant.
        delete node[internalInstanceKey];
        delete node[internalPropsKey];
        delete node[internalEventHandlersKey];
        delete node[internalEventHandlerListenersKey];
        delete node[internalEventHandlesSetKey];
    }
    function precacheFiberNode(hostInst, node) {
        node[internalInstanceKey] = hostInst;
    }
    function markContainerAsRoot(hostRoot, node) {
        node[internalContainerInstanceKey] = hostRoot;
    }
    function unmarkContainerAsRoot(node) {
        node[internalContainerInstanceKey] = null;
    }
    function isContainerMarkedAsRoot(node) {
        return !!node[internalContainerInstanceKey];
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you will not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
         // If the direct event target isn't a React owned DOM node, we need to look
        // to see if one of its parents is a React owned DOM node.
        var parentNode = targetNode.parentNode;
        while(parentNode){
            // We'll check if this is a container root that could include
            // React nodes in the future. We need to check this first because
            // if we're a child of a dehydrated container, we need to first
            // find that inner container before moving on to finding the parent
            // instance. Note that we don't check this field on  the targetNode
            // itself because the fibers are conceptually between the container
            // node and the first child. It isn't surrounding the container node.
            // If it's not a container, we check if it's an instance.
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
                // Since this wasn't the direct target of the event, we might have
                // stepped past dehydrated DOM nodes to get here. However they could
                // also have been non-React nodes. We need to answer which one.
                // If we the instance doesn't have any children, then there can't be
                // a nested suspense boundary within it. So we can use this as a fast
                // bailout. Most of the time, when people add non-React children to
                // the tree, it is using a ref to a child-less DOM node.
                // Normally we'd only need to check one of the fibers because if it
                // has ever gone from having children to deleting them or vice versa
                // it would have deleted the dehydrated boundary nested inside already.
                // However, since the HostRoot starts out with an alternate it might
                // have one on the alternate so we need to check in case this was a
                // root.
                var alternate = targetInst.alternate;
                if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                    // Next we need to figure out if the node that skipped past is
                    // nested within a dehydrated boundary and if so, which one.
                    var suspenseInstance = getParentSuspenseInstance(targetNode);
                    while(suspenseInstance !== null){
                        // We found a suspense instance. That means that we haven't
                        // hydrated it yet. Even though we leave the comments in the
                        // DOM after hydrating, and there are boundaries in the DOM
                        // that could already be hydrated, we wouldn't have found them
                        // through this pass since if the target is hydrated it would
                        // have had an internalInstanceKey on it.
                        // Let's get the fiber associated with the SuspenseComponent
                        // as the deepest instance.
                        var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                        if (targetSuspenseInst) return targetSuspenseInst;
                         // If we don't find a Fiber on the comment, it might be because
                        // we haven't gotten to hydrate it yet. There might still be a
                        // parent boundary that hasn't above this one so we need to find
                        // the outer most that is known.
                        suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
                    // host component also hasn't hydrated yet. We can return it
                    // below since it will bail out on the isMounted check later.
                    }
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    /**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */ function getInstanceFromNode(node) {
        var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
        if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) return inst;
            else return null;
        }
        return null;
    }
    /**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */ function getNodeFromInstance(inst) {
        if (inst.tag === HostComponent || inst.tag === HostText) // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
         // Without this first invariant, passing a non-DOM-component triggers the next
        // invariant for a missing parent, which is super confusing.
        throw new Error("getNodeFromInstance: Invalid argument.");
    }
    function getFiberCurrentPropsFromNode(node) {
        return node[internalPropsKey] || null;
    }
    function updateFiberProps(node, props) {
        node[internalPropsKey] = props;
    }
    function getEventListenerSet(node) {
        var elementListenerSet = node[internalEventHandlersKey];
        if (elementListenerSet === undefined) elementListenerSet = node[internalEventHandlersKey] = new Set();
        return elementListenerSet;
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== "function") {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err.name = "Invariant Violation";
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error("Failed %s type: %s", location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var valueStack = [];
    var fiberStack;
    fiberStack = [];
    var index = -1;
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        if (index < 0) {
            error("Unexpected pop.");
            return;
        }
        if (fiber !== fiberStack[index]) error("Unexpected Fiber popped.");
        cursor.current = valueStack[index];
        valueStack[index] = null;
        fiberStack[index] = null;
        index--;
    }
    function push(cursor, value, fiber) {
        index++;
        valueStack[index] = cursor.current;
        fiberStack[index] = fiber;
        cursor.current = value;
    }
    var warnedAboutMissingGetChildContext;
    warnedAboutMissingGetChildContext = {};
    var emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.
    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.
    var previousContext = emptyContextObject;
    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) // If the fiber is a context provider itself, when we read its context
        // we may have already pushed its own child context on the stack. A context
        // provider should not "see" its own child context. Therefore we read the
        // previous (parent) context instead for a context provider.
        return previousContext;
        return contextStackCursor.current;
    }
    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }
    function getMaskedContext(workInProgress, unmaskedContext) {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;
        if (!contextTypes) return emptyContextObject;
         // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {};
        for(var key in contextTypes)context[key] = unmaskedContext[key];
        var name = getComponentNameFromFiber(workInProgress) || "Unknown";
        checkPropTypes(contextTypes, context, "context", name);
        // Context is created before the class component is instantiated so check for instance.
        if (instance) cacheContext(workInProgress, unmaskedContext, context);
        return context;
    }
    function hasContextChanged() {
        return didPerformWorkStackCursor.current;
    }
    function isContextProvider(type) {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
    }
    function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function pushTopLevelContextObject(fiber, context, didChange) {
        if (contextStackCursor.current !== emptyContextObject) throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
    }
    function processChildContext(fiber, type, parentContext) {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.
        if (typeof instance.getChildContext !== "function") {
            var componentName = getComponentNameFromFiber(fiber) || "Unknown";
            if (!warnedAboutMissingGetChildContext[componentName]) {
                warnedAboutMissingGetChildContext[componentName] = true;
                error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
            }
            return parentContext;
        }
        var childContext = instance.getChildContext();
        for(var contextKey in childContext){
            if (!(contextKey in childContextTypes)) throw new Error((getComponentNameFromFiber(fiber) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
        }
        var name = getComponentNameFromFiber(fiber) || "Unknown";
        checkPropTypes(childContextTypes, childContext, "child context", name);
        return assign({}, parentContext, childContext);
    }
    function pushContextProvider(workInProgress) {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.
        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
    }
    function invalidateContextProvider(workInProgress, type, didChange) {
        var instance = workInProgress.stateNode;
        if (!instance) throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (didChange) {
            // Merge parent and own context.
            // Skip this if we're not updating due to sCU.
            // This avoids unnecessarily recomputing memoized values.
            var mergedContext = processChildContext(workInProgress, type, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
            // It is important to unwind the context in the reverse order.
            pop(didPerformWorkStackCursor, workInProgress);
            pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.
            push(contextStackCursor, mergedContext, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
            pop(didPerformWorkStackCursor, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        }
    }
    function findCurrentUnmaskedContext(fiber) {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var node = fiber;
        do {
            switch(node.tag){
                case HostRoot:
                    return node.stateNode.context;
                case ClassComponent:
                    var Component = node.type;
                    if (isContextProvider(Component)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    break;
            }
            node = node.return;
        }while (node !== null);
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    var LegacyRoot = 0;
    var ConcurrentRoot = 1;
    var syncQueue = null;
    var includesLegacySyncCallbacks = false;
    var isFlushingSyncQueue = false;
    function scheduleSyncCallback(callback) {
        // Push this callback into an internal queue. We'll flush these either in
        // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
        if (syncQueue === null) syncQueue = [
            callback
        ];
        else // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
    }
    function scheduleLegacySyncCallback(callback) {
        includesLegacySyncCallbacks = true;
        scheduleSyncCallback(callback);
    }
    function flushSyncCallbacksOnlyInLegacyMode() {
        // Only flushes the queue if there's a legacy sync callback scheduled.
        // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So
        // it might make more sense for the queue to be a list of roots instead of a
        // list of generic callbacks. Then we can have two: one for legacy roots, one
        // for concurrent roots. And this method would only flush the legacy ones.
        if (includesLegacySyncCallbacks) flushSyncCallbacks();
    }
    function flushSyncCallbacks() {
        if (!isFlushingSyncQueue && syncQueue !== null) {
            // Prevent re-entrance.
            isFlushingSyncQueue = true;
            var i = 0;
            var previousUpdatePriority = getCurrentUpdatePriority();
            try {
                var isSync = true;
                var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this
                // queue is in the render or commit phases.
                setCurrentUpdatePriority(DiscreteEventPriority);
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(isSync);
                    while (callback !== null);
                }
                syncQueue = null;
                includesLegacySyncCallbacks = false;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                if (syncQueue !== null) syncQueue = syncQueue.slice(i + 1);
                 // Resume flushing in the next tick
                scheduleCallback(ImmediatePriority, flushSyncCallbacks);
                throw error;
            } finally{
                setCurrentUpdatePriority(previousUpdatePriority);
                isFlushingSyncQueue = false;
            }
        }
        return null;
    }
    // TODO: Use the unified fiber stack module instead of this local one?
    // Intentionally not using it yet to derisk the initial implementation, because
    // the way we push/pop these values is a bit unusual. If there's a mistake, I'd
    // rather the ids be wrong than crash the whole reconciler.
    var forkStack = [];
    var forkStackIndex = 0;
    var treeForkProvider = null;
    var treeForkCount = 0;
    var idStack = [];
    var idStackIndex = 0;
    var treeContextProvider = null;
    var treeContextId = 1;
    var treeContextOverflow = "";
    function isForkedChild(workInProgress) {
        warnIfNotHydrating();
        return (workInProgress.flags & Forked) !== NoFlags;
    }
    function getForksAtLevel(workInProgress) {
        warnIfNotHydrating();
        return treeForkCount;
    }
    function getTreeId() {
        var overflow = treeContextOverflow;
        var idWithLeadingBit = treeContextId;
        var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
    }
    function pushTreeFork(workInProgress, totalChildren) {
        // This is called right after we reconcile an array (or iterator) of child
        // fibers, because that's the only place where we know how many children in
        // the whole set without doing extra work later, or storing addtional
        // information on the fiber.
        //
        // That's why this function is separate from pushTreeId — it's called during
        // the render phase of the fork parent, not the child, which is where we push
        // the other context values.
        //
        // In the Fizz implementation this is much simpler because the child is
        // rendered in the same callstack as the parent.
        //
        // It might be better to just add a `forks` field to the Fiber type. It would
        // make this module simpler.
        warnIfNotHydrating();
        forkStack[forkStackIndex++] = treeForkCount;
        forkStack[forkStackIndex++] = treeForkProvider;
        treeForkProvider = workInProgress;
        treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextProvider = workInProgress;
        var baseIdWithLeadingBit = treeContextId;
        var baseOverflow = treeContextOverflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part
        // of the id; we use it to account for leading 0s.
        var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
        var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
        var slot = index + 1;
        var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into
        // consideration the leading 1 we use to mark the end of the sequence.
        if (length > 30) {
            // We overflowed the bitwise-safe range. Fall back to slower algorithm.
            // This branch assumes the length of the base id is greater than 5; it won't
            // work for smaller ids, because you need 5 bits per character.
            //
            // We encode the id in multiple steps: first the base id, then the
            // remaining digits.
            //
            // Each 5 bit sequence corresponds to a single base 32 character. So for
            // example, if the current id is 23 bits long, we can convert 20 of those
            // bits into a string of 4 characters, with 3 bits left over.
            //
            // First calculate how many bits in the base id represent a complete
            // sequence of characters.
            var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.
            var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.
            var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because
            // we made more room, this time it won't overflow.
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            treeContextId = 1 << restOfLength | id;
            treeContextOverflow = overflow;
        } else {
            // Normal path
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            treeContextId = 1 << length | _id;
            treeContextOverflow = _overflow;
        }
    }
    function pushMaterializedTreeId(workInProgress) {
        warnIfNotHydrating(); // This component materialized an id. This will affect any ids that appear
        // in its children.
        var returnFiber = workInProgress.return;
        if (returnFiber !== null) {
            var numberOfForks = 1;
            var slotIndex = 0;
            pushTreeFork(workInProgress, numberOfForks);
            pushTreeId(workInProgress, numberOfForks, slotIndex);
        }
    }
    function getBitLength(number) {
        return 32 - clz32(number);
    }
    function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
    }
    function popTreeContext(workInProgress) {
        // Restore the previous values.
        // This is a bit more complicated than other context-like modules in Fiber
        // because the same Fiber may appear on the stack multiple times and for
        // different reasons. We have to keep popping until the work-in-progress is
        // no longer at the top of the stack.
        while(workInProgress === treeForkProvider){
            treeForkProvider = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
            treeForkCount = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
        }
        while(workInProgress === treeContextProvider){
            treeContextProvider = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextOverflow = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextId = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
        }
    }
    function getSuspendedTreeContext() {
        warnIfNotHydrating();
        if (treeContextProvider !== null) return {
            id: treeContextId,
            overflow: treeContextOverflow
        };
        else return null;
    }
    function restoreSuspendedTreeContext(workInProgress, suspendedContext) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextId = suspendedContext.id;
        treeContextOverflow = suspendedContext.overflow;
        treeContextProvider = workInProgress;
    }
    function warnIfNotHydrating() {
        if (!getIsHydrating()) error("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    // This may have been an insertion or a hydration.
    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches
    // due to earlier mismatches or a suspended fiber.
    var didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary
    var hydrationErrors = null;
    function warnIfHydrating() {
        if (isHydrating) error("We should not be hydrating here. This is a bug in React. Please file a bug.");
    }
    function markDidThrowWhileHydratingDEV() {
        didSuspendOrErrorDEV = true;
    }
    function didSuspendOrErrorWhileHydratingDEV() {
        return didSuspendOrErrorDEV;
    }
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
        hydrationParentFiber = fiber;
        isHydrating = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        return true;
    }
    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
        nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
        hydrationParentFiber = fiber;
        isHydrating = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        if (treeContext !== null) restoreSuspendedTreeContext(fiber, treeContext);
        return true;
    }
    function warnUnhydratedInstance(returnFiber, instance) {
        switch(returnFiber.tag){
            case HostRoot:
                didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
                break;
            case HostComponent:
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, isConcurrentMode);
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                if (suspenseState.dehydrated !== null) didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
                break;
        }
    }
    function deleteHydratableInstance(returnFiber, instance) {
        warnUnhydratedInstance(returnFiber, instance);
        var childToDelete = createFiberFromHostInstanceForDeletion();
        childToDelete.stateNode = instance;
        childToDelete.return = returnFiber;
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                childToDelete
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(childToDelete);
    }
    function warnNonhydratedInstance(returnFiber, fiber) {
        if (didSuspendOrErrorDEV) // Inside a boundary that already suspended. We're currently rendering the
        // siblings of a suspended node. The mismatch may be due to the missing
        // data, so it's probably a false positive.
        return;
        switch(returnFiber.tag){
            case HostRoot:
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch(fiber.tag){
                    case HostComponent:
                        var type = fiber.type;
                        var props = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                        break;
                    case HostText:
                        var text = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                        break;
                }
                break;
            case HostComponent:
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch(fiber.tag){
                    case HostComponent:
                        var _type = fiber.type;
                        var _props = fiber.pendingProps;
                        var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, isConcurrentMode);
                        break;
                    case HostText:
                        var _text = fiber.pendingProps;
                        var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, _isConcurrentMode);
                        break;
                }
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                var _parentInstance = suspenseState.dehydrated;
                if (_parentInstance !== null) switch(fiber.tag){
                    case HostComponent:
                        var _type2 = fiber.type;
                        var _props2 = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                        break;
                    case HostText:
                        var _text2 = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                        break;
                }
                break;
            default:
                return;
        }
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.flags = fiber.flags & ~Hydrating | Placement;
        warnNonhydratedInstance(returnFiber, fiber);
    }
    function tryHydrate(fiber, nextInstance) {
        switch(fiber.tag){
            case HostComponent:
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type);
                if (instance !== null) {
                    fiber.stateNode = instance;
                    hydrationParentFiber = fiber;
                    nextHydratableInstance = getFirstHydratableChild(instance);
                    return true;
                }
                return false;
            case HostText:
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                    fiber.stateNode = textInstance;
                    hydrationParentFiber = fiber; // Text Instances don't have children so there's nothing to hydrate.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            case SuspenseComponent:
                var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
                if (suspenseInstance !== null) {
                    var suspenseState = {
                        dehydrated: suspenseInstance,
                        treeContext: getSuspendedTreeContext(),
                        retryLane: OffscreenLane
                    };
                    fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
                    // This simplifies the code for getHostSibling and deleting nodes,
                    // since it doesn't have to consider all Suspense boundaries and
                    // check if they're dehydrated ones or not.
                    var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                    dehydratedFragment.return = fiber;
                    fiber.child = dehydratedFragment;
                    hydrationParentFiber = fiber; // While a Suspense Instance does have children, we won't step into
                    // it during the first pass. Instead, we'll reenter it later.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            default:
                return false;
        }
    }
    function shouldClientRenderOnMismatch(fiber) {
        return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
    }
    function throwOnHydrationMismatch(fiber) {
        throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (!isHydrating) return;
        var nextInstance = nextHydratableInstance;
        if (!nextInstance) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // Nothing to hydrate. Make it an insertion.
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
        }
        var firstAttemptedInstance = nextInstance;
        if (!tryHydrate(fiber, nextInstance)) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // If we can't hydrate this instance let's try the next one.
            // We use this as a heuristic. It's based on intuition and not data so it
            // might be flawed or unnecessary.
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            var prevHydrationParentFiber = hydrationParentFiber;
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
            } // We matched the next one, we'll now assume that the first one was
            // superfluous and we'll delete it. Since we can't eagerly delete it
            // we'll have to schedule a deletion. To do that, this node needs a dummy
            // fiber associated with it.
            deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
        }
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode;
        var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
        var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev); // TODO: Type this specific to this type of component.
        fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update.
        if (updatePayload !== null) return true;
        return false;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        var textContent = fiber.memoizedProps;
        var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
        if (shouldUpdate) {
            // We assume that prepareToHydrateHostTextInstance is called in a context where the
            // hydration parent is the parent host component of this host text.
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) switch(returnFiber.tag){
                case HostRoot:
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, isConcurrentMode);
                    break;
                case HostComponent:
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, _isConcurrentMode2);
                    break;
            }
        }
        return shouldUpdate;
    }
    function prepareToHydrateHostSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        hydrateSuspenseInstance(suspenseInstance, fiber);
    }
    function skipPastDehydratedSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }
    function popToNextHostParent(fiber) {
        var parent = fiber.return;
        while(parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent)parent = parent.return;
        hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
        if (!isHydrating) {
            // If we're not currently hydrating but we're in a hydration context, then
            // we were an insertion and now need to pop up reenter hydration of our
            // siblings.
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
        } // If we have any remaining hydratable nodes, we need to delete them now.
        // We only do this deeper than head and body since they tend to have random
        // other nodes in them. We also ignore components with pure text content in
        // side of them. We also don't delete anything inside the root container.
        if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
            var nextInstance = nextHydratableInstance;
            if (nextInstance) {
                if (shouldClientRenderOnMismatch(fiber)) {
                    warnIfUnhydratedTailNodes(fiber);
                    throwOnHydrationMismatch();
                } else while(nextInstance){
                    deleteHydratableInstance(fiber, nextInstance);
                    nextInstance = getNextHydratableSibling(nextInstance);
                }
            }
        }
        popToNextHostParent(fiber);
        if (fiber.tag === SuspenseComponent) nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
        else nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
        return true;
    }
    function hasUnhydratedTailNodes() {
        return isHydrating && nextHydratableInstance !== null;
    }
    function warnIfUnhydratedTailNodes(fiber) {
        var nextInstance = nextHydratableInstance;
        while(nextInstance){
            warnUnhydratedInstance(fiber, nextInstance);
            nextInstance = getNextHydratableSibling(nextInstance);
        }
    }
    function resetHydrationState() {
        hydrationParentFiber = null;
        nextHydratableInstance = null;
        isHydrating = false;
        didSuspendOrErrorDEV = false;
    }
    function upgradeHydrationErrorsToRecoverable() {
        if (hydrationErrors !== null) {
            // Successfully completed a forced client render. The errors that occurred
            // during the hydration attempt are now recovered. We will log them in
            // commit phase, once the entire tree has finished.
            queueRecoverableErrors(hydrationErrors);
            hydrationErrors = null;
        }
    }
    function getIsHydrating() {
        return isHydrating;
    }
    function queueHydrationError(error) {
        if (hydrationErrors === null) hydrationErrors = [
            error
        ];
        else hydrationErrors.push(error);
    }
    var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
    var NoTransition = null;
    function requestCurrentTransition() {
        return ReactCurrentBatchConfig$1.transition;
    }
    var ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function(fiber, instance) {},
        flushPendingUnsafeLifecycleWarnings: function() {},
        recordLegacyContextWarning: function(fiber, instance) {},
        flushLegacyContextWarning: function() {},
        discardPendingWarnings: function() {}
    };
    var findStrictRoot = function(fiber) {
        var maybeStrictRoot = null;
        var node = fiber;
        while(node !== null){
            if (node.mode & StrictLegacyMode) maybeStrictRoot = node;
            node = node.return;
        }
        return maybeStrictRoot;
    };
    var setToSortedString = function(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(", ");
    };
    var pendingComponentWillMountWarnings = [];
    var pendingUNSAFE_ComponentWillMountWarnings = [];
    var pendingComponentWillReceivePropsWarnings = [];
    var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    var pendingComponentWillUpdateWarnings = [];
    var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.
    var didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        // Dedupe strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) return;
        if (typeof instance.componentWillMount === "function" && // Don't warn about react-lifecycles-compat polyfilled components.
        instance.componentWillMount.__suppressDeprecationWarning !== true) pendingComponentWillMountWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === "function") pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) pendingComponentWillReceivePropsWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === "function") pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) pendingComponentWillUpdateWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === "function") pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();
        if (pendingComponentWillMountWarnings.length > 0) {
            pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillMountWarnings = [];
        }
        var UNSAFE_componentWillMountUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
            pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillMountWarnings = [];
        }
        var componentWillReceivePropsUniqueNames = new Set();
        if (pendingComponentWillReceivePropsWarnings.length > 0) {
            pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillReceivePropsWarnings = [];
        }
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
            pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }
        var componentWillUpdateUniqueNames = new Set();
        if (pendingComponentWillUpdateWarnings.length > 0) {
            pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillUpdateWarnings = [];
        }
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
            pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
            error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
        }
        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
            error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
        }
        if (componentWillMountUniqueNames.size > 0) {
            var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
            warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
        }
        if (componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
            warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
        }
        if (componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
            warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
        }
    };
    var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.
    var didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = findStrictRoot(fiber);
        if (strictRoot === null) {
            error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
            return;
        } // Dedup strategy: Warn once per component.
        if (didWarnAboutLegacyContext.has(fiber.type)) return;
        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === "function") {
            if (warningsForRoot === undefined) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
            }
            warningsForRoot.push(fiber);
        }
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
            if (fiberArray.length === 0) return;
            var firstFiber = fiberArray[0];
            var uniqueNames = new Set();
            fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutLegacyContext.add(fiber.type);
            });
            var sortedNames = setToSortedString(uniqueNames);
            try {
                setCurrentFiber(firstFiber);
                error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
            } finally{
                resetCurrentFiber();
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    function resolveDefaultProps(Component, baseProps) {
        if (Component && Component.defaultProps) {
            // Resolve default props. Taken from ReactElement
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for(var propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
            return props;
        }
        return baseProps;
    }
    var valueCursor = createCursor(null);
    var rendererSigil;
    // Use this to detect multiple renderers using the same context
    rendererSigil = {};
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastFullyObservedContext = null;
    var isDisallowedContextReadInDEV = false;
    function resetContextDependencies() {
        // This is called right before React yields execution, to ensure `readContext`
        // cannot be called outside the render phase.
        currentlyRenderingFiber = null;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        isDisallowedContextReadInDEV = false;
    }
    function enterDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = true;
    }
    function exitDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = false;
    }
    function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber);
        context._currentValue = currentValue;
    }
    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
        // Update the child lanes of all the ancestors, including the alternates.
        var node = parent;
        while(node !== null){
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
                node.childLanes = mergeLanes(node.childLanes, renderLanes);
                if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            if (node === propagationRoot) break;
            node = node.return;
        }
        if (node !== propagationRoot) error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function propagateContextChange(workInProgress, context, renderLanes) {
        propagateContextChange_eager(workInProgress, context, renderLanes);
    }
    function propagateContextChange_eager(workInProgress, context, renderLanes) {
        var fiber = workInProgress.child;
        if (fiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
        while(fiber !== null){
            var nextFiber = void 0; // Visit this fiber.
            var list = fiber.dependencies;
            if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while(dependency !== null){
                    // Check if the context matches.
                    if (dependency.context === context) {
                        // Match! Schedule an update on this fiber.
                        if (fiber.tag === ClassComponent) {
                            // Schedule a force update on the work-in-progress.
                            var lane = pickArbitraryLane(renderLanes);
                            var update = createUpdate(NoTimestamp, lane);
                            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                            // update to the current fiber, too, which means it will persist even if
                            // this render is thrown away. Since it's a race condition, not sure it's
                            // worth fixing.
                            // Inlined `enqueueUpdate` to remove interleaved update check
                            var updateQueue = fiber.updateQueue;
                            if (updateQueue === null) ;
                            else {
                                var sharedQueue = updateQueue.shared;
                                var pending = sharedQueue.pending;
                                if (pending === null) // This is the first update. Create a circular list.
                                update.next = update;
                                else {
                                    update.next = pending.next;
                                    pending.next = update;
                                }
                                sharedQueue.pending = update;
                            }
                        }
                        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
                        var alternate = fiber.alternate;
                        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
                        scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.
                        list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
                        break;
                    }
                    dependency = dependency.next;
                }
            } else if (fiber.tag === ContextProvider) // Don't scan deeper if this is a matching provider
            nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
            else if (fiber.tag === DehydratedFragment) {
                // If a dehydrated suspense boundary is in this subtree, we don't know
                // if it will have any context consumers in it. The best we can do is
                // mark it as having updates.
                var parentSuspense = fiber.return;
                if (parentSuspense === null) throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
                parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);
                var _alternate = parentSuspense.alternate;
                if (_alternate !== null) _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);
                 // This is intentionally passing this fiber as the parent
                // because we want to schedule this fiber as having work
                // on its children. We'll use the childLanes on
                // this fiber to indicate that a context has changed.
                scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);
                nextFiber = fiber.sibling;
            } else // Traverse down.
            nextFiber = fiber.child;
            if (nextFiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
            nextFiber.return = fiber;
            else {
                // No child. Traverse to next sibling.
                nextFiber = fiber;
                while(nextFiber !== null){
                    if (nextFiber === workInProgress) {
                        // We're back to the root of this subtree. Exit.
                        nextFiber = null;
                        break;
                    }
                    var sibling = nextFiber.sibling;
                    if (sibling !== null) {
                        // Set the return pointer of the sibling to the work-in-progress fiber.
                        sibling.return = nextFiber.return;
                        nextFiber = sibling;
                        break;
                    } // No more siblings. Traverse up.
                    nextFiber = nextFiber.return;
                }
            }
            fiber = nextFiber;
        }
    }
    function prepareToReadContext(workInProgress, renderLanes) {
        currentlyRenderingFiber = workInProgress;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        var dependencies = workInProgress.dependencies;
        if (dependencies !== null) {
            var firstContext = dependencies.firstContext;
            if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes)) // Context list has a pending update. Mark that this fiber performed work.
                markWorkInProgressReceivedUpdate();
                 // Reset the work-in-progress list
                dependencies.firstContext = null;
            }
        }
    }
    function readContext(context) {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        if (isDisallowedContextReadInDEV) error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        var value = context._currentValue;
        if (lastFullyObservedContext === context) ;
        else {
            var contextItem = {
                context: context,
                memoizedValue: value,
                next: null
            };
            if (lastContextDependency === null) {
                if (currentlyRenderingFiber === null) throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                 // This is the first dependency for this component. Create a new list.
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                    lanes: NoLanes,
                    firstContext: contextItem
                };
            } else // Append a new context item.
            lastContextDependency = lastContextDependency.next = contextItem;
        }
        return value;
    }
    // render. When this render exits, either because it finishes or because it is
    // interrupted, the interleaved updates will be transferred onto the main part
    // of the queue.
    var concurrentQueues = null;
    function pushConcurrentUpdateQueue(queue) {
        if (concurrentQueues === null) concurrentQueues = [
            queue
        ];
        else concurrentQueues.push(queue);
    }
    function finishQueueingConcurrentUpdates() {
        // Transfer the interleaved updates onto the main queue. Each queue has a
        // `pending` field and an `interleaved` field. When they are not null, they
        // point to the last node in a circular linked list. We need to append the
        // interleaved list to the end of the pending list by joining them into a
        // single, circular list.
        if (concurrentQueues !== null) {
            for(var i = 0; i < concurrentQueues.length; i++){
                var queue = concurrentQueues[i];
                var lastInterleavedUpdate = queue.interleaved;
                if (lastInterleavedUpdate !== null) {
                    queue.interleaved = null;
                    var firstInterleavedUpdate = lastInterleavedUpdate.next;
                    var lastPendingUpdate = queue.pending;
                    if (lastPendingUpdate !== null) {
                        var firstPendingUpdate = lastPendingUpdate.next;
                        lastPendingUpdate.next = firstInterleavedUpdate;
                        lastInterleavedUpdate.next = firstPendingUpdate;
                    }
                    queue.pending = lastInterleavedUpdate;
                }
            }
            concurrentQueues = null;
        }
    }
    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    }
    function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
    }
    function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        if (interleaved === null) {
            // This is the first update. Create a circular list.
            update.next = update; // At the end of the current render, this queue's interleaved updates will
            // be transferred to the pending queue.
            pushConcurrentUpdateQueue(queue);
        } else {
            update.next = interleaved.next;
            interleaved.next = update;
        }
        queue.interleaved = update;
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    }
    function enqueueConcurrentRenderForLane(fiber, lane) {
        return markUpdateLaneFromFiberToRoot(fiber, lane);
    } // Calling this function outside this module should only be done for backwards
    // compatibility and should always be accompanied by a warning.
    var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
        // Update the source fiber's lanes
        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
        var alternate = sourceFiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, lane);
        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        var node = sourceFiber;
        var parent = sourceFiber.return;
        while(parent !== null){
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            else if ((parent.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            node = parent;
            parent = parent.return;
        }
        if (node.tag === HostRoot) {
            var root = node.stateNode;
            return root;
        } else return null;
    }
    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.
    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    didWarnUpdateInsideUpdate = false;
    currentlyProcessingQueue = null;
    function initializeUpdateQueue(fiber) {
        var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null,
                interleaved: null,
                lanes: NoLanes
            },
            effects: null
        };
        fiber.updateQueue = queue;
    }
    function cloneUpdateQueue(current, workInProgress) {
        // Clone the update queue from current. Unless it's already a clone.
        var queue = workInProgress.updateQueue;
        var currentQueue = current.updateQueue;
        if (queue === currentQueue) {
            var clone = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: currentQueue.firstBaseUpdate,
                lastBaseUpdate: currentQueue.lastBaseUpdate,
                shared: currentQueue.shared,
                effects: currentQueue.effects
            };
            workInProgress.updateQueue = clone;
        }
    }
    function createUpdate(eventTime, lane) {
        var update = {
            eventTime: eventTime,
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
        return update;
    }
    function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return null;
        var sharedQueue = updateQueue.shared;
        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
            error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
            didWarnUpdateInsideUpdate = true;
        }
        if (isUnsafeClassRenderPhaseUpdate()) {
            // This is an unsafe render phase update. Add directly to the update
            // queue so we can process it immediately during the current render.
            var pending = sharedQueue.pending;
            if (pending === null) // This is the first update. Create a circular list.
            update.next = update;
            else {
                update.next = pending.next;
                pending.next = update;
            }
            sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering
            // this fiber. This is for backwards compatibility in the case where you
            // update a different component during render phase than the one that is
            // currently renderings (a pattern that is accompanied by a warning).
            return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
        } else return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
    }
    function entangleTransitions(root, fiber, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return;
        var sharedQueue = updateQueue.shared;
        if (isTransitionLane(lane)) {
            var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must
            // have finished. We can remove them from the shared queue, which represents
            // a superset of the actually pending lanes. In some cases we may entangle
            // more than we need to, but that's OK. In fact it's worse if we *don't*
            // entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        // Captured updates are updates that are thrown by a child during the render
        // phase. They should be discarded if the render is aborted. Therefore,
        // we should only put them on the work-in-progress queue, not the current one.
        var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.
        var current = workInProgress.alternate;
        if (current !== null) {
            var currentQueue = current.updateQueue;
            if (queue === currentQueue) {
                // The work-in-progress queue is the same as current. This happens when
                // we bail out on a parent fiber that then captures an error thrown by
                // a child. Since we want to append the update only to the work-in
                // -progress queue, we need to clone the updates. We usually clone during
                // processUpdateQueue, but that didn't happen in this case because we
                // skipped over the parent when we bailed out.
                var newFirst = null;
                var newLast = null;
                var firstBaseUpdate = queue.firstBaseUpdate;
                if (firstBaseUpdate !== null) {
                    // Loop through the updates and clone them.
                    var update = firstBaseUpdate;
                    do {
                        var clone = {
                            eventTime: update.eventTime,
                            lane: update.lane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        if (newLast === null) newFirst = newLast = clone;
                        else {
                            newLast.next = clone;
                            newLast = clone;
                        }
                        update = update.next;
                    }while (update !== null); // Append the captured update the end of the cloned list.
                    if (newLast === null) newFirst = newLast = capturedUpdate;
                    else {
                        newLast.next = capturedUpdate;
                        newLast = capturedUpdate;
                    }
                } else // There are no base updates.
                newFirst = newLast = capturedUpdate;
                queue = {
                    baseState: currentQueue.baseState,
                    firstBaseUpdate: newFirst,
                    lastBaseUpdate: newLast,
                    shared: currentQueue.shared,
                    effects: currentQueue.effects
                };
                workInProgress.updateQueue = queue;
                return;
            }
        } // Append the update to the end of the list.
        var lastBaseUpdate = queue.lastBaseUpdate;
        if (lastBaseUpdate === null) queue.firstBaseUpdate = capturedUpdate;
        else lastBaseUpdate.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
        switch(update.tag){
            case ReplaceState:
                var payload = update.payload;
                if (typeof payload === "function") {
                    enterDisallowedContextReadInDEV();
                    var nextState = payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                    return nextState;
                } // State object
                return payload;
            case CaptureUpdate:
                workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
            // Intentional fallthrough
            case UpdateState:
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === "function") {
                    enterDisallowedContextReadInDEV();
                    partialState = _payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            _payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                } else // Partial state object
                partialState = _payload;
                if (partialState === null || partialState === undefined) // Null and undefined are treated as no-ops.
                return prevState;
                 // Merge the partial state and the previous state.
                return assign({}, prevState, partialState);
            case ForceUpdate:
                hasForceUpdate = true;
                return prevState;
        }
        return prevState;
    }
    function processUpdateQueue(workInProgress, props, instance, renderLanes) {
        // This is always non-null on a ClassComponent or HostRoot
        var queue = workInProgress.updateQueue;
        hasForceUpdate = false;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate;
        var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.
        var pendingQueue = queue.shared.pending;
        if (pendingQueue !== null) {
            queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
            // and last so that it's non-circular.
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null; // Append pending updates to base queue
            if (lastBaseUpdate === null) firstBaseUpdate = firstPendingUpdate;
            else lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
            // we need to transfer the updates to that queue, too. Because the base
            // queue is a singly-linked list with no cycles, we can append to both
            // lists and take advantage of structural sharing.
            // TODO: Pass `current` as argument
            var current = workInProgress.alternate;
            if (current !== null) {
                // This is always non-null on a ClassComponent or HostRoot
                var currentQueue = current.updateQueue;
                var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                if (currentLastBaseUpdate !== lastBaseUpdate) {
                    if (currentLastBaseUpdate === null) currentQueue.firstBaseUpdate = firstPendingUpdate;
                    else currentLastBaseUpdate.next = firstPendingUpdate;
                    currentQueue.lastBaseUpdate = lastPendingUpdate;
                }
            }
        } // These values may change as we process the queue.
        if (firstBaseUpdate !== null) {
            // Iterate through the list of updates to compute the result.
            var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
            // from the original lanes.
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
                var updateLane = update.lane;
                var updateEventTime = update.eventTime;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        eventTime: updateEventTime,
                        lane: updateLane,
                        tag: update.tag,
                        payload: update.payload,
                        callback: update.callback,
                        next: null
                    };
                    if (newLastBaseUpdate === null) {
                        newFirstBaseUpdate = newLastBaseUpdate = clone;
                        newBaseState = newState;
                    } else newLastBaseUpdate = newLastBaseUpdate.next = clone;
                     // Update the remaining priority in the queue.
                    newLanes = mergeLanes(newLanes, updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newLastBaseUpdate !== null) {
                        var _clone = {
                            eventTime: updateEventTime,
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                    } // Process this update.
                    newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
                    var callback = update.callback;
                    if (callback !== null && // If the update was already committed, we should not queue its
                    // callback again.
                    update.lane !== NoLane) {
                        workInProgress.flags |= Callback;
                        var effects = queue.effects;
                        if (effects === null) queue.effects = [
                            update
                        ];
                        else effects.push(update);
                    }
                }
                update = update.next;
                if (update === null) {
                    pendingQueue = queue.shared.pending;
                    if (pendingQueue === null) break;
                    else {
                        // An update was scheduled from inside a reducer. Add the new
                        // pending updates to the end of the list and keep processing.
                        var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
                        // unravel them when transferring them to the base queue.
                        var _firstPendingUpdate = _lastPendingUpdate.next;
                        _lastPendingUpdate.next = null;
                        update = _firstPendingUpdate;
                        queue.lastBaseUpdate = _lastPendingUpdate;
                        queue.shared.pending = null;
                    }
                }
            }while (true);
            if (newLastBaseUpdate === null) newBaseState = newState;
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to
            // process them during this render, but we do need to track which lanes
            // are remaining.
            var lastInterleaved = queue.shared.interleaved;
            if (lastInterleaved !== null) {
                var interleaved = lastInterleaved;
                do {
                    newLanes = mergeLanes(newLanes, interleaved.lane);
                    interleaved = interleaved.next;
                }while (interleaved !== lastInterleaved);
            } else if (firstBaseUpdate === null) // `queue.lanes` is used for entangling transitions. We can set it back to
            // zero once the queue is empty.
            queue.shared.lanes = NoLanes;
             // Set the remaining expiration time to be whatever is remaining in the queue.
            // This should be fine because the only two other things that contribute to
            // expiration time are props and context. We're already in the middle of the
            // begin phase by the time we start processing the queue, so we've already
            // dealt with the props. Context in components that specify
            // shouldComponentUpdate is tricky; but we'll have to account for
            // that regardless.
            markSkippedUpdateLanes(newLanes);
            workInProgress.lanes = newLanes;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback(callback, context) {
        if (typeof callback !== "function") throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + callback));
        callback.call(context);
    }
    function resetHasForceUpdateBeforeProcessing() {
        hasForceUpdate = false;
    }
    function checkHasForceUpdateAfterProcessing() {
        return hasForceUpdate;
    }
    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        // Commit the effects
        var effects = finishedQueue.effects;
        finishedQueue.effects = null;
        if (effects !== null) for(var i = 0; i < effects.length; i++){
            var effect = effects[i];
            var callback = effect.callback;
            if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance);
            }
        }
    }
    var fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.
    // We'll use it to determine whether we need to initialize legacy refs.
    var emptyRefsObject = new React.Component().refs;
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    didWarnAboutStateAssignmentForComponent = new Set();
    didWarnAboutUninitializedState = new Set();
    didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    didWarnAboutDirectlyAssigningPropsToState = new Set();
    didWarnAboutUndefinedDerivedState = new Set();
    didWarnAboutContextTypeAndContextTypes = new Set();
    didWarnAboutInvalidateContextType = new Set();
    var didWarnOnInvalidCallback = new Set();
    warnOnInvalidCallback = function(callback, callerName) {
        if (callback === null || typeof callback === "function") return;
        var key = callerName + "_" + callback;
        if (!didWarnOnInvalidCallback.has(key)) {
            didWarnOnInvalidCallback.add(key);
            error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
        }
    };
    warnOnUndefinedDerivedState = function(type, partialState) {
        if (partialState === undefined) {
            var componentName = getComponentNameFromType(type) || "Component";
            if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
            }
        }
    }; // This is so gross but it's at least non-critical and can be removed if
    // it causes problems. This is meant to give a nicer error message for
    // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
    // ...)) which otherwise throws a "_processChildContext is not a function"
    // exception.
    Object.defineProperty(fakeInternalInstance, "_processChildContext", {
        enumerable: false,
        value: function() {
            throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
    });
    Object.freeze(fakeInternalInstance);
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState;
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                // Invoke the function an extra time to help detect side-effects.
                partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        warnOnUndefinedDerivedState(ctor, partialState);
        var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);
        workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
        // base state.
        if (workInProgress.lanes === NoLanes) {
            // Queue is always non-null for classes
            var updateQueue = workInProgress.updateQueue;
            updateQueue.baseState = memoizedState;
        }
    }
    var classComponentUpdater = {
        isMounted: isMounted,
        enqueueSetState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, "setState");
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, "replaceState");
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, "forceUpdate");
                update.callback = callback;
            }
            var root = enqueueUpdate(fiber, update, lane);
            if (root !== null) {
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitions(root, fiber, lane);
            }
            markForceUpdateScheduled(fiber, lane);
        }
    };
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if (typeof instance.shouldComponentUpdate === "function") {
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    // Invoke the function an extra time to help detect side-effects.
                    shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (shouldUpdate === undefined) error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
            return shouldUpdate;
        }
        if (ctor.prototype && ctor.prototype.isPureReactComponent) return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
        return true;
    }
    function checkClassInstance(workInProgress, ctor, newProps) {
        var instance = workInProgress.stateNode;
        var name = getComponentNameFromType(ctor) || "Component";
        var renderPresent = instance.render;
        if (!renderPresent) {
            if (ctor.prototype && typeof ctor.prototype.render === "function") error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
            else error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
        }
        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
        if (instance.propTypes) error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
        if (instance.contextType) error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
        if (instance.contextTypes) error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
        if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
        }
        if (typeof instance.componentShouldUpdate === "function") error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
        if (typeof instance.componentDidUnmount === "function") error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
        if (typeof instance.componentDidReceiveProps === "function") error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
        if (typeof instance.componentWillRecieveProps === "function") error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
        if (typeof instance.UNSAFE_componentWillRecieveProps === "function") error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
        var hasMutatedProps = instance.props !== newProps;
        if (instance.props !== undefined && hasMutatedProps) error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
        if (instance.defaultProps) error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
        if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
            error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
        }
        if (typeof instance.getDerivedStateFromProps === "function") error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof instance.getDerivedStateFromError === "function") error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof ctor.getSnapshotBeforeUpdate === "function") error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
        var _state = instance.state;
        if (_state && (typeof _state !== "object" || isArray(_state))) error("%s.state: must be set to an object or null", name);
        if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = classComponentUpdater;
        workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates
        set(instance, workInProgress);
        instance._reactInternalInstance = fakeInternalInstance;
    }
    function constructClassInstance(workInProgress, ctor, props) {
        var isLegacyContextConsumer = false;
        var unmaskedContext = emptyContextObject;
        var context = emptyContextObject;
        var contextType = ctor.contextType;
        if ("contextType" in ctor) {
            var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>
            if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === undefined) addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                else if (typeof contextType !== "object") addendum = " However, it is set to a " + typeof contextType + ".";
                else if (contextType.$$typeof === REACT_PROVIDER_TYPE) addendum = " Did you accidentally pass the Context.Provider instead?";
                else if (contextType._context !== undefined) // <Context.Consumer>
                addendum = " Did you accidentally pass the Context.Consumer instead?";
                else addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
            }
        }
        if (typeof contextType === "object" && contextType !== null) context = readContext(contextType);
        else {
            unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
        }
        var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                instance = new ctor(props, context); // eslint-disable-line no-new
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
        adoptClassInstance(workInProgress, instance);
        if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
            }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.
        if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
            var foundWillMountName = null;
            var foundWillReceivePropsName = null;
            var foundWillUpdateName = null;
            if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) foundWillMountName = "componentWillMount";
            else if (typeof instance.UNSAFE_componentWillMount === "function") foundWillMountName = "UNSAFE_componentWillMount";
            if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) foundWillReceivePropsName = "componentWillReceiveProps";
            else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
            if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) foundWillUpdateName = "componentWillUpdate";
            else if (typeof instance.UNSAFE_componentWillUpdate === "function") foundWillUpdateName = "UNSAFE_componentWillUpdate";
            if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
            }
        }
        // ReactFiberContext usually updates this cache but can't for newly-created instances.
        if (isLegacyContextConsumer) cacheContext(workInProgress, unmaskedContext, context);
        return instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount === "function") instance.componentWillMount();
        if (typeof instance.UNSAFE_componentWillMount === "function") instance.UNSAFE_componentWillMount();
        if (oldState !== instance.state) {
            error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress) || "Component");
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        if (typeof instance.componentWillReceiveProps === "function") instance.componentWillReceiveProps(newProps, nextContext);
        if (typeof instance.UNSAFE_componentWillReceiveProps === "function") instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        if (instance.state !== oldState) {
            var componentName = getComponentNameFromFiber(workInProgress) || "Component";
            if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    } // Invokes the mount life-cycles on a previously never rendered instance.
    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        checkClassInstance(workInProgress, ctor, newProps);
        var instance = workInProgress.stateNode;
        instance.props = newProps;
        instance.state = workInProgress.memoizedState;
        instance.refs = emptyRefsObject;
        initializeUpdateQueue(workInProgress);
        var contextType = ctor.contextType;
        if (typeof contextType === "object" && contextType !== null) instance.context = readContext(contextType);
        else {
            var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            instance.context = getMaskedContext(workInProgress, unmaskedContext);
        }
        if (instance.state === newProps) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        instance.state = workInProgress.memoizedState;
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress.memoizedState;
        } // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
            // process them now.
            processUpdateQueue(workInProgress, newProps, instance, renderLanes);
            instance.state = workInProgress.memoizedState;
        }
        if (typeof instance.componentDidMount === "function") {
            var fiberFlags = Update;
            fiberFlags |= LayoutStatic;
            if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
            workInProgress.flags |= fiberFlags;
        }
    }
    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        var oldProps = workInProgress.memoizedProps;
        instance.props = oldProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === "object" && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function"; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (oldProps !== newProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === "function") {
                var fiberFlags = Update;
                fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
                workInProgress.flags |= fiberFlags;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
                if (typeof instance.componentWillMount === "function") instance.componentWillMount();
                if (typeof instance.UNSAFE_componentWillMount === "function") instance.UNSAFE_componentWillMount();
            }
            if (typeof instance.componentDidMount === "function") {
                var _fiberFlags = Update;
                _fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags;
            }
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === "function") {
                var _fiberFlags2 = Update;
                _fiberFlags2 |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags2 |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags2;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.
    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        cloneUpdateQueue(current, workInProgress);
        var unresolvedOldProps = workInProgress.memoizedProps;
        var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
        instance.props = oldProps;
        var unresolvedNewProps = workInProgress.pendingProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === "object" && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function"; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === "function" || typeof instance.componentWillReceiveProps === "function")) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,
        // both before and after `shouldComponentUpdate` has been called. Not ideal,
        // but I'm loath to refactor this function. This only happens for memoized
        // components so it's not that common.
        enableLazyContextPropagation;
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === "function" || typeof instance.componentWillUpdate === "function")) {
                if (typeof instance.componentWillUpdate === "function") instance.componentWillUpdate(newProps, newState, nextContext);
                if (typeof instance.UNSAFE_componentWillUpdate === "function") instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
            }
            if (typeof instance.componentDidUpdate === "function") workInProgress.flags |= Update;
            if (typeof instance.getSnapshotBeforeUpdate === "function") workInProgress.flags |= Snapshot;
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function") {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized props/state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    }
    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;
    var warnForMissingKey = function(child, returnFiber) {};
    didWarnAboutMaps = false;
    didWarnAboutGenerators = false;
    didWarnAboutStringRefs = {};
    /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */ ownerHasKeyUseWarning = {};
    ownerHasFunctionTypeWarning = {};
    warnForMissingKey = function(child, returnFiber) {
        if (child === null || typeof child !== "object") return;
        if (!child._store || child._store.validated || child.key != null) return;
        if (typeof child._store !== "object") throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        child._store.validated = true;
        var componentName = getComponentNameFromFiber(returnFiber) || "Component";
        if (ownerHasKeyUseWarning[componentName]) return;
        ownerHasKeyUseWarning[componentName] = true;
        error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
    };
    function coerceRef(returnFiber, current, element) {
        var mixedRef = element.ref;
        if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
            // TODO: Clean this up once we turn on the string ref warning for
            // everyone, because the strict mode case will no longer be relevant
            if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
            // because these cannot be automatically converted to an arrow function
            // using a codemod. Therefore, we don't have to warn about string refs again.
            !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                var componentName = getComponentNameFromFiber(returnFiber) || "Component";
                if (!didWarnAboutStringRefs[componentName]) {
                    error('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef);
                    didWarnAboutStringRefs[componentName] = true;
                }
            }
            if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                    var ownerFiber = owner;
                    if (ownerFiber.tag !== ClassComponent) throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                    inst = ownerFiber.stateNode;
                }
                if (!inst) throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a " + "bug in React. Please file an issue.");
                 // Assigning this to a const so Flow knows it won't change in the closure
                var resolvedInst = inst;
                checkPropStringCoercion(mixedRef, "ref");
                var stringRef = "" + mixedRef; // Check if previous string ref matches new string ref
                if (current !== null && current.ref !== null && typeof current.ref === "function" && current.ref._stringRef === stringRef) return current.ref;
                var ref = function(value) {
                    var refs = resolvedInst.refs;
                    if (refs === emptyRefsObject) // This is a lazy pooled frozen object, so we need to initialize.
                    refs = resolvedInst.refs = {};
                    if (value === null) delete refs[stringRef];
                    else refs[stringRef] = value;
                };
                ref._stringRef = stringRef;
                return ref;
            } else {
                if (typeof mixedRef !== "string") throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                if (!element._owner) throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of" + " the following reasons:\n" + "1. You may be adding a ref to a function component\n" + "2. You may be adding a ref to a component that was not created inside a component's render method\n" + "3. You have multiple copies of React loaded\n" + "See https://reactjs.org/link/refs-must-have-owner for more information.");
            }
        }
        return mixedRef;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        var childString = Object.prototype.toString.call(newChild);
        throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : childString) + "). " + "If you meant to render a collection of children, use an array " + "instead.");
    }
    function warnOnFunctionType(returnFiber) {
        var componentName = getComponentNameFromFiber(returnFiber) || "Component";
        if (ownerHasFunctionTypeWarning[componentName]) return;
        ownerHasFunctionTypeWarning[componentName] = true;
        error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
    }
    function resolveLazy(lazyType) {
        var payload = lazyType._payload;
        var init = lazyType._init;
        return init(payload);
    } // This wrapper function exists because I expect to clone the code in each path
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.
    function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) // Noop.
            return;
            var deletions = returnFiber.deletions;
            if (deletions === null) {
                returnFiber.deletions = [
                    childToDelete
                ];
                returnFiber.flags |= ChildDeletion;
            } else deletions.push(childToDelete);
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) // Noop.
            return null;
             // TODO: For the shouldClone case, this could be micro-optimized a bit by
            // assuming that after the first child we've already added everything.
            var childToDelete = currentFirstChild;
            while(childToDelete !== null){
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
            }
            return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
            // Add the remaining children to a temporary map so that we can find them by
            // keys quickly. Implicit (null) keys get added to this set with their index
            // instead.
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while(existingChild !== null){
                if (existingChild.key !== null) existingChildren.set(existingChild.key, existingChild);
                else existingChildren.set(existingChild.index, existingChild);
                existingChild = existingChild.sibling;
            }
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            // We currently set sibling to null and index to 0 here because it is easy
            // to forget to do before returning it. E.g. for the single child case.
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
                // During hydration, the useId algorithm needs to know which fibers are
                // part of a list of children (arrays, iterators).
                newFiber.flags |= Forked;
                return lastPlacedIndex;
            }
            var current = newFiber.alternate;
            if (current !== null) {
                var oldIndex = current.index;
                if (oldIndex < lastPlacedIndex) {
                    // This is a move.
                    newFiber.flags |= Placement;
                    return lastPlacedIndex;
                } else // This item can stay in place.
                return oldIndex;
            } else {
                // This is an insertion.
                newFiber.flags |= Placement;
                return lastPlacedIndex;
            }
        }
        function placeSingleChild(newFiber) {
            // This is simpler for the single child case. We only need to do a
            // placement for inserting new children.
            if (shouldTrackSideEffects && newFiber.alternate === null) newFiber.flags |= Placement;
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (current === null || current.tag !== HostText) {
                // Insert
                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, textContent);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateElement(returnFiber, current, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, current, element.props.children, lanes, element.key);
            if (current !== null) {
                if (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || // Lazy types should reconcile their resolved type.
                // We need to do this after the Hot Reloading check above,
                // because hot reloading has different semantics than prod because
                // it doesn't resuspend. So we can't let the call below suspend.
                typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {
                    // Move based on index
                    var existing = useFiber(current, element.props);
                    existing.ref = coerceRef(returnFiber, current, element);
                    existing.return = returnFiber;
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                    return existing;
                }
            } // Insert
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current, element);
            created.return = returnFiber;
            return created;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
                // Insert
                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, portal.children || []);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (current === null || current.tag !== Fragment) {
                // Insert
                var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, fragment);
                existing.return = returnFiber;
                return existing;
            }
        }
        function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            }
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                        _created.ref = coerceRef(returnFiber, null, newChild);
                        _created.return = returnFiber;
                        return _created;
                    case REACT_PORTAL_TYPE:
                        var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                        _created2.return = returnFiber;
                        return _created2;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return createChild(returnFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                    _created3.return = returnFiber;
                    return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            // Update the fiber if the keys match, otherwise return null.
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                if (key !== null) return null;
                return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        if (newChild.key === key) return updateElement(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_PORTAL_TYPE:
                        if (newChild.key === key) return updatePortal(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    if (key !== null) return null;
                    return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                // Text nodes don't have keys, so we neither have to check the old nor
                // new node for the key. If both are text nodes, they match.
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                    case REACT_PORTAL_TYPE:
                        var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _matchedFiber3 = existingChildren.get(newIdx) || null;
                    return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return null;
        }
        /**
   * Warns if there is a duplicate or missing key
   */ function warnOnInvalidKey(child, knownKeys, returnFiber) {
            if (typeof child !== "object" || child === null) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(child, returnFiber);
                    var key = child.key;
                    if (typeof key !== "string") break;
                    if (knownKeys === null) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    break;
                case REACT_LAZY_TYPE:
                    var payload = child._payload;
                    var init = child._init;
                    warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                    break;
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            // First, validate keys.
            var knownKeys = null;
            for(var i = 0; i < newChildren.length; i++){
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for(; oldFiber !== null && newIdx < newChildren.length; newIdx++){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; newIdx < newChildren.length; newIdx++){
                    var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                    if (_newFiber === null) continue;
                    lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber;
                    else previousNewFiber.sibling = _newFiber;
                    previousNewFiber = _newFiber;
                }
                if (getIsHydrating()) {
                    var _numberOfForks = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; newIdx < newChildren.length; newIdx++){
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                if (_newFiber2 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber2.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber2;
                    else previousNewFiber.sibling = _newFiber2;
                    previousNewFiber = _newFiber2;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks2 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks2);
            }
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            // This is the same implementation as reconcileChildrenArray(),
            // but using the iterator instead.
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (typeof iteratorFn !== "function") throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            // We don't support rendering Generators because it's a mutation.
            // See https://github.com/facebook/react/issues/12995
            if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
            newChildrenIterable[Symbol.toStringTag] === "Generator") {
                if (!didWarnAboutGenerators) error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                didWarnAboutGenerators = true;
            } // Warn about using Maps as children
            if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                didWarnAboutMaps = true;
            } // First, validate keys.
            // We'll get a different iterator later for the main pass.
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for(; !_step.done; _step = _newChildren.next()){
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (newChildren == null) throw new Error("An iterable object provided no iterator.");
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for(; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; !step.done; newIdx++, step = newChildren.next()){
                    var _newFiber3 = createChild(returnFiber, step.value, lanes);
                    if (_newFiber3 === null) continue;
                    lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber3;
                    else previousNewFiber.sibling = _newFiber3;
                    previousNewFiber = _newFiber3;
                }
                if (getIsHydrating()) {
                    var _numberOfForks3 = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks3);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; !step.done; newIdx++, step = newChildren.next()){
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                if (_newFiber4 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber4.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber4;
                    else previousNewFiber.sibling = _newFiber4;
                    previousNewFiber = _newFiber4;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks4 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks4);
            }
            return resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            // There's no need to check for keys on text nodes since we don't have a
            // way to define them.
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                // We already have an existing node so let's just update it and delete
                // the rest.
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent);
                existing.return = returnFiber;
                return existing;
            } // The existing first child is not a text node so we need to create one
            // and delete the existing ones.
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    var elementType = element.type;
                    if (elementType === REACT_FRAGMENT_TYPE) {
                        if (child.tag === Fragment) {
                            deleteRemainingChildren(returnFiber, child.sibling);
                            var existing = useFiber(child, element.props.children);
                            existing.return = returnFiber;
                            existing._debugSource = element._source;
                            existing._debugOwner = element._owner;
                            return existing;
                        }
                    } else if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.
                    // We need to do this after the Hot Reloading check above,
                    // because hot reloading has different semantics than prod because
                    // it doesn't resuspend. So we can't let the call below suspend.
                    typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var _existing = useFiber(child, element.props);
                        _existing.ref = coerceRef(returnFiber, child, element);
                        _existing.return = returnFiber;
                        _existing._debugSource = element._source;
                        _existing._debugOwner = element._owner;
                        return _existing;
                    }
                     // Didn't match.
                    deleteRemainingChildren(returnFiber, child);
                    break;
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                created.return = returnFiber;
                return created;
            } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
            }
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, portal.children || []);
                        existing.return = returnFiber;
                        return existing;
                    } else {
                        deleteRemainingChildren(returnFiber, child);
                        break;
                    }
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        } // This API will tag the children with the side-effect of the reconciliation
        // itself. They will be added to the side-effect list as we pass through the
        // children and the parent.
        function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
            // This function is not recursive.
            // If the top level item is an array, we treat it as a set of children,
            // not as a fragment. Nested arrays on the other hand will be treated as
            // fragment nodes. Recursion happens at the normal flow.
            // Handle top level unkeyed fragments as if they were arrays.
            // This leads to an ambiguity between <>{[...]}</> and <>...</>.
            // We treat the ambiguous cases above the same.
            var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) newChild = newChild.props.children;
             // Handle object types
            if (typeof newChild === "object" && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_PORTAL_TYPE:
                        return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init; // TODO: This function is supposed to be non-recursive.
                        return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);
                }
                if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
                if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
            if (typeof newChild === "function") warnOnFunctionType(returnFiber);
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return reconcileChildFibers;
    }
    var reconcileChildFibers = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);
    function cloneChildFibers(current, workInProgress) {
        if (current !== null && workInProgress.child !== current.child) throw new Error("Resuming work not yet implemented.");
        if (workInProgress.child === null) return;
        var currentChild = workInProgress.child;
        var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
        workInProgress.child = newChild;
        newChild.return = workInProgress;
        while(currentChild.sibling !== null){
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress;
        }
        newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.
    function resetChildFibers(workInProgress, lanes) {
        var child = workInProgress.child;
        while(child !== null){
            resetWorkInProgress(child, lanes);
            child = child.sibling;
        }
    }
    var NO_CONTEXT = {};
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);
    function requiredContext(c) {
        if (c === NO_CONTEXT) throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function getRootHostContainer() {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        return rootInstance;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        // Push current root instance onto the stack;
        // This allows us to reset root when portals are popped.
        push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
        // However, we can't just call getRootHostContext() and push it because
        // we'd have a different number of entries on the stack depending on
        // whether getRootHostContext() throws somewhere in renderer code or not.
        // So we push an empty value first. This lets us safely unwind on errors.
        push(contextStackCursor$1, NO_CONTEXT, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.
        pop(contextStackCursor$1, fiber);
        push(contextStackCursor$1, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        var context = requiredContext(contextStackCursor$1.current);
        return context;
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        var context = requiredContext(contextStackCursor$1.current);
        var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.
        if (context === nextContext) return;
         // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor$1, nextContext, fiber);
    }
    function popHostContext(fiber) {
        // Do not pop unless this Fiber provided the current context.
        // pushHostContext() only pushes Fibers that provide unique contexts.
        if (contextFiberStackCursor.current !== fiber) return;
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
    }
    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.
    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.
    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.
    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);
    function hasSuspenseContext(parentContext, flag) {
        return (parentContext & flag) !== 0;
    }
    function setDefaultShallowSuspenseContext(parentContext) {
        return parentContext & SubtreeSuspenseContextMask;
    }
    function setShallowSuspenseContext(parentContext, shallowContext) {
        return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }
    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
        return parentContext | subtreeContext;
    }
    function pushSuspenseContext(fiber, newContext) {
        push(suspenseStackCursor, newContext, fiber);
    }
    function popSuspenseContext(fiber) {
        pop(suspenseStackCursor, fiber);
    }
    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
        // If it was the primary children that just suspended, capture and render the
        // fallback. Otherwise, don't capture and bubble to the next boundary.
        var nextState = workInProgress.memoizedState;
        if (nextState !== null) {
            if (nextState.dehydrated !== null) // A dehydrated boundary always captures.
            return true;
            return false;
        }
        var props = workInProgress.memoizedProps; // Regular boundaries always capture.
        return true;
    }
    function findFirstSuspended(row) {
        var node = row;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                    var dehydrated = state.dehydrated;
                    if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) return node;
                }
            } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
            // keep track of whether it suspended or not.
            node.memoizedProps.revealOrder !== undefined) {
                var didSuspend = (node.flags & DidCapture) !== NoFlags;
                if (didSuspend) return node;
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) return null;
            while(node.sibling === null){
                if (node.return === null || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    var NoFlags$1 = /*   */ 0; // Represents whether effect should fire.
    var HasEffect = /* */ 1; // Represents the phase in which the effect (not the clean-up) fires.
    var Insertion = /*  */ 2;
    var Layout = /*    */ 4;
    var Passive$1 = /*   */ 8;
    // and should be reset before starting a new render.
    // This tracks which mutable sources need to be reset after a render.
    var workInProgressSources = [];
    function resetWorkInProgressVersions() {
        for(var i = 0; i < workInProgressSources.length; i++){
            var mutableSource = workInProgressSources[i];
            mutableSource._workInProgressVersionPrimary = null;
        }
        workInProgressSources.length = 0;
    }
    // This ensures that the version used for server rendering matches the one
    // that is eventually read during hydration.
    // If they don't match there's a potential tear and a full deopt render is required.
    function registerMutableSourceForHydration(root, mutableSource) {
        var getVersion = mutableSource._getVersion;
        var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
        // Retaining it forever may interfere with GC.
        if (root.mutableSourceEagerHydrationData == null) root.mutableSourceEagerHydrationData = [
            mutableSource,
            version
        ];
        else root.mutableSourceEagerHydrationData.push(mutableSource, version);
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
    var didWarnAboutMismatchedHooksForComponent;
    var didWarnUncachedGetSnapshot;
    didWarnAboutMismatchedHooksForComponent = new Set();
    // These are set right before calling the component.
    var renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.
    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.
    var currentHook = null;
    var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
    // does not get reset if we do another render pass; only when we're completely
    // finished evaluating this component. This is an optimization so we know
    // whether we need to clear render phase updates after a throw.
    var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
    // gets reset after each attempt.
    // TODO: Maybe there's some way to consolidate this with
    // `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.
    var didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.
    var localIdCounter = 0; // Used for ids that are generated completely client-side (i.e. not during
    // hydration). This counter is global, so client ids are not stable across
    // render attempts.
    var globalClientIdCounter = 0;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook
    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.
    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.
    var ignorePreviousDependencies = false;
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev === null) hookTypesDev = [
            hookName
        ];
        else hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev !== null) {
            hookTypesUpdateIndexDev++;
            if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) warnOnHookMismatchInDev(hookName);
        }
    }
    function checkDepsAreArrayDev(deps) {
        if (deps !== undefined && deps !== null && !isArray(deps)) // Verify deps, but only on mount to avoid extra checks.
        // It's unlikely their type would change as usually you define them inline.
        error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnHookMismatchInDev(currentHookName) {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
            didWarnAboutMismatchedHooksForComponent.add(componentName);
            if (hookTypesDev !== null) {
                var table = "";
                var secondColumnStart = 30;
                for(var i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i];
                    var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
                    // lol @ IE not supporting String#repeat
                    while(row.length < secondColumnStart)row += " ";
                    row += newHookName + "\n";
                    table += row;
                }
                error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function throwInvalidHookError() {
        throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) // Only true when this component is being hot reloaded.
        return false;
        if (prevDeps === null) {
            error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            return false;
        }
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++){
            if (objectIs(nextDeps[i], prevDeps[i])) continue;
            return false;
        }
        return true;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes = nextRenderLanes;
        currentlyRenderingFiber$1 = workInProgress;
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:
        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = NoLanes; // The following should have already been reset
        if (current !== null && current.memoizedState !== null) ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        else if (hookTypesDev !== null) // This dispatcher handles an edge case where a component is updating,
        // but no stateful hooks have been used.
        // We want to match the production code behavior (which will use HooksDispatcherOnMount),
        // but with the extra DEV validation to ensure hooks ordering hasn't changed.
        // This dispatcher does that.
        ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        else ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        var children = Component(props, secondArg); // Check if there was a render phase update
        if (didScheduleRenderPhaseUpdateDuringThisPass) {
            // Keep rendering in a loop for as long as render phase updates continue to
            // be scheduled. Use a counter to prevent infinite loops.
            var numberOfReRenders = 0;
            do {
                didScheduleRenderPhaseUpdateDuringThisPass = false;
                localIdCounter = 0;
                if (numberOfReRenders >= RE_RENDER_LIMIT) throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                numberOfReRenders += 1;
                // Even when hot reloading, allow dependencies to stabilize
                // after first render to prevent infinite render phase updates.
                ignorePreviousDependencies = false;
                currentHook = null;
                workInProgressHook = null;
                workInProgress.updateQueue = null;
                // Also validate hook order for cascading updates.
                hookTypesUpdateIndexDev = -1;
                ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                children = Component(props, secondArg);
            }while (didScheduleRenderPhaseUpdateDuringThisPass);
        } // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        workInProgress._debugHookTypes = hookTypesDev;
        // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
        var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
        renderLanes = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook = null;
        workInProgressHook = null;
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last
        // render. If this fires, it suggests that we incorrectly reset the static
        // flags in some other part of the codebase. This has happened before, for
        // example, in the SuspenseList implementation.
        if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
        // and creates false positives. To make this work in legacy mode, we'd
        // need to mark fibers that commit in an incomplete state, somehow. For
        // now I'll disable the warning that most of the bugs that would trigger
        // it are either exclusive to concurrent mode or exist in both.
        (current.mode & ConcurrentMode) !== NoMode) error("Internal React error: Expected static flag was missing. Please notify the React team.");
        didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook
        // localIdCounter = 0;
        if (didRenderTooFewHooks) throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        return children;
    }
    function checkDidRenderIdHook() {
        // This should be called immediately after every renderWithHooks call.
        // Conceptually, it's part of the return value of renderWithHooks; it's only a
        // separate function to avoid using an array tuple.
        var didRenderIdHook = localIdCounter !== 0;
        localIdCounter = 0;
        return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the
        // complete phase (bubbleProperties).
        if ((workInProgress.mode & StrictEffectsMode) !== NoMode) workInProgress.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
        else workInProgress.flags &= ~(Passive | Update);
        current.lanes = removeLanes(current.lanes, lanes);
    }
    function resetHooksAfterThrow() {
        // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        if (didScheduleRenderPhaseUpdate) {
            // There were render phase updates. These are only valid for this render
            // phase, which we are now aborting. Remove the updates from the queues so
            // they do not persist to the next render. Do not remove updates from hooks
            // that weren't processed.
            //
            // Only reset the updates from the queue if it has a clone. If it does
            // not have a clone, that means it wasn't processed, and the updates were
            // scheduled before we entered the render phase.
            var hook = currentlyRenderingFiber$1.memoizedState;
            while(hook !== null){
                var queue = hook.queue;
                if (queue !== null) queue.pending = null;
                hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
        }
        renderLanes = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook = null;
        workInProgressHook = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        isUpdatingOpaqueValueInRenderPhase = false;
        didScheduleRenderPhaseUpdateDuringThisPass = false;
        localIdCounter = 0;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        if (workInProgressHook === null) // This is the first hook in the list
        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
        else // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        // This function is used both for updates and for re-renders triggered by a
        // render phase update. It assumes there is either a current hook we can
        // clone, or a work-in-progress hook from a previous render pass that we can
        // use as a base. When we reach the end of the base list, we must switch to
        // the dispatcher used for mounts.
        var nextCurrentHook;
        if (currentHook === null) {
            var current = currentlyRenderingFiber$1.alternate;
            if (current !== null) nextCurrentHook = current.memoizedState;
            else nextCurrentHook = null;
        } else nextCurrentHook = currentHook.next;
        var nextWorkInProgressHook;
        if (workInProgressHook === null) nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
        else nextWorkInProgressHook = workInProgressHook.next;
        if (nextWorkInProgressHook !== null) {
            // There's already a work-in-progress. Reuse it.
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook = nextCurrentHook;
        } else {
            // Clone from the current hook.
            if (nextCurrentHook === null) throw new Error("Rendered more hooks than during the previous render.");
            currentHook = nextCurrentHook;
            var newHook = {
                memoizedState: currentHook.memoizedState,
                baseState: currentHook.baseState,
                baseQueue: currentHook.baseQueue,
                queue: currentHook.queue,
                next: null
            };
            if (workInProgressHook === null) // This is the first hook in the list.
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            else // Append to the end of the list.
            workInProgressHook = workInProgressHook.next = newHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null,
            stores: null
        };
    }
    function basicStateReducer(state, action) {
        // $FlowFixMe: Flow doesn't like mixed types
        return typeof action === "function" ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        var initialState;
        if (init !== undefined) initialState = init(initialArg);
        else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer;
        var current = currentHook; // The last rebase update that is NOT part of the base state.
        var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.
        var pendingQueue = queue.pending;
        if (pendingQueue !== null) {
            // We have new updates that haven't been processed yet.
            // We'll add them to the base queue.
            if (baseQueue !== null) {
                // Merge the pending queue and the base queue.
                var baseFirst = baseQueue.next;
                var pendingFirst = pendingQueue.next;
                baseQueue.next = pendingFirst;
                pendingQueue.next = baseFirst;
            }
            if (current.baseQueue !== baseQueue) // Internal invariant that should never happen, but feasibly could in
            // the future if we implement resuming, or some form of that.
            error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        if (baseQueue !== null) {
            // We have a queue to process.
            var first = baseQueue.next;
            var newState = current.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
                var updateLane = update.lane;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        lane: updateLane,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    };
                    if (newBaseQueueLast === null) {
                        newBaseQueueFirst = newBaseQueueLast = clone;
                        newBaseState = newState;
                    } else newBaseQueueLast = newBaseQueueLast.next = clone;
                     // Update the remaining priority in the queue.
                    // TODO: Don't need to accumulate this. Instead, we can remove
                    // renderLanes from the original lanes.
                    currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                    markSkippedUpdateLanes(updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newBaseQueueLast !== null) {
                        var _clone = {
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            action: update.action,
                            hasEagerState: update.hasEagerState,
                            eagerState: update.eagerState,
                            next: null
                        };
                        newBaseQueueLast = newBaseQueueLast.next = _clone;
                    } // Process this update.
                    if (update.hasEagerState) // If this update is a state update (not a reducer) and was processed eagerly,
                    // we can use the eagerly computed state
                    newState = update.eagerState;
                    else {
                        var action = update.action;
                        newState = reducer(newState, action);
                    }
                }
                update = update.next;
            }while (update !== null && update !== first);
            if (newBaseQueueLast === null) newBaseState = newState;
            else newBaseQueueLast.next = newBaseQueueFirst;
             // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
        } // Interleaved updates are stored on a separate queue. We aren't going to
        // process them during this render, but we do need to track which lanes
        // are remaining.
        var lastInterleaved = queue.interleaved;
        if (lastInterleaved !== null) {
            var interleaved = lastInterleaved;
            do {
                var interleavedLane = interleaved.lane;
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
                markSkippedUpdateLanes(interleavedLane);
                interleaved = interleaved.next;
            }while (interleaved !== lastInterleaved);
        } else if (baseQueue === null) // `queue.lanes` is used for entangling transitions. We can set it back to
        // zero once the queue is empty.
        queue.lanes = NoLanes;
        var dispatch = queue.dispatch;
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function rerenderReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
        // work-in-progress hook.
        var dispatch = queue.dispatch;
        var lastRenderPhaseUpdate = queue.pending;
        var newState = hook.memoizedState;
        if (lastRenderPhaseUpdate !== null) {
            // The queue doesn't persist past this render pass.
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
                // Process this render phase update. We don't have to check the
                // priority because it will always be the same as the current
                // render's.
                var action = update.action;
                newState = reducer(newState, action);
                update = update.next;
            }while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.
            if (hook.baseQueue === null) hook.baseState = newState;
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function mountMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function updateMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = mountWorkInProgressHook();
        var nextSnapshot;
        var isHydrating = getIsHydrating();
        if (isHydrating) {
            if (getServerSnapshot === undefined) throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            nextSnapshot = getServerSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                if (nextSnapshot !== getServerSnapshot()) {
                    error("The result of getServerSnapshot should be cached to avoid an infinite loop");
                    didWarnUncachedGetSnapshot = true;
                }
            }
        } else {
            nextSnapshot = getSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                var cachedSnapshot = getSnapshot();
                if (!objectIs(nextSnapshot, cachedSnapshot)) {
                    error("The result of getSnapshot should be cached to avoid an infinite loop");
                    didWarnUncachedGetSnapshot = true;
                }
            }
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            //
            // We won't do this if we're hydrating server-rendered content, because if
            // the content is stale, it's already visible anyway. Instead we'll patch
            // it up in a passive effect.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            if (!includesBlockingLane(root, renderLanes)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        } // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        hook.memoizedState = nextSnapshot;
        var inst = {
            value: nextSnapshot,
            getSnapshot: getSnapshot
        };
        hook.queue = inst; // Schedule an effect to subscribe to the store.
        mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Schedule an effect to update the mutable instance fields. We will update
        // this whenever subscribe, getSnapshot, or value changes. Because there's no
        // clean-up function, and we track the deps correctly, we can call pushEffect
        // directly, without storing any additional state. For the same reason, we
        // don't need to set a static flag, either.
        // TODO: We can move this to the passive phase once we add a pre-commit
        // consistency check. See the next comment.
        fiber.flags |= Passive;
        pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);
        return nextSnapshot;
    }
    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        var nextSnapshot = getSnapshot();
        if (!didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            if (!objectIs(nextSnapshot, cachedSnapshot)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
            }
        }
        var prevSnapshot = hook.memoizedState;
        var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
        if (snapshotChanged) {
            hook.memoizedState = nextSnapshot;
            markWorkInProgressReceivedUpdate();
        }
        var inst = hook.queue;
        updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Whenever getSnapshot or subscribe changes, we need to check in the
        // commit phase if there was an interleaved mutation. In concurrent mode
        // this can happen all the time, but even in synchronous mode, an earlier
        // effect may have mutated the store.
        if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by
        // checking whether we scheduled a subscription effect above.
        workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= Passive;
            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            if (!includesBlockingLane(root, renderLanes)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        return nextSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= StoreConsistency;
        var check = {
            getSnapshot: getSnapshot,
            value: renderedSnapshot
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.stores = [
                check
            ];
        } else {
            var stores = componentUpdateQueue.stores;
            if (stores === null) componentUpdateQueue.stores = [
                check
            ];
            else stores.push(check);
        }
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        // These are updated in the passive phase
        inst.value = nextSnapshot;
        inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could
        // have been in an event that fired before the passive effects, or it could
        // have been in a layout effect. In that case, we would have used the old
        // snapsho and getSnapshot values to bail out. We need to check one more time.
        if (checkIfSnapshotChanged(inst)) // Force a re-render.
        forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
        var handleStoreChange = function() {
            // The store changed. Check if the snapshot changed since the last time we
            // read from the store.
            if (checkIfSnapshotChanged(inst)) // Force a re-render.
            forceStoreRerender(fiber);
        }; // Subscribe to the store and return a clean-up function.
        return subscribe(handleStoreChange);
    }
    function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        var prevValue = inst.value;
        try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
        } catch (error) {
            return true;
        }
    }
    function forceStoreRerender(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
    function mountState(initialState) {
        var hook = mountWorkInProgressHook();
        if (typeof initialState === "function") // $FlowFixMe: Flow doesn't like mixed types
        initialState = initialState();
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateState(initialState) {
        return updateReducer(basicStateReducer);
    }
    function rerenderState(initialState) {
        return rerenderReducer(basicStateReducer);
    }
    function pushEffect(tag, create, destroy, deps) {
        var effect = {
            tag: tag,
            create: create,
            destroy: destroy,
            deps: deps,
            // Circular
            next: null
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) componentUpdateQueue.lastEffect = effect.next = effect;
            else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
            }
        }
        return effect;
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        var _ref2 = {
            current: initialValue
        };
        hook.memoizedState = _ref2;
        return _ref2;
    }
    function updateRef(initialValue) {
        var hook = updateWorkInProgressHook();
        return hook.memoizedState;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var destroy = undefined;
        if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                    hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
                    return;
                }
            }
        }
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
    }
    function mountEffect(create, deps) {
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
        else return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
    }
    function updateEffect(create, deps) {
        return updateEffectImpl(Passive, Passive$1, create, deps);
    }
    function mountInsertionEffect(create, deps) {
        return mountEffectImpl(Update, Insertion, create, deps);
    }
    function updateInsertionEffect(create, deps) {
        return updateEffectImpl(Update, Insertion, create, deps);
    }
    function mountLayoutEffect(create, deps) {
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function updateLayoutEffect(create, deps) {
        return updateEffectImpl(Update, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if (typeof ref === "function") {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
                refCallback(null);
            };
        } else if (ref !== null && ref !== undefined) {
            var refObject = ref;
            if (!refObject.hasOwnProperty("current")) error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
                refObject.current = null;
            };
        }
    }
    function mountImperativeHandle(ref, create, deps) {
        if (typeof create !== "function") error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function updateImperativeHandle(ref, create, deps) {
        if (typeof create !== "function") error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function mountDebugValue(value, formatterFn) {
    // The react-debug-hooks package injects its own implementation
    // so that e.g. DevTools can display custom hook values.
    }
    var updateDebugValue = mountDebugValue;
    function mountCallback(callback, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) // Assume these are defined. If they're not, areHookInputsEqual will warn.
        {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function mountDeferredValue(value) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = value;
        return value;
    }
    function updateDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        var resolvedCurrentHook = currentHook;
        var prevValue = resolvedCurrentHook.memoizedState;
        return updateDeferredValueImpl(hook, prevValue, value);
    }
    function rerenderDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        if (currentHook === null) {
            // This is a rerender during a mount.
            hook.memoizedState = value;
            return value;
        } else {
            // This is a rerender during an update.
            var prevValue = currentHook.memoizedState;
            return updateDeferredValueImpl(hook, prevValue, value);
        }
    }
    function updateDeferredValueImpl(hook, prevValue, value) {
        var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
        if (shouldDeferValue) {
            // This is an urgent update. If the value has changed, keep using the
            // previous value and spawn a deferred render to update it later.
            if (!objectIs(value, prevValue)) {
                // Schedule a deferred render
                var deferredLane = claimNextTransitionLane();
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
                markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent
                // from the latest value. The name "baseState" doesn't really match how we
                // use it because we're reusing a state hook field instead of creating a
                // new one.
                hook.baseState = true;
            } // Reuse the previous value
            return prevValue;
        } else {
            // This is not an urgent update, so we can use the latest value regardless
            // of what it is. No need to defer it.
            // However, if we're currently inside a spawned render, then we need to mark
            // this as an update to prevent the fiber from bailing out.
            //
            // `baseState` is true when the current value is different from the rendered
            // value. The name doesn't really match how we use it because we're reusing
            // a state hook field instead of creating a new one.
            if (hook.baseState) {
                // Flip this back to false.
                hook.baseState = false;
                markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = value;
            return value;
        }
    }
    function startTransition(setPending, callback, options) {
        var previousPriority = getCurrentUpdatePriority();
        setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
        setPending(true);
        var prevTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition = {};
        var currentTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition._updatedFibers = new Set();
        try {
            setPending(false);
            callback();
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$2.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    function mountTransition() {
        var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1]; // The `start` method never changes.
        var start = startTransition.bind(null, setPending);
        var hook = mountWorkInProgressHook();
        hook.memoizedState = start;
        return [
            isPending,
            start
        ];
    }
    function updateTransition() {
        var _updateState = updateState(), isPending = _updateState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    function rerenderTransition() {
        var _rerenderState = rerenderState(), isPending = _rerenderState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    var isUpdatingOpaqueValueInRenderPhase = false;
    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
        return isUpdatingOpaqueValueInRenderPhase;
    }
    function mountId() {
        var hook = mountWorkInProgressHook();
        var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we
        // should do this in Fiber, too? Deferring this decision for now because
        // there's no other place to store the prefix except for an internal field on
        // the public createRoot object, which the fiber tree does not currently have
        // a reference to.
        var identifierPrefix = root.identifierPrefix;
        var id;
        if (getIsHydrating()) {
            var treeId = getTreeId(); // Use a captial R prefix for server-generated ids.
            id = ":" + identifierPrefix + "R" + treeId; // Unless this is the first id at this level, append a number at the end
            // that represents the position of this useId hook among all the useId
            // hooks for this fiber.
            var localId = localIdCounter++;
            if (localId > 0) id += "H" + localId.toString(32);
            id += ":";
        } else {
            // Use a lowercase r prefix for client-generated ids.
            var globalClientId = globalClientIdCounter++;
            id = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
        }
        hook.memoizedState = id;
        return id;
    }
    function updateId() {
        var hook = updateWorkInProgressHook();
        var id = hook.memoizedState;
        return id;
    }
    function dispatchReducerAction(fiber, queue, action) {
        if (typeof arguments[3] === "function") error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitionUpdate(root, queue, lane);
            }
        }
        markUpdateInDevTools(fiber, lane);
    }
    function dispatchSetState(fiber, queue, action) {
        if (typeof arguments[3] === "function") error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            var alternate = fiber.alternate;
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                // The queue is currently empty, which means we can eagerly compute the
                // next state before entering the render phase. If the new state is the
                // same as the current state, we may be able to bail out entirely.
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                    var prevDispatcher;
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                    try {
                        var currentState = queue.lastRenderedState;
                        var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
                        // it, on the update object. If the reducer hasn't changed by the
                        // time we enter the render phase, then the eager state can be used
                        // without calling the reducer again.
                        update.hasEagerState = true;
                        update.eagerState = eagerState;
                        if (objectIs(eagerState, currentState)) {
                            // Fast path. We can bail out without scheduling React to re-render.
                            // It's still possible that we'll need to rebase this update later,
                            // if the component re-renders for a different reason and by that
                            // time the reducer has changed.
                            // TODO: Do we still need to entangle transitions in this case?
                            enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
                            return;
                        }
                    } catch (error) {} finally{
                        ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                }
            }
            var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
            if (root !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root, fiber, lane, eventTime);
                entangleTransitionUpdate(root, queue, lane);
            }
        }
        markUpdateInDevTools(fiber, lane);
    }
    function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
    }
    function enqueueRenderPhaseUpdate(queue, update) {
        // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
        var pending = queue.pending;
        if (pending === null) // This is the first update. Create a circular list.
        update.next = update;
        else {
            update.next = pending.next;
            pending.next = update;
        }
        queue.pending = update;
    } // TODO: Move to ReactFiberConcurrentUpdates?
    function entangleTransitionUpdate(root, queue, lane) {
        if (isTransitionLane(lane)) {
            var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they
            // must have finished. We can remove them from the shared queue, which
            // represents a superset of the actually pending lanes. In some cases we
            // may entangle more than we need to, but that's OK. In fact it's worse if
            // we *don't* entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function markUpdateInDevTools(fiber, lane, action) {
        markStateUpdateScheduled(fiber, lane);
    }
    var ContextOnlyDispatcher = {
        readContext: readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useMutableSource: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        unstable_isNewReconciler: enableNewReconciler
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var HooksDispatcherOnRerenderInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    var warnInvalidContextAccess = function() {
        error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    };
    var warnInvalidHookAccess = function() {
        error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
    };
    HooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            updateHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = "useCallback";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = "useContext";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = "useEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = "useImperativeHandle";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = "useInsertionEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = "useLayoutEffect";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = "useRef";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = "useState";
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = "useDebugValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = "useDeferredValue";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = "useTransition";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = "useMutableSource";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = "useSyncExternalStore";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = "useId";
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    var now$1 = Scheduler.unstable_now;
    var commitTime = 0;
    var layoutEffectStartTime = -1;
    var profilerStartTime = -1;
    var passiveEffectStartTime = -1;
    /**
 * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).
 *
 * The overall sequence is:
 *   1. render
 *   2. commit (and call `onRender`, `onCommit`)
 *   3. check for nested updates
 *   4. flush passive effects (and call `onPostCommit`)
 *
 * Nested updates are identified in step 3 above,
 * but step 4 still applies to the work that was just committed.
 * We use two flags to track nested updates then:
 * one tracks whether the upcoming update is a nested update,
 * and the other tracks whether the current update was a nested update.
 * The first value gets synced to the second at the start of the render phase.
 */ var currentUpdateIsNested = false;
    var nestedUpdateScheduled = false;
    function isCurrentUpdateNested() {
        return currentUpdateIsNested;
    }
    function markNestedUpdateScheduled() {
        nestedUpdateScheduled = true;
    }
    function resetNestedUpdateFlag() {
        currentUpdateIsNested = false;
        nestedUpdateScheduled = false;
    }
    function syncNestedUpdateFlag() {
        currentUpdateIsNested = nestedUpdateScheduled;
        nestedUpdateScheduled = false;
    }
    function getCommitTime() {
        return commitTime;
    }
    function recordCommitTime() {
        commitTime = now$1();
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now$1();
        if (fiber.actualStartTime < 0) fiber.actualStartTime = now$1();
    }
    function stopProfilerTimerIfRunning(fiber) {
        profilerStartTime = -1;
    }
    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
        if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function recordLayoutEffectDuration(fiber) {
        if (layoutEffectStartTime >= 0) {
            var elapsedTime = now$1() - layoutEffectStartTime;
            layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        root.effectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        parentStateNode.effectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function recordPassiveEffectDuration(fiber) {
        if (passiveEffectStartTime >= 0) {
            var elapsedTime = now$1() - passiveEffectStartTime;
            passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        if (root !== null) root.passiveEffectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        if (parentStateNode !== null) // Detached fibers have their state node cleared out.
                        // In this case, the return pointer is also cleared out,
                        // so we won't be able to report the time spent in this Profiler's subtree.
                        parentStateNode.passiveEffectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function startLayoutEffectTimer() {
        layoutEffectStartTime = now$1();
    }
    function startPassiveEffectTimer() {
        passiveEffectStartTime = now$1();
    }
    function transferActualDuration(fiber) {
        // Transfer time spent rendering these children so we don't lose it
        // after we rerender. This is used as a helper in special cases
        // where we should count the work of multiple passes.
        var child = fiber.child;
        while(child){
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
        }
    }
    function createCapturedValueAtFiber(value, source) {
        // If the value is an error, call this function immediately after it is thrown
        // so the stack is accurate.
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source),
            digest: null
        };
    }
    function createCapturedValue(value, digest, stack) {
        return {
            value: value,
            source: null,
            stack: stack != null ? stack : null,
            digest: digest != null ? digest : null
        };
    }
    // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.
    function showErrorDialog(boundary, errorInfo) {
        return true;
    }
    function logCapturedError(boundary, errorInfo) {
        try {
            var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
            // This enables renderers like ReactNative to better manage redbox behavior.
            if (logError === false) return;
            var error = errorInfo.value;
            var source = errorInfo.source;
            var stack = errorInfo.stack;
            var componentStack = stack !== null ? stack : ""; // Browsers support silencing uncaught errors by calling
            // `preventDefault()` in window `error` handler.
            // We record this information as an expando on the error.
            if (error != null && error._suppressLogging) {
                if (boundary.tag === ClassComponent) // The error is recoverable and was silenced.
                // Ignore it and don't print the stack addendum.
                // This is handy for testing error boundaries without noise.
                return;
                 // The error is fatal. Since the silencing might have
                // been accidental, we'll surface it anyway.
                // However, the browser would have silenced the original error
                // so we'll print it first, and then print the stack addendum.
                console["error"](error); // Don't transform to our wrapper
            // For a more detailed description of this block, see:
            // https://github.com/facebook/react/pull/13384
            }
            var componentName = source ? getComponentNameFromFiber(source) : null;
            var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
            var errorBoundaryMessage;
            if (boundary.tag === HostRoot) errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
            else {
                var errorBoundaryName = getComponentNameFromFiber(boundary) || "Anonymous";
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
            }
            var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
            // We don't include the original error message and JS stack because the browser
            // has already printed it. Even if the application swallows the error, it is still
            // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
            console["error"](combinedMessage); // Don't transform to our wrapper
        } catch (e) {
            // This method must not throw, or React internal state will get messed up.
            // If console.error is overridden, or logCapturedError() shows a dialog that throws,
            // we want to report this error outside of the normal stack as a last resort.
            // https://github.com/facebook/react/issues/13188
            setTimeout(function() {
                throw e;
            });
        }
    }
    var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
    function createRootErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.
        update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: null
        };
        var error = errorInfo.value;
        update.callback = function() {
            onUncaughtError(error);
            logCapturedError(fiber, errorInfo);
        };
        return update;
    }
    function createClassErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane);
        update.tag = CaptureUpdate;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if (typeof getDerivedStateFromError === "function") {
            var error$1 = errorInfo.value;
            update.payload = function() {
                return getDerivedStateFromError(error$1);
            };
            update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
                logCapturedError(fiber, errorInfo);
            };
        }
        var inst = fiber.stateNode;
        if (inst !== null && typeof inst.componentDidCatch === "function") update.callback = function callback() {
            markFailedErrorBoundaryForHotReloading(fiber);
            logCapturedError(fiber, errorInfo);
            if (typeof getDerivedStateFromError !== "function") // To preserve the preexisting retry behavior of error boundaries,
            // we keep track of which ones already failed during this batch.
            // This gets reset before we yield back to the browser.
            // TODO: Warn in strict mode if getDerivedStateFromError is
            // not defined.
            markLegacyErrorBoundaryAsFailed(this);
            var error$1 = errorInfo.value;
            var stack = errorInfo.stack;
            this.componentDidCatch(error$1, {
                componentStack: stack !== null ? stack : ""
            });
            if (typeof getDerivedStateFromError !== "function") // If componentDidCatch is the only error boundary method defined,
            // then it needs to call setState to recover from errors.
            // If no state update is scheduled then the boundary will swallow the error.
            {
                if (!includesSomeLane(fiber.lanes, SyncLane)) error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
            }
        };
        return update;
    }
    function attachPingListener(root, wakeable, lanes) {
        // Attach a ping listener
        //
        // The data might resolve before we have a chance to commit the fallback. Or,
        // in the case of a refresh, we'll never commit a fallback. So we need to
        // attach a listener now. When it resolves ("pings"), we can decide whether to
        // try rendering the tree again.
        //
        // Only attach a listener if one does not already exist for the lanes
        // we're currently rendering (which acts like a "thread ID" here).
        //
        // We only need to do this in concurrent mode. Legacy Suspense always
        // commits fallbacks synchronously, so there are no pings.
        var pingCache = root.pingCache;
        var threadIDs;
        if (pingCache === null) {
            pingCache = root.pingCache = new PossiblyWeakMap$1();
            threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === undefined) {
                threadIDs = new Set();
                pingCache.set(wakeable, threadIDs);
            }
        }
        if (!threadIDs.has(lanes)) {
            // Memoize using the thread ID to prevent redundant listeners.
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
            if (isDevToolsPresent) // If we have pending work still, restore the original updaters
            restorePendingUpdaters(root, lanes);
            wakeable.then(ping, ping);
        }
    }
    function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {
        // Retry listener
        //
        // If the fallback does commit, we need to attach a different type of
        // listener. This one schedules an update on the Suspense boundary to turn
        // the fallback state off.
        //
        // Stash the wakeable on the boundary fiber so we can access it in the
        // commit phase.
        //
        // When the wakeable resolves, we'll attempt to render the boundary
        // again ("retry").
        var wakeables = suspenseBoundary.updateQueue;
        if (wakeables === null) {
            var updateQueue = new Set();
            updateQueue.add(wakeable);
            suspenseBoundary.updateQueue = updateQueue;
        } else wakeables.add(wakeable);
    }
    function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
        // A legacy mode Suspense quirk, only relevant to hook components.
        var tag = sourceFiber.tag;
        if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
            var currentSource = sourceFiber.alternate;
            if (currentSource) {
                sourceFiber.updateQueue = currentSource.updateQueue;
                sourceFiber.memoizedState = currentSource.memoizedState;
                sourceFiber.lanes = currentSource.lanes;
            } else {
                sourceFiber.updateQueue = null;
                sourceFiber.memoizedState = null;
            }
        }
    }
    function getNearestSuspenseBoundaryToCapture(returnFiber) {
        var node = returnFiber;
        do {
            if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) return node;
             // This boundary already captured during this render. Continue to the next
            // boundary.
            node = node.return;
        }while (node !== null);
        return null;
    }
    function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {
        // This marks a Suspense boundary so that when we're unwinding the stack,
        // it captures the suspended "exception" and does a second (fallback) pass.
        if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
            // Legacy Mode Suspense
            //
            // If the boundary is in legacy mode, we should *not*
            // suspend the commit. Pretend as if the suspended component rendered
            // null and keep rendering. When the Suspense boundary completes,
            // we'll do a second pass to render the fallback.
            if (suspenseBoundary === returnFiber) // Special case where we suspended while reconciling the children of
            // a Suspense boundary's inner Offscreen wrapper fiber. This happens
            // when a React.lazy component is a direct child of a
            // Suspense boundary.
            //
            // Suspense boundaries are implemented as multiple fibers, but they
            // are a single conceptual unit. The legacy mode behavior where we
            // pretend the suspended fiber committed as `null` won't work,
            // because in this case the "suspended" fiber is the inner
            // Offscreen wrapper.
            //
            // Because the contents of the boundary haven't started rendering
            // yet (i.e. nothing in the tree has partially rendered) we can
            // switch to the regular, concurrent mode behavior: mark the
            // boundary with ShouldCapture and enter the unwind phase.
            suspenseBoundary.flags |= ShouldCapture;
            else {
                suspenseBoundary.flags |= DidCapture;
                sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
                // But we shouldn't call any lifecycle methods or callbacks. Remove
                // all lifecycle effect tags.
                sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                if (sourceFiber.tag === ClassComponent) {
                    var currentSourceFiber = sourceFiber.alternate;
                    if (currentSourceFiber === null) // This is a new mount. Change the tag so it's not mistaken for a
                    // completed class component. For example, we should not call
                    // componentWillUnmount if it is deleted.
                    sourceFiber.tag = IncompleteClassComponent;
                    else {
                        // When we try rendering again, we should not reuse the current fiber,
                        // since it's known to be in an inconsistent state. Use a force update to
                        // prevent a bail out.
                        var update = createUpdate(NoTimestamp, SyncLane);
                        update.tag = ForceUpdate;
                        enqueueUpdate(sourceFiber, update, SyncLane);
                    }
                } // The source fiber did not complete. Mark it with Sync priority to
                // indicate that it still has pending work.
                sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
            }
            return suspenseBoundary;
        } // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.
        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. Transitions apply
        // to this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.
        suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in
        // the begin phase to prevent an early bailout.
        suspenseBoundary.lanes = rootRenderLanes;
        return suspenseBoundary;
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        // The source fiber did not complete.
        sourceFiber.flags |= Incomplete;
        if (isDevToolsPresent) // If we have pending work still, restore the original updaters
        restorePendingUpdaters(root, rootRenderLanes);
        if (value !== null && typeof value === "object" && typeof value.then === "function") {
            // This is a wakeable. The component suspended.
            var wakeable = value;
            resetSuspendedComponent(sourceFiber);
            if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) markDidThrowWhileHydratingDEV();
            var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
            if (suspenseBoundary !== null) {
                suspenseBoundary.flags &= ~ForceClientRender;
                markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always
                // commits fallbacks synchronously, so there are no pings.
                if (suspenseBoundary.mode & ConcurrentMode) attachPingListener(root, wakeable, rootRenderLanes);
                attachRetryListener(suspenseBoundary, root, wakeable);
                return;
            } else {
                // No boundary was found. Unless this is a sync update, this is OK.
                // We can suspend and wait for more data to arrive.
                if (!includesSyncLane(rootRenderLanes)) {
                    // This is not a sync update. Suspend. Since we're not activating a
                    // Suspense boundary, this will unwind all the way to the root without
                    // performing a second pass to render a fallback. (This is arguably how
                    // refresh transitions should work, too, since we're not going to commit
                    // the fallbacks anyway.)
                    //
                    // This case also applies to initial hydration.
                    attachPingListener(root, wakeable, rootRenderLanes);
                    renderDidSuspendDelayIfPossible();
                    return;
                } // This is a sync/discrete update. We treat this case like an error
                // because discrete renders are expected to produce a complete tree
                // synchronously to maintain consistency with external state.
                var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition."); // If we're outside a transition, fall through to the regular error path.
                // The error will be caught by the nearest suspense boundary.
                value = uncaughtSuspenseError;
            }
        } else // This is a regular error, not a Suspense wakeable.
        if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
            markDidThrowWhileHydratingDEV();
            var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber); // If the error was thrown during hydration, we may be able to recover by
            // discarding the dehydrated content and switching to a client render.
            // Instead of surfacing the error, find the nearest Suspense boundary
            // and render it again without hydration.
            if (_suspenseBoundary !== null) {
                if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) // Set a flag to indicate that we should try rendering the normal
                // children again, not the fallback.
                _suspenseBoundary.flags |= ForceClientRender;
                markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // Even though the user may not be affected by this error, we should
                // still log it so it can be fixed.
                queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
                return;
            }
        }
        value = createCapturedValueAtFiber(value, sourceFiber);
        renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start
        // over and traverse parent path again, this time treating the exception
        // as an error.
        var workInProgress = returnFiber;
        do {
            switch(workInProgress.tag){
                case HostRoot:
                    var _errorInfo = value;
                    workInProgress.flags |= ShouldCapture;
                    var lane = pickArbitraryLane(rootRenderLanes);
                    workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);
                    var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);
                    enqueueCapturedUpdate(workInProgress, update);
                    return;
                case ClassComponent:
                    // Capture and retry
                    var errorInfo = value;
                    var ctor = workInProgress.type;
                    var instance = workInProgress.stateNode;
                    if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance !== null && typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                        workInProgress.flags |= ShouldCapture;
                        var _lane = pickArbitraryLane(rootRenderLanes);
                        workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state
                        var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);
                        enqueueCapturedUpdate(workInProgress, _update);
                        return;
                    }
                    break;
            }
            workInProgress = workInProgress.return;
        }while (workInProgress !== null);
    }
    function getSuspendedCache() {
        return null;
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    didWarnAboutBadClass = {};
    didWarnAboutModulePatternComponent = {};
    didWarnAboutContextTypeOnFunctionComponent = {};
    didWarnAboutGetDerivedStateOnFunctionComponent = {};
    didWarnAboutFunctionRefs = {};
    didWarnAboutReassigningProps = false;
    didWarnAboutRevealOrder = {};
    didWarnAboutTailOptions = {};
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        if (current === null) // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
        else // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
    }
    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
        // This function is fork of reconcileChildren. It's used in cases where we
        // want to reconcile without matching against the existing set. This has the
        // effect of all current children being unmounted; even if the type and key
        // are the same, the old child is unmounted and a new child is created.
        //
        // To do this, we're going to go through the reconcile algorithm twice. In
        // the first pass, we schedule a deletion for all the current children by
        // passing null.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
        // pass null in place of where we usually pass the current child set. This has
        // the effect of remounting all children regardless of whether their
        // identities match.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
        }
        var render = Component.render;
        var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (current === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
            Component.defaultProps === undefined) {
                var resolvedType = type;
                resolvedType = resolveFunctionForHotReloading(type);
                // and with only the default shallow comparison, we upgrade it
                // to a SimpleMemoComponent to allow fast path updates.
                workInProgress.tag = SimpleMemoComponent;
                workInProgress.type = resolvedType;
                validateFunctionComponentInDev(workInProgress, type);
                return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);
            }
            var innerPropTypes = type.propTypes;
            if (innerPropTypes) // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(type));
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            child.ref = workInProgress.ref;
            child.return = workInProgress;
            workInProgress.child = child;
            return child;
        }
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;
        if (_innerPropTypes) // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(_innerPropTypes, nextProps, "prop", getComponentNameFromType(_type));
        var currentChild = current.child; // This is always exactly one child
        var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
        if (!hasScheduledUpdateOrContext) {
            // This will be the props with resolved defaultProps,
            // unlike current.memoizedProps which will be the unresolved ones.
            var prevProps = currentChild.memoizedProps; // Default to shallow comparison
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        var newChild = createWorkInProgress(currentChild, nextProps);
        newChild.ref = workInProgress.ref;
        newChild.return = workInProgress;
        workInProgress.child = newChild;
        return newChild;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var outerMemoType = workInProgress.elementType;
            if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                // We warn when you define propTypes on lazy()
                // so let's just skip over it to find memo() outer wrapper.
                // Inner props for memo are validated later.
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    outerMemoType = init(payload);
                } catch (x) {
                    outerMemoType = null;
                } // Inner propTypes will be validated in the function component path.
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) checkPropTypes(outerPropTypes, nextProps, "prop", getComponentNameFromType(outerMemoType));
            }
        }
        if (current !== null) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we
                // would during a normal fiber bailout.
                //
                // We don't have strong guarantees that the props object is referentially
                // equal during updates where we can't bail out anyway — like if the props
                // are shallowly equal, but there's a local state or context update in the
                // same batch.
                //
                // However, as a principle, we should aim to make the behavior consistent
                // across different ways of memoizing a component. For example, React.memo
                // has a different internal Fiber layout if you pass a normal function
                // component (SimpleMemoComponent) versus if you pass a different type
                // like forwardRef (MemoComponent). But this is an implementation detail.
                // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't
                // affect whether the props object is reused during a bailout.
                workInProgress.pendingProps = nextProps = prevProps;
                if (!checkScheduledUpdateOrContext(current, renderLanes)) {
                    // The pending lanes were cleared at the beginning of beginWork. We're
                    // about to bail out, but there might be other lanes that weren't
                    // included in the current render. Usually, the priority level of the
                    // remaining updates is accumulated during the evaluation of the
                    // component (i.e. when processing the update queue). But since since
                    // we're bailing out early *without* evaluating the component, we need
                    // to account for it here, too. Reset to the value of the current fiber.
                    // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
                    // because a MemoComponent fiber does not have hooks or an update queue;
                    // rather, it wraps around an inner component, which may or may not
                    // contains hooks.
                    // TODO: Move the reset at in beginWork out of the common path so that
                    // this is no longer necessary.
                    workInProgress.lanes = current.lanes;
                    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        var prevState = current !== null ? current.memoizedState : null;
        if (nextProps.mode === "hidden" || enableLegacyHidden) {
            // Rendering a hidden tree.
            if ((workInProgress.mode & ConcurrentMode) === NoMode) {
                // In legacy sync mode, don't defer the subtree. Render it now.
                // TODO: Consider how Offscreen should work with transitions in the future
                var nextState = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = nextState;
                pushRenderLanes(workInProgress, renderLanes);
            } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
                var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out
                // and resume this tree later.
                var nextBaseLanes;
                if (prevState !== null) {
                    var prevBaseLanes = prevState.baseLanes;
                    nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
                } else nextBaseLanes = renderLanes;
                 // Schedule this fiber to re-render at offscreen priority. Then bailout.
                workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
                var _nextState = {
                    baseLanes: nextBaseLanes,
                    cachePool: spawnedCachePool,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState;
                workInProgress.updateQueue = null;
                // to avoid a push/pop misalignment.
                pushRenderLanes(workInProgress, nextBaseLanes);
                return null;
            } else {
                // This is the second render. The surrounding visible content has already
                // committed. Now we resume rendering the hidden tree.
                // Rendering at offscreen, so we can clear the base lanes.
                var _nextState2 = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.
                var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
                pushRenderLanes(workInProgress, subtreeRenderLanes);
            }
        } else {
            // Rendering a visible tree.
            var _subtreeRenderLanes;
            if (prevState !== null) {
                // We're going from hidden -> visible.
                _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);
                workInProgress.memoizedState = null;
            } else // We weren't previously hidden, and we still aren't, so there's nothing
            // special to do. Need to push to the stack regardless, though, to avoid
            // a push/pop misalignment.
            _subtreeRenderLanes = renderLanes;
            pushRenderLanes(workInProgress, _subtreeRenderLanes);
        }
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    } // Note: These happen to have identical begin phases, for now. We shouldn't hold
    function updateFragment(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMode(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateProfiler(current, workInProgress, renderLanes) {
        workInProgress.flags |= Update;
        // Reset effect durations for the next eventual effect phase.
        // These are reset during render to allow the DevTools commit hook a chance to read them,
        var stateNode = workInProgress.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function markRef(current, workInProgress) {
        var ref = workInProgress.ref;
        if (current === null && ref !== null || current !== null && current.ref !== ref) {
            // Schedule a Ref effect
            workInProgress.flags |= Ref;
            workInProgress.flags |= RefStatic;
        }
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
        }
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        // This is used by DevTools to force a boundary to error.
        switch(shouldError(workInProgress)){
            case false:
                var _instance = workInProgress.stateNode;
                var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.
                // Is there a better way to do this?
                var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);
                var state = tempInstance.state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
            case true:
                workInProgress.flags |= DidCapture;
                workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes
                var error$1 = new Error("Simulated error coming from DevTools");
                var lane = pickArbitraryLane(renderLanes);
                workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state
                var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);
                enqueueCapturedUpdate(workInProgress, update);
                break;
        }
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, "prop", getComponentNameFromType(Component));
        }
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        var instance = workInProgress.stateNode;
        var shouldUpdate;
        if (instance === null) {
            resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.
            constructClassInstance(workInProgress, Component, nextProps);
            mountClassInstance(workInProgress, Component, nextProps, renderLanes);
            shouldUpdate = true;
        } else if (current === null) // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
        else shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
        var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);
        var inst = workInProgress.stateNode;
        if (shouldUpdate && inst.props !== nextProps) {
            if (!didWarnAboutReassigningProps) error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress) || "a component");
            didWarnAboutReassigningProps = true;
        }
        return nextUnitOfWork;
    }
    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
        // Refs should update even if shouldComponentUpdate returns false
        markRef(current, workInProgress);
        var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;
        if (!shouldUpdate && !didCaptureError) {
            // Context providers should defer to sCU for rendering
            if (hasContext) invalidateContextProvider(workInProgress, Component, false);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        var instance = workInProgress.stateNode; // Rerender
        ReactCurrentOwner$1.current = workInProgress;
        var nextChildren;
        if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
            // If we captured an error, but getDerivedStateFromError is not defined,
            // unmount all the children. componentDidCatch will schedule an update to
            // re-render a fallback. This is temporary until we migrate everyone to
            // the new API.
            // TODO: Warn in a future release.
            nextChildren = null;
            stopProfilerTimerIfRunning();
        } else {
            markComponentRenderStarted(workInProgress);
            setIsRendering(true);
            nextChildren = instance.render();
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    instance.render();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            setIsRendering(false);
            markComponentRenderStopped();
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        if (current !== null && didCaptureError) // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
         // Memoize state using the values we just used to render.
        // TODO: Restructure so we never read values from the instance.
        workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.
        if (hasContext) invalidateContextProvider(workInProgress, Component, true);
        return workInProgress.child;
    }
    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        if (root.pendingContext) pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
        else if (root.context) // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
        pushHostContainer(workInProgress, root.containerInfo);
    }
    function updateHostRoot(current, workInProgress, renderLanes) {
        pushHostRootContext(workInProgress);
        if (current === null) throw new Error("Should have a current fiber. This is a bug in React.");
        var nextProps = workInProgress.pendingProps;
        var prevState = workInProgress.memoizedState;
        var prevChildren = prevState.element;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        var nextState = workInProgress.memoizedState;
        var root = workInProgress.stateNode;
        // being called "element".
        var nextChildren = nextState.element;
        if (prevState.isDehydrated) {
            // This is a hydration root whose shell has not yet hydrated. We should
            // attempt to hydrate.
            // Flip isDehydrated to false to indicate that when this render
            // finishes, the root will no longer be dehydrated.
            var overrideState = {
                element: nextChildren,
                isDehydrated: false,
                cache: nextState.cache,
                pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
                transitions: nextState.transitions
            };
            var updateQueue = workInProgress.updateQueue; // `baseState` can always be the last state because the root doesn't
            // have reducer functions so it doesn't need rebasing.
            updateQueue.baseState = overrideState;
            workInProgress.memoizedState = overrideState;
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during a previous attempt to hydrate the shell, so we
                // forced a client render.
                var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress);
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError);
            } else if (nextChildren !== prevChildren) {
                var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress);
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, _recoverableError);
            } else {
                // The outermost shell has not hydrated yet. Start hydrating.
                enterHydrationState(workInProgress);
                var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
                workInProgress.child = child;
                var node = child;
                while(node){
                    // Mark each child as hydrating. This is a fast path to know whether this
                    // tree is part of a hydrating tree. This is used to determine if a child
                    // node has fully mounted yet, and for scheduling event replaying.
                    // Conceptually this is similar to Placement in that a new subtree is
                    // inserted into the React tree here. It just happens to not need DOM
                    // mutations because it already exists.
                    node.flags = node.flags & ~Placement | Hydrating;
                    node = node.sibling;
                }
            }
        } else {
            // Root is not dehydrated. Either this is a client-only root, or it
            // already hydrated.
            resetHydrationState();
            if (nextChildren === prevChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        }
        return workInProgress.child;
    }
    function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError) {
        // Revert to client rendering.
        resetHydrationState();
        queueHydrationError(recoverableError);
        workInProgress.flags |= ForceClientRender;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostComponent(current, workInProgress, renderLanes) {
        pushHostContext(workInProgress);
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type;
        var nextProps = workInProgress.pendingProps;
        var prevProps = current !== null ? current.memoizedProps : null;
        var nextChildren = nextProps.children;
        var isDirectTextChild = shouldSetTextContent(type, nextProps);
        if (isDirectTextChild) // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also has access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
        else if (prevProps !== null && shouldSetTextContent(type, prevProps)) // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.flags |= ContentReset;
        markRef(current, workInProgress);
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostText(current, workInProgress) {
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
         // Nothing to do here. This is terminal. We'll do the completion step
        // immediately after.
        return null;
    }
    function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
        var props = workInProgress.pendingProps;
        var lazyComponent = elementType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;
        var Component = init(payload); // Store the unwrapped component in the type.
        workInProgress.type = Component;
        var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
        var resolvedProps = resolveDefaultProps(Component, props);
        var child;
        switch(resolvedTag){
            case FunctionComponent:
                validateFunctionComponentInDev(workInProgress, Component);
                workInProgress.type = Component = resolveFunctionForHotReloading(Component);
                child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ClassComponent:
                workInProgress.type = Component = resolveClassForHotReloading(Component);
                child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ForwardRef:
                workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
                child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case MemoComponent:
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, resolvedProps, "prop", getComponentNameFromType(Component));
                }
                child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes);
                return child;
        }
        var hint = "";
        if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) hint = " Did you wrap a component in React.lazy() more than once?";
        // because the fact that it's a separate type of work is an
        // implementation detail.
        throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
    }
    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.
        workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
        // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        constructClassInstance(workInProgress, Component, nextProps);
        mountClassInstance(workInProgress, Component, nextProps, renderLanes);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
    }
    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
        var props = workInProgress.pendingProps;
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
        prepareToReadContext(workInProgress, renderLanes);
        var value;
        var hasId;
        markComponentRenderStarted(workInProgress);
        if (Component.prototype && typeof Component.prototype.render === "function") {
            var componentName = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutBadClass[componentName]) {
                error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        setIsRendering(true);
        ReactCurrentOwner$1.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        hasId = checkDidRenderIdHook();
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        // Support for module components is deprecated and is removed behind a flag.
        // Whether or not it would crash later, we want to show a good message in DEV first.
        if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === undefined) {
            var _componentName = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutModulePatternComponent[_componentName]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
            }
        }
        if (// Eventually we'll delete this branch altogether.
        typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === undefined) {
            var _componentName2 = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
            }
            workInProgress.tag = ClassComponent; // Throw out any hooks that were used.
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
            // During mounting we don't know the child context yet as the instance doesn't exist.
            // We will invalidate the child context in finishClassComponent() right after rendering.
            var hasContext = false;
            if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress);
            } else hasContext = false;
            workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
            initializeUpdateQueue(workInProgress);
            adoptClassInstance(workInProgress, value);
            mountClassInstance(workInProgress, Component, props, renderLanes);
            return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
        } else {
            // Proceed under the assumption that this is a function component
            workInProgress.tag = FunctionComponent;
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
                    hasId = checkDidRenderIdHook();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
            reconcileChildren(null, workInProgress, value, renderLanes);
            validateFunctionComponentInDev(workInProgress, Component);
            return workInProgress.child;
        }
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        if (Component) {
            if (Component.childContextTypes) error("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
        }
        if (workInProgress.ref !== null) {
            var info = "";
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) info += "\n\nCheck the render method of `" + ownerName + "`.";
            var warningKey = ownerName || "";
            var debugSource = workInProgress._debugSource;
            if (debugSource) warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
            if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
            }
        }
        if (typeof Component.getDerivedStateFromProps === "function") {
            var _componentName3 = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
            }
        }
        if (typeof Component.contextType === "object" && Component.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component) || "Unknown";
            if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
            }
        }
    }
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: NoLane
    };
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes,
            cachePool: getSuspendedCache(),
            transitions: null
        };
    }
    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
        var cachePool = null;
        return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),
            cachePool: cachePool,
            transitions: prevOffscreenState.transitions
        };
    } // TODO: Probably should inline this back
    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
        // If we're already showing a fallback, there are cases where we need to
        // remain on that fallback regardless of whether the content has resolved.
        // For example, SuspenseList coordinates when nested content appears.
        if (current !== null) {
            var suspenseState = current.memoizedState;
            if (suspenseState === null) // Currently showing content. Don't hide it, even if ForceSuspenseFallback
            // is true. More precise name might be "ForceRemainSuspenseFallback".
            // Note: This is a factoring smell. Can't remain on a fallback if there's
            // no fallback to remain on.
            return false;
        } // Not currently showing content. Consult the Suspense context.
        return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
    }
    function getRemainingWorkInPrimaryTree(current, renderLanes) {
        // TODO: Should not remove render lanes that were pinged during this render
        return removeLanes(current.childLanes, renderLanes);
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.
        if (shouldSuspend(workInProgress)) workInProgress.flags |= DidCapture;
        var suspenseContext = suspenseStackCursor.current;
        var showFallback = false;
        var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;
        if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
            // Something in this boundary's subtree already suspended. Switch to
            // rendering the fallback children.
            showFallback = true;
            workInProgress.flags &= ~DidCapture;
        } else // Attempting the main content
        if (current === null || current.memoizedState !== null) suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
        // boundary's children. This involves some custom reconciliation logic. Two
        // main reasons this is so complicated.
        //
        // First, Legacy Mode has different semantics for backwards compatibility. The
        // primary tree will commit in an inconsistent state, so when we do the
        // second pass to render the fallback, we do some exceedingly, uh, clever
        // hacks to make that not totally break. Like transferring effects and
        // deletions from hidden tree. In Concurrent Mode, it's much simpler,
        // because we bailout on the primary tree completely and leave it in its old
        // state, no effects. Same as what we do for Offscreen (except that
        // Offscreen doesn't have the first render pass).
        //
        // Second is hydration. During hydration, the Suspense fiber has a slightly
        // different layout, where the child points to a dehydrated fragment, which
        // contains the DOM rendered by the server.
        //
        // Third, even if you set all that aside, Suspense is like error boundaries in
        // that we first we try to render one tree, and if that fails, we render again
        // and switch to a different tree. Like a try/catch block. So we have to track
        // which branch we're currently rendering. Ideally we would model this using
        // a stack.
        if (current === null) {
            // Initial mount
            // Special path for hydration
            // If we're currently hydrating, try to hydrate this boundary.
            tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
            var suspenseState = workInProgress.memoizedState;
            if (suspenseState !== null) {
                var dehydrated = suspenseState.dehydrated;
                if (dehydrated !== null) return mountDehydratedSuspenseComponent(workInProgress, dehydrated);
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
                var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var primaryChildFragment = workInProgress.child;
                primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackFragment;
            } else return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);
        } else {
            // This is an update.
            // Special path for hydration
            var prevState = current.memoizedState;
            if (prevState !== null) {
                var _dehydrated = prevState.dehydrated;
                if (_dehydrated !== null) return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);
            }
            if (showFallback) {
                var _nextFallbackChildren = nextProps.fallback;
                var _nextPrimaryChildren = nextProps.children;
                var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);
                var _primaryChildFragment2 = workInProgress.child;
                var prevOffscreenState = current.child.memoizedState;
                _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
                _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
            } else {
                var _nextPrimaryChildren2 = nextProps.children;
                var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);
                workInProgress.memoizedState = null;
                return _primaryChildFragment3;
            }
        }
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
        var mode = workInProgress.mode;
        var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
        primaryChildFragment.return = workInProgress;
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var progressedPrimaryFragment = workInProgress.child;
        var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
        };
        var primaryChildFragment;
        var fallbackChildFragment;
        if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
            // In legacy mode, we commit the primary tree as if it successfully
            // completed, even though it's in an inconsistent state.
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = 0;
                primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        } else {
            primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        }
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {
        // The props argument to `createFiberFromOffscreen` is `any` typed, so we use
        // this wrapper function to constrain it.
        return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
    }
    function updateWorkInProgressOffscreenFiber(current, offscreenProps) {
        // The props argument to `createWorkInProgress` is `any` typed, so we use this
        // wrapper function to constrain it.
        return createWorkInProgress(current, offscreenProps);
    }
    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: "visible",
            children: primaryChildren
        });
        if ((workInProgress.mode & ConcurrentMode) === NoMode) primaryChildFragment.lanes = renderLanes;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = null;
        if (currentFallbackChildFragment !== null) {
            // Delete the fallback child fragment
            var deletions = workInProgress.deletions;
            if (deletions === null) {
                workInProgress.deletions = [
                    currentFallbackChildFragment
                ];
                workInProgress.flags |= ChildDeletion;
            } else deletions.push(currentFallbackChildFragment);
        }
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
        };
        var primaryChildFragment;
        if (// completed, even though it's in an inconsistent state.
        (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
        // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        workInProgress.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            } // The fallback fiber was added as a deletion during the first pass.
            // However, since we're going to remain on the fallback, we no longer want
            // to delete it.
            workInProgress.deletions = null;
        } else {
            primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps); // Since we're reusing a current tree, we need to reuse the flags, too.
            // (We don't do this in legacy mode, because in legacy mode we don't re-use
            // the current tree; see previous branch.)
            primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
        }
        var fallbackChildFragment;
        if (currentFallbackChildFragment !== null) fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
        else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
            // mounted but this is a new fiber.
            fallbackChildFragment.flags |= Placement;
        }
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {
        // Falling back to client rendering. Because this has performance
        // implications, it's considered a recoverable error, even though the user
        // likely won't observe anything wrong with the UI.
        //
        // The error is passed in as an argument to enforce that every caller provide
        // a custom message, or explicitly opt out (currently the only path that opts
        // out is legacy mode; every concurrent path provides an error).
        if (recoverableError !== null) queueHydrationError(recoverableError);
         // This will add the old fiber to the deletion list
        reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.
        var nextProps = workInProgress.pendingProps;
        var primaryChildren = nextProps.children;
        var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already
        // mounted but this is a new fiber.
        primaryChildFragment.flags |= Placement;
        workInProgress.memoizedState = null;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var fiberMode = workInProgress.mode;
        var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
        var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense
        // boundary) already mounted but this is a new fiber.
        fallbackChildFragment.flags |= Placement;
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        if ((workInProgress.mode & ConcurrentMode) !== NoMode) // We will have dropped the effect list which contains the
        // deletion. We need to reconcile to delete the current child.
        reconcileChildFibers(workInProgress, current.child, null, renderLanes);
        return fallbackChildFragment;
    }
    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {
        // During the first pass, we'll bail out and not drill into the children.
        // Instead, we'll leave the content in place and try to hydrate it later.
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            error("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
            workInProgress.lanes = laneToLanes(SyncLane);
        } else if (isSuspenseInstanceFallback(suspenseInstance)) // This is a client-only boundary. Since we won't get any content from the server
        // for this, we need to schedule that at a higher priority based on when it would
        // have timed out. In theory we could render it in this pass but it would have the
        // wrong priority associated with it and will prevent hydration of parent path.
        // Instead, we'll leave work left on it to render it in a separate commit.
        // TODO This time should be the time at which the server rendered response that is
        // a parent to this boundary was displayed. However, since we currently don't have
        // a protocol to transfer that time, we'll just estimate it by using the current
        // time. This will mean that Suspense timeouts are slightly shifted to later than
        // they should be.
        // Schedule a normal pri update to render this content.
        workInProgress.lanes = laneToLanes(DefaultHydrationLane);
        else // We'll continue hydrating the rest at offscreen priority since we'll already
        // be showing the right content coming from the server, it is no rush.
        workInProgress.lanes = laneToLanes(OffscreenLane);
        return null;
    }
    function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {
        if (!didSuspend) {
            // This is the first render pass. Attempt to hydrate.
            // We should never be hydrating at this point because it is the first pass,
            // but after we've already committed once.
            warnIfHydrating();
            if ((workInProgress.mode & ConcurrentMode) === NoMode) return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // required — every concurrent mode path that causes hydration to
            // de-opt to client rendering should have an error message.
            null);
            if (isSuspenseInstanceFallback(suspenseInstance)) {
                // This boundary is in a permanent fallback state. In this case, we'll never
                // get an update and we'll never be able to hydrate the final content. Let's just try the
                // client side render instead.
                var digest, message, stack;
                var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
                digest = _getSuspenseInstanceF.digest;
                message = _getSuspenseInstanceF.message;
                stack = _getSuspenseInstanceF.stack;
                var error;
                if (message) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error(message);
                else error = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                var capturedValue = createCapturedValue(error, digest, stack);
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);
            }
            // any context has changed, we need to treat is as if the input might have changed.
            var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);
            if (didReceiveUpdate || hasContextChanged) {
                // This boundary has changed since the first render. This means that we are now unable to
                // hydrate it. We might still be able to hydrate it using a higher priority lane.
                var root = getWorkInProgressRoot();
                if (root !== null) {
                    var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);
                    if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                        // Intentionally mutating since this render will get interrupted. This
                        // is one of the very rare times where we mutate the current tree
                        // during the render phase.
                        suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render
                        var eventTime = NoTimestamp;
                        enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);
                        scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);
                    }
                } // If we have scheduled higher pri work above, this will probably just abort the render
                // since we now have higher priority work, but in case it doesn't, we need to prepare to
                // render something, if we time out. Even if that requires us to delete everything and
                // skip hydration.
                // Delay having to do this as long as the suspense timeout allows us.
                renderDidSuspendDelayIfPossible();
                var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);
            } else if (isSuspenseInstancePending(suspenseInstance)) {
                // This component is still pending more data from the server, so we can't hydrate its
                // content. We treat it as if this component suspended itself. It might seem as if
                // we could just try to render it client-side instead. However, this will perform a
                // lot of unnecessary work and is unlikely to complete since it often will suspend
                // on missing data anyway. Additionally, the server might be able to render more
                // than we can on the client yet. In that case we'd end up with more fallback states
                // on the client than if we just leave it alone. If the server times out or errors
                // these should update this boundary to the permanent Fallback state instead.
                // Mark it as having captured (i.e. suspended).
                workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.
                workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.
                var retry = retryDehydratedSuspenseBoundary.bind(null, current);
                registerSuspenseInstanceRetry(suspenseInstance, retry);
                return null;
            } else {
                // This is the first attempt.
                reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);
                var primaryChildren = nextProps.children;
                var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this
                // tree is part of a hydrating tree. This is used to determine if a child
                // node has fully mounted yet, and for scheduling event replaying.
                // Conceptually this is similar to Placement in that a new subtree is
                // inserted into the React tree here. It just happens to not need DOM
                // mutations because it already exists.
                primaryChildFragment.flags |= Hydrating;
                return primaryChildFragment;
            }
        } else {
            // This is the second render pass. We already attempted to hydrated, but
            // something either suspended or errored.
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during hydration. Try again without hydrating.
                workInProgress.flags &= ~ForceClientRender;
                var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
                return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);
            } else if (workInProgress.memoizedState !== null) {
                // Something suspended and we should still be in dehydrated mode.
                // Leave the existing child in place.
                workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there
                // but the normal suspense pass doesn't.
                workInProgress.flags |= DidCapture;
                return null;
            } else {
                // Suspended but we should no longer be in dehydrated mode.
                // Therefore we now have to render the fallback.
                var nextPrimaryChildren = nextProps.children;
                var nextFallbackChildren = nextProps.fallback;
                var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var _primaryChildFragment4 = workInProgress.child;
                _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackChildFragment;
            }
        }
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
        scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
    }
    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
        // Mark any Suspense boundaries with fallbacks as having work to do.
        // If they were previously forced into fallbacks, they may now be able
        // to unblock.
        var node = firstChild;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            } else if (node.tag === SuspenseListComponent) // If the tail is hidden there might not be an Suspense boundaries
            // to schedule work on. In this case we have to schedule it on the
            // list itself.
            // We don't have to traverse to the children of the list since
            // the list will propagate the change when it rerenders.
            scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function findLastContentRow(firstChild) {
        // This is going to find the last row among these children that is already
        // showing content on the screen, as opposed to being in fallback state or
        // new. If a row has multiple Suspense boundaries, any of them being in the
        // fallback state, counts as the whole row being in a fallback state.
        // Note that the "rows" will be workInProgress, but any nested children
        // will still be current since we haven't rendered them yet. The mounted
        // order may not be the same as the new order. We use the new order.
        var row = firstChild;
        var lastContentRow = null;
        while(row !== null){
            var currentRow = row.alternate; // New rows can't be content rows.
            if (currentRow !== null && findFirstSuspended(currentRow) === null) lastContentRow = row;
            row = row.sibling;
        }
        return lastContentRow;
    }
    function validateRevealOrder(revealOrder) {
        if (revealOrder !== undefined && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
            didWarnAboutRevealOrder[revealOrder] = true;
            if (typeof revealOrder === "string") switch(revealOrder.toLowerCase()){
                case "together":
                case "forwards":
                case "backwards":
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                case "forward":
                case "backward":
                    error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
            }
            else error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
        }
    }
    function validateTailOptions(tailMode, revealOrder) {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
            if (tailMode !== "collapsed" && tailMode !== "hidden") {
                didWarnAboutTailOptions[tailMode] = true;
                error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
            } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                didWarnAboutTailOptions[tailMode] = true;
                error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
            }
        }
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isAnArray = isArray(childSlot);
        var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === "function";
        if (isAnArray || isIterable) {
            var type = isAnArray ? "array" : "iterable";
            error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index, type);
            return false;
        }
        return true;
    }
    function validateSuspenseListChildren(children, revealOrder) {
        if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== undefined && children !== null && children !== false) {
            if (isArray(children)) for(var i = 0; i < children.length; i++){
                if (!validateSuspenseListNestedChild(children[i], i)) return;
            }
            else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === "function") {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                        var step = childrenIterator.next();
                        var _i = 0;
                        for(; !step.done; step = childrenIterator.next()){
                            if (!validateSuspenseListNestedChild(step.value, _i)) return;
                            _i++;
                        }
                    }
                } else error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
            }
        }
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        if (renderState === null) workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode
        };
        else {
            // We can reuse the existing object from previous renders.
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
        }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var revealOrder = nextProps.revealOrder;
        var tailMode = nextProps.tail;
        var newChildren = nextProps.children;
        validateRevealOrder(revealOrder);
        validateTailOptions(tailMode, revealOrder);
        validateSuspenseListChildren(newChildren, revealOrder);
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        var suspenseContext = suspenseStackCursor.current;
        var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress.flags |= DidCapture;
        } else {
            var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) // If we previously forced a fallback, we need to schedule work
            // on any nested boundaries to let them know to try to render
            // again. This is the same as context updating.
            propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        }
        pushSuspenseContext(workInProgress, suspenseContext);
        if ((workInProgress.mode & ConcurrentMode) === NoMode) // In legacy mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
        else switch(revealOrder){
            case "forwards":
                var lastContentRow = findLastContentRow(workInProgress.child);
                var tail;
                if (lastContentRow === null) {
                    // The whole list is part of the tail.
                    // TODO: We could fast path by just rendering the tail now.
                    tail = workInProgress.child;
                    workInProgress.child = null;
                } else {
                    // Disconnect the tail rows after the content row.
                    // We're going to render them separately later.
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode);
                break;
            case "backwards":
                // We're going to find the first row that has existing content.
                // At the same time we're going to reverse the list of everything
                // we pass in the meantime. That's going to be our tail in reverse
                // order.
                var _tail = null;
                var row = workInProgress.child;
                workInProgress.child = null;
                while(row !== null){
                    var currentRow = row.alternate; // New rows can't be content rows.
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                        // This is the beginning of the main content.
                        workInProgress.child = row;
                        break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                } // TODO: If workInProgress.child is null, we can continue on the tail immediately.
                initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode);
                break;
            case "together":
                initSuspenseListRenderState(workInProgress, false, null, null, undefined);
                break;
            default:
                // The default reveal order is the same as not having
                // a boundary.
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function updatePortalComponent(current, workInProgress, renderLanes) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var nextChildren = workInProgress.pendingProps;
        if (current === null) // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
    function updateContextProvider(current, workInProgress, renderLanes) {
        var providerType = workInProgress.type;
        var context = providerType._context;
        var newProps = workInProgress.pendingProps;
        var oldProps = workInProgress.memoizedProps;
        var newValue = newProps.value;
        if (!("value" in newProps)) {
            if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
            }
        }
        var providerPropTypes = workInProgress.type.propTypes;
        if (providerPropTypes) checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
        pushProvider(workInProgress, context, newValue);
        if (oldProps !== null) {
            var oldValue = oldProps.value;
            if (objectIs(oldValue, newValue)) {
                // No change. Bailout early if children are the same.
                if (oldProps.children === newProps.children && !hasContextChanged()) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            } else // The context value changed. Search for matching consumers and schedule
            // them to update.
            propagateContextChange(workInProgress, context, renderLanes);
        }
        var newChildren = newProps.children;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingContextAsConsumer = false;
    function updateContextConsumer(current, workInProgress, renderLanes) {
        var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
        if (context._context === undefined) {
            // This may be because it's a Context (rather than a Consumer).
            // Or it may be because it's older React where they're the same thing.
            // We only want to warn if we're sure it's a new React.
            if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
            }
        } else context = context._context;
        var newProps = workInProgress.pendingProps;
        var render = newProps.children;
        if (typeof render !== "function") error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        prepareToReadContext(workInProgress, renderLanes);
        var newValue = readContext(context);
        markComponentRenderStarted(workInProgress);
        var newChildren;
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        newChildren = render(newValue);
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    function markWorkInProgressReceivedUpdate() {
        didReceiveUpdate = true;
    }
    function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            if (current !== null) {
                // A lazy component only mounts if it suspended inside a non-
                // concurrent tree, in an inconsistent state. We want to treat it like
                // a new mount, even though an empty version of it already committed.
                // Disconnect the alternate pointers.
                current.alternate = null;
                workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
                workInProgress.flags |= Placement;
            }
        }
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        if (current !== null) // Reuse previous dependencies
        workInProgress.dependencies = current.dependencies;
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning();
        markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.
        if (!includesSomeLane(renderLanes, workInProgress.childLanes)) return null;
         // This fiber doesn't have work, but its subtree does. Clone the child
        // fibers and continue.
        cloneChildFibers(current, workInProgress);
        return workInProgress.child;
    }
    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
        var returnFiber = oldWorkInProgress.return;
        if (returnFiber === null) // eslint-disable-next-line react-internal/prod-error-codes
        throw new Error("Cannot swap the root fiber.");
         // Disconnect from the old current.
        // It will get deleted.
        current.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.
        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.
        if (oldWorkInProgress === returnFiber.child) returnFiber.child = newWorkInProgress;
        else {
            var prevSibling = returnFiber.child;
            if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
            throw new Error("Expected parent to have a child.");
            while(prevSibling.sibling !== oldWorkInProgress){
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
                throw new Error("Expected to find the previous sibling.");
            }
            prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                current
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(current);
        newWorkInProgress.flags |= Placement; // Restart work from the new fiber.
        return newWorkInProgress;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
        // Before performing an early bailout, we must check if there are pending
        // updates or context.
        var updateLanes = current.lanes;
        if (includesSomeLane(updateLanes, renderLanes)) return true;
         // No pending update, but because context is propagated lazily, we need
        return false;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
        // This fiber does not have any pending work. Bailout without entering
        // the begin phase. There's still some bookkeeping we that needs to be done
        // in this optimized path, mostly pushing stuff onto the stack.
        switch(workInProgress.tag){
            case HostRoot:
                pushHostRootContext(workInProgress);
                var root = workInProgress.stateNode;
                resetHydrationState();
                break;
            case HostComponent:
                pushHostContext(workInProgress);
                break;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) pushContextProvider(workInProgress);
                break;
            case HostPortal:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            case ContextProvider:
                var newValue = workInProgress.memoizedProps.value;
                var context = workInProgress.type._context;
                pushProvider(workInProgress, context, newValue);
                break;
            case Profiler:
                // Profiler should only call onRender when one of its descendants actually rendered.
                var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (hasChildWork) workInProgress.flags |= Update;
                // Reset effect durations for the next eventual effect phase.
                // These are reset during render to allow the DevTools commit hook a chance to read them,
                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = 0;
                stateNode.passiveEffectDuration = 0;
                break;
            case SuspenseComponent:
                var state = workInProgress.memoizedState;
                if (state !== null) {
                    if (state.dehydrated !== null) {
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
                        // been unsuspended it has committed as a resolved Suspense component.
                        // If it needs to be retried, it should have work scheduled on it.
                        workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we
                        // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.
                        return null;
                    } // If this boundary is currently timed out, we need to decide
                    // whether to retry the primary children, or to skip over it and
                    // go straight to the fallback. Check the priority of the primary
                    // child fragment.
                    var primaryChildFragment = workInProgress.child;
                    var primaryChildLanes = primaryChildFragment.childLanes;
                    if (includesSomeLane(renderLanes, primaryChildLanes)) // The primary children have pending work. Use the normal path
                    // to attempt to render the primary children again.
                    return updateSuspenseComponent(current, workInProgress, renderLanes);
                    else {
                        // The primary child fragment does not have pending work marked
                        // on it
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                        // priority. Bailout.
                        var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                        if (child !== null) // The fallback children have pending work. Skip over the
                        // primary children and work on the fallback.
                        return child.sibling;
                        else // Note: We can return `null` here because we already checked
                        // whether there were nested context consumers, via the call to
                        // `bailoutOnAlreadyFinishedWork` above.
                        return null;
                    }
                } else pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                break;
            case SuspenseListComponent:
                var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;
                var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (didSuspendBefore) {
                    if (_hasChildWork) // If something was in fallback state last time, and we have all the
                    // same children then we're still in progressive loading state.
                    // Something might get unblocked by state updates or retries in the
                    // tree which will affect the tail. So we need to use the normal
                    // path to compute the correct tail.
                    return updateSuspenseListComponent(current, workInProgress, renderLanes);
                     // If none of the children had any work, that means that none of
                    // them got retried so they'll still be blocked in the same way
                    // as before. We can fast bail out.
                    workInProgress.flags |= DidCapture;
                } // If nothing suspended before and we're rendering the same children,
                // then the tail doesn't matter. Anything new that suspends will work
                // in the "together" mode, so we can continue from the state we had.
                var renderState = workInProgress.memoizedState;
                if (renderState !== null) {
                    // Reset to the "together" mode in case we've started a different
                    // update in the past but didn't complete it.
                    renderState.rendering = null;
                    renderState.tail = null;
                    renderState.lastEffect = null;
                }
                pushSuspenseContext(workInProgress, suspenseStackCursor.current);
                if (_hasChildWork) break;
                else // If none of the children had any work, that means that none of
                // them got retried so they'll still be blocked in the same way
                // as before. We can fast bail out.
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                // Need to check if the tree still needs to be deferred. This is
                // almost identical to the logic used in the normal update path,
                // so we'll just enter that. The only difference is we'll bail out
                // at the next level instead of this one, because the child props
                // have not changed. Which is fine.
                // TODO: Probably should refactor `beginWork` to split the bailout
                // path from the normal path. I'm tempted to do a labeled break here
                // but I won't :)
                workInProgress.lanes = NoLanes;
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
        if (workInProgress._debugNeedsRemount && current !== null) // This will restart the begin phase with a new fiber.
        return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
        if (current !== null) {
            var oldProps = current.memoizedProps;
            var newProps = workInProgress.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || workInProgress.type !== current.type) // If props or context changed, mark the fiber as having performed work.
            // This may be unset if the props are determined to be equal later (memo).
            didReceiveUpdate = true;
            else {
                // Neither props nor legacy context changes. Check if there's a pending
                // update or context change.
                var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
                if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there
                // may not be work scheduled on `current`, so we check for this flag.
                (workInProgress.flags & DidCapture) === NoFlags) {
                    // No pending updates or context. Bail out now.
                    didReceiveUpdate = false;
                    return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
                }
                if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
                else // An update was scheduled on this fiber, but there are no new props
                // nor legacy context. Set this to false. If an update queue or context
                // consumer produces a changed value, it will set this to true. Otherwise,
                // the component will assume the children have not changed and bail out.
                didReceiveUpdate = false;
            }
        } else {
            didReceiveUpdate = false;
            if (getIsHydrating() && isForkedChild(workInProgress)) {
                // Check if this child belongs to a list of muliple children in
                // its parent.
                //
                // In a true multi-threaded implementation, we would render children on
                // parallel threads. This would represent the beginning of a new render
                // thread for this subtree.
                //
                // We only use this for id generation during hydration, which is why the
                // logic is located in this special branch.
                var slotIndex = workInProgress.index;
                var numberOfForks = getForksAtLevel();
                pushTreeId(workInProgress, numberOfForks, slotIndex);
            }
        } // Before entering the begin phase, clear pending update priority.
        // TODO: This assumes that we're about to evaluate the component and process
        // the update queue. However, there's an exception: SimpleMemoComponent
        // sometimes bails out later in the begin phase. This indicates that we should
        // move this assignment out of the common path and into each branch.
        workInProgress.lanes = NoLanes;
        switch(workInProgress.tag){
            case IndeterminateComponent:
                return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
            case LazyComponent:
                var elementType = workInProgress.elementType;
                return mountLazyComponent(current, workInProgress, elementType, renderLanes);
            case FunctionComponent:
                var Component = workInProgress.type;
                var unresolvedProps = workInProgress.pendingProps;
                var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
                return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);
            case ClassComponent:
                var _Component = workInProgress.type;
                var _unresolvedProps = workInProgress.pendingProps;
                var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
                return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);
            case HostRoot:
                return updateHostRoot(current, workInProgress, renderLanes);
            case HostComponent:
                return updateHostComponent(current, workInProgress, renderLanes);
            case HostText:
                return updateHostText(current, workInProgress);
            case SuspenseComponent:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case HostPortal:
                return updatePortalComponent(current, workInProgress, renderLanes);
            case ForwardRef:
                var type = workInProgress.type;
                var _unresolvedProps2 = workInProgress.pendingProps;
                var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
            case Fragment:
                return updateFragment(current, workInProgress, renderLanes);
            case Mode:
                return updateMode(current, workInProgress, renderLanes);
            case Profiler:
                return updateProfiler(current, workInProgress, renderLanes);
            case ContextProvider:
                return updateContextProvider(current, workInProgress, renderLanes);
            case ContextConsumer:
                return updateContextConsumer(current, workInProgress, renderLanes);
            case MemoComponent:
                var _type2 = workInProgress.type;
                var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, _resolvedProps3, "prop", getComponentNameFromType(_type2));
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);
            case SimpleMemoComponent:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case IncompleteClassComponent:
                var _Component2 = workInProgress.type;
                var _unresolvedProps4 = workInProgress.pendingProps;
                var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
                return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);
            case SuspenseListComponent:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case ScopeComponent:
                break;
            case OffscreenComponent:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + "React. Please file an issue.");
    }
    function markUpdate(workInProgress) {
        // Tag the fiber with an update effect. This turns a Placement into
        // a PlacementAndUpdate.
        workInProgress.flags |= Update;
    }
    function markRef$1(workInProgress) {
        workInProgress.flags |= Ref;
        workInProgress.flags |= RefStatic;
    }
    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent$1;
    var updateHostText$1;
    // Mutation mode
    appendAllChildren = function(parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;
        while(node !== null){
            if (node.tag === HostComponent || node.tag === HostText) appendInitialChild(parent, node.stateNode);
            else if (node.tag === HostPortal) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    };
    updateHostContainer = function(current, workInProgress) {};
    updateHostComponent$1 = function(current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;
        if (oldProps === newProps) // In mutation mode, this is sufficient for a bailout because
        // we won't touch this node even if children changed.
        return;
         // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.
        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.
        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.
        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.
        if (updatePayload) markUpdate(workInProgress);
    };
    updateHostText$1 = function(current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) markUpdate(workInProgress);
    };
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (getIsHydrating()) // If we're hydrating, we should consume as many items as we can
        // so we don't leave any behind.
        return;
        switch(renderState.tailMode){
            case "hidden":
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while(tailNode !== null){
                    if (tailNode.alternate !== null) lastTailNode = tailNode;
                    tailNode = tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (lastTailNode === null) // All remaining items in the tail are insertions.
                renderState.tail = null;
                else // Detach the insertion after the last node that was already
                // inserted.
                lastTailNode.sibling = null;
                break;
            case "collapsed":
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while(_tailNode !== null){
                    if (_tailNode.alternate !== null) _lastTailNode = _tailNode;
                    _tailNode = _tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (_lastTailNode === null) {
                    // All remaining items in the tail are insertions.
                    if (!hasRenderedATailFallback && renderState.tail !== null) // We suspended during the head. We want to show at least one
                    // row at the tail. So we'll keep on and cut off the rest.
                    renderState.tail.sibling = null;
                    else renderState.tail = null;
                } else // Detach the insertion after the last node that was already
                // inserted.
                _lastTailNode.sibling = null;
                break;
        }
    }
    function bubbleProperties(completedWork) {
        var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
        var newChildLanes = NoLanes;
        var subtreeFlags = NoFlags;
        if (!didBailout) {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var actualDuration = completedWork.actualDuration;
                var treeBaseDuration = completedWork.selfBaseDuration;
                var child = completedWork.child;
                while(child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                    subtreeFlags |= child.subtreeFlags;
                    subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will
                    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
                    // When work is done, it should bubble to the parent's actualDuration. If
                    // the fiber has not been cloned though, (meaning no work was done), then
                    // this value will reflect the amount of time spent working on a previous
                    // render. In that case it should not bubble. We determine whether it was
                    // cloned by comparing the child pointer.
                    actualDuration += child.actualDuration;
                    treeBaseDuration += child.treeBaseDuration;
                    child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
                completedWork.treeBaseDuration = treeBaseDuration;
            } else {
                var _child = completedWork.child;
                while(_child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                    subtreeFlags |= _child.subtreeFlags;
                    subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child.return = completedWork;
                    _child = _child.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        } else {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var _treeBaseDuration = completedWork.selfBaseDuration;
                var _child2 = completedWork.child;
                while(_child2 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child2.subtreeFlags & StaticMask;
                    subtreeFlags |= _child2.flags & StaticMask;
                    _treeBaseDuration += _child2.treeBaseDuration;
                    _child2 = _child2.sibling;
                }
                completedWork.treeBaseDuration = _treeBaseDuration;
            } else {
                var _child3 = completedWork.child;
                while(_child3 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child3.subtreeFlags & StaticMask;
                    subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child3.return = completedWork;
                    _child3 = _child3.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        }
        completedWork.childLanes = newChildLanes;
        return didBailout;
    }
    function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {
        if (hasUnhydratedTailNodes() && (workInProgress.mode & ConcurrentMode) !== NoMode && (workInProgress.flags & DidCapture) === NoFlags) {
            warnIfUnhydratedTailNodes(workInProgress);
            resetHydrationState();
            workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;
            return false;
        }
        var wasHydrated = popHydrationState(workInProgress);
        if (nextState !== null && nextState.dehydrated !== null) {
            // We might be inside a hydration state the first time we're picking up this
            // Suspense boundary, and also after we've reentered it for further hydration.
            if (current === null) {
                if (!wasHydrated) throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                prepareToHydrateHostSuspenseInstance(workInProgress);
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    var isTimedOutSuspense = nextState !== null;
                    if (isTimedOutSuspense) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var primaryChildFragment = workInProgress.child;
                        if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                }
                return false;
            } else {
                // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration
                // state since we're now exiting out of it. popHydrationState doesn't do that for us.
                resetHydrationState();
                if ((workInProgress.flags & DidCapture) === NoFlags) // This boundary did not suspend so it's now hydrated and unsuspended.
                workInProgress.memoizedState = null;
                 // If nothing suspended, we need to schedule an effect to mark this boundary
                // as having hydrated so events know that they're free to be invoked.
                // It's also a signal to replay events and the suspense callback.
                // If something suspended, schedule an effect to attach retry listeners.
                // So we might as well always mark this.
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    var _isTimedOutSuspense = nextState !== null;
                    if (_isTimedOutSuspense) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var _primaryChildFragment = workInProgress.child;
                        if (_primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                    }
                }
                return false;
            }
        } else {
            // Successfully completed this tree. If this was a forced client render,
            // there may have been recoverable errors during first hydration
            // attempt. If so, add them to a queue so we can log them in the
            // commit phase.
            upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path
            return true;
        }
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
                bubbleProperties(workInProgress);
                return null;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostRoot:
                var fiberRoot = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                if (fiberRoot.pendingContext) {
                    fiberRoot.context = fiberRoot.pendingContext;
                    fiberRoot.pendingContext = null;
                }
                if (current === null || current.child === null) {
                    // If we hydrated, pop so that we can delete any remaining children
                    // that weren't hydrated.
                    var wasHydrated = popHydrationState(workInProgress);
                    if (wasHydrated) // If we hydrated, then we'll need to schedule an update for
                    // the commit side-effects on the root.
                    markUpdate(workInProgress);
                    else if (current !== null) {
                        var prevState = current.memoizedState;
                        if (!prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
                        (workInProgress.flags & ForceClientRender) !== NoFlags) {
                            // Schedule an effect to clear this container at the start of the
                            // next commit. This handles the case of React rendering into a
                            // container with previous children. It's also safe to do for
                            // updates too, because current.child would only be null if the
                            // previous render was null (so the container would already
                            // be empty).
                            workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been
                            // recoverable errors during first hydration attempt. If so, add
                            // them to a queue so we can log them in the commit phase.
                            upgradeHydrationErrorsToRecoverable();
                        }
                    }
                }
                updateHostContainer(current, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostComponent:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress.type;
                if (current !== null && workInProgress.stateNode != null) {
                    updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);
                    if (current.ref !== workInProgress.ref) markRef$1(workInProgress);
                } else {
                    if (!newProps) {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
                    // "stack" as the parent. Then append children as we go in beginWork
                    // or completeWork depending on whether we want to add them top->down or
                    // bottom->up. Top->down is faster in IE11.
                    var _wasHydrated = popHydrationState(workInProgress);
                    if (_wasHydrated) // TODO: Move this and createInstance step into the beginPhase
                    // to consolidate.
                    {
                        if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) // If changes to the hydrated node need to be applied at the
                        // commit-phase we mark this as such.
                        markUpdate(workInProgress);
                    } else {
                        var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                        appendAllChildren(instance, workInProgress, false, false);
                        workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
                        // (eg DOM renderer supports auto-focus for certain elements).
                        // Make sure such renderers get scheduled for later work.
                        if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) markUpdate(workInProgress);
                    }
                    if (workInProgress.ref !== null) // If there is a ref on a host node we need to schedule a callback
                    markRef$1(workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case HostText:
                var newText = newProps;
                if (current && workInProgress.stateNode != null) {
                    var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
                    // to schedule a side-effect to do the updates.
                    updateHostText$1(current, workInProgress, oldText, newText);
                } else {
                    if (typeof newText !== "string") {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                    }
                    var _rootContainerInstance = getRootHostContainer();
                    var _currentHostContext = getHostContext();
                    var _wasHydrated2 = popHydrationState(workInProgress);
                    if (_wasHydrated2) {
                        if (prepareToHydrateHostTextInstance(workInProgress)) markUpdate(workInProgress);
                    } else workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this
                // to its own fiber type so that we can add other kinds of hydration
                // boundaries that aren't associated with a Suspense tree. In anticipation
                // of such a refactor, all the hydration logic is contained in
                // this branch.
                if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {
                    var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);
                    if (!fallthroughToNormalSuspensePath) {
                        if (workInProgress.flags & ShouldCapture) // Special case. There were remaining unhydrated nodes. We treat
                        // this as a mismatch. Revert to client rendering.
                        return workInProgress;
                        else // Did not finish hydrating, either because this is the initial
                        // render or because something suspended.
                        return null;
                    } // Continue with the normal Suspense path.
                }
                if ((workInProgress.flags & DidCapture) !== NoFlags) {
                    // Something suspended. Re-render with the fallback children.
                    workInProgress.lanes = renderLanes; // Do not reset the effect list.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                     // Don't bubble properties in this case.
                    return workInProgress;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = current !== null && current.memoizedState !== null;
                // a passive effect, which is when we process the transitions
                if (nextDidTimeout !== prevDidTimeout) // an effect to toggle the subtree's visibility. When we switch from
                // fallback -> primary, the inner Offscreen fiber schedules this effect
                // as part of its normal complete phase. But when we switch from
                // primary -> fallback, the inner Offscreen fiber does not have a complete
                // phase. So we need to schedule its effect here.
                //
                // We also use this flag to connect/disconnect the effects, but the same
                // logic applies: when re-connecting, the Offscreen fiber's complete
                // phase will handle scheduling the effect. It's only when the fallback
                // is active that we have to do anything special.
                {
                    if (nextDidTimeout) {
                        var _offscreenFiber2 = workInProgress.child;
                        _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything
                        // in the concurrent tree already suspended during this render.
                        // This is a known bug.
                        if ((workInProgress.mode & ConcurrentMode) !== NoMode) {
                            // TODO: Move this back to throwException because this is too late
                            // if this is a large tree which is common for initial loads. We
                            // don't know if we should restart a render or not until we get
                            // this marker, and this is too late.
                            // If this render already had a ping or lower pri updates,
                            // and this is the first time we know we're going to suspend we
                            // should be able to immediately restart from within throwException.
                            var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) // If this was in an invisible tree or a new render, then showing
                            // this boundary is ok.
                            renderDidSuspend();
                            else // Otherwise, we're going to have to hide content so we should
                            // suspend for longer if possible.
                            renderDidSuspendDelayIfPossible();
                        }
                    }
                }
                var wakeables = workInProgress.updateQueue;
                if (wakeables !== null) // Schedule an effect to attach a retry listener to the promise.
                // TODO: Move to passive phase
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    if (nextDidTimeout) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var primaryChildFragment = workInProgress.child;
                        if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                }
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                updateHostContainer(current, workInProgress);
                if (current === null) preparePortalMount(workInProgress.stateNode.containerInfo);
                bubbleProperties(workInProgress);
                return null;
            case ContextProvider:
                // Pop provider fiber
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case IncompleteClassComponent:
                // Same as class component case. I put it down here so that the tags are
                // sequential to ensure this switch is compiled to a jump table.
                var _Component = workInProgress.type;
                if (isContextProvider(_Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress);
                var renderState = workInProgress.memoizedState;
                if (renderState === null) {
                    // We're running in the default, "independent" mode.
                    // We don't do anything in this mode.
                    bubbleProperties(workInProgress);
                    return null;
                }
                var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                    // We just rendered the head.
                    if (!didSuspendAlready) {
                        // This is the first pass. We need to figure out if anything is still
                        // suspended in the rendered set.
                        // If new content unsuspended, but there's still some content that
                        // didn't. Then we need to do a second pass that forces everything
                        // to keep showing their fallbacks.
                        // We might be suspended if something in this render pass suspended, or
                        // something in the previous committed pass suspended. Otherwise,
                        // there's no chance so we can skip the expensive call to
                        // findFirstSuspended.
                        var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);
                        if (!cannotBeSuspended) {
                            var row = workInProgress.child;
                            while(row !== null){
                                var suspended = findFirstSuspended(row);
                                if (suspended !== null) {
                                    didSuspendAlready = true;
                                    workInProgress.flags |= DidCapture;
                                    cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                                    // part of the second pass. In that case nothing will subscribe to
                                    // its thenables. Instead, we'll transfer its thenables to the
                                    // SuspenseList so that it can retry if they resolve.
                                    // There might be multiple of these in the list but since we're
                                    // going to wait for all of them anyway, it doesn't really matter
                                    // which ones gets to ping. In theory we could get clever and keep
                                    // track of how many dependencies remain but it gets tricky because
                                    // in the meantime, we can add/remove/change items and dependencies.
                                    // We might bail out of the loop before finding any but that
                                    // doesn't matter since that means that the other boundaries that
                                    // we did find already has their listeners attached.
                                    var newThenables = suspended.updateQueue;
                                    if (newThenables !== null) {
                                        workInProgress.updateQueue = newThenables;
                                        workInProgress.flags |= Update;
                                    } // Rerender the whole list, but this time, we'll force fallbacks
                                    // to stay in place.
                                    // Reset the effect flags before doing the second pass since that's now invalid.
                                    // Reset the child fibers to their original state.
                                    workInProgress.subtreeFlags = NoFlags;
                                    resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                                    // rerender the children.
                                    pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.
                                    return workInProgress.child;
                                }
                                row = row.sibling;
                            }
                        }
                        if (renderState.tail !== null && now() > getRenderTargetTime()) {
                            // We have already passed our CPU deadline but we still have rows
                            // left in the tail. We'll just give up further attempts to render
                            // the main content and only render fallbacks.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    } else cutOffTailIfNeeded(renderState, false);
                     // Next we're going to render the tail.
                } else {
                    // Append the rendered row to the child list.
                    if (!didSuspendAlready) {
                        var _suspended = findFirstSuspended(renderedTail);
                        if (_suspended !== null) {
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
                            // get lost if this row ends up dropped during a second pass.
                            var _newThenables = _suspended.updateQueue;
                            if (_newThenables !== null) {
                                workInProgress.updateQueue = _newThenables;
                                workInProgress.flags |= Update;
                            }
                            cutOffTailIfNeeded(renderState, true); // This might have been modified.
                            if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
                            ) {
                                // We're done.
                                bubbleProperties(workInProgress);
                                return null;
                            }
                        } else if (// time we have to render. So rendering one more row would likely
                        // exceed it.
                        now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
                            // We have now passed our CPU deadline and we'll just give up further
                            // attempts to render the main content and only render fallbacks.
                            // The assumption is that this is usually faster.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    }
                    if (renderState.isBackwards) {
                        // The effect list of the backwards tail will have been added
                        // to the end. This breaks the guarantee that life-cycles fire in
                        // sibling order but that isn't a strong guarantee promised by React.
                        // Especially since these might also just pop in during future commits.
                        // Append to the beginning of the list.
                        renderedTail.sibling = workInProgress.child;
                        workInProgress.child = renderedTail;
                    } else {
                        var previousSibling = renderState.last;
                        if (previousSibling !== null) previousSibling.sibling = renderedTail;
                        else workInProgress.child = renderedTail;
                        renderState.last = renderedTail;
                    }
                }
                if (renderState.tail !== null) {
                    // We still have tail rows to render.
                    // Pop a row.
                    var next = renderState.tail;
                    renderState.rendering = next;
                    renderState.tail = next.sibling;
                    renderState.renderingStartTime = now();
                    next.sibling = null; // Restore the context.
                    // TODO: We can probably just avoid popping it instead and only
                    // setting it the first time we go from not suspended to suspended.
                    var suspenseContext = suspenseStackCursor.current;
                    if (didSuspendAlready) suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                    else suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                    pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.
                    // Don't bubble properties in this case.
                    return next;
                }
                bubbleProperties(workInProgress);
                return null;
            case ScopeComponent:
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                var _nextState = workInProgress.memoizedState;
                var nextIsHidden = _nextState !== null;
                if (current !== null) {
                    var _prevState = current.memoizedState;
                    var prevIsHidden = _prevState !== null;
                    if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) workInProgress.flags |= Visibility;
                }
                if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) bubbleProperties(workInProgress);
                else // Don't bubble properties for hidden children unless we're rendering
                // at offscreen priority.
                if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
                    bubbleProperties(workInProgress);
                    // Check if there was an insertion or update in the hidden subtree.
                    // If so, we need to hide those nodes in the commit phase, so
                    // schedule a visibility effect.
                    if (workInProgress.subtreeFlags & (Placement | Update)) workInProgress.flags |= Visibility;
                }
                return null;
            case CacheComponent:
                return null;
            case TracingMarkerComponent:
                return null;
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + "React. Please file an issue.");
    }
    function unwindWork(current, workInProgress, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                var flags = workInProgress.flags;
                if (flags & ShouldCapture) {
                    workInProgress.flags = flags & ~ShouldCapture | DidCapture;
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case HostRoot:
                var root = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                var _flags = workInProgress.flags;
                if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                    // There was an error during render that wasn't captured by a suspense
                    // boundary. Do a second pass on the root to unmount the children.
                    workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
                    return workInProgress;
                } // We unwound to the root without completing it. Exit.
                return null;
            case HostComponent:
                // TODO: popHydrationState
                popHostContext(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var suspenseState = workInProgress.memoizedState;
                if (suspenseState !== null && suspenseState.dehydrated !== null) {
                    if (workInProgress.alternate === null) throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                    resetHydrationState();
                }
                var _flags2 = workInProgress.flags;
                if (_flags2 & ShouldCapture) {
                    workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
                // caught by a nested boundary. If not, it should bubble through.
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                return null;
            case ContextProvider:
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                return null;
            case CacheComponent:
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(current, interruptedWork, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(interruptedWork);
        switch(interruptedWork.tag){
            case ClassComponent:
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== undefined) popContext(interruptedWork);
                break;
            case HostRoot:
                var root = interruptedWork.stateNode;
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                resetWorkInProgressVersions();
                break;
            case HostComponent:
                popHostContext(interruptedWork);
                break;
            case HostPortal:
                popHostContainer(interruptedWork);
                break;
            case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
            case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
            case ContextProvider:
                var context = interruptedWork.type._context;
                popProvider(context, interruptedWork);
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(interruptedWork);
                break;
        }
    }
    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    // Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.
    // Only used when enableSuspenseLayoutEffectSemantics is enabled.
    var offscreenSubtreeIsHidden = false;
    var offscreenSubtreeWasHidden = false;
    var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
    var nextEffect = null; // Used for Profiling builds to track updaters.
    var inProgressLanes = null;
    var inProgressRoot = null;
    function reportUncaughtErrorInDEV(error) {
        invokeGuardedCallback(null, function() {
            throw error;
        });
        clearCaughtError();
    }
    var callComponentWillUnmountWithTimer = function(current, instance) {
        instance.props = current.memoizedProps;
        instance.state = current.memoizedState;
        if (current.mode & ProfileMode) try {
            startLayoutEffectTimer();
            instance.componentWillUnmount();
        } finally{
            recordLayoutEffectDuration(current);
        }
        else instance.componentWillUnmount();
    }; // Capture errors so they don't interrupt mounting.
    function safelyCallCommitHookLayoutEffectListMount(current, nearestMountedAncestor) {
        try {
            commitHookEffectListMount(Layout, current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt unmounting.
    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
        try {
            callComponentWillUnmountWithTimer(current, instance);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyCallComponentDidMount(current, nearestMountedAncestor, instance) {
        try {
            instance.componentDidMount();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyAttachRef(current, nearestMountedAncestor) {
        try {
            commitAttachRef(current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
        var ref = current.ref;
        if (ref !== null) {
            if (typeof ref === "function") {
                var retVal;
                try {
                    if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        retVal = ref(null);
                    } finally{
                        recordLayoutEffectDuration(current);
                    }
                    else retVal = ref(null);
                } catch (error) {
                    captureCommitPhaseError(current, nearestMountedAncestor, error);
                }
                if (typeof retVal === "function") error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current));
            } else ref.current = null;
        }
    }
    function safelyCallDestroy(current, nearestMountedAncestor, destroy) {
        try {
            destroy();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    var focusedInstanceHandle = null;
    var shouldFireAfterActiveInstanceBlur = false;
    function commitBeforeMutationEffects(root, firstChild) {
        focusedInstanceHandle = prepareForCommit(root.containerInfo);
        nextEffect = firstChild;
        commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber
        var shouldFire = shouldFireAfterActiveInstanceBlur;
        shouldFireAfterActiveInstanceBlur = false;
        focusedInstanceHandle = null;
        return shouldFire;
    }
    function commitBeforeMutationEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.
            var child = fiber.child;
            if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitBeforeMutationEffects_complete();
        }
    }
    function commitBeforeMutationEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
                commitBeforeMutationEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitBeforeMutationEffectsOnFiber(finishedWork) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags;
        if ((flags & Snapshot) !== NoFlags) {
            setCurrentFiber(finishedWork);
            switch(finishedWork.tag){
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent:
                    break;
                case ClassComponent:
                    if (current !== null) {
                        var prevProps = current.memoizedProps;
                        var prevState = current.memoizedState;
                        var instance = finishedWork.stateNode; // We could update instance props and state here,
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                        }
                        var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                        var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                        if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                            didWarnSet.add(finishedWork.type);
                            error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                        }
                        instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    }
                    break;
                case HostRoot:
                    var root = finishedWork.stateNode;
                    clearContainer(root.containerInfo);
                    break;
                case HostComponent:
                case HostText:
                case HostPortal:
                case IncompleteClassComponent:
                    break;
                default:
                    throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
            resetCurrentFiber();
        }
    }
    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    // Unmount
                    var destroy = effect.destroy;
                    effect.destroy = undefined;
                    if (destroy !== undefined) {
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStarted(finishedWork);
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStarted(finishedWork);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                        safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStopped();
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStopped();
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect);
        }
    }
    function commitHookEffectListMount(flags, finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStarted(finishedWork);
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStarted(finishedWork);
                    var create = effect.create;
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                    effect.destroy = create();
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStopped();
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStopped();
                    var destroy = effect.destroy;
                    if (destroy !== undefined && typeof destroy !== "function") {
                        var hookName = void 0;
                        if ((effect.tag & Layout) !== NoFlags) hookName = "useLayoutEffect";
                        else if ((effect.tag & Insertion) !== NoFlags) hookName = "useInsertionEffect";
                        else hookName = "useEffect";
                        var addendum = void 0;
                        if (destroy === null) addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                        else if (typeof destroy.then === "function") addendum = "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. " + "Instead, write the async function inside your effect " + "and call it immediately:\n\n" + hookName + "(() => {\n" + "  async function fetchData() {\n" + "    // You can await here\n" + "    const response = await MyAPI.getData(someId);\n" + "    // ...\n" + "  }\n" + "  fetchData();\n" + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + "Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                        else addendum = " You returned: " + destroy;
                        error("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect);
        }
    }
    function commitPassiveEffectDurations(finishedRoot, finishedWork) {
        // Only Profilers with work in their subtree will have an Update effect scheduled.
        if ((finishedWork.flags & Update) !== NoFlags) switch(finishedWork.tag){
            case Profiler:
                var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.
                // It does not get reset until the start of the next commit phase.
                var commitTime = getCommitTime();
                var phase = finishedWork.alternate === null ? "mount" : "update";
                if (isCurrentUpdateNested()) phase = "nested-update";
                if (typeof onPostCommit === "function") onPostCommit(id, phase, passiveEffectDuration, commitTime);
                 // Bubble times to the next nearest ancestor Profiler.
                // After we process that Profiler, we'll bubble further up.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
        }
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {
        if ((finishedWork.flags & LayoutMask) !== NoFlags) switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    // At this point layout effects have already been destroyed (during mutation phase).
                    // This is done to prevent sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListMount(Layout | HasEffect, finishedWork);
                    } finally{
                        recordLayoutEffectDuration(finishedWork);
                    }
                    else commitHookEffectListMount(Layout | HasEffect, finishedWork);
                }
                break;
            case ClassComponent:
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                    if (!offscreenSubtreeWasHidden) {
                        if (current === null) {
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidMount();
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidMount();
                        } else {
                            var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                            var prevState = current.memoizedState; // We could update instance props and state here,
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                        }
                    }
                } // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                        if (instance.state !== finishedWork.memoizedState) error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                    }
                    // but instead we rely on them being set during last render.
                    // TODO: revisit this when we implement resuming.
                    commitUpdateQueue(finishedWork, updateQueue, instance);
                }
                break;
            case HostRoot:
                // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                    var _instance = null;
                    if (finishedWork.child !== null) switch(finishedWork.child.tag){
                        case HostComponent:
                            _instance = getPublicInstance(finishedWork.child.stateNode);
                            break;
                        case ClassComponent:
                            _instance = finishedWork.child.stateNode;
                            break;
                    }
                    commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                break;
            case HostComponent:
                var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
                // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                // These effects should only be committed when components are first mounted,
                // aka when there is no current/alternate.
                if (current === null && finishedWork.flags & Update) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props);
                }
                break;
            case HostText:
                break;
            case HostPortal:
                break;
            case Profiler:
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                var effectDuration = finishedWork.stateNode.effectDuration;
                var commitTime = getCommitTime();
                var phase = current === null ? "mount" : "update";
                if (isCurrentUpdateNested()) phase = "nested-update";
                if (typeof onRender === "function") onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);
                if (typeof onCommit === "function") onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);
                 // Schedule a passive effect for this Profiler to call onPostCommit hooks.
                // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,
                // because the effect is also where times bubble to parent Profilers.
                enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.
                // Do not reset these values until the next render so DevTools has a chance to read them first.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.effectDuration += effectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.effectDuration += effectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
            case SuspenseComponent:
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
            case TracingMarkerComponent:
                break;
            default:
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (!offscreenSubtreeWasHidden) {
            if (finishedWork.flags & Ref) commitAttachRef(finishedWork);
        }
    }
    function reappearLayoutEffectsOnFiber(node) {
        // Turn on layout effects in a tree that previously disappeared.
        // TODO (Offscreen) Check: flags & LayoutStatic
        switch(node.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (node.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    safelyCallCommitHookLayoutEffectListMount(node, node.return);
                } finally{
                    recordLayoutEffectDuration(node);
                }
                else safelyCallCommitHookLayoutEffectListMount(node, node.return);
                break;
            case ClassComponent:
                var instance = node.stateNode;
                if (typeof instance.componentDidMount === "function") safelyCallComponentDidMount(node, node.return, instance);
                safelyAttachRef(node, node.return);
                break;
            case HostComponent:
                safelyAttachRef(node, node.return);
                break;
        }
    }
    function hideOrUnhideAllChildren(finishedWork, isHidden) {
        // Only hide or unhide the top-most host nodes.
        var hostSubtreeRoot = null;
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;
        while(true){
            if (node.tag === HostComponent) {
                if (hostSubtreeRoot === null) {
                    hostSubtreeRoot = node;
                    try {
                        var instance = node.stateNode;
                        if (isHidden) hideInstance(instance);
                        else unhideInstance(node.stateNode, node.memoizedProps);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
            } else if (node.tag === HostText) {
                if (hostSubtreeRoot === null) try {
                    var _instance3 = node.stateNode;
                    if (isHidden) hideTextInstance(_instance3);
                    else unhideTextInstance(_instance3, node.memoizedProps);
                } catch (error) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
            } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return;
                if (hostSubtreeRoot === node) hostSubtreeRoot = null;
                node = node.return;
            }
            if (hostSubtreeRoot === node) hostSubtreeRoot = null;
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch(finishedWork.tag){
                case HostComponent:
                    instanceToUse = getPublicInstance(instance);
                    break;
                default:
                    instanceToUse = instance;
            } // Moved outside to ensure DCE works with this flag
            if (typeof ref === "function") {
                var retVal;
                if (finishedWork.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    retVal = ref(instanceToUse);
                } finally{
                    recordLayoutEffectDuration(finishedWork);
                }
                else retVal = ref(instanceToUse);
                if (typeof retVal === "function") error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
            } else {
                if (!ref.hasOwnProperty("current")) error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                ref.current = instanceToUse;
            }
        }
    }
    function detachFiberMutation(fiber) {
        // Cut off the return pointer to disconnect it from the tree.
        // This enables us to detect and warn against state updates on an unmounted component.
        // It also prevents events from bubbling from within disconnected components.
        //
        // Ideally, we should also clear the child pointer of the parent alternate to let this
        // get GC:ed but we don't know which for sure which parent is the current
        // one so we'll settle for GC:ing the subtree of this child.
        // This child itself will be GC:ed when the parent updates the next time.
        //
        // Note that we can't clear child or sibling pointers yet.
        // They're needed for passive effects and for findDOMNode.
        // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).
        //
        // Don't reset the alternate yet, either. We need that so we can detach the
        // alternate's fields in the passive phase. Clearing the return pointer is
        // sufficient for findDOMNode semantics.
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.return = null;
        fiber.return = null;
    }
    function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        if (alternate !== null) {
            fiber.alternate = null;
            detachFiberAfterEffects(alternate);
        } // Note: Defensively using negation instead of < in case
        // Clear cyclical Fiber fields. This level alone is designed to roughly
        // approximate the planned Fiber refactor. In that world, `setState` will be
        // bound to a special "instance" object instead of a Fiber. The Instance
        // object will not have any of these fields. It will only be connected to
        // the fiber tree via a single link at the root. So if this level alone is
        // sufficient to fix memory issues, that bodes well for our plans.
        fiber.child = null;
        fiber.deletions = null;
        fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host
        // tree, which has its own pointers to children, parents, and siblings.
        // The other host nodes also point back to fibers, so we should detach that
        // one, too.
        if (fiber.tag === HostComponent) {
            var hostInstance = fiber.stateNode;
            if (hostInstance !== null) detachDeletedInstance(hostInstance);
        }
        fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We
        fiber._debugOwner = null;
        // Theoretically, nothing in here should be necessary, because we already
        // disconnected the fiber from the tree. So even if something leaks this
        // particular fiber, it won't leak anything else
        //
        // The purpose of this branch is to be super aggressive so we can measure
        // if there's any difference in memory impact. If there is, that could
        // indicate a React leak we don't know about.
        fiber.return = null;
        fiber.dependencies = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.
        fiber.updateQueue = null;
    }
    function getHostParentFiber(fiber) {
        var parent = fiber.return;
        while(parent !== null){
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }
    function getHostSibling(fiber) {
        // We're going to search forward into the tree until we find a sibling host
        // node. Unfortunately, if multiple insertions are done in a row we have to
        // search past them. This leads to exponential search for the next sibling.
        // TODO: Find a more efficient way to do this.
        var node = fiber;
        siblings: while(true){
            // If we didn't find anything, let's try the next sibling.
            while(node.sibling === null){
                if (node.return === null || isHostParent(node.return)) // If we pop out of the root or hit the parent the fiber we are the
                // last sibling.
                return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
            while(node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment){
                // If it is not host node and, we might have a host node inside it.
                // Try to search down until we find one.
                if (node.flags & Placement) continue siblings;
                 // If we don't have a child, try the siblings instead.
                // We also skip portals because they are not part of this host tree.
                if (node.child === null || node.tag === HostPortal) continue siblings;
                else {
                    node.child.return = node;
                    node = node.child;
                }
            } // Check if this host node is stable or about to be placed.
            if (!(node.flags & Placement)) // Found it!
            return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.
        switch(parentFiber.tag){
            case HostComponent:
                var parent = parentFiber.stateNode;
                if (parentFiber.flags & ContentReset) {
                    // Reset the text content of the parent before doing any insertions
                    resetTextContent(parent); // Clear ContentReset from the effect tag
                    parentFiber.flags &= ~ContentReset;
                }
                var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
                // children to find all the terminal nodes.
                insertOrAppendPlacementNode(finishedWork, before, parent);
                break;
            case HostRoot:
            case HostPortal:
                var _parent = parentFiber.stateNode.containerInfo;
                var _before = getHostSibling(finishedWork);
                insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
                break;
            // eslint-disable-next-line-no-fallthrough
            default:
                throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertInContainerBefore(parent, stateNode, before);
            else appendChildToContainer(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertBefore(parent, stateNode, before);
            else appendChild(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNode(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNode(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    } // These are tracked on the stack as we recursively traverse a
    // deleted subtree.
    // TODO: Update these during the whole mutation phase, not just during
    // a deletion.
    var hostParent = null;
    var hostParentIsContainer = false;
    function commitDeletionEffects(root, returnFiber, deletedFiber) {
        // We only have the top Fiber that was deleted but we need to recurse down its
        // children to find all the terminal nodes.
        // Recursively delete all host nodes from the parent, detach refs, clean
        // up mounted layout effects, and call componentWillUnmount.
        // We only need to remove the topmost host child in each branch. But then we
        // still need to keep traversing to unmount effects, refs, and cWU. TODO: We
        // could split this into two separate traversals functions, where the second
        // one doesn't include any removeChild logic. This is maybe the same
        // function as "disappearLayoutEffects" (or whatever that turns into after
        // the layout phase is refactored to use recursion).
        // Before starting, find the nearest host parent on the stack so we know
        // which instance/container to remove the children from.
        // TODO: Instead of searching up the fiber return path on every deletion, we
        // can track the nearest host component on the JS stack as we traverse the
        // tree during the commit phase. This would make insertions faster, too.
        var parent = returnFiber;
        findParent: while(parent !== null){
            switch(parent.tag){
                case HostComponent:
                    hostParent = parent.stateNode;
                    hostParentIsContainer = false;
                    break findParent;
                case HostRoot:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                case HostPortal:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
            }
            parent = parent.return;
        }
        if (hostParent === null) throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
        hostParent = null;
        hostParentIsContainer = false;
        detachFiberMutation(deletedFiber);
    }
    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        // TODO: Use a static flag to skip trees that don't have unmount effects
        var child = parent.child;
        while(child !== null){
            commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
            child = child.sibling;
        }
    }
    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse
        // into their subtree. There are simpler cases in the inner switch
        // that don't modify the stack.
        switch(deletedFiber.tag){
            case HostComponent:
                if (!offscreenSubtreeWasHidden) safelyDetachRef(deletedFiber, nearestMountedAncestor);
                 // Intentional fallthrough to next branch
            // eslint-disable-next-line-no-fallthrough
            case HostText:
                var prevHostParent = hostParent;
                var prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (hostParent !== null) {
                    // Now that all the child effects have unmounted, we can remove the
                    // node from the tree.
                    if (hostParentIsContainer) removeChildFromContainer(hostParent, deletedFiber.stateNode);
                    else removeChild(hostParent, deletedFiber.stateNode);
                }
                return;
            case DehydratedFragment:
                if (hostParent !== null) {
                    if (hostParentIsContainer) clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                    else clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                }
                return;
            case HostPortal:
                // When we go into a portal, it becomes the parent to remove from.
                var _prevHostParent = hostParent;
                var _prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = true;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = _prevHostParent;
                hostParentIsContainer = _prevHostParentIsContainer;
                return;
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    var updateQueue = deletedFiber.updateQueue;
                    if (updateQueue !== null) {
                        var lastEffect = updateQueue.lastEffect;
                        if (lastEffect !== null) {
                            var firstEffect = lastEffect.next;
                            var effect = firstEffect;
                            do {
                                var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                                if (destroy !== undefined) {
                                    if ((tag & Insertion) !== NoFlags$1) safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                    else if ((tag & Layout) !== NoFlags$1) {
                                        markComponentLayoutEffectUnmountStarted(deletedFiber);
                                        if (deletedFiber.mode & ProfileMode) {
                                            startLayoutEffectTimer();
                                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                            recordLayoutEffectDuration(deletedFiber);
                                        } else safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                        markComponentLayoutEffectUnmountStopped();
                                    }
                                }
                                effect = effect.next;
                            }while (effect !== firstEffect);
                        }
                    }
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ClassComponent:
                if (!offscreenSubtreeWasHidden) {
                    safelyDetachRef(deletedFiber, nearestMountedAncestor);
                    var instance = deletedFiber.stateNode;
                    if (typeof instance.componentWillUnmount === "function") safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ScopeComponent:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case OffscreenComponent:
                if (deletedFiber.mode & ConcurrentMode) {
                    // If this offscreen component is hidden, we already unmounted it. Before
                    // deleting the children, track that it's already unmounted so that we
                    // don't attempt to unmount the effects again.
                    // TODO: If the tree is hidden, in most cases we should be able to skip
                    // over the nested children entirely. An exception is we haven't yet found
                    // the topmost host node to delete, which we already track on the stack.
                    // But the other case is portals, which need to be detached no matter how
                    // deeply they are nested. We should use a subtree flag to track whether a
                    // subtree includes a nested portal.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                    recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            default:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
        }
    }
    function commitSuspenseCallback(finishedWork) {
        // TODO: Move this to passive phase
        var newState = finishedWork.memoizedState;
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState === null) {
            var current = finishedWork.alternate;
            if (current !== null) {
                var prevState = current.memoizedState;
                if (prevState !== null) {
                    var suspenseInstance = prevState.dehydrated;
                    if (suspenseInstance !== null) commitHydratedSuspenseInstance(suspenseInstance);
                }
            }
        }
    }
    function attachSuspenseRetryListeners(finishedWork) {
        // If this boundary just timed out, then it will have a set of wakeables.
        // For each wakeable, attach a listener so that when it resolves, React
        // attempts to re-render the boundary in the primary (pre-timeout) state.
        var wakeables = finishedWork.updateQueue;
        if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            wakeables.forEach(function(wakeable) {
                // Memoize using the boundary fiber to prevent redundant listeners.
                var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                if (!retryCache.has(wakeable)) {
                    retryCache.add(wakeable);
                    if (isDevToolsPresent) {
                        if (inProgressLanes !== null && inProgressRoot !== null) // If we have pending work still, associate the original updaters with it.
                        restorePendingUpdaters(inProgressRoot, inProgressLanes);
                        else throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                    }
                    wakeable.then(retry, retry);
                }
            });
        }
    } // This function detects when a Suspense boundary goes from visible to hidden.
    function commitMutationEffects(root, finishedWork, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        setCurrentFiber(finishedWork);
        commitMutationEffectsOnFiber(finishedWork, root);
        setCurrentFiber(finishedWork);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {
        // Deletions effects can be scheduled on any fiber type. They need to happen
        // before the children effects hae fired.
        var deletions = parentFiber.deletions;
        if (deletions !== null) for(var i = 0; i < deletions.length; i++){
            var childToDelete = deletions[i];
            try {
                commitDeletionEffects(root, parentFiber, childToDelete);
            } catch (error) {
                captureCommitPhaseError(childToDelete, parentFiber, error);
            }
        }
        var prevDebugFiber = getCurrentFiber();
        if (parentFiber.subtreeFlags & MutationMask) {
            var child = parentFiber.child;
            while(child !== null){
                setCurrentFiber(child);
                commitMutationEffectsOnFiber(child, root);
                child = child.sibling;
            }
        }
        setCurrentFiber(prevDebugFiber);
    }
    function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,
        // because the fiber tag is more specific. An exception is any flag related
        // to reconcilation, because those can be set on all fiber types.
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    try {
                        commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                        commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    } // Layout effects are destroyed during the mutation phase so that all
                    // destroy functions for all fibers are called before any create functions.
                    // This prevents sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) {
                        try {
                            startLayoutEffectTimer();
                            commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                        recordLayoutEffectDuration(finishedWork);
                    } else try {
                        commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case ClassComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                return;
            case HostComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                // TODO: ContentReset gets cleared by the children during the commit
                // phase. This is a refactor hazard because it means we must read
                // flags the flags after `commitReconciliationEffects` has already run;
                // the order matters. We should refactor so that ContentReset does not
                // rely on mutating the flag during commit. Like by setting a flag
                // during the render phase instead.
                if (finishedWork.flags & ContentReset) {
                    var instance = finishedWork.stateNode;
                    try {
                        resetTextContent(instance);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                if (flags & Update) {
                    var _instance4 = finishedWork.stateNode;
                    if (_instance4 != null) {
                        // Commit the work prepared earlier.
                        var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                        // as the newProps. The updatePayload will contain the real change in
                        // this case.
                        var oldProps = current !== null ? current.memoizedProps : newProps;
                        var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.
                        var updatePayload = finishedWork.updateQueue;
                        finishedWork.updateQueue = null;
                        if (updatePayload !== null) try {
                            commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostText:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (finishedWork.stateNode === null) throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    var textInstance = finishedWork.stateNode;
                    var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldText = current !== null ? current.memoizedProps : newText;
                    try {
                        commitTextUpdate(textInstance, oldText, newText);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case HostRoot:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (current !== null) {
                        var prevRootState = current.memoizedState;
                        if (prevRootState.isDehydrated) try {
                            commitHydratedContainer(root.containerInfo);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostPortal:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
            case SuspenseComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                var offscreenFiber = finishedWork.child;
                if (offscreenFiber.flags & Visibility) {
                    var offscreenInstance = offscreenFiber.stateNode;
                    var newState = offscreenFiber.memoizedState;
                    var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can
                    // read it during an event
                    offscreenInstance.isHidden = isHidden;
                    if (isHidden) {
                        var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                        if (!wasHidden) // TODO: Move to passive phase
                        markCommitTimeOfFallback();
                    }
                }
                if (flags & Update) {
                    try {
                        commitSuspenseCallback(finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                    attachSuspenseRetryListeners(finishedWork);
                }
                return;
            case OffscreenComponent:
                var _wasHidden = current !== null && current.memoizedState !== null;
                if (finishedWork.mode & ConcurrentMode) {
                    // Before committing the children, track on the stack whether this
                    // offscreen subtree was already hidden, so that we don't unmount the
                    // effects again.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                    recursivelyTraverseMutationEffects(root, finishedWork);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Visibility) {
                    var _offscreenInstance = finishedWork.stateNode;
                    var _newState = finishedWork.memoizedState;
                    var _isHidden = _newState !== null;
                    var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can
                    // read it during an event
                    _offscreenInstance.isHidden = _isHidden;
                    if (_isHidden) {
                        if (!_wasHidden) {
                            if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                                nextEffect = offscreenBoundary;
                                var offscreenChild = offscreenBoundary.child;
                                while(offscreenChild !== null){
                                    nextEffect = offscreenChild;
                                    disappearLayoutEffects_begin(offscreenChild);
                                    offscreenChild = offscreenChild.sibling;
                                }
                            }
                        }
                    }
                    // TODO: This needs to run whenever there's an insertion or update
                    // inside a hidden Offscreen tree.
                    hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                }
                return;
            case SuspenseListComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) attachSuspenseRetryListeners(finishedWork);
                return;
            case ScopeComponent:
                return;
            default:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
        }
    }
    function commitReconciliationEffects(finishedWork) {
        // Placement effects (insertions, reorders) can be scheduled on any fiber
        // type. They needs to happen after the children effects have fired, but
        // before the effects on this fiber have fired.
        var flags = finishedWork.flags;
        if (flags & Placement) {
            try {
                commitPlacement(finishedWork);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            } // Clear the "placement" from effect tag so that we know that this is
            // inserted, before any life-cycles like componentDidMount gets called.
            // TODO: findDOMNode doesn't rely on this any more but isMounted does
            // and isMounted is deprecated anyway so we should be able to kill this.
            finishedWork.flags &= ~Placement;
        }
        if (flags & Hydrating) finishedWork.flags &= ~Hydrating;
    }
    function commitLayoutEffects(finishedWork, root, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        nextEffect = finishedWork;
        commitLayoutEffects_begin(finishedWork, root, committedLanes);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {
        // Suspense layout effects semantics don't change for legacy roots.
        var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent && isModernRoot) {
                // Keep track of the current Offscreen stack's state.
                var isHidden = fiber.memoizedState !== null;
                var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
                if (newOffscreenSubtreeIsHidden) {
                    // The Offscreen tree is hidden. Skip over its layout effects.
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                } else {
                    // TODO (Offscreen) Also check: subtreeFlags & LayoutMask
                    var current = fiber.alternate;
                    var wasHidden = current !== null && current.memoizedState !== null;
                    var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                    var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden; // Traverse the Offscreen subtree with the current Offscreen as the root.
                    offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                    if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                        // This is the root of a reappearing boundary. Turn its layout effects
                        // back on.
                        nextEffect = fiber;
                        reappearLayoutEffects_begin(fiber);
                    }
                    var child = firstChild;
                    while(child !== null){
                        nextEffect = child;
                        commitLayoutEffects_begin(child, root, committedLanes);
                        child = child.sibling;
                    } // Restore Offscreen state and resume in our-progress traversal.
                    nextEffect = fiber;
                    offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                }
            }
            if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
        }
    }
    function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & LayoutMask) !== NoFlags) {
                var current = fiber.alternate;
                setCurrentFiber(fiber);
                try {
                    commitLayoutEffectOnFiber(root, current, fiber, committedLanes);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function disappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child; // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)
            switch(fiber.tag){
                case FunctionComponent:
                case ForwardRef:
                case MemoComponent:
                case SimpleMemoComponent:
                    if (fiber.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    } finally{
                        recordLayoutEffectDuration(fiber);
                    }
                    else commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    break;
                case ClassComponent:
                    // TODO (Offscreen) Check: flags & RefStatic
                    safelyDetachRef(fiber, fiber.return);
                    var instance = fiber.stateNode;
                    if (typeof instance.componentWillUnmount === "function") safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                    break;
                case HostComponent:
                    safelyDetachRef(fiber, fiber.return);
                    break;
                case OffscreenComponent:
                    // Check if this is a
                    var isHidden = fiber.memoizedState !== null;
                    if (isHidden) {
                        // Nested Offscreen tree is already hidden. Don't disappear
                        // its effects.
                        disappearLayoutEffects_complete(subtreeRoot);
                        continue;
                    }
                    break;
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else disappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function disappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function reappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent) {
                var isHidden = fiber.memoizedState !== null;
                if (isHidden) {
                    // Nested Offscreen tree is still hidden. Don't re-appear its effects.
                    reappearLayoutEffects_complete(subtreeRoot);
                    continue;
                }
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else reappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function reappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect; // TODO (Offscreen) Check: flags & LayoutStatic
            setCurrentFiber(fiber);
            try {
                reappearLayoutEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {
        nextEffect = finishedWork;
        commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);
    }
    function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);
        }
    }
    function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                try {
                    commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    try {
                        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                    } finally{
                        recordPassiveEffectDuration(finishedWork);
                    }
                } else commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                break;
        }
    }
    function commitPassiveUnmountEffects(firstChild) {
        nextEffect = firstChild;
        commitPassiveUnmountEffects_begin();
    }
    function commitPassiveUnmountEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var child = fiber.child;
            if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
                var deletions = fiber.deletions;
                if (deletions !== null) {
                    for(var i = 0; i < deletions.length; i++){
                        var fiberToDelete = deletions[i];
                        nextEffect = fiberToDelete;
                        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                    }
                    // A fiber was deleted from this parent fiber, but it's still part of
                    // the previous (alternate) parent fiber's list of children. Because
                    // children are a linked list, an earlier sibling that's still alive
                    // will be connected to the deleted fiber via its `alternate`:
                    //
                    //   live fiber
                    //   --alternate--> previous live fiber
                    //   --sibling--> deleted fiber
                    //
                    // We can't disconnect `alternate` on nodes that haven't been deleted
                    // yet, but we can disconnect the `sibling` and `child` pointers.
                    var previousFiber = fiber.alternate;
                    if (previousFiber !== null) {
                        var detachedChild = previousFiber.child;
                        if (detachedChild !== null) {
                            previousFiber.child = null;
                            do {
                                var detachedSibling = detachedChild.sibling;
                                detachedChild.sibling = null;
                                detachedChild = detachedSibling;
                            }while (detachedChild !== null);
                        }
                    }
                    nextEffect = fiber;
                }
            }
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffects_complete();
        }
    }
    function commitPassiveUnmountEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                commitPassiveUnmountOnFiber(fiber);
                resetCurrentFiber();
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                    recordPassiveEffectDuration(finishedWork);
                } else commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                break;
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        while(nextEffect !== null){
            var fiber = nextEffect; // Deletion effects fire in parent -> child order
            // TODO: Check if fiber has a PassiveStatic flag
            setCurrentFiber(fiber);
            commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
            resetCurrentFiber();
            var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we
            // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)
            if (child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var sibling = fiber.sibling;
            var returnFiber = fiber.return;
            // Recursively traverse the entire deleted tree and clean up fiber fields.
            // This is more aggressive than ideal, and the long term goal is to only
            // have to detach the deleted tree at the root.
            detachFiberAfterEffects(fiber);
            if (fiber === deletedSubtreeRoot) {
                nextEffect = null;
                return;
            }
            if (sibling !== null) {
                sibling.return = returnFiber;
                nextEffect = sibling;
                return;
            }
            nextEffect = returnFiber;
        }
    }
    function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {
        switch(current.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (current.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                    recordPassiveEffectDuration(current);
                } else commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                break;
        }
    } // TODO: Reuse reappearLayoutEffects traversal here?
    function invokeLayoutEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Layout | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                try {
                    instance.componentDidMount();
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokePassiveEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokeLayoutEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                if (typeof instance.componentWillUnmount === "function") safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                break;
        }
    }
    function invokePassiveEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
        }
    }
    var COMPONENT_TYPE = 0;
    var HAS_PSEUDO_CLASS_TYPE = 1;
    var ROLE_TYPE = 2;
    var TEST_NAME_TYPE = 3;
    var TEXT_TYPE = 4;
    if (typeof Symbol === "function" && Symbol.for) {
        var symbolFor = Symbol.for;
        COMPONENT_TYPE = symbolFor("selector.component");
        HAS_PSEUDO_CLASS_TYPE = symbolFor("selector.has_pseudo_class");
        ROLE_TYPE = symbolFor("selector.role");
        TEST_NAME_TYPE = symbolFor("selector.test_id");
        TEXT_TYPE = symbolFor("selector.text");
    }
    var commitHooks = [];
    function onCommitRoot$1() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
    function isLegacyActEnvironment(fiber) {
        // Legacy mode. We preserve the behavior of React 17's act. It assumes an
        // act environment whenever `jest` is defined, but you can still turn off
        // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly
        // to false.
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest
        var jestIsDefined = typeof jest !== "undefined";
        return jestIsDefined && isReactActEnvironmentGlobal !== false;
    }
    function isConcurrentActEnvironment() {
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : undefined;
        if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) // TODO: Include link to relevant documentation page.
        error("The current testing environment is not configured to support act(...)");
        return isReactActEnvironmentGlobal;
    }
    var ceil = Math.ceil;
    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
    var NoContext = /*             */ 0;
    var BatchedContext = /*               */ 1;
    var RenderContext = /*                */ 2;
    var CommitContext = /*                */ 4;
    var RootInProgress = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5;
    var RootDidNotComplete = 6; // Describes where we are in the React execution stack
    var executionContext = NoContext; // The root we're working on
    var workInProgressRoot = null; // The fiber we're working on
    var workInProgress = null; // The lanes we're rendering
    var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
    // This is a superset of the lanes we started working on at the root. The only
    // case where it's different from `workInProgressRootRenderLanes` is when we
    // enter a subtree that is hidden and needs to be unhidden: Suspense and
    // Offscreen component.
    //
    // Most things in the work loop should deal with workInProgressRootRenderLanes.
    // Most things in begin/complete phases should deal with subtreeRenderLanes.
    var subtreeRenderLanes = NoLanes;
    var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.
    var workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown
    var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
    // slightly different than `renderLanes` because `renderLanes` can change as you
    // enter and exit an Offscreen tree. This value is the combination of all render
    // lanes for the entire render phase.
    var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.
    var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.
    var workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).
    var workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.
    var workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.
    // We will log them once the tree commits.
    var workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.
    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
    // more and prefer CPU suspense heuristics instead.
    var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
    // suspense heuristics and opt out of rendering more content.
    var RENDER_TIMEOUT_MS = 500;
    var workInProgressTransitions = null;
    function resetRenderTimer() {
        workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
    }
    function getRenderTargetTime() {
        return workInProgressRootRenderTargetTime;
    }
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsLanes = NoLanes;
    var pendingPassiveProfilerEffects = [];
    var pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates
    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var isFlushingPassiveEffects = false;
    var didScheduleUpdateDuringPassiveEffects = false;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0;
    var rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their
    // event times as simultaneous, even if the actual clock time has advanced
    // between the first and second call.
    var currentEventTime = NoTimestamp;
    var currentEventTransitionLane = NoLanes;
    var isRunningInsertionEffect = false;
    function getWorkInProgressRoot() {
        return workInProgressRoot;
    }
    function requestEventTime() {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) // We're inside React, so it's fine to read the actual time.
        return now();
         // We're not inside React, so we may be in the middle of a browser event.
        if (currentEventTime !== NoTimestamp) // Use the same start time for all updates until we enter React again.
        return currentEventTime;
         // This is the first update since React yielded. Compute a new start time.
        currentEventTime = now();
        return currentEventTime;
    }
    function requestUpdateLane(fiber) {
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) // This is a render phase update. These are not officially supported. The
        // old behavior is to give this the same "thread" (lanes) as
        // whatever is currently rendering. So if you call `setState` on a component
        // that happens later in the same render, it will flush. Ideally, we want to
        // remove the special case and treat them as if they came from an
        // interleaved event. Regardless, this pattern is not officially supported.
        // This behavior is only a fallback. The flag only exists until we can roll
        // out the setState warning, since existing code might accidentally rely on
        // the current behavior.
        return pickArbitraryLane(workInProgressRootRenderLanes);
        var isTransition = requestCurrentTransition() !== NoTransition;
        if (isTransition) {
            if (ReactCurrentBatchConfig$3.transition !== null) {
                var transition = ReactCurrentBatchConfig$3.transition;
                if (!transition._updatedFibers) transition._updatedFibers = new Set();
                transition._updatedFibers.add(fiber);
            } // The algorithm for assigning an update to a lane should be stable for all
            // updates at the same priority within the same event. To do this, the
            // inputs to the algorithm must be the same.
            //
            // The trick we use is to cache the first of each of these inputs within an
            // event. Then reset the cached values once we can be sure the event is
            // over. Our heuristic for that is whenever we enter a concurrent work loop.
            if (currentEventTransitionLane === NoLane) // All transitions within the same event are assigned the same lane.
            currentEventTransitionLane = claimNextTransitionLane();
            return currentEventTransitionLane;
        } // Updates originating inside certain React methods, like flushSync, have
        // their priority set by tracking it with a context variable.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var updateLane = getCurrentUpdatePriority();
        if (updateLane !== NoLane) return updateLane;
         // This update originated outside React. Ask the host environment for an
        // appropriate priority, based on the type of event.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var eventLane = getCurrentEventPriority();
        return eventLane;
    }
    function requestRetryLane(fiber) {
        // This is a fork of `requestUpdateLane` designed specifically for Suspense
        // "retries" — a special update that attempts to flip a Suspense boundary
        // from its placeholder state to its primary/resolved state.
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        return claimNextRetryLane();
    }
    function scheduleUpdateOnFiber(root, fiber, lane, eventTime) {
        checkForNestedUpdates();
        if (isRunningInsertionEffect) error("useInsertionEffect must not schedule updates.");
        if (isFlushingPassiveEffects) didScheduleUpdateDuringPassiveEffects = true;
        markRootUpdated(root, lane, eventTime);
        if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) // This update was dispatched during the render phase. This is a mistake
        // if the update originates from user space (with the exception of local
        // hook updates, which are handled differently and don't reach this
        // function), but there are some internal React features that use this as
        // an implementation detail, like selective hydration.
        warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase
        else {
            if (isDevToolsPresent) addFiberToLanesMap(root, fiber, lane);
            warnIfUpdatesNotWrappedWithActDEV(fiber);
            if (root === workInProgressRoot) {
                // Received an update to a tree that's in the middle of rendering. Mark
                // that there was an interleaved update work on this root. Unless the
                // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
                // phase update. In that case, we don't treat render phase updates as if
                // they were interleaved, for backwards compat reasons.
                if ((executionContext & RenderContext) === NoContext) workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
                if (workInProgressRootExitStatus === RootSuspendedWithDelay) // The root already suspended with a delay, which means this render
                // definitely won't finish. Since we have a new update, let's mark it as
                // suspended now, right before marking the incoming update. This has the
                // effect of interrupting the current render and switching to the update.
                // TODO: Make sure this doesn't override pings that happen while we've
                // already started rendering.
                markRootSuspended$1(root, workInProgressRootRenderLanes);
            }
            ensureRootIsScheduled(root, eventTime);
            if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
                // Flush the synchronous work now, unless we're already working or inside
                // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
                // scheduleCallbackForFiber to preserve the ability to schedule a callback
                // without immediately flushing it. We only do this for user-initiated
                // updates, to preserve historical behavior of legacy mode.
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function scheduleInitialHydrationOnRoot(root, lane, eventTime) {
        // This is a special fork of scheduleUpdateOnFiber that is only used to
        // schedule the initial hydration of a root that has just been created. Most
        // of the stuff in scheduleUpdateOnFiber can be skipped.
        //
        // The main reason for this separate path, though, is to distinguish the
        // initial children from subsequent updates. In fully client-rendered roots
        // (createRoot instead of hydrateRoot), all top-level renders are modeled as
        // updates, but hydration roots are special because the initial render must
        // match what was rendered on the server.
        var current = root.current;
        current.lanes = lane;
        markRootUpdated(root, lane, eventTime);
        ensureRootIsScheduled(root, eventTime);
    }
    function isUnsafeClassRenderPhaseUpdate(fiber) {
        // Check if this is a render phase update. Only called by class components,
        // which special (deprecated) behavior for UNSAFE_componentWillReceive props.
        return(// decided not to enable it.
        (executionContext & RenderContext) !== NoContext);
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the priority
    // of the existing task is the same as the priority of the next level that the
    // root has work on. This function is called on every update, and right before
    // exiting a task.
    function ensureRootIsScheduled(root, currentTime) {
        var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
        // expired so we know to work on those next.
        markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.
        var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (nextLanes === NoLanes) {
            // Special case: There's nothing to work on.
            if (existingCallbackNode !== null) cancelCallback$1(existingCallbackNode);
            root.callbackNode = null;
            root.callbackPriority = NoLane;
            return;
        } // We use the highest priority lane to represent the priority of the callback.
        var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.
        var existingCallbackPriority = root.callbackPriority;
        if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a
        // Scheduler task, rather than an `act` task, cancel it and re-scheduled
        // on the `act` queue.
        !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
            // If we're going to re-use an existing task, it needs to exist.
            // Assume that discrete update microtasks are non-cancellable and null.
            // TODO: Temporary until we confirm this warning is not fired.
            if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) error("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
            return;
        }
        if (existingCallbackNode != null) // Cancel the existing callback. We'll schedule a new one below.
        cancelCallback$1(existingCallbackNode);
         // Schedule a new callback.
        var newCallbackNode;
        if (newCallbackPriority === SyncLane) {
            // Special case: Sync React callbacks are scheduled on a special
            // internal queue
            if (root.tag === LegacyRoot) {
                if (ReactCurrentActQueue$1.isBatchingLegacy !== null) ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
                scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));
            } else scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
            // Flush the queue in a microtask.
            if (ReactCurrentActQueue$1.current !== null) // Inside `act`, use our internal `act` queue so that these get flushed
            // at the end of the current scope even when using the sync version
            // of `act`.
            ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
            else scheduleMicrotask(function() {
                // In Safari, appending an iframe forces microtasks to run.
                // https://github.com/facebook/react/issues/22459
                // We don't support running callbacks in the middle of render
                // or commit so we need to check against that.
                if ((executionContext & (RenderContext | CommitContext)) === NoContext) // Note that this would still prematurely flush the callbacks
                // if this happens outside render or commit phase (e.g. in an event).
                flushSyncCallbacks();
            });
            newCallbackNode = null;
        } else {
            var schedulerPriorityLevel;
            switch(lanesToEventPriority(nextLanes)){
                case DiscreteEventPriority:
                    schedulerPriorityLevel = ImmediatePriority;
                    break;
                case ContinuousEventPriority:
                    schedulerPriorityLevel = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    schedulerPriorityLevel = NormalPriority;
                    break;
                case IdleEventPriority:
                    schedulerPriorityLevel = IdlePriority;
                    break;
                default:
                    schedulerPriorityLevel = NormalPriority;
                    break;
            }
            newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
        }
        root.callbackPriority = newCallbackPriority;
        root.callbackNode = newCallbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.
    function performConcurrentWorkOnRoot(root, didTimeout) {
        resetNestedUpdateFlag();
        // event time. The next update will compute a new event time.
        currentEventTime = NoTimestamp;
        currentEventTransitionLane = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Should not already be working.");
         // Flush any pending passive effects before deciding which lanes to work on,
        // in case they schedule additional work.
        var originalCallbackNode = root.callbackNode;
        var didFlushPassiveEffects = flushPassiveEffects();
        if (didFlushPassiveEffects) {
            // Something in the passive effect phase may have canceled the current task.
            // Check if the task node for this root was changed.
            if (root.callbackNode !== originalCallbackNode) // The current task was canceled. Exit. We don't need to call
            // `ensureRootIsScheduled` because the check above implies either that
            // there's a new task, or that there's no remaining work on this root.
            return null;
        } // Determine the next lanes to work on, using the fields stored
        // on the root.
        var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (lanes === NoLanes) // Defensive coding. This is never expected to happen.
        return null;
         // We disable time-slicing in some cases: if the work has been CPU-bound
        // for too long ("expired" work, to prevent starvation), or we're in
        // sync-updates-by-default mode.
        // TODO: We only check `didTimeout` defensively, to account for a Scheduler
        // bug we're still investigating. Once the bug in Scheduler is fixed,
        // we can remove this, since we track expiration ourselves.
        var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && !didTimeout;
        var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);
        if (exitStatus !== RootInProgress) {
            if (exitStatus === RootErrored) {
                // If something threw an error, try rendering one more time. We'll
                // render synchronously to block concurrent data mutations, and we'll
                // includes all pending updates are included. If it still fails after
                // the second attempt, we'll give up and commit the resulting tree.
                var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                if (errorRetryLanes !== NoLanes) {
                    lanes = errorRetryLanes;
                    exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
                }
            }
            if (exitStatus === RootFatalErrored) {
                var fatalError = workInProgressRootFatalError;
                prepareFreshStack(root, NoLanes);
                markRootSuspended$1(root, lanes);
                ensureRootIsScheduled(root, now());
                throw fatalError;
            }
            if (exitStatus === RootDidNotComplete) // The render unwound without completing the tree. This happens in special
            // cases where need to exit the current render without producing a
            // consistent tree or committing.
            //
            // This should only happen during a concurrent render, not a discrete or
            // synchronous update. We should have already checked for this when we
            // unwound the stack.
            markRootSuspended$1(root, lanes);
            else {
                // The render completed.
                // Check if this render may have yielded to a concurrent event, and if so,
                // confirm that any newly rendered stores are consistent.
                // TODO: It's possible that even a concurrent render may never have yielded
                // to the main thread, if it was fast enough, or if it expired. We could
                // skip the consistency check in that case, too.
                var renderWasConcurrent = !includesBlockingLane(root, lanes);
                var finishedWork = root.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                    // A store was mutated in an interleaved event. Render again,
                    // synchronously, to block further mutations.
                    exitStatus = renderRootSync(root, lanes); // We need to check again if something threw
                    if (exitStatus === RootErrored) {
                        var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                        if (_errorRetryLanes !== NoLanes) {
                            lanes = _errorRetryLanes;
                            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any
                        // concurrent events.
                        }
                    }
                    if (exitStatus === RootFatalErrored) {
                        var _fatalError = workInProgressRootFatalError;
                        prepareFreshStack(root, NoLanes);
                        markRootSuspended$1(root, lanes);
                        ensureRootIsScheduled(root, now());
                        throw _fatalError;
                    }
                } // We now have a consistent tree. The next step is either to commit it,
                // or, if something suspended, wait to commit it after a timeout.
                root.finishedWork = finishedWork;
                root.finishedLanes = lanes;
                finishConcurrentRender(root, exitStatus, lanes);
            }
        }
        ensureRootIsScheduled(root, now());
        if (root.callbackNode === originalCallbackNode) // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
        return null;
    }
    function recoverFromConcurrentError(root, errorRetryLanes) {
        // If an error occurred during hydration, discard server response and fall
        // back to client side render.
        // Before rendering again, save the errors from the previous attempt.
        var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
        if (isRootDehydrated(root)) {
            // The shell failed to hydrate. Set a flag to force a client rendering
            // during the next attempt. To do this, we call prepareFreshStack now
            // to create the root work-in-progress fiber. This is a bit weird in terms
            // of factoring, because it relies on renderRootSync not calling
            // prepareFreshStack again in the call below, which happens because the
            // root and lanes haven't changed.
            //
            // TODO: I think what we should do is set ForceClientRender inside
            // throwException, like we do for nested Suspense boundaries. The reason
            // it's here instead is so we can switch to the synchronous work loop, too.
            // Something to consider for a future refactor.
            var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);
            rootWorkInProgress.flags |= ForceClientRender;
            errorHydratingContainer(root.containerInfo);
        }
        var exitStatus = renderRootSync(root, errorRetryLanes);
        if (exitStatus !== RootErrored) {
            // Successfully finished rendering on retry
            // The errors from the failed first attempt have been recovered. Add
            // them to the collection of recoverable errors. We'll log them in the
            // commit phase.
            var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
            workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors
            // from the first attempt, to preserve the causal sequence.
            if (errorsFromSecondAttempt !== null) queueRecoverableErrors(errorsFromSecondAttempt);
        }
        return exitStatus;
    }
    function queueRecoverableErrors(errors) {
        if (workInProgressRootRecoverableErrors === null) workInProgressRootRecoverableErrors = errors;
        else workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
    }
    function finishConcurrentRender(root, exitStatus, lanes) {
        switch(exitStatus){
            case RootInProgress:
            case RootFatalErrored:
                throw new Error("Root did not complete. This is a bug in React.");
            // Flow knows about invariant, so it complains if I add a break
            // statement, but eslint doesn't know about invariant, so it complains
            // if I do. eslint-disable-next-line no-fallthrough
            case RootErrored:
                // We should have already attempted to retry this tree. If we reached
                // this point, it errored again. Commit it.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspended:
                markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
                // should immediately commit it or wait a bit.
                if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
                !shouldForceFlushFallbacksInDEV()) {
                    // This render only included retries, no updates. Throttle committing
                    // retries so that we don't show too many loading states too quickly.
                    var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.
                    if (msUntilTimeout > 10) {
                        var nextLanes = getNextLanes(root, NoLanes);
                        if (nextLanes !== NoLanes) break;
                        var suspendedLanes = root.suspendedLanes;
                        if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                            // We should prefer to render the fallback of at the last
                            // suspended level. Ping the last suspended level to try
                            // rendering it again.
                            // FIXME: What if the suspended lanes are Idle? Should not restart.
                            var eventTime = requestEventTime();
                            markRootPinged(root, suspendedLanes);
                            break;
                        } // The render is suspended, it hasn't timed out, and there's no
                        // lower priority work to do. Instead of committing the fallback
                        // immediately, wait for more data to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                        break;
                    }
                } // The work expired. Commit immediately.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspendedWithDelay:
                markRootSuspended$1(root, lanes);
                if (includesOnlyTransitions(lanes)) break;
                if (!shouldForceFlushFallbacksInDEV()) {
                    // This is not a transition, but we did trigger an avoided state.
                    // Schedule a placeholder to display after a short delay, using the Just
                    // Noticeable Difference.
                    // TODO: Is the JND optimization worth the added complexity? If this is
                    // the only reason we track the event time, then probably not.
                    // Consider removing.
                    var mostRecentEventTime = getMostRecentEventTime(root, lanes);
                    var eventTimeMs = mostRecentEventTime;
                    var timeElapsedMs = now() - eventTimeMs;
                    var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.
                    if (_msUntilTimeout > 10) {
                        // Instead of committing the fallback immediately, wait for more data
                        // to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                        break;
                    }
                } // Commit the placeholder.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootCompleted:
                // The work completed. Ready to commit.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            default:
                throw new Error("Unknown root exit status.");
        }
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
        // Search the rendered tree for external store reads, and check whether the
        // stores were mutated in a concurrent event. Intentionally using an iterative
        // loop instead of recursion so we can exit early.
        var node = finishedWork;
        while(true){
            if (node.flags & StoreConsistency) {
                var updateQueue = node.updateQueue;
                if (updateQueue !== null) {
                    var checks = updateQueue.stores;
                    if (checks !== null) for(var i = 0; i < checks.length; i++){
                        var check = checks[i];
                        var getSnapshot = check.getSnapshot;
                        var renderedValue = check.value;
                        try {
                            if (!objectIs(getSnapshot(), renderedValue)) // Found an inconsistent store.
                            return false;
                        } catch (error) {
                            // If `getSnapshot` throws, return `false`. This will schedule
                            // a re-render, and the error will be rethrown during render.
                            return false;
                        }
                    }
                }
            }
            var child = node.child;
            if (node.subtreeFlags & StoreConsistency && child !== null) {
                child.return = node;
                node = child;
                continue;
            }
            if (node === finishedWork) return true;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return true;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        } // Flow doesn't know this is unreachable, but eslint does
        // eslint-disable-next-line no-unreachable
        return true;
    }
    function markRootSuspended$1(root, suspendedLanes) {
        // When suspending, we should always exclude lanes that were pinged or (more
        // rarely, since we try to avoid it) updated during the render phase.
        // TODO: Lol maybe there's a better way to factor this besides this
        // obnoxiously named function :)
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
        markRootSuspended(root, suspendedLanes);
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler
    function performSyncWorkOnRoot(root) {
        syncNestedUpdateFlag();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Should not already be working.");
        flushPassiveEffects();
        var lanes = getNextLanes(root, NoLanes);
        if (!includesSomeLane(lanes, SyncLane)) {
            // There's no remaining sync work left.
            ensureRootIsScheduled(root, now());
            return null;
        }
        var exitStatus = renderRootSync(root, lanes);
        if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
            // If something threw an error, try rendering one more time. We'll render
            // synchronously to block concurrent data mutations, and we'll includes
            // all pending updates are included. If it still fails after the second
            // attempt, we'll give up and commit the resulting tree.
            var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
            if (errorRetryLanes !== NoLanes) {
                lanes = errorRetryLanes;
                exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
            }
        }
        if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root, NoLanes);
            markRootSuspended$1(root, lanes);
            ensureRootIsScheduled(root, now());
            throw fatalError;
        }
        if (exitStatus === RootDidNotComplete) throw new Error("Root did not complete. This is a bug in React.");
         // We now have a consistent tree. Because this is a sync render, we
        // will commit it even if something suspended.
        var finishedWork = root.current.alternate;
        root.finishedWork = finishedWork;
        root.finishedLanes = lanes;
        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next
        // pending level.
        ensureRootIsScheduled(root, now());
        return null;
    }
    function flushRoot(root, lanes) {
        if (lanes !== NoLanes) {
            markRootEntangled(root, mergeLanes(lanes, SyncLane));
            ensureRootIsScheduled(root, now());
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                resetRenderTimer();
                flushSyncCallbacks();
            }
        }
    }
    function batchedUpdates$1(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer
            // most batchedUpdates-like method.
            if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function discreteUpdates(fn, a, b, c, d) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            return fn(a, b, c, d);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            if (executionContext === NoContext) resetRenderTimer();
        }
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync(fn) {
        // In legacy mode, we flush pending passive effects at the beginning of the
        // next event, not at the end of the previous one.
        if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) flushPassiveEffects();
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        var previousPriority = getCurrentUpdatePriority();
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            if (fn) return fn();
            else return undefined;
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
            // Note that this will happen even if batchedUpdates is higher up
            // the stack.
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) flushSyncCallbacks();
        }
    }
    function isAlreadyRendering() {
        // Used by the renderer to print a warning if certain APIs are called from
        // the wrong context.
        return (executionContext & (RenderContext | CommitContext)) !== NoContext;
    }
    function pushRenderLanes(fiber, lanes) {
        push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
        subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
        workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
    }
    function popRenderLanes(fiber) {
        subtreeRenderLanes = subtreeRenderLanesCursor.current;
        pop(subtreeRenderLanesCursor, fiber);
    }
    function prepareFreshStack(root, lanes) {
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        var timeoutHandle = root.timeoutHandle;
        if (timeoutHandle !== noTimeout) {
            // The root previous suspended and scheduled a timeout to commit a fallback
            // state. Now that we have additional work, cancel the timeout.
            root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
            cancelTimeout(timeoutHandle);
        }
        if (workInProgress !== null) {
            var interruptedWork = workInProgress.return;
            while(interruptedWork !== null){
                var current = interruptedWork.alternate;
                unwindInterruptedWork(current, interruptedWork);
                interruptedWork = interruptedWork.return;
            }
        }
        workInProgressRoot = root;
        var rootWorkInProgress = createWorkInProgress(root.current, null);
        workInProgress = rootWorkInProgress;
        workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
        workInProgressRootExitStatus = RootInProgress;
        workInProgressRootFatalError = null;
        workInProgressRootSkippedLanes = NoLanes;
        workInProgressRootInterleavedUpdatedLanes = NoLanes;
        workInProgressRootPingedLanes = NoLanes;
        workInProgressRootConcurrentErrors = null;
        workInProgressRootRecoverableErrors = null;
        finishQueueingConcurrentUpdates();
        ReactStrictModeWarnings.discardPendingWarnings();
        return rootWorkInProgress;
    }
    function handleError(root, thrownValue) {
        do {
            var erroredWork = workInProgress;
            try {
                // Reset module-level state that was set during the render phase.
                resetContextDependencies();
                resetHooksAfterThrow();
                resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
                // separate issue. Write a regression test using string refs.
                ReactCurrentOwner$2.current = null;
                if (erroredWork === null || erroredWork.return === null) {
                    // Expected to be working on a non-root fiber. This is a fatal error
                    // because there's no ancestor that can handle it; the root is
                    // supposed to capture all errors that weren't caught by an error
                    // boundary.
                    workInProgressRootExitStatus = RootFatalErrored;
                    workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
                    // sibling, or the parent if there are no siblings. But since the root
                    // has no siblings nor a parent, we set it to null. Usually this is
                    // handled by `completeUnitOfWork` or `unwindWork`, but since we're
                    // intentionally not calling those, we need set it here.
                    // TODO: Consider calling `unwindWork` to pop the contexts.
                    workInProgress = null;
                    return;
                }
                if (enableProfilerTimer && erroredWork.mode & ProfileMode) // Record the time spent rendering before an error was thrown. This
                // avoids inaccurate Profiler durations in the case of a
                // suspended render.
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                if (enableSchedulingProfiler) {
                    markComponentRenderStopped();
                    if (thrownValue !== null && typeof thrownValue === "object" && typeof thrownValue.then === "function") {
                        var wakeable = thrownValue;
                        markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                    } else markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                }
                throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
                // Something in the return path also threw.
                thrownValue = yetAnotherThrownValue;
                if (workInProgress === erroredWork && erroredWork !== null) {
                    // If this boundary has already errored, then we had trouble processing
                    // the error. Bubble it to the next boundary.
                    erroredWork = erroredWork.return;
                    workInProgress = erroredWork;
                } else erroredWork = workInProgress;
                continue;
            } // Return to the normal work loop.
            return;
        }while (true);
    }
    function pushDispatcher() {
        var prevDispatcher = ReactCurrentDispatcher$2.current;
        ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
        if (prevDispatcher === null) // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
        else return prevDispatcher;
    }
    function popDispatcher(prevDispatcher) {
        ReactCurrentDispatcher$2.current = prevDispatcher;
    }
    function markCommitTimeOfFallback() {
        globalMostRecentFallbackTime = now();
    }
    function markSkippedUpdateLanes(lane) {
        workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
    }
    function renderDidSuspend() {
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootSuspended;
    }
    function renderDidSuspendDelayIfPossible() {
        if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) workInProgressRootExitStatus = RootSuspendedWithDelay;
         // Check if there are updates that we skipped tree that might have unblocked
        // this render.
        if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) // Mark the current render as suspended so that we switch to working on
        // the updates that were skipped. Usually we only suspend at the end of
        // the render phase.
        // TODO: We should probably always mark the root as suspended immediately
        // (inside this function), since by suspending at the end of the render
        // phase introduces a potential mistake where we suspend lanes that were
        // pinged or updated while we were rendering.
        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
    }
    function renderDidError(error) {
        if (workInProgressRootExitStatus !== RootSuspendedWithDelay) workInProgressRootExitStatus = RootErrored;
        if (workInProgressRootConcurrentErrors === null) workInProgressRootConcurrentErrors = [
            error
        ];
        else workInProgressRootConcurrentErrors.push(error);
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.
    function renderHasNotSuspendedYet() {
        // If something errored or completed, we can't really be sure,
        // so those are false.
        return workInProgressRootExitStatus === RootInProgress;
    }
    function renderRootSync(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopSync();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        executionContext = prevExecutionContext;
        popDispatcher(prevDispatcher);
        if (workInProgress !== null) // This is a sync render, so we should have finished the whole tree.
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
        markRenderStopped();
        workInProgressRoot = null;
        workInProgressRootRenderLanes = NoLanes;
        return workInProgressRootExitStatus;
    } // The work loop is an extremely hot path. Tell Closure not to inline it.
    /** @noinline */ function workLoopSync() {
        // Already timed out, so perform work without checking if we need to yield.
        while(workInProgress !== null)performUnitOfWork(workInProgress);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            resetRenderTimer();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopConcurrent();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        popDispatcher(prevDispatcher);
        executionContext = prevExecutionContext;
        if (workInProgress !== null) {
            markRenderYielded();
            return RootInProgress;
        } else {
            markRenderStopped();
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes; // Return the final exit status.
            return workInProgressRootExitStatus;
        }
    }
    /** @noinline */ function workLoopConcurrent() {
        // Perform work until Scheduler asks us to yield
        while(workInProgress !== null && !shouldYield())performUnitOfWork(workInProgress);
    }
    function performUnitOfWork(unitOfWork) {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current = unitOfWork.alternate;
        setCurrentFiber(unitOfWork);
        var next;
        if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
        } else next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
        resetCurrentFiber();
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        if (next === null) // If this doesn't spawn new work, complete the current work.
        completeUnitOfWork(unitOfWork);
        else workInProgress = next;
        ReactCurrentOwner$2.current = null;
    }
    function completeUnitOfWork(unitOfWork) {
        // Attempt to complete the current unit of work, then move to the next
        // sibling. If there are no more siblings, return to the parent fiber.
        var completedWork = unitOfWork;
        do {
            // The current, flushed, state of this fiber is the alternate. Ideally
            // nothing should rely on this, but relying on it here means that we don't
            // need an additional field on the work in progress.
            var current = completedWork.alternate;
            var returnFiber = completedWork.return; // Check if the work completed or if something threw.
            if ((completedWork.flags & Incomplete) === NoFlags) {
                setCurrentFiber(completedWork);
                var next = void 0;
                if ((completedWork.mode & ProfileMode) === NoMode) next = completeWork(current, completedWork, subtreeRenderLanes);
                else {
                    startProfilerTimer(completedWork);
                    next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                }
                resetCurrentFiber();
                if (next !== null) {
                    // Completing this fiber spawned new work. Work on that next.
                    workInProgress = next;
                    return;
                }
            } else {
                // This fiber did not complete because something threw. Pop values off
                // the stack without entering the complete phase. If this is a boundary,
                // capture values if possible.
                var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.
                if (_next !== null) {
                    // If completing this work spawned new work, do that next. We'll come
                    // back here again.
                    // Since we're restarting, remove anything that is not a host effect
                    // from the effect tag.
                    _next.flags &= HostEffectMask;
                    workInProgress = _next;
                    return;
                }
                if ((completedWork.mode & ProfileMode) !== NoMode) {
                    // Record the render duration for the fiber that errored.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.
                    var actualDuration = completedWork.actualDuration;
                    var child = completedWork.child;
                    while(child !== null){
                        actualDuration += child.actualDuration;
                        child = child.sibling;
                    }
                    completedWork.actualDuration = actualDuration;
                }
                if (returnFiber !== null) {
                    // Mark the parent fiber as incomplete and clear its subtree flags.
                    returnFiber.flags |= Incomplete;
                    returnFiber.subtreeFlags = NoFlags;
                    returnFiber.deletions = null;
                } else {
                    // We've unwound all the way to the root.
                    workInProgressRootExitStatus = RootDidNotComplete;
                    workInProgress = null;
                    return;
                }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
                // If there is more work to do in this returnFiber, do that next.
                workInProgress = siblingFiber;
                return;
            } // Otherwise, return to the parent
            completedWork = returnFiber; // Update the next thing we're working on in case something throws.
            workInProgress = completedWork;
        }while (completedWork !== null); // We've reached the root.
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootCompleted;
    }
    function commitRoot(root, recoverableErrors, transitions) {
        // TODO: This no longer makes any sense. We already wrap the mutation and
        // layout phases. Should be able to remove.
        var previousUpdateLanePriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);
        } finally{
            ReactCurrentBatchConfig$3.transition = prevTransition;
            setCurrentUpdatePriority(previousUpdateLanePriority);
        }
        return null;
    }
    function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {
        do // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
        // means `flushPassiveEffects` will sometimes result in additional
        // passive effects. So we need to keep flushing in a loop until there are
        // no more pending effects.
        // TODO: Might be better if `flushPassiveEffects` did not automatically
        // flush synchronous work at the end, to avoid factoring hazards like this.
        flushPassiveEffects();
        while (rootWithPendingPassiveEffects !== null);
        flushRenderPhaseStrictModeWarningsInDEV();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Should not already be working.");
        var finishedWork = root.finishedWork;
        var lanes = root.finishedLanes;
        markCommitStarted(lanes);
        if (finishedWork === null) {
            markCommitStopped();
            return null;
        } else if (lanes === NoLanes) error("root.finishedLanes should not be empty during a commit. This is a bug in React.");
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        if (finishedWork === root.current) throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
         // commitRoot never returns a continuation; it always finishes synchronously.
        // So we can clear these now to allow a new callback to be scheduled.
        root.callbackNode = null;
        root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first
        // pending time is whatever is left on the root fiber.
        var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
        markRootFinished(root, remainingLanes);
        if (root === workInProgressRoot) {
            // We can reset these now that they are finished.
            workInProgressRoot = null;
            workInProgress = null;
            workInProgressRootRenderLanes = NoLanes;
        } // If there are pending passive effects, schedule a callback to process them.
        // Do this as early as possible, so it is queued before anything else that
        // might get scheduled in the commit phase. (See #16714.)
        // TODO: Delete all other places that schedule the passive effect callback
        // They're redundant.
        if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
            if (!rootDoesHavePassiveEffects) {
                rootDoesHavePassiveEffects = true;
                // to store it in pendingPassiveTransitions until they get processed
                // We need to pass this through as an argument to commitRoot
                // because workInProgressTransitions might have changed between
                // the previous render and commit if we throttle the commit
                // with setTimeout
                pendingPassiveTransitions = transitions;
                scheduleCallback$1(NormalPriority, function() {
                    flushPassiveEffects(); // This render triggered passive effects: release the root cache pool
                    // *after* passive effects fire to avoid freeing a cache pool that may
                    // be referenced by a node in the tree (HostRoot, Cache boundary etc)
                    return null;
                });
            }
        } // Check if there are any effects in the whole tree.
        // TODO: This is left over from the effect list implementation, where we had
        // to check for the existence of `firstEffect` to satisfy Flow. I think the
        // only other reason this optimization exists is because it affects profiling.
        // Reconsider whether this is necessary.
        var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        if (subtreeHasEffects || rootHasEffect) {
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            ReactCurrentBatchConfig$3.transition = null;
            var previousPriority = getCurrentUpdatePriority();
            setCurrentUpdatePriority(DiscreteEventPriority);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext; // Reset this to null before calling lifecycles
            ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
            // of the effect list for each phase: all mutation effects come before all
            // layout effects, and so on.
            // The first phase a "before mutation" phase. We use this phase to read the
            // state of the host tree right before we mutate it. This is where
            // getSnapshotBeforeUpdate is called.
            var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);
            // Mark the current commit time to be shared by all Profilers in this
            // batch. This enables them to be grouped later.
            recordCommitTime();
            commitMutationEffects(root, finishedWork, lanes);
            resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
            // the mutation phase, so that the previous tree is still current during
            // componentWillUnmount, but before the layout phase, so that the finished
            // work is current during componentDidMount/Update.
            root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
            markLayoutEffectsStarted(lanes);
            commitLayoutEffects(finishedWork, root, lanes);
            markLayoutEffectsStopped();
            // opportunity to paint.
            requestPaint();
            executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
        } else {
            // No effects.
            root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
            recordCommitTime();
        }
        var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
        if (rootDoesHavePassiveEffects) {
            // This commit has passive effects. Stash a reference to them. But don't
            // schedule a callback until after flushing layout work.
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root;
            pendingPassiveEffectsLanes = lanes;
        } else {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
        } // Read this again, since an effect might have updated it
        remainingLanes = root.pendingLanes; // Check if there's remaining work on this root
        // TODO: This is part of the `componentDidCatch` implementation. Its purpose
        // is to detect whether something might have called setState inside
        // `componentDidCatch`. The mechanism is known to be flawed because `setState`
        // inside `componentDidCatch` is itself flawed — that's why we recommend
        // `getDerivedStateFromError` instead. However, it could be improved by
        // checking if remainingLanes includes Sync work, instead of whether there's
        // any work remaining at all (which would also include stuff like Suspense
        // retries or transitions). It's been like this for a while, though, so fixing
        // it probably isn't that urgent.
        if (remainingLanes === NoLanes) // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
        if (!rootDidHavePassiveEffects) commitDoubleInvokeEffectsInDEV(root.current, false);
        onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
        if (isDevToolsPresent) root.memoizedUpdaters.clear();
        onCommitRoot$1();
        // additional work on this root is scheduled.
        ensureRootIsScheduled(root, now());
        if (recoverableErrors !== null) {
            // There were errors during this render, but recovered from them without
            // needing to surface it to the UI. We log them here.
            var onRecoverableError = root.onRecoverableError;
            for(var i = 0; i < recoverableErrors.length; i++){
                var recoverableError = recoverableErrors[i];
                var componentStack = recoverableError.stack;
                var digest = recoverableError.digest;
                onRecoverableError(recoverableError.value, {
                    componentStack: componentStack,
                    digest: digest
                });
            }
        }
        if (hasUncaughtError) {
            hasUncaughtError = false;
            var error$1 = firstUncaughtError;
            firstUncaughtError = null;
            throw error$1;
        } // If the passive effects are the result of a discrete render, flush them
        // synchronously at the end of the current task so that the result is
        // immediately observable. Otherwise, we assume that they are not
        // order-dependent and do not need to be observed by external systems, so we
        // can wait until after paint.
        // TODO: We can optimize this by not scheduling the callback earlier. Since we
        // currently schedule the callback in multiple places, will wait until those
        // are consolidated.
        if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) flushPassiveEffects();
         // Read this again, since a passive effect might have updated it
        remainingLanes = root.pendingLanes;
        if (includesSomeLane(remainingLanes, SyncLane)) {
            markNestedUpdateScheduled();
            // finishing. If there are too many, it indicates an infinite update loop.
            if (root === rootWithNestedUpdates) nestedUpdateCount++;
            else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root;
            }
        } else nestedUpdateCount = 0;
         // If layout work was scheduled, flush it now.
        flushSyncCallbacks();
        markCommitStopped();
        return null;
    }
    function flushPassiveEffects() {
        // Returns whether passive effects were flushed.
        // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should
        // probably just combine the two functions. I believe they were only separate
        // in the first place because we used to wrap it with
        // `Scheduler.runWithPriority`, which accepts a function. But now we track the
        // priority within React itself, so we can mutate the variable directly.
        if (rootWithPendingPassiveEffects !== null) {
            var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
            var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            var previousPriority = getCurrentUpdatePriority();
            try {
                ReactCurrentBatchConfig$3.transition = null;
                setCurrentUpdatePriority(priority);
                return flushPassiveEffectsImpl();
            } finally{
                setCurrentUpdatePriority(previousPriority);
                ReactCurrentBatchConfig$3.transition = prevTransition; // Once passive effects have run for the tree - giving components a
            }
        }
        return false;
    }
    function enqueuePendingPassiveProfilerEffect(fiber) {
        pendingPassiveProfilerEffects.push(fiber);
        if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
            });
        }
    }
    function flushPassiveEffectsImpl() {
        if (rootWithPendingPassiveEffects === null) return false;
         // Cache and clear the transitions flag
        var transitions = pendingPassiveTransitions;
        pendingPassiveTransitions = null;
        var root = rootWithPendingPassiveEffects;
        var lanes = pendingPassiveEffectsLanes;
        rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.
        // Figure out why and fix it. It's not causing any known issues (probably
        // because it's only used for profiling), but it's a refactor hazard.
        pendingPassiveEffectsLanes = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error("Cannot flush passive effects while already rendering.");
        isFlushingPassiveEffects = true;
        didScheduleUpdateDuringPassiveEffects = false;
        markPassiveEffectsStarted(lanes);
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        commitPassiveUnmountEffects(root.current);
        commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects
        var profilerEffects = pendingPassiveProfilerEffects;
        pendingPassiveProfilerEffects = [];
        for(var i = 0; i < profilerEffects.length; i++){
            var _fiber = profilerEffects[i];
            commitPassiveEffectDurations(root, _fiber);
        }
        markPassiveEffectsStopped();
        commitDoubleInvokeEffectsInDEV(root.current, true);
        executionContext = prevExecutionContext;
        flushSyncCallbacks();
        // If additional passive effects were scheduled, increment a counter. If this
        // exceeds the limit, we'll fire a warning.
        if (didScheduleUpdateDuringPassiveEffects) {
            if (root === rootWithPassiveNestedUpdates) nestedPassiveUpdateCount++;
            else {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = root;
            }
        } else nestedPassiveUpdateCount = 0;
        isFlushingPassiveEffects = false;
        didScheduleUpdateDuringPassiveEffects = false;
        onPostCommitRoot(root);
        var stateNode = root.current.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        return true;
    }
    function isAlreadyFailedLegacyErrorBoundary(instance) {
        return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }
    function markLegacyErrorBoundaryAsFailed(instance) {
        if (legacyErrorBoundariesThatAlreadyFailed === null) legacyErrorBoundariesThatAlreadyFailed = new Set([
            instance
        ]);
        else legacyErrorBoundariesThatAlreadyFailed.add(instance);
    }
    function prepareToThrowUncaughtError(error) {
        if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error;
        }
    }
    var onUncaughtError = prepareToThrowUncaughtError;
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        var errorInfo = createCapturedValueAtFiber(error, sourceFiber);
        var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
        var root = enqueueUpdate(rootFiber, update, SyncLane);
        var eventTime = requestEventTime();
        if (root !== null) {
            markRootUpdated(root, SyncLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
        reportUncaughtErrorInDEV(error$1);
        setIsRunningInsertionEffect(false);
        if (sourceFiber.tag === HostRoot) {
            // Error was thrown at the root. There is no parent, so the root
            // itself should capture it.
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
            return;
        }
        var fiber = null;
        fiber = nearestMountedAncestor;
        while(fiber !== null){
            if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
                return;
            } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === "function" || typeof instance.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                    var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
                    var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                    var root = enqueueUpdate(fiber, update, SyncLane);
                    var eventTime = requestEventTime();
                    if (root !== null) {
                        markRootUpdated(root, SyncLane, eventTime);
                        ensureRootIsScheduled(root, eventTime);
                    }
                    return;
                }
            }
            fiber = fiber.return;
        }
        // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning
        // will fire for errors that are thrown by destroy functions inside deleted
        // trees. What it should instead do is propagate the error to the parent of
        // the deleted tree. In the meantime, do not add this warning to the
        // allowlist; this is only for our internal use.
        error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        if (pingCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(wakeable);
        var eventTime = requestEventTime();
        markRootPinged(root, pingedLanes);
        warnIfSuspenseResolutionNotWrappedWithActDEV(root);
        if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            // Received a ping at the same priority level at which we're currently
            // rendering. We might want to restart this render. This should mirror
            // the logic of whether or not a root suspends once it completes.
            // TODO: If we're rendering sync either due to Sync, Batched or expired,
            // we should probably never restart.
            // If we're suspended with delay, or if it's a retry, we'll always suspend
            // so we can always restart.
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) // Restart from the root.
            prepareFreshStack(root, NoLanes);
            else // Even though we can't restart right now, we might get an
            // opportunity later. So we mark this render as having a ping.
            workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
        }
        ensureRootIsScheduled(root, eventTime);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        // The boundary fiber (a Suspense component or SuspenseList component)
        // previously was rendered in its fallback state. One of the promises that
        // suspended it has resolved, which means at least part of the tree was
        // likely unblocked. Try rendering again, at a new lanes.
        if (retryLane === NoLane) // TODO: Assign this to `suspenseState.retryLane`? to avoid
        // unnecessary entanglement?
        retryLane = requestRetryLane(boundaryFiber);
         // TODO: Special case idle priority?
        var eventTime = requestEventTime();
        var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
        if (root !== null) {
            markRootUpdated(root, retryLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState;
        var retryLane = NoLane;
        if (suspenseState !== null) retryLane = suspenseState.retryLane;
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = NoLane; // Default
        var retryCache;
        switch(boundaryFiber.tag){
            case SuspenseComponent:
                retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                if (suspenseState !== null) retryLane = suspenseState.retryLane;
                break;
            case SuspenseListComponent:
                retryCache = boundaryFiber.stateNode;
                break;
            default:
                throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        if (retryCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.
    function jnd(timeElapsed) {
        return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }
    function checkForNestedUpdates() {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        }
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
            error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
        }
    }
    function flushRenderPhaseStrictModeWarningsInDEV() {
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
    function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
        // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects
        // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.
        // Maybe not a big deal since this is DEV only behavior.
        setCurrentFiber(fiber);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
        resetCurrentFiber();
    }
    function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        var current = firstChild;
        var subtreeRoot = null;
        while(current !== null){
            var primarySubtreeFlag = current.subtreeFlags & fiberFlags;
            if (current !== subtreeRoot && current.child !== null && primarySubtreeFlag !== NoFlags) current = current.child;
            else {
                if ((current.flags & fiberFlags) !== NoFlags) invokeEffectFn(current);
                if (current.sibling !== null) current = current.sibling;
                else current = subtreeRoot = current.return;
            }
        }
    }
    var didWarnStateUpdateForNotYetMountedComponent = null;
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) !== NoContext) // We let the other warning about render phase updates deal with this one.
        return;
        if (!(fiber.mode & ConcurrentMode)) return;
        var tag = fiber.tag;
        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) // Only warn for user-defined components, not internal ones like Suspense.
        return;
         // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentNameFromFiber(fiber) || "ReactComponent";
        if (didWarnStateUpdateForNotYetMountedComponent !== null) {
            if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) return;
            didWarnStateUpdateForNotYetMountedComponent.add(componentName);
        } else didWarnStateUpdateForNotYetMountedComponent = new Set([
            componentName
        ]);
        var previousFiber = current;
        try {
            setCurrentFiber(fiber);
            error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally{
            if (previousFiber) setCurrentFiber(fiber);
            else resetCurrentFiber();
        }
    }
    var beginWork$1;
    var dummyFiber = null;
    beginWork$1 = function(current, unitOfWork, lanes) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
        try {
            return beginWork(current, unitOfWork, lanes);
        } catch (originalError) {
            if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") // Don't replay promises.
            // Don't replay errors if we are hydrating and have already suspended or handled an error
            throw originalError;
             // Keep this code in sync with handleError; any changes here must have
            // corresponding changes there.
            resetContextDependencies();
            resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
            // same fiber again.
            // Unwind the failed stack frame
            unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.
            assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
            if (unitOfWork.mode & ProfileMode) // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
             // Run beginWork again.
            invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);
            if (hasCaughtError()) {
                var replayError = clearCaughtError();
                if (typeof replayError === "object" && replayError !== null && replayError._suppressLogging && typeof originalError === "object" && originalError !== null && !originalError._suppressLogging) // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.
                originalError._suppressLogging = true;
            } // We always throw the original error in case the second render pass is not idempotent.
            // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.
            throw originalError;
        }
    };
    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInRenderForAnotherComponent;
    didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    function warnAboutRenderPhaseUpdatesInDEV(fiber) {
        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown"; // Dedupe by the rendering component because it's the one that needs to be fixed.
                var dedupeKey = renderingComponentName;
                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentNameFromFiber(fiber) || "Unknown";
                    error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                }
                break;
            case ClassComponent:
                if (!didWarnAboutUpdateInRender) {
                    error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                }
                break;
        }
    }
    function restorePendingUpdaters(root, lanes) {
        if (isDevToolsPresent) {
            var memoizedUpdaters = root.memoizedUpdaters;
            memoizedUpdaters.forEach(function(schedulingFiber) {
                addFiberToLanesMap(root, schedulingFiber, lanes);
            }); // This function intentionally does not clear memoized updaters.
        // Those may still be relevant to the current commit
        // and a future one (e.g. Suspense).
        }
    }
    var fakeActCallbackNode = {};
    function scheduleCallback$1(priorityLevel, callback) {
        // If we're currently inside an `act` scope, bypass Scheduler and push to
        // the `act` queue instead.
        var actQueue = ReactCurrentActQueue$1.current;
        if (actQueue !== null) {
            actQueue.push(callback);
            return fakeActCallbackNode;
        } else return scheduleCallback(priorityLevel, callback);
    }
    function cancelCallback$1(callbackNode) {
        if (callbackNode === fakeActCallbackNode) return;
         // In production, always call Scheduler. This function will be stripped out.
        return cancelCallback(callbackNode);
    }
    function shouldForceFlushFallbacksInDEV() {
        // Never force flush in production. This function should get stripped out.
        return ReactCurrentActQueue$1.current !== null;
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        if (fiber.mode & ConcurrentMode) {
            if (!isConcurrentActEnvironment()) // Not in an act environment. No need to warn.
            return;
        } else {
            // Legacy mode has additional cases where we suppress a warning.
            if (!isLegacyActEnvironment()) // Not in an act environment. No need to warn.
            return;
            if (executionContext !== NoContext) // Legacy mode doesn't warn if the update is batched, i.e.
            // batchedUpdates or flushSync.
            return;
            if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) // For backwards compatibility with pre-hooks code, legacy mode only
            // warns for updates that originate from a hook.
            return;
        }
        if (ReactCurrentActQueue$1.current === null) {
            var previousFiber = current;
            try {
                setCurrentFiber(fiber);
                error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {
        if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
    }
    function setIsRunningInsertionEffect(isRunning) {
        isRunningInsertionEffect = isRunning;
    }
    /* eslint-disable react-internal/prod-error-codes */ var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.
    var failedBoundaries = null;
    var setRefreshHandler = function(handler) {
        resolveFamily = handler;
    };
    function resolveFunctionForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) return type;
         // Use the latest known implementation.
        return family.current;
    }
    function resolveClassForHotReloading(type) {
        // No implementation differences.
        return resolveFunctionForHotReloading(type);
    }
    function resolveForwardRefForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) {
            // Check if we're dealing with a real forwardRef. Don't want to crash early.
            if (type !== null && type !== undefined && typeof type.render === "function") {
                // ForwardRef is special because its resolved .type is an object,
                // but it's possible that we only have its inner render function in the map.
                // If that inner render function is different, we'll build a new forwardRef type.
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                    var syntheticType = {
                        $$typeof: REACT_FORWARD_REF_TYPE,
                        render: currentRender
                    };
                    if (type.displayName !== undefined) syntheticType.displayName = type.displayName;
                    return syntheticType;
                }
            }
            return type;
        } // Use the latest known implementation.
        return family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return false;
        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.
        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
        switch(fiber.tag){
            case ClassComponent:
                if (typeof nextType === "function") needsCompareFamilies = true;
                break;
            case FunctionComponent:
                if (typeof nextType === "function") needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
                break;
            case ForwardRef:
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            case MemoComponent:
            case SimpleMemoComponent:
                if ($$typeofNextType === REACT_MEMO_TYPE) // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            default:
                return false;
        } // Check if both types have a family and it's the same one.
        if (needsCompareFamilies) {
            // Note: memo() and forwardRef() we'll compare outer rather than inner type.
            // This means both of them need to be registered to preserve state.
            // If we unwrapped and compared the inner types for wrappers instead,
            // then we would risk falsely saying two separate memo(Foo)
            // calls are equivalent because they wrap the same Foo function.
            var prevFamily = resolveFamily(prevType);
            if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) return true;
        }
        return false;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        if (typeof WeakSet !== "function") return;
        if (failedBoundaries === null) failedBoundaries = new WeakSet();
        failedBoundaries.add(fiber);
    }
    var scheduleRefresh = function(root, update) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function() {
            scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
    };
    var scheduleRoot = function(root, element) {
        if (root.context !== emptyContextObject) // Super edge case: root has a legacy _renderSubtree context
        // but we don't know the parentComponent so we can't pass it.
        // Just ignore. We'll delete this with _renderSubtree code path later.
        return;
        flushPassiveEffects();
        flushSync(function() {
            updateContainer(element, root, null, null);
        });
    };
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        if (resolveFamily === null) throw new Error("Expected resolveFamily to be set during hot reload.");
        var needsRender = false;
        var needsRemount = false;
        if (candidateType !== null) {
            var family = resolveFamily(candidateType);
            if (family !== undefined) {
                if (staleFamilies.has(family)) needsRemount = true;
                else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) needsRemount = true;
                    else needsRender = true;
                }
            }
        }
        if (failedBoundaries !== null) {
            if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) needsRemount = true;
        }
        if (needsRemount) fiber._debugNeedsRemount = true;
        if (needsRemount || needsRender) {
            var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (_root !== null) scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
        }
        if (child !== null && !needsRemount) scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        if (sibling !== null) scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    var findHostInstancesForRefresh = function(root, families) {
        var hostInstances = new Set();
        var types = new Set(families.map(function(family) {
            return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
    };
    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
        var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        var didMatch = false;
        if (candidateType !== null) {
            if (types.has(candidateType)) didMatch = true;
        }
        if (didMatch) // We have a match. This only drills down to the closest host components.
        // There's no need to search deeper because for the purpose of giving
        // visual feedback, "flashing" outermost parent rectangles is sufficient.
        findHostInstancesForFiberShallowly(fiber, hostInstances);
        else // If there's no match, maybe there will be one further down in the child tree.
        if (child !== null) findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
        if (sibling !== null) findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
        if (foundHostInstances) return;
         // If we didn't find any host children, fallback to closest host parent.
        var node = fiber;
        while(true){
            switch(node.tag){
                case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
            }
            if (node.return === null) throw new Error("Expected to reach root first.");
            node = node.return;
        }
    }
    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
        var node = fiber;
        var foundHostInstances = false;
        while(true){
            if (node.tag === HostComponent) {
                // We got a match.
                foundHostInstances = true;
                hostInstances.add(node.stateNode); // There may still be more, so keep searching.
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === fiber) return foundHostInstances;
            while(node.sibling === null){
                if (node.return === null || node.return === fiber) return foundHostInstances;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return false;
    }
    var hasBadMapPolyfill;
    hasBadMapPolyfill = false;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        /* eslint-disable no-new */ new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    /* eslint-enable no-new */ } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
    }
    function FiberNode(tag, pendingProps, key, mode) {
        // Instance
        this.tag = tag;
        this.key = key;
        this.elementType = null;
        this.type = null;
        this.stateNode = null; // Fiber
        this.return = null;
        this.child = null;
        this.sibling = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = pendingProps;
        this.memoizedProps = null;
        this.updateQueue = null;
        this.memoizedState = null;
        this.dependencies = null;
        this.mode = mode; // Effects
        this.flags = NoFlags;
        this.subtreeFlags = NoFlags;
        this.deletions = null;
        this.lanes = NoLanes;
        this.childLanes = NoLanes;
        this.alternate = null;
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).
        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
        // This isn't directly used but is handy for debugging internals:
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;
        if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") Object.preventExtensions(this);
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.
    var createFiber = function(tag, pendingProps, key, mode) {
        // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
        return new FiberNode(tag, pendingProps, key, mode);
    };
    function shouldConstruct$1(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function isSimpleFunctionComponent(type) {
        return typeof type === "function" && !shouldConstruct$1(type) && type.defaultProps === undefined;
    }
    function resolveLazyComponentTag(Component) {
        if (typeof Component === "function") return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
        else if (Component !== undefined && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) return ForwardRef;
            if ($$typeof === REACT_MEMO_TYPE) return MemoComponent;
        }
        return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        if (workInProgress === null) {
            // We use a double buffering pooling technique because we know that we'll
            // only ever need at most two versions of a tree. We pool the "other" unused
            // node that we're free to reuse. This is lazily created to avoid allocating
            // extra objects for things that are never updated. It also allow us to
            // reclaim the extra memory if needed.
            workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
            workInProgress.elementType = current.elementType;
            workInProgress.type = current.type;
            workInProgress.stateNode = current.stateNode;
            // DEV-only fields
            workInProgress._debugSource = current._debugSource;
            workInProgress._debugOwner = current._debugOwner;
            workInProgress._debugHookTypes = current._debugHookTypes;
            workInProgress.alternate = current;
            current.alternate = workInProgress;
        } else {
            workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // We already have an alternate.
            // Reset the effect tag.
            workInProgress.flags = NoFlags; // The effects are no longer valid.
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            // We intentionally reset, rather than copy, actualDuration & actualStartTime.
            // This prevents time from endlessly accumulating in new commits.
            // This has the downside of resetting values for different priority renders,
            // But works for yielding (the common case) and should support resuming.
            workInProgress.actualDuration = 0;
            workInProgress.actualStartTime = -1;
        } // Reset all effects except static ones.
        // Static effects are not specific to a render.
        workInProgress.flags = current.flags & StaticMask;
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.
        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
        }; // These will be overridden during the parent's reconciliation
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case FunctionComponent:
            case SimpleMemoComponent:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case ClassComponent:
                workInProgress.type = resolveClassForHotReloading(current.type);
                break;
            case ForwardRef:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
                break;
        }
        return workInProgress;
    } // Used to reuse a Fiber for a second pass.
    function resetWorkInProgress(workInProgress, renderLanes) {
        // This resets the Fiber to what createFiber or createWorkInProgress would
        // have set the values to before during the first pass. Ideally this wouldn't
        // be necessary but unfortunately many code paths reads from the workInProgress
        // when they should be reading from current and writing to workInProgress.
        // We assume pendingProps, index, key, ref, return are still untouched to
        // avoid doing another reconciliation.
        // Reset the effect flags but keep any Placement tags, since that's something
        // that child fiber is setting, not the reconciliation.
        workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.
        var current = workInProgress.alternate;
        if (current === null) {
            // Reset to createFiber's initial values.
            workInProgress.childLanes = NoLanes;
            workInProgress.lanes = renderLanes;
            workInProgress.child = null;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.memoizedProps = null;
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null;
            workInProgress.dependencies = null;
            workInProgress.stateNode = null;
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = 0;
            workInProgress.treeBaseDuration = 0;
        } else {
            // Reset to the cloned values that createWorkInProgress would've.
            workInProgress.childLanes = current.childLanes;
            workInProgress.lanes = current.lanes;
            workInProgress.child = current.child;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            workInProgress.memoizedProps = current.memoizedProps;
            workInProgress.memoizedState = current.memoizedState;
            workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
            // it cannot be shared with the current fiber.
            var currentDependencies = current.dependencies;
            workInProgress.dependencies = currentDependencies === null ? null : {
                lanes: currentDependencies.lanes,
                firstContext: currentDependencies.firstContext
            };
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = current.selfBaseDuration;
            workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
        return workInProgress;
    }
    function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
        var mode;
        if (tag === ConcurrentRoot) {
            mode = ConcurrentMode;
            if (isStrictMode === true) {
                mode |= StrictLegacyMode;
                mode |= StrictEffectsMode;
            }
        } else mode = NoMode;
        if (isDevToolsPresent) // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
        return createFiber(HostRoot, null, null, mode);
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
        var resolvedType = type;
        if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
                fiberTag = ClassComponent;
                resolvedType = resolveClassForHotReloading(resolvedType);
            } else resolvedType = resolveFunctionForHotReloading(resolvedType);
        } else if (typeof type === "string") fiberTag = HostComponent;
        else getTag: switch(type){
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_STRICT_MODE_TYPE:
                fiberTag = Mode;
                mode |= StrictLegacyMode;
                if ((mode & ConcurrentMode) !== NoMode) // Strict effects should never run on legacy roots
                mode |= StrictEffectsMode;
                break;
            case REACT_PROFILER_TYPE:
                return createFiberFromProfiler(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_TYPE:
                return createFiberFromSuspense(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_LIST_TYPE:
                return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
            case REACT_OFFSCREEN_TYPE:
                return createFiberFromOffscreen(pendingProps, mode, lanes, key);
            case REACT_LEGACY_HIDDEN_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_SCOPE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_CACHE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_TRACING_MARKER_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_DEBUG_TRACING_MODE_TYPE:
            // eslint-disable-next-line no-fallthrough
            default:
                if (typeof type === "object" && type !== null) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                    case REACT_CONTEXT_TYPE:
                        // This is a consumer
                        fiberTag = ContextConsumer;
                        break getTag;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break getTag;
                    case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                    case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                }
                var info = "";
                if (type === undefined || typeof type === "object" && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                if (ownerName) info += "\n\nCheck the render method of `" + ownerName + "`.";
                throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
        var fiber = createFiber(fiberTag, pendingProps, key, mode);
        fiber.elementType = type;
        fiber.type = resolvedType;
        fiber.lanes = lanes;
        fiber._debugOwner = owner;
        return fiber;
    }
    function createFiberFromElement(element, mode, lanes) {
        var owner = null;
        owner = element._owner;
        var type = element.type;
        var key = element.key;
        var pendingProps = element.props;
        var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
        return fiber;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        var fiber = createFiber(Fragment, elements, key, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromProfiler(pendingProps, mode, lanes, key) {
        if (typeof pendingProps.id !== "string") error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
        var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
        fiber.elementType = REACT_PROFILER_TYPE;
        fiber.lanes = lanes;
        fiber.stateNode = {
            effectDuration: 0,
            passiveEffectDuration: 0
        };
        return fiber;
    }
    function createFiberFromSuspense(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
        var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
        fiber.elementType = REACT_OFFSCREEN_TYPE;
        fiber.lanes = lanes;
        var primaryChildInstance = {
            isHidden: false
        };
        fiber.stateNode = primaryChildInstance;
        return fiber;
    }
    function createFiberFromText(content, mode, lanes) {
        var fiber = createFiber(HostText, content, null, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent, null, null, NoMode);
        fiber.elementType = "DELETED";
        return fiber;
    }
    function createFiberFromDehydratedFragment(dehydratedNode) {
        var fiber = createFiber(DehydratedFragment, null, null, NoMode);
        fiber.stateNode = dehydratedNode;
        return fiber;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        var pendingProps = portal.children !== null ? portal.children : [];
        var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
        fiber.lanes = lanes;
        fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            // Used by persistent updates
            implementation: portal.implementation
        };
        return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.
    function assignFiberPropertiesInDEV(target, source) {
        if (target === null) // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
         // This is intentionally written as a list of all properties.
        // We tried to use Object.assign() instead but this is called in
        // the hottest path, and Object.assign() was too slow:
        // https://github.com/facebook/react/issues/12502
        // This code is DEV-only so size is not a concern.
        target.tag = source.tag;
        target.key = source.key;
        target.elementType = source.elementType;
        target.type = source.type;
        target.stateNode = source.stateNode;
        target.return = source.return;
        target.child = source.child;
        target.sibling = source.sibling;
        target.index = source.index;
        target.ref = source.ref;
        target.pendingProps = source.pendingProps;
        target.memoizedProps = source.memoizedProps;
        target.updateQueue = source.updateQueue;
        target.memoizedState = source.memoizedState;
        target.dependencies = source.dependencies;
        target.mode = source.mode;
        target.flags = source.flags;
        target.subtreeFlags = source.subtreeFlags;
        target.deletions = source.deletions;
        target.lanes = source.lanes;
        target.childLanes = source.childLanes;
        target.alternate = source.alternate;
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
        target._debugSource = source._debugSource;
        target._debugOwner = source._debugOwner;
        target._debugNeedsRemount = source._debugNeedsRemount;
        target._debugHookTypes = source._debugHookTypes;
        return target;
    }
    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {
        this.tag = tag;
        this.containerInfo = containerInfo;
        this.pendingChildren = null;
        this.current = null;
        this.pingCache = null;
        this.finishedWork = null;
        this.timeoutHandle = noTimeout;
        this.context = null;
        this.pendingContext = null;
        this.callbackNode = null;
        this.callbackPriority = NoLane;
        this.eventTimes = createLaneMap(NoLanes);
        this.expirationTimes = createLaneMap(NoTimestamp);
        this.pendingLanes = NoLanes;
        this.suspendedLanes = NoLanes;
        this.pingedLanes = NoLanes;
        this.expiredLanes = NoLanes;
        this.mutableReadLanes = NoLanes;
        this.finishedLanes = NoLanes;
        this.entangledLanes = NoLanes;
        this.entanglements = createLaneMap(NoLanes);
        this.identifierPrefix = identifierPrefix;
        this.onRecoverableError = onRecoverableError;
        this.mutableSourceEagerHydrationData = null;
        this.effectDuration = 0;
        this.passiveEffectDuration = 0;
        this.memoizedUpdaters = new Set();
        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
        for(var _i = 0; _i < TotalLanes; _i++)pendingUpdatersLaneMap.push(new Set());
        switch(tag){
            case ConcurrentRoot:
                this._debugRootType = hydrate ? "hydrateRoot()" : "createRoot()";
                break;
            case LegacyRoot:
                this._debugRootType = hydrate ? "hydrate()" : "render()";
                break;
        }
    }
    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // host config, but because they are passed in at runtime, we have to thread
    // them through the root constructor. Perhaps we should put them all into a
    // single type, like a DynamicHostConfig that is defined by the renderer.
    identifierPrefix, onRecoverableError, transitionCallbacks) {
        var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);
        // stateNode is any.
        var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        var _initialState = {
            element: initialChildren,
            isDehydrated: hydrate,
            cache: null,
            // not enabled yet
            transitions: null,
            pendingSuspenseBoundaries: null
        };
        uninitializedFiber.memoizedState = _initialState;
        initializeUpdateQueue(uninitializedFiber);
        return root;
    }
    var ReactVersion = "18.2.0";
    function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        checkKeyStringCoercion(key);
        return {
            // This tag allow us to uniquely identify this as a React Portal
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : "" + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    didWarnAboutNestedUpdates = false;
    didWarnAboutFindNodeInStrictMode = {};
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        var fiber = get(parentComponent);
        var parentContext = findCurrentUnmaskedContext(fiber);
        if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) return processChildContext(fiber, Component, parentContext);
        }
        return parentContext;
    }
    function findHostInstanceWithWarning(component, methodName) {
        var fiber = get(component);
        if (fiber === undefined) {
            if (typeof component.render === "function") throw new Error("Unable to find node on an unmounted component.");
            else {
                var keys = Object.keys(component).join(",");
                throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
            }
        }
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        if (hostFiber.mode & StrictLegacyMode) {
            var componentName = getComponentNameFromFiber(fiber) || "Component";
            if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current;
                try {
                    setCurrentFiber(hostFiber);
                    if (fiber.mode & StrictLegacyMode) error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    else error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                } finally{
                    // Ideally this should reset to previous but this shouldn't be called in
                    // render and there's another warning for that anyway.
                    if (previousFiber) setCurrentFiber(previousFiber);
                    else resetCurrentFiber();
                }
            }
        }
        return hostFiber.stateNode;
    }
    function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = false;
        var initialChildren = null;
        return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
    }
    function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = true;
        var root = createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError); // TODO: Move this to FiberRoot constructor
        root.context = getContextForSubtree(null); // Schedule the initial render. In a hydration root, this is different from
        // a regular update because the initial render must match was was rendered
        // on the server.
        // NOTE: This update intentionally doesn't have a payload. We're only using
        // the update to schedule work on the root fiber (and, for legacy roots, to
        // enqueue the callback if one is provided).
        var current = root.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current);
        var update = createUpdate(eventTime, lane);
        update.callback = callback !== undefined && callback !== null ? callback : null;
        enqueueUpdate(current, update, lane);
        scheduleInitialHydrationOnRoot(root, lane, eventTime);
        return root;
    }
    function updateContainer(element, container, parentComponent, callback) {
        onScheduleRoot(container, element);
        var current$1 = container.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current$1);
        markRenderScheduled(lane);
        var context = getContextForSubtree(parentComponent);
        if (container.context === null) container.context = context;
        else container.pendingContext = context;
        if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
            didWarnAboutNestedUpdates = true;
            error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown");
        }
        var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: element
        };
        callback = callback === undefined ? null : callback;
        if (callback !== null) {
            if (typeof callback !== "function") error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
            update.callback = callback;
        }
        var root = enqueueUpdate(current$1, update, lane);
        if (root !== null) {
            scheduleUpdateOnFiber(root, current$1, lane, eventTime);
            entangleTransitions(root, current$1, lane);
        }
        return lane;
    }
    function getPublicRootInstance(container) {
        var containerFiber = container.current;
        if (!containerFiber.child) return null;
        switch(containerFiber.child.tag){
            case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
            default:
                return containerFiber.child.stateNode;
        }
    }
    function attemptSynchronousHydration$1(fiber) {
        switch(fiber.tag){
            case HostRoot:
                var root = fiber.stateNode;
                if (isRootDehydrated(root)) {
                    // Flush the first scheduled "update".
                    var lanes = getHighestPriorityPendingLanes(root);
                    flushRoot(root, lanes);
                }
                break;
            case SuspenseComponent:
                flushSync(function() {
                    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
                    if (root !== null) {
                        var eventTime = requestEventTime();
                        scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);
                    }
                }); // If we're still blocked after this, we need to increase
                // the priority of any promises resolving within this
                // boundary so that they next attempt also has higher pri.
                var retryLane = SyncLane;
                markRetryLaneIfNotHydrated(fiber, retryLane);
                break;
        }
    }
    function markRetryLaneImpl(fiber, retryLane) {
        var suspenseState = fiber.memoizedState;
        if (suspenseState !== null && suspenseState.dehydrated !== null) suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
    } // Increases the priority of thenables when they resolve within this boundary.
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        var alternate = fiber.alternate;
        if (alternate) markRetryLaneImpl(alternate, retryLane);
    }
    function attemptContinuousHydration$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
        var lane = SelectiveHydrationLane;
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, lane, eventTime);
        }
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function attemptHydrationAtCurrentPriority$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority other than synchronously flush it.
        return;
        var lane = requestUpdateLane(fiber);
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, lane, eventTime);
        }
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function findHostInstanceWithNoPortals(fiber) {
        var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    var shouldErrorImpl = function(fiber) {
        return null;
    };
    function shouldError(fiber) {
        return shouldErrorImpl(fiber);
    }
    var shouldSuspendImpl = function(fiber) {
        return false;
    };
    function shouldSuspend(fiber) {
        return shouldSuspendImpl(fiber);
    }
    var overrideHookState = null;
    var overrideHookStateDeletePath = null;
    var overrideHookStateRenamePath = null;
    var overrideProps = null;
    var overridePropsDeletePath = null;
    var overridePropsRenamePath = null;
    var scheduleUpdate = null;
    var setErrorHandler = null;
    var setSuspenseHandler = null;
    var copyWithDeleteImpl = function(obj, path, index) {
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === path.length) {
            if (isArray(updated)) updated.splice(key, 1);
            else delete updated[key];
            return updated;
        } // $FlowFixMe number or string is fine here
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    };
    var copyWithDelete = function(obj, path) {
        return copyWithDeleteImpl(obj, path, 0);
    };
    var copyWithRenameImpl = function(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === oldPath.length) {
            var newKey = newPath[index]; // $FlowFixMe number or string is fine here
            updated[newKey] = updated[oldKey];
            if (isArray(updated)) updated.splice(oldKey, 1);
            else delete updated[oldKey];
        } else // $FlowFixMe number or string is fine here
        updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    };
    var copyWithRename = function(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) {
            warn("copyWithRename() expects paths of the same length");
            return;
        } else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                warn("copyWithRename() expects paths to be the same except for the deepest key");
                return;
            }
        }
        return copyWithRenameImpl(obj, oldPath, newPath, 0);
    };
    var copyWithSetImpl = function(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    };
    var copyWithSet = function(obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
    };
    var findHook = function(fiber, id) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;
        while(currentHook !== null && id > 0){
            currentHook = currentHook.next;
            id--;
        }
        return currentHook;
    }; // Support DevTools editable values for useState and useReducer.
    overrideHookState = function(fiber, id, path, value) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithSet(hook.memoizedState, path, value);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithDelete(hook.memoizedState, path);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
        }
    }; // Support DevTools props for function components, forwardRef, memo, host components, etc.
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    scheduleUpdate = function(fiber) {
        var root = enqueueConcurrentRenderForLane(fiber, SyncLane);
        if (root !== null) scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    };
    setErrorHandler = function(newShouldErrorImpl) {
        shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    function findHostInstanceByFiber(fiber) {
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    function emptyFindFiberByHostInstance(instance) {
        return null;
    }
    function getCurrentFiberForDevTools() {
        return current;
    }
    function injectIntoDevTools(devToolsConfig) {
        var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState: overrideHookState,
            overrideHookStateDeletePath: overrideHookStateDeletePath,
            overrideHookStateRenamePath: overrideHookStateRenamePath,
            overrideProps: overrideProps,
            overridePropsDeletePath: overridePropsDeletePath,
            overridePropsRenamePath: overridePropsRenamePath,
            setErrorHandler: setErrorHandler,
            setSuspenseHandler: setSuspenseHandler,
            scheduleUpdate: scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher,
            findHostInstanceByFiber: findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            // React Refresh
            findHostInstancesForRefresh: findHostInstancesForRefresh,
            scheduleRefresh: scheduleRefresh,
            scheduleRoot: scheduleRoot,
            setRefreshHandler: setRefreshHandler,
            // Enables DevTools to append owner stacks to error messages in DEV mode.
            getCurrentFiber: getCurrentFiberForDevTools,
            // Enables DevTools to detect reconciler version rather than renderer version
            // which may not match for third party renderers.
            reconcilerVersion: ReactVersion
        });
    }
    /* global reportError */ var defaultOnRecoverableError = typeof reportError === "function" ? // emulating an uncaught JavaScript error.
    reportError : function(error) {
        // In older browsers and test environments, fallback to console.error.
        // eslint-disable-next-line react-internal/no-production-logging
        console["error"](error);
    };
    function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (root === null) throw new Error("Cannot update an unmounted root.");
        if (typeof arguments[1] === "function") error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        else if (isValidContainer(arguments[1])) error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
        else if (typeof arguments[1] !== "undefined") error("You passed a second argument to root.render(...) but it only accepts one argument.");
        var container = root.containerInfo;
        if (container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(root.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
            }
        }
        updateContainer(children, root, null, null);
    };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
        if (typeof arguments[0] === "function") error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var root = this._internalRoot;
        if (root !== null) {
            this._internalRoot = null;
            var container = root.containerInfo;
            if (isAlreadyRendering()) error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
            flushSync(function() {
                updateContainer(null, root, null, null);
            });
            unmarkContainerAsRoot(container);
        }
    };
    function createRoot(container, options) {
        if (!isValidContainer(container)) throw new Error("createRoot(...): Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = "";
        var onRecoverableError = defaultOnRecoverableError;
        var transitionCallbacks = null;
        if (options !== null && options !== undefined) {
            if (options.hydrate) warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.");
            else if (typeof options === "object" && options !== null && options.$$typeof === REACT_ELEMENT_TYPE) error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
            if (options.transitionCallbacks !== undefined) transitionCallbacks = options.transitionCallbacks;
        }
        var root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container);
        var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
        listenToAllSupportedEvents(rootContainerElement);
        return new ReactDOMRoot(root);
    }
    function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function scheduleHydration(target) {
        if (target) queueExplicitHydrationTarget(target);
    }
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
    function hydrateRoot(container, initialChildren, options) {
        if (!isValidContainer(container)) throw new Error("hydrateRoot(...): Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        if (initialChildren === undefined) error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        // the hydration callbacks.
        var hydrationCallbacks = options != null ? options : null; // TODO: Delete this option
        var mutableSources = options != null && options.hydratedSources || null;
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = "";
        var onRecoverableError = defaultOnRecoverableError;
        if (options !== null && options !== undefined) {
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
        }
        var root = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container); // This can't be a comment node since hydration doesn't work on comment nodes anyway.
        listenToAllSupportedEvents(container);
        if (mutableSources) for(var i = 0; i < mutableSources.length; i++){
            var mutableSource = mutableSources[i];
            registerMutableSourceForHydration(root, mutableSource);
        }
        return new ReactDOMHydrationRoot(root);
    }
    function isValidContainer(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
    } // TODO: Remove this function which also includes comment nodes.
    // We only use it in places that are currently more relaxed.
    function isValidContainerLegacy(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
    }
    function warnIfReactDOMContainerInDEV(container) {
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") error("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
        if (isContainerMarkedAsRoot(container)) {
            if (container._reactRootContainer) error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
            else error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
        }
    }
    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    topLevelUpdateWarnings = function(container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
            }
        }
        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
        if (hasNonRootReactChild && !isRootRenderedBySomeReact) error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function getReactRootElementInContainer(container) {
        if (!container) return null;
        if (container.nodeType === DOCUMENT_NODE) return container.documentElement;
        else return container.firstChild;
    }
    function noopOnRecoverableError() {
    // legacy API.
    }
    function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
        if (isHydrationContainer) {
            if (typeof callback === "function") {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            }
            var root = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, false, false, "", noopOnRecoverableError);
            container._reactRootContainer = root;
            markContainerAsRoot(root.current, container);
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
            flushSync();
            return root;
        } else {
            // First clear any existing content.
            var rootSibling;
            while(rootSibling = container.lastChild)container.removeChild(rootSibling);
            if (typeof callback === "function") {
                var _originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(_root);
                    _originalCallback.call(instance);
                };
            }
            var _root = createContainer(container, LegacyRoot, null, false, false, "", noopOnRecoverableError);
            container._reactRootContainer = _root;
            markContainerAsRoot(_root.current, container);
            var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(_rootContainerElement); // Initial mount should not be batched.
            flushSync(function() {
                updateContainer(initialChildren, _root, parentComponent, callback);
            });
            return _root;
        }
    }
    function warnOnInvalidCallback$1(callback, callerName) {
        if (callback !== null && typeof callback !== "function") error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
    }
    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback$1(callback === undefined ? null : callback, "render");
        var maybeRoot = container._reactRootContainer;
        var root;
        if (!maybeRoot) // Initial mount
        root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
        else {
            root = maybeRoot;
            if (typeof callback === "function") {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            } // Update
            updateContainer(children, root, parentComponent, callback);
        }
        return getPublicRootInstance(root);
    }
    function findDOMNode(componentOrElement) {
        var owner = ReactCurrentOwner$3.current;
        if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            if (!warnedAboutRefsInRender) error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || "A component");
            owner.stateNode._warnedAboutRefsInRender = true;
        }
        if (componentOrElement == null) return null;
        if (componentOrElement.nodeType === ELEMENT_NODE) return componentOrElement;
        return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
    }
    function hydrate(element, container, callback) {
        error("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error("Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
    }
    function render(element, container, callback) {
        error("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error("Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
    }
    function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        error("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(containerNode)) throw new Error("Target container is not a DOM element.");
        if (parentComponent == null || !has(parentComponent)) throw new Error("parentComponent must be a valid React Component");
        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
    }
    function unmountComponentAtNode(container) {
        if (!isValidContainerLegacy(container)) throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
        if (container._reactRootContainer) {
            var rootEl = getReactRootElementInContainer(container);
            var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
            if (renderedByDifferentReact) error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
            flushSync(function() {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                    // $FlowFixMe This should probably use `delete container._reactRootContainer`
                    container._reactRootContainer = null;
                    unmarkContainerAsRoot(container);
                });
            }); // If you call unmountComponentAtNode twice in quick succession, you'll
            // get `true` twice. That's probably fine?
            return true;
        } else {
            var _rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.
            var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;
            if (hasNonRootReactChild) error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
            return false;
        }
    }
    setAttemptSynchronousHydration(attemptSynchronousHydration$1);
    setAttemptContinuousHydration(attemptContinuousHydration$1);
    setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
    setGetCurrentUpdatePriority(getCurrentUpdatePriority);
    setAttemptHydrationAtPriority(runWithPriority);
    if (typeof Map !== "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
    Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
    Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    setRestoreImplementation(restoreControlledState$3);
    setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
    function createPortal$1(children, container) {
        var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (!isValidContainer(container)) throw new Error("Target container is not a DOM element.");
         // TODO: pass ReactDOM portal implementation as third argument
        // $FlowFixMe The Flow type is opaque but there's no way to actually create it.
        return createPortal(children, container, null, key);
    }
    function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
    }
    var Internals = {
        usingClientEntryPoint: false,
        // Keep in sync with ReactTestUtils.js.
        // This is an array for better minification.
        Events: [
            getInstanceFromNode,
            getNodeFromInstance,
            getFiberCurrentPropsFromNode,
            enqueueStateRestore,
            restoreStateIfNeeded,
            batchedUpdates$1
        ]
    };
    function createRoot$1(container, options) {
        if (!Internals.usingClientEntryPoint && true) error('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return createRoot(container, options);
    }
    function hydrateRoot$1(container, initialChildren, options) {
        if (!Internals.usingClientEntryPoint && true) error('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return hydrateRoot(container, initialChildren, options);
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync$1(fn) {
        if (isAlreadyRendering()) error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
        return flushSync(fn);
    }
    var foundDevTools = injectIntoDevTools({
        findFiberByHostInstance: getClosestInstanceFromNode,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: "react-dom"
    });
    if (!foundDevTools && canUseDOM && window.top === window.self) // If we're in Chrome or Firefox, provide a download link if not installed.
    {
        if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
            var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.
            if (/^(https?|file):$/.test(protocol)) // eslint-disable-next-line react-internal/no-production-logging
            console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
        }
    }
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
    exports.createPortal = createPortal$1;
    exports.createRoot = createRoot$1;
    exports.findDOMNode = findDOMNode;
    exports.flushSync = flushSync$1;
    exports.hydrate = hydrate;
    exports.hydrateRoot = hydrateRoot$1;
    exports.render = render;
    exports.unmountComponentAtNode = unmountComponentAtNode;
    exports.unstable_batchedUpdates = batchedUpdates$1;
    exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{"6f0162e9ab224cd4":"21dqq","8ad4ca65319d28a7":"juvHo"}],"juvHo":[function(require,module,exports) {
"use strict";
module.exports = require("ef03b89c8fe2794e");

},{"ef03b89c8fe2794e":"RqdIf"}],"RqdIf":[function(require,module,exports) {
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var enableSchedulerDebugging = false;
    var enableProfiling = false;
    var frameYieldMs = 5;
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        siftUp(heap, node, index);
    }
    function peek(heap) {
        return heap.length === 0 ? null : heap[0];
    }
    function pop(heap) {
        if (heap.length === 0) return null;
        var first = heap[0];
        var last = heap.pop();
        if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
        }
        return first;
    }
    function siftUp(heap, node, i) {
        var index = i;
        while(index > 0){
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
                // The parent is larger. Swap positions.
                heap[parentIndex] = node;
                heap[index] = parent;
                index = parentIndex;
            } else // The parent is smaller. Exit.
            return;
        }
    }
    function siftDown(heap, node, i) {
        var index = i;
        var length = heap.length;
        var halfLength = length >>> 1;
        while(index < halfLength){
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
            if (compare(left, node) < 0) {
                if (rightIndex < length && compare(right, left) < 0) {
                    heap[index] = right;
                    heap[rightIndex] = node;
                    index = rightIndex;
                } else {
                    heap[index] = left;
                    heap[leftIndex] = node;
                    index = leftIndex;
                }
            } else if (rightIndex < length && compare(right, node) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
            } else // Neither child is smaller. Exit.
            return;
        }
    }
    function compare(a, b) {
        // Compare sort index first, then task id.
        var diff = a.sortIndex - b.sortIndex;
        return diff !== 0 ? diff : a.id - b.id;
    }
    // TODO: Use symbols?
    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;
    function markTaskErrored(task, ms) {}
    /* eslint-disable no-var */ var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
    if (hasPerformanceNow) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        var initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111
    var maxSigned31BitInt = 1073741823; // Times out immediately
    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.
    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.
    var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
    var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
    var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null; // IE and Node.js + jsdom
    var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
    function advanceTimers(currentTime) {
        // Check for tasks that are no longer delayed and add them to the queue.
        var timer = peek(timerQueue);
        while(timer !== null){
            if (timer.callback === null) // Timer was cancelled.
            pop(timerQueue);
            else if (timer.startTime <= currentTime) {
                // Timer fired. Transfer to the task queue.
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
            } else // Remaining timers are pending.
            return;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = false;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function flushWork(hasTimeRemaining, initialTime) {
        isHostCallbackScheduled = false;
        if (isHostTimeoutScheduled) {
            // We scheduled a timeout but it's no longer needed. Cancel it.
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
        }
        isPerformingWork = true;
        var previousPriorityLevel = currentPriorityLevel;
        try {
            if (enableProfiling) try {
                return workLoop(hasTimeRemaining, initialTime);
            } catch (error) {
                if (currentTask !== null) {
                    var currentTime = exports.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                }
                throw error;
            }
            else // No catch in prod code path.
            return workLoop(hasTimeRemaining, initialTime);
        } finally{
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
        }
    }
    function workLoop(hasTimeRemaining, initialTime) {
        var currentTime = initialTime;
        advanceTimers(currentTime);
        currentTask = peek(taskQueue);
        while(currentTask !== null && !enableSchedulerDebugging){
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) break;
            var callback = currentTask.callback;
            if (typeof callback === "function") {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports.unstable_now();
                if (typeof continuationCallback === "function") currentTask.callback = continuationCallback;
                else if (currentTask === peek(taskQueue)) pop(taskQueue);
                advanceTimers(currentTime);
            } else pop(taskQueue);
            currentTask = peek(taskQueue);
        } // Return whether there's additional work
        if (currentTask !== null) return true;
        else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            return false;
        }
    }
    function unstable_runWithPriority(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
                break;
            default:
                priorityLevel = NormalPriority;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_next(eventHandler) {
        var priorityLevel;
        switch(currentPriorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
                // Shift down to normal priority
                priorityLevel = NormalPriority;
                break;
            default:
                // Anything lower than normal priority should remain at the current level.
                priorityLevel = currentPriorityLevel;
                break;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_wrapCallback(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            // This is a fork of runWithPriority, inlined for performance.
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    }
    function unstable_scheduleCallback(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        var startTime;
        if (typeof options === "object" && options !== null) {
            var delay = options.delay;
            if (typeof delay === "number" && delay > 0) startTime = currentTime + delay;
            else startTime = currentTime;
        } else startTime = currentTime;
        var timeout;
        switch(priorityLevel){
            case ImmediatePriority:
                timeout = IMMEDIATE_PRIORITY_TIMEOUT;
                break;
            case UserBlockingPriority:
                timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
                break;
            case IdlePriority:
                timeout = IDLE_PRIORITY_TIMEOUT;
                break;
            case LowPriority:
                timeout = LOW_PRIORITY_TIMEOUT;
                break;
            case NormalPriority:
            default:
                timeout = NORMAL_PRIORITY_TIMEOUT;
                break;
        }
        var expirationTime = startTime + timeout;
        var newTask = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: startTime,
            expirationTime: expirationTime,
            sortIndex: -1
        };
        if (startTime > currentTime) {
            // This is a delayed task.
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                // All tasks are delayed, and this is the task with the earliest delay.
                if (isHostTimeoutScheduled) // Cancel an existing timeout.
                cancelHostTimeout();
                else isHostTimeoutScheduled = true;
                 // Schedule a timeout.
                requestHostTimeout(handleTimeout, startTime - currentTime);
            }
        } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            // wait until the next time we yield.
            if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            }
        }
        return newTask;
    }
    function unstable_pauseExecution() {}
    function unstable_continueExecution() {
        if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
        }
    }
    function unstable_getFirstCallbackNode() {
        return peek(taskQueue);
    }
    function unstable_cancelCallback(task) {
        // remove from the queue because you can't remove arbitrary nodes from an
        // array based heap, only the first one.)
        task.callback = null;
    }
    function unstable_getCurrentPriorityLevel() {
        return currentPriorityLevel;
    }
    var isMessageLoopRunning = false;
    var scheduledHostCallback = null;
    var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
    // thread, like user events. By default, it yields multiple times per frame.
    // It does not attempt to align with frame boundaries, since most tasks don't
    // need to be frame aligned; for those that do, use requestAnimationFrame.
    var frameInterval = frameYieldMs;
    var startTime = -1;
    function shouldYieldToHost() {
        var timeElapsed = exports.unstable_now() - startTime;
        if (timeElapsed < frameInterval) // The main thread has only been blocked for a really short amount of time;
        // smaller than a single frame. Don't yield yet.
        return false;
         // The main thread has been blocked for a non-negligible amount of time. We
        return true;
    }
    function requestPaint() {}
    function forceFrameRate(fps) {
        if (fps < 0 || fps > 125) {
            // Using console['error'] to evade Babel and ESLint
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
        }
        if (fps > 0) frameInterval = Math.floor(1000 / fps);
        else // reset the framerate
        frameInterval = frameYieldMs;
    }
    var performWorkUntilDeadline = function() {
        if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
            // has been blocked.
            startTime = currentTime;
            var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
            // error can be observed.
            //
            // Intentionally not using a try-catch, since that makes some debugging
            // techniques harder. Instead, if `scheduledHostCallback` errors, then
            // `hasMoreWork` will remain true, and we'll continue the work loop.
            var hasMoreWork = true;
            try {
                hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally{
                if (hasMoreWork) // If there's more work, schedule the next message event at the end
                // of the preceding one.
                schedulePerformWorkUntilDeadline();
                else {
                    isMessageLoopRunning = false;
                    scheduledHostCallback = null;
                }
            }
        } else isMessageLoopRunning = false;
         // Yielding to the browser will give it a chance to paint, so we can
    };
    var schedulePerformWorkUntilDeadline;
    if (typeof localSetImmediate === "function") // Node.js and old IE.
    // There's a few reasons for why we prefer setImmediate.
    //
    // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
    // (Even though this is a DOM fork of the Scheduler, you could get here
    // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
    // https://github.com/facebook/react/issues/20756
    //
    // But also, it runs earlier which is the semantic we want.
    // If other browsers ever implement it, it's better to use it.
    // Although both of these would be inferior to native scheduling.
    schedulePerformWorkUntilDeadline = function() {
        localSetImmediate(performWorkUntilDeadline);
    };
    else if (typeof MessageChannel !== "undefined") {
        // DOM and Worker environments.
        // We prefer MessageChannel because of the 4ms setTimeout clamping.
        var channel = new MessageChannel();
        var port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
        };
    } else // We should only fallback here in non-browser environments.
    schedulePerformWorkUntilDeadline = function() {
        localSetTimeout(performWorkUntilDeadline, 0);
    };
    function requestHostCallback(callback) {
        scheduledHostCallback = callback;
        if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
        }
    }
    function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
        }, ms);
    }
    function cancelHostTimeout() {
        localClearTimeout(taskTimeoutID);
        taskTimeoutID = -1;
    }
    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = null;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_Profiling = unstable_Profiling;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_forceFrameRate = forceFrameRate;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_next = unstable_next;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = unstable_wrapCallback;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"e9Zfo":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$2430 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$2430.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "App", ()=>App);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouterDom = require("react-router-dom");
var _mobile = require("./screens/Mobile");
var _search = require("./screens/Search");
var _menu = require("./screens/Menu");
const router = (0, _reactRouterDom.createBrowserRouter)([
    {
        path: "/*",
        element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _mobile.Mobile), {}, void 0, false, {
            fileName: "src/App.jsx",
            lineNumber: 10,
            columnNumber: 14
        }, undefined)
    },
    {
        path: "/mobile-home3",
        element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _mobile.Mobile), {}, void 0, false, {
            fileName: "src/App.jsx",
            lineNumber: 14,
            columnNumber: 14
        }, undefined)
    },
    {
        path: "/search",
        element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _search.Search), {}, void 0, false, {
            fileName: "src/App.jsx",
            lineNumber: 18,
            columnNumber: 14
        }, undefined)
    },
    {
        path: "/menu",
        element: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _menu.Menu), {}, void 0, false, {
            fileName: "src/App.jsx",
            lineNumber: 22,
            columnNumber: 14
        }, undefined)
    }
]);
const App = ()=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouterDom.RouterProvider), {
        router: router
    }, void 0, false, {
        fileName: "src/App.jsx",
        lineNumber: 27,
        columnNumber: 10
    }, undefined);
};
_c = App;
var _c;
$RefreshReg$(_c, "App");

  $parcel$ReactRefreshHelpers$2430.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","react-router-dom":"9xmpe","./screens/Mobile":"2SFoV","./screens/Search":"Pk1l7","./screens/Menu":"1PU47","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"9xmpe":[function(require,module,exports) {
/**
 * React Router DOM v6.22.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AbortedDeferredError", ()=>(0, _reactRouter.AbortedDeferredError));
parcelHelpers.export(exports, "Await", ()=>(0, _reactRouter.Await));
parcelHelpers.export(exports, "MemoryRouter", ()=>(0, _reactRouter.MemoryRouter));
parcelHelpers.export(exports, "Navigate", ()=>(0, _reactRouter.Navigate));
parcelHelpers.export(exports, "NavigationType", ()=>(0, _reactRouter.NavigationType));
parcelHelpers.export(exports, "Outlet", ()=>(0, _reactRouter.Outlet));
parcelHelpers.export(exports, "Route", ()=>(0, _reactRouter.Route));
parcelHelpers.export(exports, "Router", ()=>(0, _reactRouter.Router));
parcelHelpers.export(exports, "Routes", ()=>(0, _reactRouter.Routes));
parcelHelpers.export(exports, "UNSAFE_DataRouterContext", ()=>(0, _reactRouter.UNSAFE_DataRouterContext));
parcelHelpers.export(exports, "UNSAFE_DataRouterStateContext", ()=>(0, _reactRouter.UNSAFE_DataRouterStateContext));
parcelHelpers.export(exports, "UNSAFE_LocationContext", ()=>(0, _reactRouter.UNSAFE_LocationContext));
parcelHelpers.export(exports, "UNSAFE_NavigationContext", ()=>(0, _reactRouter.UNSAFE_NavigationContext));
parcelHelpers.export(exports, "UNSAFE_RouteContext", ()=>(0, _reactRouter.UNSAFE_RouteContext));
parcelHelpers.export(exports, "UNSAFE_useRouteId", ()=>(0, _reactRouter.UNSAFE_useRouteId));
parcelHelpers.export(exports, "createMemoryRouter", ()=>(0, _reactRouter.createMemoryRouter));
parcelHelpers.export(exports, "createPath", ()=>(0, _reactRouter.createPath));
parcelHelpers.export(exports, "createRoutesFromChildren", ()=>(0, _reactRouter.createRoutesFromChildren));
parcelHelpers.export(exports, "createRoutesFromElements", ()=>(0, _reactRouter.createRoutesFromElements));
parcelHelpers.export(exports, "defer", ()=>(0, _reactRouter.defer));
parcelHelpers.export(exports, "generatePath", ()=>(0, _reactRouter.generatePath));
parcelHelpers.export(exports, "isRouteErrorResponse", ()=>(0, _reactRouter.isRouteErrorResponse));
parcelHelpers.export(exports, "json", ()=>(0, _reactRouter.json));
parcelHelpers.export(exports, "matchPath", ()=>(0, _reactRouter.matchPath));
parcelHelpers.export(exports, "matchRoutes", ()=>(0, _reactRouter.matchRoutes));
parcelHelpers.export(exports, "parsePath", ()=>(0, _reactRouter.parsePath));
parcelHelpers.export(exports, "redirect", ()=>(0, _reactRouter.redirect));
parcelHelpers.export(exports, "redirectDocument", ()=>(0, _reactRouter.redirectDocument));
parcelHelpers.export(exports, "renderMatches", ()=>(0, _reactRouter.renderMatches));
parcelHelpers.export(exports, "resolvePath", ()=>(0, _reactRouter.resolvePath));
parcelHelpers.export(exports, "useActionData", ()=>(0, _reactRouter.useActionData));
parcelHelpers.export(exports, "useAsyncError", ()=>(0, _reactRouter.useAsyncError));
parcelHelpers.export(exports, "useAsyncValue", ()=>(0, _reactRouter.useAsyncValue));
parcelHelpers.export(exports, "useBlocker", ()=>(0, _reactRouter.useBlocker));
parcelHelpers.export(exports, "useHref", ()=>(0, _reactRouter.useHref));
parcelHelpers.export(exports, "useInRouterContext", ()=>(0, _reactRouter.useInRouterContext));
parcelHelpers.export(exports, "useLoaderData", ()=>(0, _reactRouter.useLoaderData));
parcelHelpers.export(exports, "useLocation", ()=>(0, _reactRouter.useLocation));
parcelHelpers.export(exports, "useMatch", ()=>(0, _reactRouter.useMatch));
parcelHelpers.export(exports, "useMatches", ()=>(0, _reactRouter.useMatches));
parcelHelpers.export(exports, "useNavigate", ()=>(0, _reactRouter.useNavigate));
parcelHelpers.export(exports, "useNavigation", ()=>(0, _reactRouter.useNavigation));
parcelHelpers.export(exports, "useNavigationType", ()=>(0, _reactRouter.useNavigationType));
parcelHelpers.export(exports, "useOutlet", ()=>(0, _reactRouter.useOutlet));
parcelHelpers.export(exports, "useOutletContext", ()=>(0, _reactRouter.useOutletContext));
parcelHelpers.export(exports, "useParams", ()=>(0, _reactRouter.useParams));
parcelHelpers.export(exports, "useResolvedPath", ()=>(0, _reactRouter.useResolvedPath));
parcelHelpers.export(exports, "useRevalidator", ()=>(0, _reactRouter.useRevalidator));
parcelHelpers.export(exports, "useRouteError", ()=>(0, _reactRouter.useRouteError));
parcelHelpers.export(exports, "useRouteLoaderData", ()=>(0, _reactRouter.useRouteLoaderData));
parcelHelpers.export(exports, "useRoutes", ()=>(0, _reactRouter.useRoutes));
//#endregion
parcelHelpers.export(exports, "BrowserRouter", ()=>BrowserRouter);
parcelHelpers.export(exports, "Form", ()=>Form);
parcelHelpers.export(exports, "HashRouter", ()=>HashRouter);
parcelHelpers.export(exports, "Link", ()=>Link);
parcelHelpers.export(exports, "NavLink", ()=>NavLink);
parcelHelpers.export(exports, "RouterProvider", ()=>RouterProvider);
parcelHelpers.export(exports, "ScrollRestoration", ()=>ScrollRestoration);
parcelHelpers.export(exports, "UNSAFE_FetchersContext", ()=>FetchersContext);
parcelHelpers.export(exports, "UNSAFE_ViewTransitionContext", ()=>ViewTransitionContext);
parcelHelpers.export(exports, "UNSAFE_useScrollRestoration", ()=>useScrollRestoration);
parcelHelpers.export(exports, "createBrowserRouter", ()=>createBrowserRouter);
parcelHelpers.export(exports, "createHashRouter", ()=>createHashRouter);
parcelHelpers.export(exports, "createSearchParams", ()=>createSearchParams);
parcelHelpers.export(exports, "unstable_HistoryRouter", ()=>HistoryRouter);
parcelHelpers.export(exports, "unstable_usePrompt", ()=>usePrompt);
parcelHelpers.export(exports, "unstable_useViewTransitionState", ()=>useViewTransitionState);
parcelHelpers.export(exports, "useBeforeUnload", ()=>useBeforeUnload);
parcelHelpers.export(exports, "useFetcher", ()=>useFetcher);
parcelHelpers.export(exports, "useFetchers", ()=>useFetchers);
parcelHelpers.export(exports, "useFormAction", ()=>useFormAction);
parcelHelpers.export(exports, "useLinkClickHandler", ()=>useLinkClickHandler);
parcelHelpers.export(exports, "useSearchParams", ()=>useSearchParams);
parcelHelpers.export(exports, "useSubmit", ()=>useSubmit);
var _react = require("react");
var _reactDom = require("react-dom");
var _reactRouter = require("react-router");
var _router = require("@remix-run/router");
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
const defaultMethod = "get";
const defaultEncType = "application/x-www-form-urlencoded";
function isHtmlElement(object) {
    return object != null && typeof object.tagName === "string";
}
function isButtonElement(object) {
    return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
    return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
    return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
    return event.button === 0 && // Ignore everything but left clicks
    (!target || target === "_self") && // Let browser handle "target=_blank" etc.
    !isModifiedEvent(event) // Ignore clicks with modifier keys
    ;
}
/**
 * Creates a URLSearchParams object using the given initializer.
 *
 * This is identical to `new URLSearchParams(init)` except it also
 * supports arrays as values in the object form of the initializer
 * instead of just strings. This is convenient when you need multiple
 * values for a given key, but don't want to use an array initializer.
 *
 * For example, instead of:
 *
 *   let searchParams = new URLSearchParams([
 *     ['sort', 'name'],
 *     ['sort', 'price']
 *   ]);
 *
 * you can do:
 *
 *   let searchParams = createSearchParams({
 *     sort: ['name', 'price']
 *   });
 */ function createSearchParams(init) {
    if (init === void 0) init = "";
    return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key)=>{
        let value = init[key];
        return memo.concat(Array.isArray(value) ? value.map((v)=>[
                key,
                v
            ]) : [
            [
                key,
                value
            ]
        ]);
    }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
    let searchParams = createSearchParams(locationSearch);
    if (defaultSearchParams) // Use `defaultSearchParams.forEach(...)` here instead of iterating of
    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to
    // web extensions. Relevant Bugzilla tickets:
    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602
    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984
    defaultSearchParams.forEach((_, key)=>{
        if (!searchParams.has(key)) defaultSearchParams.getAll(key).forEach((value)=>{
            searchParams.append(key, value);
        });
    });
    return searchParams;
}
// One-time check for submitter support
let _formDataSupportsSubmitter = null;
function isFormDataSubmitterSupported() {
    if (_formDataSupportsSubmitter === null) try {
        new FormData(document.createElement("form"), // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0);
        _formDataSupportsSubmitter = false;
    } catch (e) {
        _formDataSupportsSubmitter = true;
    }
    return _formDataSupportsSubmitter;
}
const supportedFormEncTypes = new Set([
    "application/x-www-form-urlencoded",
    "multipart/form-data",
    "text/plain"
]);
function getFormEncType(encType) {
    if (encType != null && !supportedFormEncTypes.has(encType)) {
        (0, _router.UNSAFE_warning)(false, '"' + encType + '" is not a valid `encType` for `<Form>`/`<fetcher.Form>` ' + ('and will default to "' + defaultEncType + '"'));
        return null;
    }
    return encType;
}
function getFormSubmissionInfo(target, basename) {
    let method;
    let action;
    let encType;
    let formData;
    let body;
    if (isFormElement(target)) {
        // When grabbing the action from the element, it will have had the basename
        // prefixed to ensure non-JS scenarios work, so strip it since we'll
        // re-prefix in the router
        let attr = target.getAttribute("action");
        action = attr ? (0, _router.stripBasename)(attr, basename) : null;
        method = target.getAttribute("method") || defaultMethod;
        encType = getFormEncType(target.getAttribute("enctype")) || defaultEncType;
        formData = new FormData(target);
    } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
        let form = target.form;
        if (form == null) throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
        // <button>/<input type="submit"> may override attributes of <form>
        // When grabbing the action from the element, it will have had the basename
        // prefixed to ensure non-JS scenarios work, so strip it since we'll
        // re-prefix in the router
        let attr = target.getAttribute("formaction") || form.getAttribute("action");
        action = attr ? (0, _router.stripBasename)(attr, basename) : null;
        method = target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod;
        encType = getFormEncType(target.getAttribute("formenctype")) || getFormEncType(form.getAttribute("enctype")) || defaultEncType;
        // Build a FormData object populated from a form and submitter
        formData = new FormData(form, target);
        // If this browser doesn't support the `FormData(el, submitter)` format,
        // then tack on the submitter value at the end.  This is a lightweight
        // solution that is not 100% spec compliant.  For complete support in older
        // browsers, consider using the `formdata-submitter-polyfill` package
        if (!isFormDataSubmitterSupported()) {
            let { name, type, value } = target;
            if (type === "image") {
                let prefix = name ? name + "." : "";
                formData.append(prefix + "x", "0");
                formData.append(prefix + "y", "0");
            } else if (name) formData.append(name, value);
        }
    } else if (isHtmlElement(target)) throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    else {
        method = defaultMethod;
        action = null;
        encType = defaultEncType;
        body = target;
    }
    // Send body for <Form encType="text/plain" so we encode it into text
    if (formData && encType === "text/plain") {
        body = formData;
        formData = undefined;
    }
    return {
        action,
        method: method.toLowerCase(),
        encType,
        formData,
        body
    };
}
const _excluded = [
    "onClick",
    "relative",
    "reloadDocument",
    "replace",
    "state",
    "target",
    "to",
    "preventScrollReset",
    "unstable_viewTransition"
], _excluded2 = [
    "aria-current",
    "caseSensitive",
    "className",
    "end",
    "style",
    "to",
    "unstable_viewTransition",
    "children"
], _excluded3 = [
    "fetcherKey",
    "navigate",
    "reloadDocument",
    "replace",
    "state",
    "method",
    "action",
    "onSubmit",
    "relative",
    "preventScrollReset",
    "unstable_viewTransition"
];
// HEY YOU! DON'T TOUCH THIS VARIABLE!
//
// It is replaced with the proper version at build time via a babel plugin in
// the rollup config.
//
// Export a global property onto the window for React Router detection by the
// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`
// to detect and properly classify live websites as being built with React Router:
// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json
const REACT_ROUTER_VERSION = "6";
try {
    window.__reactRouterVersion = REACT_ROUTER_VERSION;
} catch (e) {
// no-op
}
function createBrowserRouter(routes, opts) {
    return (0, _router.createRouter)({
        basename: opts == null ? void 0 : opts.basename,
        future: _extends({}, opts == null ? void 0 : opts.future, {
            v7_prependBasename: true
        }),
        history: (0, _router.createBrowserHistory)({
            window: opts == null ? void 0 : opts.window
        }),
        hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
        routes,
        mapRouteProperties: (0, _reactRouter.UNSAFE_mapRouteProperties),
        window: opts == null ? void 0 : opts.window
    }).initialize();
}
function createHashRouter(routes, opts) {
    return (0, _router.createRouter)({
        basename: opts == null ? void 0 : opts.basename,
        future: _extends({}, opts == null ? void 0 : opts.future, {
            v7_prependBasename: true
        }),
        history: (0, _router.createHashHistory)({
            window: opts == null ? void 0 : opts.window
        }),
        hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
        routes,
        mapRouteProperties: (0, _reactRouter.UNSAFE_mapRouteProperties),
        window: opts == null ? void 0 : opts.window
    }).initialize();
}
function parseHydrationData() {
    var _window;
    let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;
    if (state && state.errors) state = _extends({}, state, {
        errors: deserializeErrors(state.errors)
    });
    return state;
}
function deserializeErrors(errors) {
    if (!errors) return null;
    let entries = Object.entries(errors);
    let serialized = {};
    for (let [key, val] of entries){
        // Hey you!  If you change this, please change the corresponding logic in
        // serializeErrors in react-router-dom/server.tsx :)
        if (val && val.__type === "RouteErrorResponse") serialized[key] = new (0, _router.UNSAFE_ErrorResponseImpl)(val.status, val.statusText, val.data, val.internal === true);
        else if (val && val.__type === "Error") {
            // Attempt to reconstruct the right type of Error (i.e., ReferenceError)
            if (val.__subType) {
                let ErrorConstructor = window[val.__subType];
                if (typeof ErrorConstructor === "function") try {
                    // @ts-expect-error
                    let error = new ErrorConstructor(val.message);
                    // Wipe away the client-side stack trace.  Nothing to fill it in with
                    // because we don't serialize SSR stack traces for security reasons
                    error.stack = "";
                    serialized[key] = error;
                } catch (e) {
                // no-op - fall through and create a normal Error
                }
            }
            if (serialized[key] == null) {
                let error = new Error(val.message);
                // Wipe away the client-side stack trace.  Nothing to fill it in with
                // because we don't serialize SSR stack traces for security reasons
                error.stack = "";
                serialized[key] = error;
            }
        } else serialized[key] = val;
    }
    return serialized;
}
const ViewTransitionContext = /*#__PURE__*/ _react.createContext({
    isTransitioning: false
});
ViewTransitionContext.displayName = "ViewTransition";
const FetchersContext = /*#__PURE__*/ _react.createContext(new Map());
FetchersContext.displayName = "Fetchers";
//#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Components
////////////////////////////////////////////////////////////////////////////////
/**
  Webpack + React 17 fails to compile on any of the following because webpack
  complains that `startTransition` doesn't exist in `React`:
  * import { startTransition } from "react"
  * import * as React from from "react";
    "startTransition" in React ? React.startTransition(() => setState()) : setState()
  * import * as React from from "react";
    "startTransition" in React ? React["startTransition"](() => setState()) : setState()

  Moving it to a constant such as the following solves the Webpack/React 17 issue:
  * import * as React from from "react";
    const START_TRANSITION = "startTransition";
    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()

  However, that introduces webpack/terser minification issues in production builds
  in React 18 where minification/obfuscation ends up removing the call of
  React.startTransition entirely from the first half of the ternary.  Grabbing
  this exported reference once up front resolves that issue.

  See https://github.com/remix-run/react-router/issues/10579
*/ const START_TRANSITION = "startTransition";
const startTransitionImpl = _react[START_TRANSITION];
const FLUSH_SYNC = "flushSync";
const flushSyncImpl = _reactDom[FLUSH_SYNC];
const USE_ID = "useId";
const useIdImpl = _react[USE_ID];
function startTransitionSafe(cb) {
    if (startTransitionImpl) startTransitionImpl(cb);
    else cb();
}
function flushSyncSafe(cb) {
    if (flushSyncImpl) flushSyncImpl(cb);
    else cb();
}
class Deferred {
    constructor(){
        this.status = "pending";
        this.promise = new Promise((resolve, reject)=>{
            this.resolve = (value)=>{
                if (this.status === "pending") {
                    this.status = "resolved";
                    resolve(value);
                }
            };
            this.reject = (reason)=>{
                if (this.status === "pending") {
                    this.status = "rejected";
                    reject(reason);
                }
            };
        });
    }
}
/**
 * Given a Remix Router instance, render the appropriate UI
 */ function RouterProvider(_ref) {
    let { fallbackElement, router, future } = _ref;
    let [state, setStateImpl] = _react.useState(router.state);
    let [pendingState, setPendingState] = _react.useState();
    let [vtContext, setVtContext] = _react.useState({
        isTransitioning: false
    });
    let [renderDfd, setRenderDfd] = _react.useState();
    let [transition, setTransition] = _react.useState();
    let [interruption, setInterruption] = _react.useState();
    let fetcherData = _react.useRef(new Map());
    let { v7_startTransition } = future || {};
    let optInStartTransition = _react.useCallback((cb)=>{
        if (v7_startTransition) startTransitionSafe(cb);
        else cb();
    }, [
        v7_startTransition
    ]);
    let setState = _react.useCallback((newState, _ref2)=>{
        let { deletedFetchers, unstable_flushSync: flushSync, unstable_viewTransitionOpts: viewTransitionOpts } = _ref2;
        deletedFetchers.forEach((key)=>fetcherData.current.delete(key));
        newState.fetchers.forEach((fetcher, key)=>{
            if (fetcher.data !== undefined) fetcherData.current.set(key, fetcher.data);
        });
        let isViewTransitionUnavailable = router.window == null || typeof router.window.document.startViewTransition !== "function";
        // If this isn't a view transition or it's not available in this browser,
        // just update and be done with it
        if (!viewTransitionOpts || isViewTransitionUnavailable) {
            if (flushSync) flushSyncSafe(()=>setStateImpl(newState));
            else optInStartTransition(()=>setStateImpl(newState));
            return;
        }
        // flushSync + startViewTransition
        if (flushSync) {
            // Flush through the context to mark DOM elements as transition=ing
            flushSyncSafe(()=>{
                // Cancel any pending transitions
                if (transition) {
                    renderDfd && renderDfd.resolve();
                    transition.skipTransition();
                }
                setVtContext({
                    isTransitioning: true,
                    flushSync: true,
                    currentLocation: viewTransitionOpts.currentLocation,
                    nextLocation: viewTransitionOpts.nextLocation
                });
            });
            // Update the DOM
            let t = router.window.document.startViewTransition(()=>{
                flushSyncSafe(()=>setStateImpl(newState));
            });
            // Clean up after the animation completes
            t.finished.finally(()=>{
                flushSyncSafe(()=>{
                    setRenderDfd(undefined);
                    setTransition(undefined);
                    setPendingState(undefined);
                    setVtContext({
                        isTransitioning: false
                    });
                });
            });
            flushSyncSafe(()=>setTransition(t));
            return;
        }
        // startTransition + startViewTransition
        if (transition) {
            // Interrupting an in-progress transition, cancel and let everything flush
            // out, and then kick off a new transition from the interruption state
            renderDfd && renderDfd.resolve();
            transition.skipTransition();
            setInterruption({
                state: newState,
                currentLocation: viewTransitionOpts.currentLocation,
                nextLocation: viewTransitionOpts.nextLocation
            });
        } else {
            // Completed navigation update with opted-in view transitions, let 'er rip
            setPendingState(newState);
            setVtContext({
                isTransitioning: true,
                flushSync: false,
                currentLocation: viewTransitionOpts.currentLocation,
                nextLocation: viewTransitionOpts.nextLocation
            });
        }
    }, [
        router.window,
        transition,
        renderDfd,
        fetcherData,
        optInStartTransition
    ]);
    // Need to use a layout effect here so we are subscribed early enough to
    // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)
    _react.useLayoutEffect(()=>router.subscribe(setState), [
        router,
        setState
    ]);
    // When we start a view transition, create a Deferred we can use for the
    // eventual "completed" render
    _react.useEffect(()=>{
        if (vtContext.isTransitioning && !vtContext.flushSync) setRenderDfd(new Deferred());
    }, [
        vtContext
    ]);
    // Once the deferred is created, kick off startViewTransition() to update the
    // DOM and then wait on the Deferred to resolve (indicating the DOM update has
    // happened)
    _react.useEffect(()=>{
        if (renderDfd && pendingState && router.window) {
            let newState = pendingState;
            let renderPromise = renderDfd.promise;
            let transition = router.window.document.startViewTransition(async ()=>{
                optInStartTransition(()=>setStateImpl(newState));
                await renderPromise;
            });
            transition.finished.finally(()=>{
                setRenderDfd(undefined);
                setTransition(undefined);
                setPendingState(undefined);
                setVtContext({
                    isTransitioning: false
                });
            });
            setTransition(transition);
        }
    }, [
        optInStartTransition,
        pendingState,
        renderDfd,
        router.window
    ]);
    // When the new location finally renders and is committed to the DOM, this
    // effect will run to resolve the transition
    _react.useEffect(()=>{
        if (renderDfd && pendingState && state.location.key === pendingState.location.key) renderDfd.resolve();
    }, [
        renderDfd,
        transition,
        state.location,
        pendingState
    ]);
    // If we get interrupted with a new navigation during a transition, we skip
    // the active transition, let it cleanup, then kick it off again here
    _react.useEffect(()=>{
        if (!vtContext.isTransitioning && interruption) {
            setPendingState(interruption.state);
            setVtContext({
                isTransitioning: true,
                flushSync: false,
                currentLocation: interruption.currentLocation,
                nextLocation: interruption.nextLocation
            });
            setInterruption(undefined);
        }
    }, [
        vtContext.isTransitioning,
        interruption
    ]);
    _react.useEffect(()=>{
        (0, _router.UNSAFE_warning)(fallbackElement == null || !router.future.v7_partialHydration, "`<RouterProvider fallbackElement>` is deprecated when using `v7_partialHydration`, use a `HydrateFallback` component instead");
    // Only log this once on initial mount
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    let navigator = _react.useMemo(()=>{
        return {
            createHref: router.createHref,
            encodeLocation: router.encodeLocation,
            go: (n)=>router.navigate(n),
            push: (to, state, opts)=>router.navigate(to, {
                    state,
                    preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
                }),
            replace: (to, state, opts)=>router.navigate(to, {
                    replace: true,
                    state,
                    preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
                })
        };
    }, [
        router
    ]);
    let basename = router.basename || "/";
    let dataRouterContext = _react.useMemo(()=>({
            router,
            navigator,
            static: false,
            basename
        }), [
        router,
        navigator,
        basename
    ]);
    // The fragment and {null} here are important!  We need them to keep React 18's
    // useId happy when we are server-rendering since we may have a <script> here
    // containing the hydrated server-side staticContext (from StaticRouterProvider).
    // useId relies on the component tree structure to generate deterministic id's
    // so we need to ensure it remains the same on the client even though
    // we don't need the <script> tag
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement((0, _reactRouter.UNSAFE_DataRouterContext).Provider, {
        value: dataRouterContext
    }, /*#__PURE__*/ _react.createElement((0, _reactRouter.UNSAFE_DataRouterStateContext).Provider, {
        value: state
    }, /*#__PURE__*/ _react.createElement(FetchersContext.Provider, {
        value: fetcherData.current
    }, /*#__PURE__*/ _react.createElement(ViewTransitionContext.Provider, {
        value: vtContext
    }, /*#__PURE__*/ _react.createElement((0, _reactRouter.Router), {
        basename: basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator: navigator,
        future: {
            v7_relativeSplatPath: router.future.v7_relativeSplatPath
        }
    }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/ _react.createElement(DataRoutes, {
        routes: router.routes,
        future: router.future,
        state: state
    }) : fallbackElement))))), null);
}
function DataRoutes(_ref3) {
    let { routes, future, state } = _ref3;
    return (0, _reactRouter.UNSAFE_useRoutesImpl)(routes, undefined, state, future);
}
/**
 * A `<Router>` for use in web browsers. Provides the cleanest URLs.
 */ function BrowserRouter(_ref4) {
    let { basename, children, future, window: window1 } = _ref4;
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = (0, _router.createBrowserHistory)({
        window: window1,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let { v7_startTransition } = future || {};
    let setState = _react.useCallback((newState)=>{
        v7_startTransition && startTransitionImpl ? startTransitionImpl(()=>setStateImpl(newState)) : setStateImpl(newState);
    }, [
        setStateImpl,
        v7_startTransition
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /*#__PURE__*/ _react.createElement((0, _reactRouter.Router), {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history,
        future: future
    });
}
/**
 * A `<Router>` for use in web browsers. Stores the location in the hash
 * portion of the URL so it is not sent to the server.
 */ function HashRouter(_ref5) {
    let { basename, children, future, window: window1 } = _ref5;
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = (0, _router.createHashHistory)({
        window: window1,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let { v7_startTransition } = future || {};
    let setState = _react.useCallback((newState)=>{
        v7_startTransition && startTransitionImpl ? startTransitionImpl(()=>setStateImpl(newState)) : setStateImpl(newState);
    }, [
        setStateImpl,
        v7_startTransition
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /*#__PURE__*/ _react.createElement((0, _reactRouter.Router), {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history,
        future: future
    });
}
/**
 * A `<Router>` that accepts a pre-instantiated history object. It's important
 * to note that using your own history object is highly discouraged and may add
 * two versions of the history library to your bundles unless you use the same
 * version of the history library that React Router uses internally.
 */ function HistoryRouter(_ref6) {
    let { basename, children, future, history } = _ref6;
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let { v7_startTransition } = future || {};
    let setState = _react.useCallback((newState)=>{
        v7_startTransition && startTransitionImpl ? startTransitionImpl(()=>setStateImpl(newState)) : setStateImpl(newState);
    }, [
        setStateImpl,
        v7_startTransition
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /*#__PURE__*/ _react.createElement((0, _reactRouter.Router), {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history,
        future: future
    });
}
HistoryRouter.displayName = "unstable_HistoryRouter";
const isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
const ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
/**
 * The public API for rendering a history-aware `<a>`.
 */ const Link = /*#__PURE__*/ _react.forwardRef(function LinkWithRef(_ref7, ref) {
    let { onClick, relative, reloadDocument, replace, state, target, to, preventScrollReset, unstable_viewTransition } = _ref7, rest = _objectWithoutPropertiesLoose(_ref7, _excluded);
    let { basename } = _react.useContext((0, _reactRouter.UNSAFE_NavigationContext));
    // Rendered into <a href> for absolute URLs
    let absoluteHref;
    let isExternal = false;
    if (typeof to === "string" && ABSOLUTE_URL_REGEX.test(to)) {
        // Render the absolute href server- and client-side
        absoluteHref = to;
        // Only check for external origins client-side
        if (isBrowser) try {
            let currentUrl = new URL(window.location.href);
            let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
            let path = (0, _router.stripBasename)(targetUrl.pathname, basename);
            if (targetUrl.origin === currentUrl.origin && path != null) // Strip the protocol/origin/basename for same-origin absolute URLs
            to = path + targetUrl.search + targetUrl.hash;
            else isExternal = true;
        } catch (e) {
            // We can't do external URL detection without a valid URL
            (0, _router.UNSAFE_warning)(false, '<Link to="' + to + '"> contains an invalid URL which will probably break ' + "when clicked - please update to a valid URL path.");
        }
    }
    // Rendered into <a href> for relative URLs
    let href = (0, _reactRouter.useHref)(to, {
        relative
    });
    let internalOnClick = useLinkClickHandler(to, {
        replace,
        state,
        target,
        preventScrollReset,
        relative,
        unstable_viewTransition
    });
    function handleClick(event) {
        if (onClick) onClick(event);
        if (!event.defaultPrevented) internalOnClick(event);
    }
    return(/*#__PURE__*/ // eslint-disable-next-line jsx-a11y/anchor-has-content
    _react.createElement("a", _extends({}, rest, {
        href: absoluteHref || href,
        onClick: isExternal || reloadDocument ? onClick : handleClick,
        ref: ref,
        target: target
    })));
});
Link.displayName = "Link";
/**
 * A `<Link>` wrapper that knows if it's "active" or not.
 */ const NavLink = /*#__PURE__*/ _react.forwardRef(function NavLinkWithRef(_ref8, ref) {
    let { "aria-current": ariaCurrentProp = "page", caseSensitive = false, className: classNameProp = "", end = false, style: styleProp, to, unstable_viewTransition, children } = _ref8, rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);
    let path = (0, _reactRouter.useResolvedPath)(to, {
        relative: rest.relative
    });
    let location = (0, _reactRouter.useLocation)();
    let routerState = _react.useContext((0, _reactRouter.UNSAFE_DataRouterStateContext));
    let { navigator, basename } = _react.useContext((0, _reactRouter.UNSAFE_NavigationContext));
    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static
    // eslint-disable-next-line react-hooks/rules-of-hooks
    useViewTransitionState(path) && unstable_viewTransition === true;
    let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;
    let locationPathname = location.pathname;
    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
    if (!caseSensitive) {
        locationPathname = locationPathname.toLowerCase();
        nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;
        toPathname = toPathname.toLowerCase();
    }
    if (nextLocationPathname && basename) nextLocationPathname = (0, _router.stripBasename)(nextLocationPathname, basename) || nextLocationPathname;
    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,
    // we're looking for a slash _after_ what's in `to`.  For example:
    //
    // <NavLink to="/users"> and <NavLink to="/users/">
    // both want to look for a / at index 6 to match URL `/users/matt`
    const endSlashPosition = toPathname !== "/" && toPathname.endsWith("/") ? toPathname.length - 1 : toPathname.length;
    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === "/";
    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");
    let renderProps = {
        isActive,
        isPending,
        isTransitioning
    };
    let ariaCurrent = isActive ? ariaCurrentProp : undefined;
    let className;
    if (typeof classNameProp === "function") className = classNameProp(renderProps);
    else // If the className prop is not a function, we use a default `active`
    // class for <NavLink />s that are active. In v5 `active` was the default
    // value for `activeClassName`, but we are removing that API and can still
    // use the old default behavior for a cleaner upgrade path and keep the
    // simple styling rules working as they currently do.
    className = [
        classNameProp,
        isActive ? "active" : null,
        isPending ? "pending" : null,
        isTransitioning ? "transitioning" : null
    ].filter(Boolean).join(" ");
    let style = typeof styleProp === "function" ? styleProp(renderProps) : styleProp;
    return /*#__PURE__*/ _react.createElement(Link, _extends({}, rest, {
        "aria-current": ariaCurrent,
        className: className,
        ref: ref,
        style: style,
        to: to,
        unstable_viewTransition: unstable_viewTransition
    }), typeof children === "function" ? children(renderProps) : children);
});
NavLink.displayName = "NavLink";
/**
 * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except
 * that the interaction with the server is with `fetch` instead of new document
 * requests, allowing components to add nicer UX to the page as the form is
 * submitted and returns with data.
 */ const Form = /*#__PURE__*/ _react.forwardRef((_ref9, forwardedRef)=>{
    let { fetcherKey, navigate, reloadDocument, replace, state, method = defaultMethod, action, onSubmit, relative, preventScrollReset, unstable_viewTransition } = _ref9, props = _objectWithoutPropertiesLoose(_ref9, _excluded3);
    let submit = useSubmit();
    let formAction = useFormAction(action, {
        relative
    });
    let formMethod = method.toLowerCase() === "get" ? "get" : "post";
    let submitHandler = (event)=>{
        onSubmit && onSubmit(event);
        if (event.defaultPrevented) return;
        event.preventDefault();
        let submitter = event.nativeEvent.submitter;
        let submitMethod = (submitter == null ? void 0 : submitter.getAttribute("formmethod")) || method;
        submit(submitter || event.currentTarget, {
            fetcherKey,
            method: submitMethod,
            navigate,
            replace,
            state,
            relative,
            preventScrollReset,
            unstable_viewTransition
        });
    };
    return /*#__PURE__*/ _react.createElement("form", _extends({
        ref: forwardedRef,
        method: formMethod,
        action: formAction,
        onSubmit: reloadDocument ? onSubmit : submitHandler
    }, props));
});
Form.displayName = "Form";
/**
 * This component will emulate the browser's scroll restoration on location
 * changes.
 */ function ScrollRestoration(_ref10) {
    let { getKey, storageKey } = _ref10;
    useScrollRestoration({
        getKey,
        storageKey
    });
    return null;
}
ScrollRestoration.displayName = "ScrollRestoration";
//#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Hooks
////////////////////////////////////////////////////////////////////////////////
var DataRouterHook;
(function(DataRouterHook) {
    DataRouterHook["UseScrollRestoration"] = "useScrollRestoration";
    DataRouterHook["UseSubmit"] = "useSubmit";
    DataRouterHook["UseSubmitFetcher"] = "useSubmitFetcher";
    DataRouterHook["UseFetcher"] = "useFetcher";
    DataRouterHook["useViewTransitionState"] = "useViewTransitionState";
})(DataRouterHook || (DataRouterHook = {}));
var DataRouterStateHook;
(function(DataRouterStateHook) {
    DataRouterStateHook["UseFetcher"] = "useFetcher";
    DataRouterStateHook["UseFetchers"] = "useFetchers";
    DataRouterStateHook["UseScrollRestoration"] = "useScrollRestoration";
})(DataRouterStateHook || (DataRouterStateHook = {}));
// Internal hooks
function getDataRouterConsoleError(hookName) {
    return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function useDataRouterContext(hookName) {
    let ctx = _react.useContext((0, _reactRouter.UNSAFE_DataRouterContext));
    !ctx && (0, _router.UNSAFE_invariant)(false, getDataRouterConsoleError(hookName));
    return ctx;
}
function useDataRouterState(hookName) {
    let state = _react.useContext((0, _reactRouter.UNSAFE_DataRouterStateContext));
    !state && (0, _router.UNSAFE_invariant)(false, getDataRouterConsoleError(hookName));
    return state;
}
// External hooks
/**
 * Handles the click behavior for router `<Link>` components. This is useful if
 * you need to create custom `<Link>` components with the same click behavior we
 * use in our exported `<Link>`.
 */ function useLinkClickHandler(to, _temp) {
    let { target, replace: replaceProp, state, preventScrollReset, relative, unstable_viewTransition } = _temp === void 0 ? {} : _temp;
    let navigate = (0, _reactRouter.useNavigate)();
    let location = (0, _reactRouter.useLocation)();
    let path = (0, _reactRouter.useResolvedPath)(to, {
        relative
    });
    return _react.useCallback((event)=>{
        if (shouldProcessLinkClick(event, target)) {
            event.preventDefault();
            // If the URL hasn't changed, a regular <a> will do a replace instead of
            // a push, so do the same here unless the replace prop is explicitly set
            let replace = replaceProp !== undefined ? replaceProp : (0, _reactRouter.createPath)(location) === (0, _reactRouter.createPath)(path);
            navigate(to, {
                replace,
                state,
                preventScrollReset,
                relative,
                unstable_viewTransition
            });
        }
    }, [
        location,
        navigate,
        path,
        replaceProp,
        state,
        target,
        to,
        preventScrollReset,
        relative,
        unstable_viewTransition
    ]);
}
/**
 * A convenient wrapper for reading and writing search parameters via the
 * URLSearchParams interface.
 */ function useSearchParams(defaultInit) {
    (0, _router.UNSAFE_warning)(typeof URLSearchParams !== "undefined", "You cannot use the `useSearchParams` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params\n\nIf you're unsure how to load polyfills, we recommend you check out https://polyfill.io/v3/ which provides some recommendations about how to load polyfills only for users that need them, instead of for every user.");
    let defaultSearchParamsRef = _react.useRef(createSearchParams(defaultInit));
    let hasSetSearchParamsRef = _react.useRef(false);
    let location = (0, _reactRouter.useLocation)();
    let searchParams = _react.useMemo(()=>// Only merge in the defaults if we haven't yet called setSearchParams.
        // Once we call that we want those to take precedence, otherwise you can't
        // remove a param with setSearchParams({}) if it has an initial value
        getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [
        location.search
    ]);
    let navigate = (0, _reactRouter.useNavigate)();
    let setSearchParams = _react.useCallback((nextInit, navigateOptions)=>{
        const newSearchParams = createSearchParams(typeof nextInit === "function" ? nextInit(searchParams) : nextInit);
        hasSetSearchParamsRef.current = true;
        navigate("?" + newSearchParams, navigateOptions);
    }, [
        navigate,
        searchParams
    ]);
    return [
        searchParams,
        setSearchParams
    ];
}
function validateClientSideSubmission() {
    if (typeof document === "undefined") throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
}
let fetcherId = 0;
let getUniqueFetcherId = ()=>"__" + String(++fetcherId) + "__";
/**
 * Returns a function that may be used to programmatically submit a form (or
 * some arbitrary data) to the server.
 */ function useSubmit() {
    let { router } = useDataRouterContext(DataRouterHook.UseSubmit);
    let { basename } = _react.useContext((0, _reactRouter.UNSAFE_NavigationContext));
    let currentRouteId = (0, _reactRouter.UNSAFE_useRouteId)();
    return _react.useCallback(function(target, options) {
        if (options === void 0) options = {};
        validateClientSideSubmission();
        let { action, method, encType, formData, body } = getFormSubmissionInfo(target, basename);
        if (options.navigate === false) {
            let key = options.fetcherKey || getUniqueFetcherId();
            router.fetch(key, currentRouteId, options.action || action, {
                preventScrollReset: options.preventScrollReset,
                formData,
                body,
                formMethod: options.method || method,
                formEncType: options.encType || encType,
                unstable_flushSync: options.unstable_flushSync
            });
        } else router.navigate(options.action || action, {
            preventScrollReset: options.preventScrollReset,
            formData,
            body,
            formMethod: options.method || method,
            formEncType: options.encType || encType,
            replace: options.replace,
            state: options.state,
            fromRouteId: currentRouteId,
            unstable_flushSync: options.unstable_flushSync,
            unstable_viewTransition: options.unstable_viewTransition
        });
    }, [
        router,
        basename,
        currentRouteId
    ]);
}
// v7: Eventually we should deprecate this entirely in favor of using the
// router method directly?
function useFormAction(action, _temp2) {
    let { relative } = _temp2 === void 0 ? {} : _temp2;
    let { basename } = _react.useContext((0, _reactRouter.UNSAFE_NavigationContext));
    let routeContext = _react.useContext((0, _reactRouter.UNSAFE_RouteContext));
    !routeContext && (0, _router.UNSAFE_invariant)(false, "useFormAction must be used inside a RouteContext");
    let [match] = routeContext.matches.slice(-1);
    // Shallow clone path so we can modify it below, otherwise we modify the
    // object referenced by useMemo inside useResolvedPath
    let path = _extends({}, (0, _reactRouter.useResolvedPath)(action ? action : ".", {
        relative
    }));
    // If no action was specified, browsers will persist current search params
    // when determining the path, so match that behavior
    // https://github.com/remix-run/remix/issues/927
    let location = (0, _reactRouter.useLocation)();
    if (action == null) {
        // Safe to write to this directly here since if action was undefined, we
        // would have called useResolvedPath(".") which will never include a search
        path.search = location.search;
        // When grabbing search params from the URL, remove any included ?index param
        // since it might not apply to our contextual route.  We add it back based
        // on match.route.index below
        let params = new URLSearchParams(path.search);
        if (params.has("index") && params.get("index") === "") {
            params.delete("index");
            path.search = params.toString() ? "?" + params.toString() : "";
        }
    }
    if ((!action || action === ".") && match.route.index) path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
    // If we're operating within a basename, prepend it to the pathname prior
    // to creating the form action.  If this is a root navigation, then just use
    // the raw basename which allows the basename to have full control over the
    // presence of a trailing slash on root actions
    if (basename !== "/") path.pathname = path.pathname === "/" ? basename : (0, _router.joinPaths)([
        basename,
        path.pathname
    ]);
    return (0, _reactRouter.createPath)(path);
}
// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`
/**
 * Interacts with route loaders and actions without causing a navigation. Great
 * for any interaction that stays on the same page.
 */ function useFetcher(_temp3) {
    var _route$matches;
    let { key } = _temp3 === void 0 ? {} : _temp3;
    let { router } = useDataRouterContext(DataRouterHook.UseFetcher);
    let state = useDataRouterState(DataRouterStateHook.UseFetcher);
    let fetcherData = _react.useContext(FetchersContext);
    let route = _react.useContext((0, _reactRouter.UNSAFE_RouteContext));
    let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;
    !fetcherData && (0, _router.UNSAFE_invariant)(false, "useFetcher must be used inside a FetchersContext");
    !route && (0, _router.UNSAFE_invariant)(false, "useFetcher must be used inside a RouteContext");
    !(routeId != null) && (0, _router.UNSAFE_invariant)(false, 'useFetcher can only be used on routes that contain a unique "id"');
    // Fetcher key handling
    // OK to call conditionally to feature detect `useId`
    // eslint-disable-next-line react-hooks/rules-of-hooks
    let defaultKey = useIdImpl ? useIdImpl() : "";
    let [fetcherKey, setFetcherKey] = _react.useState(key || defaultKey);
    if (key && key !== fetcherKey) setFetcherKey(key);
    else if (!fetcherKey) // We will only fall through here when `useId` is not available
    setFetcherKey(getUniqueFetcherId());
    // Registration/cleanup
    _react.useEffect(()=>{
        router.getFetcher(fetcherKey);
        return ()=>{
            // Tell the router we've unmounted - if v7_fetcherPersist is enabled this
            // will not delete immediately but instead queue up a delete after the
            // fetcher returns to an `idle` state
            router.deleteFetcher(fetcherKey);
        };
    }, [
        router,
        fetcherKey
    ]);
    // Fetcher additions
    let load = _react.useCallback((href, opts)=>{
        !routeId && (0, _router.UNSAFE_invariant)(false, "No routeId available for fetcher.load()");
        router.fetch(fetcherKey, routeId, href, opts);
    }, [
        fetcherKey,
        routeId,
        router
    ]);
    let submitImpl = useSubmit();
    let submit = _react.useCallback((target, opts)=>{
        submitImpl(target, _extends({}, opts, {
            navigate: false,
            fetcherKey
        }));
    }, [
        fetcherKey,
        submitImpl
    ]);
    let FetcherForm = _react.useMemo(()=>{
        let FetcherForm = /*#__PURE__*/ _react.forwardRef((props, ref)=>{
            return /*#__PURE__*/ _react.createElement(Form, _extends({}, props, {
                navigate: false,
                fetcherKey: fetcherKey,
                ref: ref
            }));
        });
        FetcherForm.displayName = "fetcher.Form";
        return FetcherForm;
    }, [
        fetcherKey
    ]);
    // Exposed FetcherWithComponents
    let fetcher = state.fetchers.get(fetcherKey) || (0, _router.IDLE_FETCHER);
    let data = fetcherData.get(fetcherKey);
    let fetcherWithComponents = _react.useMemo(()=>_extends({
            Form: FetcherForm,
            submit,
            load
        }, fetcher, {
            data
        }), [
        FetcherForm,
        submit,
        load,
        fetcher,
        data
    ]);
    return fetcherWithComponents;
}
/**
 * Provides all fetchers currently on the page. Useful for layouts and parent
 * routes that need to provide pending/optimistic UI regarding the fetch.
 */ function useFetchers() {
    let state = useDataRouterState(DataRouterStateHook.UseFetchers);
    return Array.from(state.fetchers.entries()).map((_ref11)=>{
        let [key, fetcher] = _ref11;
        return _extends({}, fetcher, {
            key
        });
    });
}
const SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions";
let savedScrollPositions = {};
/**
 * When rendered inside a RouterProvider, will restore scroll positions on navigations
 */ function useScrollRestoration(_temp4) {
    let { getKey, storageKey } = _temp4 === void 0 ? {} : _temp4;
    let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);
    let { restoreScrollPosition, preventScrollReset } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);
    let { basename } = _react.useContext((0, _reactRouter.UNSAFE_NavigationContext));
    let location = (0, _reactRouter.useLocation)();
    let matches = (0, _reactRouter.useMatches)();
    let navigation = (0, _reactRouter.useNavigation)();
    // Trigger manual scroll restoration while we're active
    _react.useEffect(()=>{
        window.history.scrollRestoration = "manual";
        return ()=>{
            window.history.scrollRestoration = "auto";
        };
    }, []);
    // Save positions on pagehide
    usePageHide(_react.useCallback(()=>{
        if (navigation.state === "idle") {
            let key = (getKey ? getKey(location, matches) : null) || location.key;
            savedScrollPositions[key] = window.scrollY;
        }
        try {
            sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));
        } catch (error) {
            (0, _router.UNSAFE_warning)(false, "Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (" + error + ").");
        }
        window.history.scrollRestoration = "auto";
    }, [
        storageKey,
        getKey,
        navigation.state,
        location,
        matches
    ]));
    // Read in any saved scroll locations
    if (typeof document !== "undefined") {
        // eslint-disable-next-line react-hooks/rules-of-hooks
        _react.useLayoutEffect(()=>{
            try {
                let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);
                if (sessionPositions) savedScrollPositions = JSON.parse(sessionPositions);
            } catch (e) {
            // no-op, use default empty object
            }
        }, [
            storageKey
        ]);
        // Enable scroll restoration in the router
        // eslint-disable-next-line react-hooks/rules-of-hooks
        _react.useLayoutEffect(()=>{
            let getKeyWithoutBasename = getKey && basename !== "/" ? (location, matches)=>getKey(_extends({}, location, {
                    pathname: (0, _router.stripBasename)(location.pathname, basename) || location.pathname
                }), matches) : getKey;
            let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, ()=>window.scrollY, getKeyWithoutBasename);
            return ()=>disableScrollRestoration && disableScrollRestoration();
        }, [
            router,
            basename,
            getKey
        ]);
        // Restore scrolling when state.restoreScrollPosition changes
        // eslint-disable-next-line react-hooks/rules-of-hooks
        _react.useLayoutEffect(()=>{
            // Explicit false means don't do anything (used for submissions)
            if (restoreScrollPosition === false) return;
            // been here before, scroll to it
            if (typeof restoreScrollPosition === "number") {
                window.scrollTo(0, restoreScrollPosition);
                return;
            }
            // try to scroll to the hash
            if (location.hash) {
                let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));
                if (el) {
                    el.scrollIntoView();
                    return;
                }
            }
            // Don't reset if this navigation opted out
            if (preventScrollReset === true) return;
            // otherwise go to the top on new locations
            window.scrollTo(0, 0);
        }, [
            location,
            restoreScrollPosition,
            preventScrollReset
        ]);
    }
}
/**
 * Setup a callback to be fired on the window's `beforeunload` event. This is
 * useful for saving some data to `window.localStorage` just before the page
 * refreshes.
 *
 * Note: The `callback` argument should be a function created with
 * `React.useCallback()`.
 */ function useBeforeUnload(callback, options) {
    let { capture } = options || {};
    _react.useEffect(()=>{
        let opts = capture != null ? {
            capture
        } : undefined;
        window.addEventListener("beforeunload", callback, opts);
        return ()=>{
            window.removeEventListener("beforeunload", callback, opts);
        };
    }, [
        callback,
        capture
    ]);
}
/**
 * Setup a callback to be fired on the window's `pagehide` event. This is
 * useful for saving some data to `window.localStorage` just before the page
 * refreshes.  This event is better supported than beforeunload across browsers.
 *
 * Note: The `callback` argument should be a function created with
 * `React.useCallback()`.
 */ function usePageHide(callback, options) {
    let { capture } = options || {};
    _react.useEffect(()=>{
        let opts = capture != null ? {
            capture
        } : undefined;
        window.addEventListener("pagehide", callback, opts);
        return ()=>{
            window.removeEventListener("pagehide", callback, opts);
        };
    }, [
        callback,
        capture
    ]);
}
/**
 * Wrapper around useBlocker to show a window.confirm prompt to users instead
 * of building a custom UI with useBlocker.
 *
 * Warning: This has *a lot of rough edges* and behaves very differently (and
 * very incorrectly in some cases) across browsers if user click addition
 * back/forward navigations while the confirm is open.  Use at your own risk.
 */ function usePrompt(_ref12) {
    let { when, message } = _ref12;
    let blocker = (0, _reactRouter.useBlocker)(when);
    _react.useEffect(()=>{
        if (blocker.state === "blocked") {
            let proceed = window.confirm(message);
            if (proceed) // This timeout is needed to avoid a weird "race" on POP navigations
            // between the `window.history` revert navigation and the result of
            // `window.confirm`
            setTimeout(blocker.proceed, 0);
            else blocker.reset();
        }
    }, [
        blocker,
        message
    ]);
    _react.useEffect(()=>{
        if (blocker.state === "blocked" && !when) blocker.reset();
    }, [
        blocker,
        when
    ]);
}
/**
 * Return a boolean indicating if there is an active view transition to the
 * given href.  You can use this value to render CSS classes or viewTransitionName
 * styles onto your elements
 *
 * @param href The destination href
 * @param [opts.relative] Relative routing type ("route" | "path")
 */ function useViewTransitionState(to, opts) {
    if (opts === void 0) opts = {};
    let vtContext = _react.useContext(ViewTransitionContext);
    !(vtContext != null) && (0, _router.UNSAFE_invariant)(false, "`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");
    let { basename } = useDataRouterContext(DataRouterHook.useViewTransitionState);
    let path = (0, _reactRouter.useResolvedPath)(to, {
        relative: opts.relative
    });
    if (!vtContext.isTransitioning) return false;
    let currentPath = (0, _router.stripBasename)(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;
    let nextPath = (0, _router.stripBasename)(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;
    // Transition is active if we're going to or coming from the indicated
    // destination.  This ensures that other PUSH navigations that reverse
    // an indicated transition apply.  I.e., on the list view you have:
    //
    //   <NavLink to="/details/1" unstable_viewTransition>
    //
    // If you click the breadcrumb back to the list view:
    //
    //   <NavLink to="/list" unstable_viewTransition>
    //
    // We should apply the transition because it's indicated as active going
    // from /list -> /details/1 and therefore should be active on the reverse
    // (even though this isn't strictly a POP reverse)
    return (0, _router.matchPath)(path.pathname, nextPath) != null || (0, _router.matchPath)(path.pathname, currentPath) != null;
}

},{"react":"21dqq","react-dom":"j6uA9","react-router":"dbWyW","@remix-run/router":"5ncDG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dbWyW":[function(require,module,exports) {
/**
 * React Router v6.22.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AbortedDeferredError", ()=>(0, _router.AbortedDeferredError));
parcelHelpers.export(exports, "NavigationType", ()=>(0, _router.Action));
parcelHelpers.export(exports, "createPath", ()=>(0, _router.createPath));
parcelHelpers.export(exports, "defer", ()=>(0, _router.defer));
parcelHelpers.export(exports, "generatePath", ()=>(0, _router.generatePath));
parcelHelpers.export(exports, "isRouteErrorResponse", ()=>(0, _router.isRouteErrorResponse));
parcelHelpers.export(exports, "json", ()=>(0, _router.json));
parcelHelpers.export(exports, "matchPath", ()=>(0, _router.matchPath));
parcelHelpers.export(exports, "matchRoutes", ()=>(0, _router.matchRoutes));
parcelHelpers.export(exports, "parsePath", ()=>(0, _router.parsePath));
parcelHelpers.export(exports, "redirect", ()=>(0, _router.redirect));
parcelHelpers.export(exports, "redirectDocument", ()=>(0, _router.redirectDocument));
parcelHelpers.export(exports, "resolvePath", ()=>(0, _router.resolvePath));
parcelHelpers.export(exports, "Await", ()=>Await);
parcelHelpers.export(exports, "MemoryRouter", ()=>MemoryRouter);
parcelHelpers.export(exports, "Navigate", ()=>Navigate);
parcelHelpers.export(exports, "Outlet", ()=>Outlet);
parcelHelpers.export(exports, "Route", ()=>Route);
parcelHelpers.export(exports, "Router", ()=>Router);
parcelHelpers.export(exports, "RouterProvider", ()=>RouterProvider);
parcelHelpers.export(exports, "Routes", ()=>Routes);
parcelHelpers.export(exports, "UNSAFE_DataRouterContext", ()=>DataRouterContext);
parcelHelpers.export(exports, "UNSAFE_DataRouterStateContext", ()=>DataRouterStateContext);
parcelHelpers.export(exports, "UNSAFE_LocationContext", ()=>LocationContext);
parcelHelpers.export(exports, "UNSAFE_NavigationContext", ()=>NavigationContext);
parcelHelpers.export(exports, "UNSAFE_RouteContext", ()=>RouteContext);
parcelHelpers.export(exports, "UNSAFE_mapRouteProperties", ()=>mapRouteProperties);
parcelHelpers.export(exports, "UNSAFE_useRouteId", ()=>useRouteId);
parcelHelpers.export(exports, "UNSAFE_useRoutesImpl", ()=>useRoutesImpl);
parcelHelpers.export(exports, "createMemoryRouter", ()=>createMemoryRouter);
parcelHelpers.export(exports, "createRoutesFromChildren", ()=>createRoutesFromChildren);
parcelHelpers.export(exports, "createRoutesFromElements", ()=>createRoutesFromChildren);
parcelHelpers.export(exports, "renderMatches", ()=>renderMatches);
parcelHelpers.export(exports, "useActionData", ()=>useActionData);
parcelHelpers.export(exports, "useAsyncError", ()=>useAsyncError);
parcelHelpers.export(exports, "useAsyncValue", ()=>useAsyncValue);
parcelHelpers.export(exports, "useBlocker", ()=>useBlocker);
parcelHelpers.export(exports, "useHref", ()=>useHref);
parcelHelpers.export(exports, "useInRouterContext", ()=>useInRouterContext);
parcelHelpers.export(exports, "useLoaderData", ()=>useLoaderData);
parcelHelpers.export(exports, "useLocation", ()=>useLocation);
parcelHelpers.export(exports, "useMatch", ()=>useMatch);
parcelHelpers.export(exports, "useMatches", ()=>useMatches);
parcelHelpers.export(exports, "useNavigate", ()=>useNavigate);
parcelHelpers.export(exports, "useNavigation", ()=>useNavigation);
parcelHelpers.export(exports, "useNavigationType", ()=>useNavigationType);
parcelHelpers.export(exports, "useOutlet", ()=>useOutlet);
parcelHelpers.export(exports, "useOutletContext", ()=>useOutletContext);
parcelHelpers.export(exports, "useParams", ()=>useParams);
parcelHelpers.export(exports, "useResolvedPath", ()=>useResolvedPath);
parcelHelpers.export(exports, "useRevalidator", ()=>useRevalidator);
parcelHelpers.export(exports, "useRouteError", ()=>useRouteError);
parcelHelpers.export(exports, "useRouteLoaderData", ()=>useRouteLoaderData);
parcelHelpers.export(exports, "useRoutes", ()=>useRoutes);
var _react = require("react");
var _router = require("@remix-run/router");
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
// Create react-specific types from the agnostic types in @remix-run/router to
// export from react-router
const DataRouterContext = /*#__PURE__*/ _react.createContext(null);
DataRouterContext.displayName = "DataRouter";
const DataRouterStateContext = /*#__PURE__*/ _react.createContext(null);
DataRouterStateContext.displayName = "DataRouterState";
const AwaitContext = /*#__PURE__*/ _react.createContext(null);
AwaitContext.displayName = "Await";
/**
 * A Navigator is a "location changer"; it's how you get to different locations.
 *
 * Every history instance conforms to the Navigator interface, but the
 * distinction is useful primarily when it comes to the low-level `<Router>` API
 * where both the location and a navigator must be provided separately in order
 * to avoid "tearing" that may occur in a suspense-enabled app if the action
 * and/or location were to be read directly from the history instance.
 */ const NavigationContext = /*#__PURE__*/ _react.createContext(null);
NavigationContext.displayName = "Navigation";
const LocationContext = /*#__PURE__*/ _react.createContext(null);
LocationContext.displayName = "Location";
const RouteContext = /*#__PURE__*/ _react.createContext({
    outlet: null,
    matches: [],
    isDataRoute: false
});
RouteContext.displayName = "Route";
const RouteErrorContext = /*#__PURE__*/ _react.createContext(null);
RouteErrorContext.displayName = "RouteError";
/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/hooks/use-href
 */ function useHref(to, _temp) {
    let { relative } = _temp === void 0 ? {} : _temp;
    !useInRouterContext() && (0, _router.UNSAFE_invariant)(false, // router loaded. We can help them understand how to avoid that.
    "useHref() may be used only in the context of a <Router> component.");
    let { basename, navigator } = _react.useContext(NavigationContext);
    let { hash, pathname, search } = useResolvedPath(to, {
        relative
    });
    let joinedPathname = pathname;
    // If we're operating within a basename, prepend it to the pathname prior
    // to creating the href.  If this is a root navigation, then just use the raw
    // basename which allows the basename to have full control over the presence
    // of a trailing slash on root links
    if (basename !== "/") joinedPathname = pathname === "/" ? basename : (0, _router.joinPaths)([
        basename,
        pathname
    ]);
    return navigator.createHref({
        pathname: joinedPathname,
        search,
        hash
    });
}
/**
 * Returns true if this component is a descendant of a `<Router>`.
 *
 * @see https://reactrouter.com/hooks/use-in-router-context
 */ function useInRouterContext() {
    return _react.useContext(LocationContext) != null;
}
/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/hooks/use-location
 */ function useLocation() {
    !useInRouterContext() && (0, _router.UNSAFE_invariant)(false, // router loaded. We can help them understand how to avoid that.
    "useLocation() may be used only in the context of a <Router> component.");
    return _react.useContext(LocationContext).location;
}
/**
 * Returns the current navigation action which describes how the router came to
 * the current location, either by a pop, push, or replace on the history stack.
 *
 * @see https://reactrouter.com/hooks/use-navigation-type
 */ function useNavigationType() {
    return _react.useContext(LocationContext).navigationType;
}
/**
 * Returns a PathMatch object if the given pattern matches the current URL.
 * This is useful for components that need to know "active" state, e.g.
 * `<NavLink>`.
 *
 * @see https://reactrouter.com/hooks/use-match
 */ function useMatch(pattern) {
    !useInRouterContext() && (0, _router.UNSAFE_invariant)(false, // router loaded. We can help them understand how to avoid that.
    "useMatch() may be used only in the context of a <Router> component.");
    let { pathname } = useLocation();
    return _react.useMemo(()=>(0, _router.matchPath)(pattern, pathname), [
        pathname,
        pattern
    ]);
}
/**
 * The interface for the navigate() function returned from useNavigate().
 */ const navigateEffectWarning = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
// Mute warnings for calls to useNavigate in SSR environments
function useIsomorphicLayoutEffect(cb) {
    let isStatic = _react.useContext(NavigationContext).static;
    if (!isStatic) // We should be able to get rid of this once react 18.3 is released
    // See: https://github.com/facebook/react/pull/26395
    // eslint-disable-next-line react-hooks/rules-of-hooks
    _react.useLayoutEffect(cb);
}
/**
 * Returns an imperative method for changing the location. Used by `<Link>`s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/hooks/use-navigate
 */ function useNavigate() {
    let { isDataRoute } = _react.useContext(RouteContext);
    // Conditional usage is OK here because the usage of a data router is static
    // eslint-disable-next-line react-hooks/rules-of-hooks
    return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
    !useInRouterContext() && (0, _router.UNSAFE_invariant)(false, // router loaded. We can help them understand how to avoid that.
    "useNavigate() may be used only in the context of a <Router> component.");
    let dataRouterContext = _react.useContext(DataRouterContext);
    let { basename, future, navigator } = _react.useContext(NavigationContext);
    let { matches } = _react.useContext(RouteContext);
    let { pathname: locationPathname } = useLocation();
    let routePathnamesJson = JSON.stringify((0, _router.UNSAFE_getResolveToMatches)(matches, future.v7_relativeSplatPath));
    let activeRef = _react.useRef(false);
    useIsomorphicLayoutEffect(()=>{
        activeRef.current = true;
    });
    let navigate = _react.useCallback(function(to, options) {
        if (options === void 0) options = {};
        (0, _router.UNSAFE_warning)(activeRef.current, navigateEffectWarning);
        // Short circuit here since if this happens on first render the navigate
        // is useless because we haven't wired up our history listener yet
        if (!activeRef.current) return;
        if (typeof to === "number") {
            navigator.go(to);
            return;
        }
        let path = (0, _router.resolveTo)(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
        // If we're operating within a basename, prepend it to the pathname prior
        // to handing off to history (but only if we're not in a data router,
        // otherwise it'll prepend the basename inside of the router).
        // If this is a root navigation, then we navigate to the raw basename
        // which allows the basename to have full control over the presence of a
        // trailing slash on root links
        if (dataRouterContext == null && basename !== "/") path.pathname = path.pathname === "/" ? basename : (0, _router.joinPaths)([
            basename,
            path.pathname
        ]);
        (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);
    }, [
        basename,
        navigator,
        routePathnamesJson,
        locationPathname,
        dataRouterContext
    ]);
    return navigate;
}
const OutletContext = /*#__PURE__*/ _react.createContext(null);
/**
 * Returns the context (if provided) for the child route at this level of the route
 * hierarchy.
 * @see https://reactrouter.com/hooks/use-outlet-context
 */ function useOutletContext() {
    return _react.useContext(OutletContext);
}
/**
 * Returns the element for the child route at this level of the route
 * hierarchy. Used internally by `<Outlet>` to render child routes.
 *
 * @see https://reactrouter.com/hooks/use-outlet
 */ function useOutlet(context) {
    let outlet = _react.useContext(RouteContext).outlet;
    if (outlet) return /*#__PURE__*/ _react.createElement(OutletContext.Provider, {
        value: context
    }, outlet);
    return outlet;
}
/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/hooks/use-params
 */ function useParams() {
    let { matches } = _react.useContext(RouteContext);
    let routeMatch = matches[matches.length - 1];
    return routeMatch ? routeMatch.params : {};
}
/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/hooks/use-resolved-path
 */ function useResolvedPath(to, _temp2) {
    let { relative } = _temp2 === void 0 ? {} : _temp2;
    let { future } = _react.useContext(NavigationContext);
    let { matches } = _react.useContext(RouteContext);
    let { pathname: locationPathname } = useLocation();
    let routePathnamesJson = JSON.stringify((0, _router.UNSAFE_getResolveToMatches)(matches, future.v7_relativeSplatPath));
    return _react.useMemo(()=>(0, _router.resolveTo)(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [
        to,
        routePathnamesJson,
        locationPathname,
        relative
    ]);
}
/**
 * Returns the element of the route that matched the current location, prepared
 * with the correct context to render the remainder of the route tree. Route
 * elements in the tree must render an `<Outlet>` to render their child route's
 * element.
 *
 * @see https://reactrouter.com/hooks/use-routes
 */ function useRoutes(routes, locationArg) {
    return useRoutesImpl(routes, locationArg);
}
// Internal implementation with accept optional param for RouterProvider usage
function useRoutesImpl(routes, locationArg, dataRouterState, future) {
    !useInRouterContext() && (0, _router.UNSAFE_invariant)(false, // router loaded. We can help them understand how to avoid that.
    "useRoutes() may be used only in the context of a <Router> component.");
    let { navigator } = _react.useContext(NavigationContext);
    let { matches: parentMatches } = _react.useContext(RouteContext);
    let routeMatch = parentMatches[parentMatches.length - 1];
    let parentParams = routeMatch ? routeMatch.params : {};
    let parentPathname = routeMatch ? routeMatch.pathname : "/";
    let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
    let parentRoute = routeMatch && routeMatch.route;
    {
        // You won't get a warning about 2 different <Routes> under a <Route>
        // without a trailing *, but this is a best-effort warning anyway since we
        // cannot even give the warning unless they land at the parent route.
        //
        // Example:
        //
        // <Routes>
        //   {/* This route path MUST end with /* because otherwise
        //       it will never match /blog/post/123 */}
        //   <Route path="blog" element={<Blog />} />
        //   <Route path="blog/feed" element={<BlogFeed />} />
        // </Routes>
        //
        // function Blog() {
        //   return (
        //     <Routes>
        //       <Route path="post/:id" element={<Post />} />
        //     </Routes>
        //   );
        // }
        let parentPath = parentRoute && parentRoute.path || "";
        warningOnce(parentPathname, !parentRoute || parentPath.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ('"' + parentPathname + '" (under <Route path="' + parentPath + '">) but the ') + 'parent route path has no trailing "*". This means if you navigate ' + "deeper, the parent won't match anymore and therefore the child " + "routes will never render.\n\n" + ('Please change the parent <Route path="' + parentPath + '"> to <Route ') + ('path="' + (parentPath === "/" ? "*" : parentPath + "/*") + '">.'));
    }
    let locationFromContext = useLocation();
    let location;
    if (locationArg) {
        var _parsedLocationArg$pa;
        let parsedLocationArg = typeof locationArg === "string" ? (0, _router.parsePath)(locationArg) : locationArg;
        !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) && (0, _router.UNSAFE_invariant)(false, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ('matched by all parent routes. The current pathname base is "' + parentPathnameBase + '" ') + ('but pathname "' + parsedLocationArg.pathname + '" was given in the `location` prop.'));
        location = parsedLocationArg;
    } else location = locationFromContext;
    let pathname = location.pathname || "/";
    let remainingPathname = pathname;
    if (parentPathnameBase !== "/") {
        // Determine the remaining pathname by removing the # of URL segments the
        // parentPathnameBase has, instead of removing based on character count.
        // This is because we can't guarantee that incoming/outgoing encodings/
        // decodings will match exactly.
        // We decode paths before matching on a per-segment basis with
        // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they
        // match what `window.location.pathname` would reflect.  Those don't 100%
        // align when it comes to encoded URI characters such as % and &.
        //
        // So we may end up with:
        //   pathname:           "/descendant/a%25b/match"
        //   parentPathnameBase: "/descendant/a%b"
        //
        // And the direct substring removal approach won't work :/
        let parentSegments = parentPathnameBase.replace(/^\//, "").split("/");
        let segments = pathname.replace(/^\//, "").split("/");
        remainingPathname = "/" + segments.slice(parentSegments.length).join("/");
    }
    let matches = (0, _router.matchRoutes)(routes, {
        pathname: remainingPathname
    });
    (0, _router.UNSAFE_warning)(parentRoute || matches != null, 'No routes matched location "' + location.pathname + location.search + location.hash + '" ');
    (0, _router.UNSAFE_warning)(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, 'Matched leaf route at location "' + location.pathname + location.search + location.hash + '" ' + "does not have an element or Component. This means it will render an <Outlet /> with a " + 'null value by default resulting in an "empty" page.');
    let renderedMatches = _renderMatches(matches && matches.map((match)=>Object.assign({}, match, {
            params: Object.assign({}, parentParams, match.params),
            pathname: (0, _router.joinPaths)([
                parentPathnameBase,
                // Re-encode pathnames that were decoded inside matchRoutes
                navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname
            ]),
            pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : (0, _router.joinPaths)([
                parentPathnameBase,
                // Re-encode pathnames that were decoded inside matchRoutes
                navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
            ])
        })), parentMatches, dataRouterState, future);
    // When a user passes in a `locationArg`, the associated routes need to
    // be wrapped in a new `LocationContext.Provider` in order for `useLocation`
    // to use the scoped location instead of the global location.
    if (locationArg && renderedMatches) return /*#__PURE__*/ _react.createElement(LocationContext.Provider, {
        value: {
            location: _extends({
                pathname: "/",
                search: "",
                hash: "",
                state: null,
                key: "default"
            }, location),
            navigationType: (0, _router.Action).Pop
        }
    }, renderedMatches);
    return renderedMatches;
}
function DefaultErrorComponent() {
    let error = useRouteError();
    let message = (0, _router.isRouteErrorResponse)(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);
    let stack = error instanceof Error ? error.stack : null;
    let lightgrey = "rgba(200,200,200, 0.5)";
    let preStyles = {
        padding: "0.5rem",
        backgroundColor: lightgrey
    };
    let codeStyles = {
        padding: "2px 4px",
        backgroundColor: lightgrey
    };
    let devInfo = null;
    console.error("Error handled by React Router default ErrorBoundary:", error);
    devInfo = /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement("p", null, "\uD83D\uDCBF Hey developer \uD83D\uDC4B"), /*#__PURE__*/ _react.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /*#__PURE__*/ _react.createElement("code", {
        style: codeStyles
    }, "ErrorBoundary"), " or", " ", /*#__PURE__*/ _react.createElement("code", {
        style: codeStyles
    }, "errorElement"), " prop on your route."));
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement("h2", null, "Unexpected Application Error!"), /*#__PURE__*/ _react.createElement("h3", {
        style: {
            fontStyle: "italic"
        }
    }, message), stack ? /*#__PURE__*/ _react.createElement("pre", {
        style: preStyles
    }, stack) : null, devInfo);
}
const defaultErrorElement = /*#__PURE__*/ _react.createElement(DefaultErrorComponent, null);
class RenderErrorBoundary extends _react.Component {
    constructor(props){
        super(props);
        this.state = {
            location: props.location,
            revalidation: props.revalidation,
            error: props.error
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error: error
        };
    }
    static getDerivedStateFromProps(props, state) {
        // When we get into an error state, the user will likely click "back" to the
        // previous page that didn't have an error. Because this wraps the entire
        // application, that will have no effect--the error page continues to display.
        // This gives us a mechanism to recover from the error when the location changes.
        //
        // Whether we're in an error state or not, we update the location in state
        // so that when we are in an error state, it gets reset when a new location
        // comes in and the user recovers from the error.
        if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") return {
            error: props.error,
            location: props.location,
            revalidation: props.revalidation
        };
        // If we're not changing locations, preserve the location but still surface
        // any new errors that may come through. We retain the existing error, we do
        // this because the error provided from the app state may be cleared without
        // the location changing.
        return {
            error: props.error !== undefined ? props.error : state.error,
            location: state.location,
            revalidation: props.revalidation || state.revalidation
        };
    }
    componentDidCatch(error, errorInfo) {
        console.error("React Router caught the following error during render", error, errorInfo);
    }
    render() {
        return this.state.error !== undefined ? /*#__PURE__*/ _react.createElement(RouteContext.Provider, {
            value: this.props.routeContext
        }, /*#__PURE__*/ _react.createElement(RouteErrorContext.Provider, {
            value: this.state.error,
            children: this.props.component
        })) : this.props.children;
    }
}
function RenderedRoute(_ref) {
    let { routeContext, match, children } = _ref;
    let dataRouterContext = _react.useContext(DataRouterContext);
    // Track how deep we got in our render pass to emulate SSR componentDidCatch
    // in a DataStaticRouter
    if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
    return /*#__PURE__*/ _react.createElement(RouteContext.Provider, {
        value: routeContext
    }, children);
}
function _renderMatches(matches, parentMatches, dataRouterState, future) {
    var _dataRouterState2;
    if (parentMatches === void 0) parentMatches = [];
    if (dataRouterState === void 0) dataRouterState = null;
    if (future === void 0) future = null;
    if (matches == null) {
        var _dataRouterState;
        if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) // Don't bail if we have data router errors so we can render them in the
        // boundary.  Use the pre-matched (or shimmed) matches
        matches = dataRouterState.matches;
        else return null;
    }
    let renderedMatches = matches;
    // If we have data errors, trim matches to the highest error boundary
    let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;
    if (errors != null) {
        let errorIndex = renderedMatches.findIndex((m)=>m.route.id && (errors == null ? void 0 : errors[m.route.id]));
        !(errorIndex >= 0) && (0, _router.UNSAFE_invariant)(false, "Could not find a matching route for errors on route IDs: " + Object.keys(errors).join(","));
        renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
    }
    // If we're in a partial hydration mode, detect if we need to render down to
    // a given HydrateFallback while we load the rest of the hydration data
    let renderFallback = false;
    let fallbackIndex = -1;
    if (dataRouterState && future && future.v7_partialHydration) for(let i = 0; i < renderedMatches.length; i++){
        let match = renderedMatches[i];
        // Track the deepest fallback up until the first route without data
        if (match.route.HydrateFallback || match.route.hydrateFallbackElement) fallbackIndex = i;
        if (match.route.id) {
            let { loaderData, errors } = dataRouterState;
            let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);
            if (match.route.lazy || needsToRunLoader) {
                // We found the first route that's not ready to render (waiting on
                // lazy, or has a loader that hasn't run yet).  Flag that we need to
                // render a fallback and render up until the appropriate fallback
                renderFallback = true;
                if (fallbackIndex >= 0) renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
                else renderedMatches = [
                    renderedMatches[0]
                ];
                break;
            }
        }
    }
    return renderedMatches.reduceRight((outlet, match, index)=>{
        // Only data routers handle errors/fallbacks
        let error;
        let shouldRenderHydrateFallback = false;
        let errorElement = null;
        let hydrateFallbackElement = null;
        if (dataRouterState) {
            error = errors && match.route.id ? errors[match.route.id] : undefined;
            errorElement = match.route.errorElement || defaultErrorElement;
            if (renderFallback) {
                if (fallbackIndex < 0 && index === 0) {
                    warningOnce("route-fallback", false, "No `HydrateFallback` element provided to render during initial hydration");
                    shouldRenderHydrateFallback = true;
                    hydrateFallbackElement = null;
                } else if (fallbackIndex === index) {
                    shouldRenderHydrateFallback = true;
                    hydrateFallbackElement = match.route.hydrateFallbackElement || null;
                }
            }
        }
        let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));
        let getChildren = ()=>{
            let children;
            if (error) children = errorElement;
            else if (shouldRenderHydrateFallback) children = hydrateFallbackElement;
            else if (match.route.Component) // Note: This is a de-optimized path since React won't re-use the
            // ReactElement since it's identity changes with each new
            // React.createElement call.  We keep this so folks can use
            // `<Route Component={...}>` in `<Routes>` but generally `Component`
            // usage is only advised in `RouterProvider` when we can convert it to
            // `element` ahead of time.
            children = /*#__PURE__*/ _react.createElement(match.route.Component, null);
            else if (match.route.element) children = match.route.element;
            else children = outlet;
            return /*#__PURE__*/ _react.createElement(RenderedRoute, {
                match: match,
                routeContext: {
                    outlet,
                    matches,
                    isDataRoute: dataRouterState != null
                },
                children: children
            });
        };
        // Only wrap in an error boundary within data router usages when we have an
        // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to
        // an ancestor ErrorBoundary/errorElement
        return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/ _react.createElement(RenderErrorBoundary, {
            location: dataRouterState.location,
            revalidation: dataRouterState.revalidation,
            component: errorElement,
            error: error,
            children: getChildren(),
            routeContext: {
                outlet: null,
                matches,
                isDataRoute: true
            }
        }) : getChildren();
    }, null);
}
var DataRouterHook = /*#__PURE__*/ function(DataRouterHook) {
    DataRouterHook["UseBlocker"] = "useBlocker";
    DataRouterHook["UseRevalidator"] = "useRevalidator";
    DataRouterHook["UseNavigateStable"] = "useNavigate";
    return DataRouterHook;
}(DataRouterHook || {});
var DataRouterStateHook = /*#__PURE__*/ function(DataRouterStateHook) {
    DataRouterStateHook["UseBlocker"] = "useBlocker";
    DataRouterStateHook["UseLoaderData"] = "useLoaderData";
    DataRouterStateHook["UseActionData"] = "useActionData";
    DataRouterStateHook["UseRouteError"] = "useRouteError";
    DataRouterStateHook["UseNavigation"] = "useNavigation";
    DataRouterStateHook["UseRouteLoaderData"] = "useRouteLoaderData";
    DataRouterStateHook["UseMatches"] = "useMatches";
    DataRouterStateHook["UseRevalidator"] = "useRevalidator";
    DataRouterStateHook["UseNavigateStable"] = "useNavigate";
    DataRouterStateHook["UseRouteId"] = "useRouteId";
    return DataRouterStateHook;
}(DataRouterStateHook || {});
function getDataRouterConsoleError(hookName) {
    return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function useDataRouterContext(hookName) {
    let ctx = _react.useContext(DataRouterContext);
    !ctx && (0, _router.UNSAFE_invariant)(false, getDataRouterConsoleError(hookName));
    return ctx;
}
function useDataRouterState(hookName) {
    let state = _react.useContext(DataRouterStateContext);
    !state && (0, _router.UNSAFE_invariant)(false, getDataRouterConsoleError(hookName));
    return state;
}
function useRouteContext(hookName) {
    let route = _react.useContext(RouteContext);
    !route && (0, _router.UNSAFE_invariant)(false, getDataRouterConsoleError(hookName));
    return route;
}
// Internal version with hookName-aware debugging
function useCurrentRouteId(hookName) {
    let route = useRouteContext(hookName);
    let thisRoute = route.matches[route.matches.length - 1];
    !thisRoute.route.id && (0, _router.UNSAFE_invariant)(false, hookName + ' can only be used on routes that contain a unique "id"');
    return thisRoute.route.id;
}
/**
 * Returns the ID for the nearest contextual route
 */ function useRouteId() {
    return useCurrentRouteId(DataRouterStateHook.UseRouteId);
}
/**
 * Returns the current navigation, defaulting to an "idle" navigation when
 * no navigation is in progress
 */ function useNavigation() {
    let state = useDataRouterState(DataRouterStateHook.UseNavigation);
    return state.navigation;
}
/**
 * Returns a revalidate function for manually triggering revalidation, as well
 * as the current state of any manual revalidations
 */ function useRevalidator() {
    let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);
    let state = useDataRouterState(DataRouterStateHook.UseRevalidator);
    return _react.useMemo(()=>({
            revalidate: dataRouterContext.router.revalidate,
            state: state.revalidation
        }), [
        dataRouterContext.router.revalidate,
        state.revalidation
    ]);
}
/**
 * Returns the active route matches, useful for accessing loaderData for
 * parent/child routes or the route "handle" property
 */ function useMatches() {
    let { matches, loaderData } = useDataRouterState(DataRouterStateHook.UseMatches);
    return _react.useMemo(()=>matches.map((m)=>(0, _router.UNSAFE_convertRouteMatchToUiMatch)(m, loaderData)), [
        matches,
        loaderData
    ]);
}
/**
 * Returns the loader data for the nearest ancestor Route loader
 */ function useLoaderData() {
    let state = useDataRouterState(DataRouterStateHook.UseLoaderData);
    let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);
    if (state.errors && state.errors[routeId] != null) {
        console.error("You cannot `useLoaderData` in an errorElement (routeId: " + routeId + ")");
        return undefined;
    }
    return state.loaderData[routeId];
}
/**
 * Returns the loaderData for the given routeId
 */ function useRouteLoaderData(routeId) {
    let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);
    return state.loaderData[routeId];
}
/**
 * Returns the action data for the nearest ancestor Route action
 */ function useActionData() {
    let state = useDataRouterState(DataRouterStateHook.UseActionData);
    let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);
    return state.actionData ? state.actionData[routeId] : undefined;
}
/**
 * Returns the nearest ancestor Route error, which could be a loader/action
 * error or a render error.  This is intended to be called from your
 * ErrorBoundary/errorElement to display a proper error message.
 */ function useRouteError() {
    var _state$errors;
    let error = _react.useContext(RouteErrorContext);
    let state = useDataRouterState(DataRouterStateHook.UseRouteError);
    let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);
    // If this was a render error, we put it in a RouteError context inside
    // of RenderErrorBoundary
    if (error !== undefined) return error;
    // Otherwise look for errors from our data router state
    return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
/**
 * Returns the happy-path data from the nearest ancestor `<Await />` value
 */ function useAsyncValue() {
    let value = _react.useContext(AwaitContext);
    return value == null ? void 0 : value._data;
}
/**
 * Returns the error from the nearest ancestor `<Await />` value
 */ function useAsyncError() {
    let value = _react.useContext(AwaitContext);
    return value == null ? void 0 : value._error;
}
let blockerId = 0;
/**
 * Allow the application to block navigations within the SPA and present the
 * user a confirmation dialog to confirm the navigation.  Mostly used to avoid
 * using half-filled form data.  This does not handle hard-reloads or
 * cross-origin navigations.
 */ function useBlocker(shouldBlock) {
    let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);
    let state = useDataRouterState(DataRouterStateHook.UseBlocker);
    let [blockerKey, setBlockerKey] = _react.useState("");
    let blockerFunction = _react.useCallback((arg)=>{
        if (typeof shouldBlock !== "function") return !!shouldBlock;
        if (basename === "/") return shouldBlock(arg);
        // If they provided us a function and we've got an active basename, strip
        // it from the locations we expose to the user to match the behavior of
        // useLocation
        let { currentLocation, nextLocation, historyAction } = arg;
        return shouldBlock({
            currentLocation: _extends({}, currentLocation, {
                pathname: (0, _router.stripBasename)(currentLocation.pathname, basename) || currentLocation.pathname
            }),
            nextLocation: _extends({}, nextLocation, {
                pathname: (0, _router.stripBasename)(nextLocation.pathname, basename) || nextLocation.pathname
            }),
            historyAction
        });
    }, [
        basename,
        shouldBlock
    ]);
    // This effect is in charge of blocker key assignment and deletion (which is
    // tightly coupled to the key)
    _react.useEffect(()=>{
        let key = String(++blockerId);
        setBlockerKey(key);
        return ()=>router.deleteBlocker(key);
    }, [
        router
    ]);
    // This effect handles assigning the blockerFunction.  This is to handle
    // unstable blocker function identities, and happens only after the prior
    // effect so we don't get an orphaned blockerFunction in the router with a
    // key of "".  Until then we just have the IDLE_BLOCKER.
    _react.useEffect(()=>{
        if (blockerKey !== "") router.getBlocker(blockerKey, blockerFunction);
    }, [
        router,
        blockerKey,
        blockerFunction
    ]);
    // Prefer the blocker from `state` not `router.state` since DataRouterContext
    // is memoized so this ensures we update on blocker state updates
    return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : (0, _router.IDLE_BLOCKER);
}
/**
 * Stable version of useNavigate that is used when we are in the context of
 * a RouterProvider.
 */ function useNavigateStable() {
    let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);
    let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);
    let activeRef = _react.useRef(false);
    useIsomorphicLayoutEffect(()=>{
        activeRef.current = true;
    });
    let navigate = _react.useCallback(function(to, options) {
        if (options === void 0) options = {};
        (0, _router.UNSAFE_warning)(activeRef.current, navigateEffectWarning);
        // Short circuit here since if this happens on first render the navigate
        // is useless because we haven't wired up our router subscriber yet
        if (!activeRef.current) return;
        if (typeof to === "number") router.navigate(to);
        else router.navigate(to, _extends({
            fromRouteId: id
        }, options));
    }, [
        router,
        id
    ]);
    return navigate;
}
const alreadyWarned = {};
function warningOnce(key, cond, message) {
    if (!cond && !alreadyWarned[key]) {
        alreadyWarned[key] = true;
        (0, _router.UNSAFE_warning)(false, message);
    }
}
/**
  Webpack + React 17 fails to compile on any of the following because webpack
  complains that `startTransition` doesn't exist in `React`:
  * import { startTransition } from "react"
  * import * as React from from "react";
    "startTransition" in React ? React.startTransition(() => setState()) : setState()
  * import * as React from from "react";
    "startTransition" in React ? React["startTransition"](() => setState()) : setState()

  Moving it to a constant such as the following solves the Webpack/React 17 issue:
  * import * as React from from "react";
    const START_TRANSITION = "startTransition";
    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()

  However, that introduces webpack/terser minification issues in production builds
  in React 18 where minification/obfuscation ends up removing the call of
  React.startTransition entirely from the first half of the ternary.  Grabbing
  this exported reference once up front resolves that issue.

  See https://github.com/remix-run/react-router/issues/10579
*/ const START_TRANSITION = "startTransition";
const startTransitionImpl = _react[START_TRANSITION];
/**
 * Given a Remix Router instance, render the appropriate UI
 */ function RouterProvider(_ref) {
    let { fallbackElement, router, future } = _ref;
    let [state, setStateImpl] = _react.useState(router.state);
    let { v7_startTransition } = future || {};
    let setState = _react.useCallback((newState)=>{
        if (v7_startTransition && startTransitionImpl) startTransitionImpl(()=>setStateImpl(newState));
        else setStateImpl(newState);
    }, [
        setStateImpl,
        v7_startTransition
    ]);
    // Need to use a layout effect here so we are subscribed early enough to
    // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)
    _react.useLayoutEffect(()=>router.subscribe(setState), [
        router,
        setState
    ]);
    _react.useEffect(()=>{
        (0, _router.UNSAFE_warning)(fallbackElement == null || !router.future.v7_partialHydration, "`<RouterProvider fallbackElement>` is deprecated when using `v7_partialHydration`, use a `HydrateFallback` component instead");
    // Only log this once on initial mount
    // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    let navigator = _react.useMemo(()=>{
        return {
            createHref: router.createHref,
            encodeLocation: router.encodeLocation,
            go: (n)=>router.navigate(n),
            push: (to, state, opts)=>router.navigate(to, {
                    state,
                    preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
                }),
            replace: (to, state, opts)=>router.navigate(to, {
                    replace: true,
                    state,
                    preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
                })
        };
    }, [
        router
    ]);
    let basename = router.basename || "/";
    let dataRouterContext = _react.useMemo(()=>({
            router,
            navigator,
            static: false,
            basename
        }), [
        router,
        navigator,
        basename
    ]);
    // The fragment and {null} here are important!  We need them to keep React 18's
    // useId happy when we are server-rendering since we may have a <script> here
    // containing the hydrated server-side staticContext (from StaticRouterProvider).
    // useId relies on the component tree structure to generate deterministic id's
    // so we need to ensure it remains the same on the client even though
    // we don't need the <script> tag
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, /*#__PURE__*/ _react.createElement(DataRouterContext.Provider, {
        value: dataRouterContext
    }, /*#__PURE__*/ _react.createElement(DataRouterStateContext.Provider, {
        value: state
    }, /*#__PURE__*/ _react.createElement(Router, {
        basename: basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator: navigator,
        future: {
            v7_relativeSplatPath: router.future.v7_relativeSplatPath
        }
    }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/ _react.createElement(DataRoutes, {
        routes: router.routes,
        future: router.future,
        state: state
    }) : fallbackElement))), null);
}
function DataRoutes(_ref2) {
    let { routes, future, state } = _ref2;
    return useRoutesImpl(routes, undefined, state, future);
}
/**
 * A `<Router>` that stores all entries in memory.
 *
 * @see https://reactrouter.com/router-components/memory-router
 */ function MemoryRouter(_ref3) {
    let { basename, children, initialEntries, initialIndex, future } = _ref3;
    let historyRef = _react.useRef();
    if (historyRef.current == null) historyRef.current = (0, _router.createMemoryHistory)({
        initialEntries,
        initialIndex,
        v5Compat: true
    });
    let history = historyRef.current;
    let [state, setStateImpl] = _react.useState({
        action: history.action,
        location: history.location
    });
    let { v7_startTransition } = future || {};
    let setState = _react.useCallback((newState)=>{
        v7_startTransition && startTransitionImpl ? startTransitionImpl(()=>setStateImpl(newState)) : setStateImpl(newState);
    }, [
        setStateImpl,
        v7_startTransition
    ]);
    _react.useLayoutEffect(()=>history.listen(setState), [
        history,
        setState
    ]);
    return /*#__PURE__*/ _react.createElement(Router, {
        basename: basename,
        children: children,
        location: state.location,
        navigationType: state.action,
        navigator: history,
        future: future
    });
}
/**
 * Changes the current location.
 *
 * Note: This API is mostly useful in React.Component subclasses that are not
 * able to use hooks. In functional components, we recommend you use the
 * `useNavigate` hook instead.
 *
 * @see https://reactrouter.com/components/navigate
 */ function Navigate(_ref4) {
    let { to, replace, state, relative } = _ref4;
    !useInRouterContext() && (0, _router.UNSAFE_invariant)(false, // the router loaded. We can help them understand how to avoid that.
    "<Navigate> may be used only in the context of a <Router> component.");
    let { future, static: isStatic } = _react.useContext(NavigationContext);
    (0, _router.UNSAFE_warning)(!isStatic, "<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.");
    let { matches } = _react.useContext(RouteContext);
    let { pathname: locationPathname } = useLocation();
    let navigate = useNavigate();
    // Resolve the path outside of the effect so that when effects run twice in
    // StrictMode they navigate to the same place
    let path = (0, _router.resolveTo)(to, (0, _router.UNSAFE_getResolveToMatches)(matches, future.v7_relativeSplatPath), locationPathname, relative === "path");
    let jsonPath = JSON.stringify(path);
    _react.useEffect(()=>navigate(JSON.parse(jsonPath), {
            replace,
            state,
            relative
        }), [
        navigate,
        jsonPath,
        relative,
        replace,
        state
    ]);
    return null;
}
/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/components/outlet
 */ function Outlet(props) {
    return useOutlet(props.context);
}
/**
 * Declares an element that should be rendered at a certain URL path.
 *
 * @see https://reactrouter.com/components/route
 */ function Route(_props) {
    (0, _router.UNSAFE_invariant)(false, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.");
}
/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a `<Router>` directly. Instead, you'll render a
 * router that is more specific to your environment such as a `<BrowserRouter>`
 * in web browsers or a `<StaticRouter>` for server rendering.
 *
 * @see https://reactrouter.com/router-components/router
 */ function Router(_ref5) {
    let { basename: basenameProp = "/", children = null, location: locationProp, navigationType = (0, _router.Action).Pop, navigator, static: staticProp = false, future } = _ref5;
    !!useInRouterContext() && (0, _router.UNSAFE_invariant)(false, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");
    // Preserve trailing slashes on basename, so we can let the user control
    // the enforcement of trailing slashes throughout the app
    let basename = basenameProp.replace(/^\/*/, "/");
    let navigationContext = _react.useMemo(()=>({
            basename,
            navigator,
            static: staticProp,
            future: _extends({
                v7_relativeSplatPath: false
            }, future)
        }), [
        basename,
        future,
        navigator,
        staticProp
    ]);
    if (typeof locationProp === "string") locationProp = (0, _router.parsePath)(locationProp);
    let { pathname = "/", search = "", hash = "", state = null, key = "default" } = locationProp;
    let locationContext = _react.useMemo(()=>{
        let trailingPathname = (0, _router.stripBasename)(pathname, basename);
        if (trailingPathname == null) return null;
        return {
            location: {
                pathname: trailingPathname,
                search,
                hash,
                state,
                key
            },
            navigationType
        };
    }, [
        basename,
        pathname,
        search,
        hash,
        state,
        key,
        navigationType
    ]);
    (0, _router.UNSAFE_warning)(locationContext != null, '<Router basename="' + basename + '"> is not able to match the URL ' + ('"' + pathname + search + hash + '" because it does not start with the ') + "basename, so the <Router> won't render anything.");
    if (locationContext == null) return null;
    return /*#__PURE__*/ _react.createElement(NavigationContext.Provider, {
        value: navigationContext
    }, /*#__PURE__*/ _react.createElement(LocationContext.Provider, {
        children: children,
        value: locationContext
    }));
}
/**
 * A container for a nested tree of `<Route>` elements that renders the branch
 * that best matches the current location.
 *
 * @see https://reactrouter.com/components/routes
 */ function Routes(_ref6) {
    let { children, location } = _ref6;
    return useRoutes(createRoutesFromChildren(children), location);
}
/**
 * Component to use for rendering lazily loaded data from returning defer()
 * in a loader function
 */ function Await(_ref7) {
    let { children, errorElement, resolve } = _ref7;
    return /*#__PURE__*/ _react.createElement(AwaitErrorBoundary, {
        resolve: resolve,
        errorElement: errorElement
    }, /*#__PURE__*/ _react.createElement(ResolveAwait, null, children));
}
var AwaitRenderStatus = /*#__PURE__*/ function(AwaitRenderStatus) {
    AwaitRenderStatus[AwaitRenderStatus["pending"] = 0] = "pending";
    AwaitRenderStatus[AwaitRenderStatus["success"] = 1] = "success";
    AwaitRenderStatus[AwaitRenderStatus["error"] = 2] = "error";
    return AwaitRenderStatus;
}(AwaitRenderStatus || {});
const neverSettledPromise = new Promise(()=>{});
class AwaitErrorBoundary extends _react.Component {
    constructor(props){
        super(props);
        this.state = {
            error: null
        };
    }
    static getDerivedStateFromError(error) {
        return {
            error
        };
    }
    componentDidCatch(error, errorInfo) {
        console.error("<Await> caught the following error during render", error, errorInfo);
    }
    render() {
        let { children, errorElement, resolve } = this.props;
        let promise = null;
        let status = AwaitRenderStatus.pending;
        if (!(resolve instanceof Promise)) {
            // Didn't get a promise - provide as a resolved promise
            status = AwaitRenderStatus.success;
            promise = Promise.resolve();
            Object.defineProperty(promise, "_tracked", {
                get: ()=>true
            });
            Object.defineProperty(promise, "_data", {
                get: ()=>resolve
            });
        } else if (this.state.error) {
            // Caught a render error, provide it as a rejected promise
            status = AwaitRenderStatus.error;
            let renderError = this.state.error;
            promise = Promise.reject().catch(()=>{}); // Avoid unhandled rejection warnings
            Object.defineProperty(promise, "_tracked", {
                get: ()=>true
            });
            Object.defineProperty(promise, "_error", {
                get: ()=>renderError
            });
        } else if (resolve._tracked) {
            // Already tracked promise - check contents
            promise = resolve;
            status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;
        } else {
            // Raw (untracked) promise - track it
            status = AwaitRenderStatus.pending;
            Object.defineProperty(resolve, "_tracked", {
                get: ()=>true
            });
            promise = resolve.then((data)=>Object.defineProperty(resolve, "_data", {
                    get: ()=>data
                }), (error)=>Object.defineProperty(resolve, "_error", {
                    get: ()=>error
                }));
        }
        if (status === AwaitRenderStatus.error && promise._error instanceof (0, _router.AbortedDeferredError)) // Freeze the UI by throwing a never resolved promise
        throw neverSettledPromise;
        if (status === AwaitRenderStatus.error && !errorElement) // No errorElement, throw to the nearest route-level error boundary
        throw promise._error;
        if (status === AwaitRenderStatus.error) // Render via our errorElement
        return /*#__PURE__*/ _react.createElement(AwaitContext.Provider, {
            value: promise,
            children: errorElement
        });
        if (status === AwaitRenderStatus.success) // Render children with resolved value
        return /*#__PURE__*/ _react.createElement(AwaitContext.Provider, {
            value: promise,
            children: children
        });
        // Throw to the suspense boundary
        throw promise;
    }
}
/**
 * @private
 * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`
 */ function ResolveAwait(_ref8) {
    let { children } = _ref8;
    let data = useAsyncValue();
    let toRender = typeof children === "function" ? children(data) : children;
    return /*#__PURE__*/ _react.createElement(_react.Fragment, null, toRender);
}
///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////
/**
 * Creates a route config from a React "children" object, which is usually
 * either a `<Route>` element or an array of them. Used internally by
 * `<Routes>` to create a route config from its children.
 *
 * @see https://reactrouter.com/utils/create-routes-from-children
 */ function createRoutesFromChildren(children, parentPath) {
    if (parentPath === void 0) parentPath = [];
    let routes = [];
    _react.Children.forEach(children, (element, index)=>{
        if (!/*#__PURE__*/ _react.isValidElement(element)) // Ignore non-elements. This allows people to more easily inline
        // conditionals in their route config.
        return;
        let treePath = [
            ...parentPath,
            index
        ];
        if (element.type === _react.Fragment) {
            // Transparently support React.Fragment and its children.
            routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));
            return;
        }
        !(element.type === Route) && (0, _router.UNSAFE_invariant)(false, "[" + (typeof element.type === "string" ? element.type : element.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>");
        !(!element.props.index || !element.props.children) && (0, _router.UNSAFE_invariant)(false, "An index route cannot have child routes.");
        let route = {
            id: element.props.id || treePath.join("-"),
            caseSensitive: element.props.caseSensitive,
            element: element.props.element,
            Component: element.props.Component,
            index: element.props.index,
            path: element.props.path,
            loader: element.props.loader,
            action: element.props.action,
            errorElement: element.props.errorElement,
            ErrorBoundary: element.props.ErrorBoundary,
            hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,
            shouldRevalidate: element.props.shouldRevalidate,
            handle: element.props.handle,
            lazy: element.props.lazy
        };
        if (element.props.children) route.children = createRoutesFromChildren(element.props.children, treePath);
        routes.push(route);
    });
    return routes;
}
/**
 * Renders the result of `matchRoutes()` into a React element.
 */ function renderMatches(matches) {
    return _renderMatches(matches);
}
function mapRouteProperties(route) {
    let updates = {
        // Note: this check also occurs in createRoutesFromChildren so update
        // there if you change this -- please and thank you!
        hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null
    };
    if (route.Component) {
        if (route.element) (0, _router.UNSAFE_warning)(false, "You should not include both `Component` and `element` on your route - `Component` will be used.");
        Object.assign(updates, {
            element: /*#__PURE__*/ _react.createElement(route.Component),
            Component: undefined
        });
    }
    if (route.HydrateFallback) {
        if (route.hydrateFallbackElement) (0, _router.UNSAFE_warning)(false, "You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.");
        Object.assign(updates, {
            hydrateFallbackElement: /*#__PURE__*/ _react.createElement(route.HydrateFallback),
            HydrateFallback: undefined
        });
    }
    if (route.ErrorBoundary) {
        if (route.errorElement) (0, _router.UNSAFE_warning)(false, "You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.");
        Object.assign(updates, {
            errorElement: /*#__PURE__*/ _react.createElement(route.ErrorBoundary),
            ErrorBoundary: undefined
        });
    }
    return updates;
}
function createMemoryRouter(routes, opts) {
    return (0, _router.createRouter)({
        basename: opts == null ? void 0 : opts.basename,
        future: _extends({}, opts == null ? void 0 : opts.future, {
            v7_prependBasename: true
        }),
        history: (0, _router.createMemoryHistory)({
            initialEntries: opts == null ? void 0 : opts.initialEntries,
            initialIndex: opts == null ? void 0 : opts.initialIndex
        }),
        hydrationData: opts == null ? void 0 : opts.hydrationData,
        routes,
        mapRouteProperties
    }).initialize();
}

},{"react":"21dqq","@remix-run/router":"5ncDG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5ncDG":[function(require,module,exports) {
/**
 * @remix-run/router v1.15.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
//#endregion
parcelHelpers.export(exports, "AbortedDeferredError", ()=>AbortedDeferredError);
parcelHelpers.export(exports, "Action", ()=>Action);
parcelHelpers.export(exports, "IDLE_BLOCKER", ()=>IDLE_BLOCKER);
parcelHelpers.export(exports, "IDLE_FETCHER", ()=>IDLE_FETCHER);
parcelHelpers.export(exports, "IDLE_NAVIGATION", ()=>IDLE_NAVIGATION);
parcelHelpers.export(exports, "UNSAFE_DEFERRED_SYMBOL", ()=>UNSAFE_DEFERRED_SYMBOL);
parcelHelpers.export(exports, "UNSAFE_DeferredData", ()=>DeferredData);
parcelHelpers.export(exports, "UNSAFE_ErrorResponseImpl", ()=>ErrorResponseImpl);
parcelHelpers.export(exports, "UNSAFE_convertRouteMatchToUiMatch", ()=>convertRouteMatchToUiMatch);
parcelHelpers.export(exports, "UNSAFE_convertRoutesToDataRoutes", ()=>convertRoutesToDataRoutes);
parcelHelpers.export(exports, "UNSAFE_getResolveToMatches", ()=>getResolveToMatches);
parcelHelpers.export(exports, "UNSAFE_invariant", ()=>invariant);
parcelHelpers.export(exports, "UNSAFE_warning", ()=>warning);
parcelHelpers.export(exports, "createBrowserHistory", ()=>createBrowserHistory);
parcelHelpers.export(exports, "createHashHistory", ()=>createHashHistory);
parcelHelpers.export(exports, "createMemoryHistory", ()=>createMemoryHistory);
parcelHelpers.export(exports, "createPath", ()=>createPath);
parcelHelpers.export(exports, "createRouter", ()=>createRouter);
parcelHelpers.export(exports, "createStaticHandler", ()=>createStaticHandler);
parcelHelpers.export(exports, "defer", ()=>defer);
parcelHelpers.export(exports, "generatePath", ()=>generatePath);
parcelHelpers.export(exports, "getStaticContextFromError", ()=>getStaticContextFromError);
parcelHelpers.export(exports, "getToPathname", ()=>getToPathname);
parcelHelpers.export(exports, "isDeferredData", ()=>isDeferredData);
parcelHelpers.export(exports, "isRouteErrorResponse", ()=>isRouteErrorResponse);
parcelHelpers.export(exports, "joinPaths", ()=>joinPaths);
parcelHelpers.export(exports, "json", ()=>json);
parcelHelpers.export(exports, "matchPath", ()=>matchPath);
parcelHelpers.export(exports, "matchRoutes", ()=>matchRoutes);
parcelHelpers.export(exports, "normalizePathname", ()=>normalizePathname);
parcelHelpers.export(exports, "parsePath", ()=>parsePath);
parcelHelpers.export(exports, "redirect", ()=>redirect);
parcelHelpers.export(exports, "redirectDocument", ()=>redirectDocument);
parcelHelpers.export(exports, "resolvePath", ()=>resolvePath);
parcelHelpers.export(exports, "resolveTo", ()=>resolveTo);
parcelHelpers.export(exports, "stripBasename", ()=>stripBasename);
function _extends() {
    _extends = Object.assign ? Object.assign.bind() : function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
////////////////////////////////////////////////////////////////////////////////
//#region Types and Constants
////////////////////////////////////////////////////////////////////////////////
/**
 * Actions represent the type of change to a location value.
 */ var Action;
(function(Action) {
    /**
   * A POP indicates a change to an arbitrary index in the history stack, such
   * as a back or forward navigation. It does not describe the direction of the
   * navigation, only that the current index changed.
   *
   * Note: This is the default action for newly created history objects.
   */ Action["Pop"] = "POP";
    /**
   * A PUSH indicates a new entry being added to the history stack, such as when
   * a link is clicked and a new page loads. When this happens, all subsequent
   * entries in the stack are lost.
   */ Action["Push"] = "PUSH";
    /**
   * A REPLACE indicates the entry at the current index in the history stack
   * being replaced by a new one.
   */ Action["Replace"] = "REPLACE";
})(Action || (Action = {}));
const PopStateEventType = "popstate";
/**
 * Memory history stores the current location in memory. It is designed for use
 * in stateful non-browser environments like tests and React Native.
 */ function createMemoryHistory(options) {
    if (options === void 0) options = {};
    let { initialEntries = [
        "/"
    ], initialIndex, v5Compat = false } = options;
    let entries; // Declare so we can access from createMemoryLocation
    entries = initialEntries.map((entry, index)=>createMemoryLocation(entry, typeof entry === "string" ? null : entry.state, index === 0 ? "default" : undefined));
    let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);
    let action = Action.Pop;
    let listener = null;
    function clampIndex(n) {
        return Math.min(Math.max(n, 0), entries.length - 1);
    }
    function getCurrentLocation() {
        return entries[index];
    }
    function createMemoryLocation(to, state, key) {
        if (state === void 0) state = null;
        let location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
        warning(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to));
        return location;
    }
    function createHref(to) {
        return typeof to === "string" ? to : createPath(to);
    }
    let history = {
        get index () {
            return index;
        },
        get action () {
            return action;
        },
        get location () {
            return getCurrentLocation();
        },
        createHref,
        createURL (to) {
            return new URL(createHref(to), "http://localhost");
        },
        encodeLocation (to) {
            let path = typeof to === "string" ? parsePath(to) : to;
            return {
                pathname: path.pathname || "",
                search: path.search || "",
                hash: path.hash || ""
            };
        },
        push (to, state) {
            action = Action.Push;
            let nextLocation = createMemoryLocation(to, state);
            index += 1;
            entries.splice(index, entries.length, nextLocation);
            if (v5Compat && listener) listener({
                action,
                location: nextLocation,
                delta: 1
            });
        },
        replace (to, state) {
            action = Action.Replace;
            let nextLocation = createMemoryLocation(to, state);
            entries[index] = nextLocation;
            if (v5Compat && listener) listener({
                action,
                location: nextLocation,
                delta: 0
            });
        },
        go (delta) {
            action = Action.Pop;
            let nextIndex = clampIndex(index + delta);
            let nextLocation = entries[nextIndex];
            index = nextIndex;
            if (listener) listener({
                action,
                location: nextLocation,
                delta
            });
        },
        listen (fn) {
            listener = fn;
            return ()=>{
                listener = null;
            };
        }
    };
    return history;
}
/**
 * Browser history stores the location in regular URLs. This is the standard for
 * most web apps, but it requires some configuration on the server to ensure you
 * serve the same app at multiple URLs.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory
 */ function createBrowserHistory(options) {
    if (options === void 0) options = {};
    function createBrowserLocation(window1, globalHistory) {
        let { pathname, search, hash } = window1.location;
        return createLocation("", {
            pathname,
            search,
            hash
        }, // state defaults to `null` because `window.history.state` does
        globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
    }
    function createBrowserHref(window1, to) {
        return typeof to === "string" ? to : createPath(to);
    }
    return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
/**
 * Hash history stores the location in window.location.hash. This makes it ideal
 * for situations where you don't want to send the location to the server for
 * some reason, either because you do cannot configure it or the URL space is
 * reserved for something else.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory
 */ function createHashHistory(options) {
    if (options === void 0) options = {};
    function createHashLocation(window1, globalHistory) {
        let { pathname = "/", search = "", hash = "" } = parsePath(window1.location.hash.substr(1));
        // Hash URL should always have a leading / just like window.location.pathname
        // does, so if an app ends up at a route like /#something then we add a
        // leading slash so all of our path-matching behaves the same as if it would
        // in a browser router.  This is particularly important when there exists a
        // root splat route (<Route path="*">) since that matches internally against
        // "/*" and we'd expect /#something to 404 in a hash router app.
        if (!pathname.startsWith("/") && !pathname.startsWith(".")) pathname = "/" + pathname;
        return createLocation("", {
            pathname,
            search,
            hash
        }, // state defaults to `null` because `window.history.state` does
        globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || "default");
    }
    function createHashHref(window1, to) {
        let base = window1.document.querySelector("base");
        let href = "";
        if (base && base.getAttribute("href")) {
            let url = window1.location.href;
            let hashIndex = url.indexOf("#");
            href = hashIndex === -1 ? url : url.slice(0, hashIndex);
        }
        return href + "#" + (typeof to === "string" ? to : createPath(to));
    }
    function validateHashLocation(location, to) {
        warning(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
    }
    return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
}
function invariant(value, message) {
    if (value === false || value === null || typeof value === "undefined") throw new Error(message);
}
function warning(cond, message) {
    if (!cond) {
        // eslint-disable-next-line no-console
        if (typeof console !== "undefined") console.warn(message);
        try {
            // Welcome to debugging history!
            //
            // This error is thrown as a convenience, so you can more easily
            // find the source for a warning that appears in the console by
            // enabling "pause on exceptions" in your JavaScript debugger.
            throw new Error(message);
        // eslint-disable-next-line no-empty
        } catch (e) {}
    }
}
function createKey() {
    return Math.random().toString(36).substr(2, 8);
}
/**
 * For browser-based histories, we combine the state and key into an object
 */ function getHistoryState(location, index) {
    return {
        usr: location.state,
        key: location.key,
        idx: index
    };
}
/**
 * Creates a Location object with a unique key from the given Path
 */ function createLocation(current, to, state, key) {
    if (state === void 0) state = null;
    let location = _extends({
        pathname: typeof current === "string" ? current : current.pathname,
        search: "",
        hash: ""
    }, typeof to === "string" ? parsePath(to) : to, {
        state,
        // TODO: This could be cleaned up.  push/replace should probably just take
        // full Locations now and avoid the need to run through this flow at all
        // But that's a pretty big refactor to the current test suite so going to
        // keep as is for the time being and just let any incoming keys take precedence
        key: to && to.key || key || createKey()
    });
    return location;
}
/**
 * Creates a string URL path from the given pathname, search, and hash components.
 */ function createPath(_ref) {
    let { pathname = "/", search = "", hash = "" } = _ref;
    if (search && search !== "?") pathname += search.charAt(0) === "?" ? search : "?" + search;
    if (hash && hash !== "#") pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
    return pathname;
}
/**
 * Parses a string URL path into its separate pathname, search, and hash components.
 */ function parsePath(path) {
    let parsedPath = {};
    if (path) {
        let hashIndex = path.indexOf("#");
        if (hashIndex >= 0) {
            parsedPath.hash = path.substr(hashIndex);
            path = path.substr(0, hashIndex);
        }
        let searchIndex = path.indexOf("?");
        if (searchIndex >= 0) {
            parsedPath.search = path.substr(searchIndex);
            path = path.substr(0, searchIndex);
        }
        if (path) parsedPath.pathname = path;
    }
    return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
    if (options === void 0) options = {};
    let { window: window1 = document.defaultView, v5Compat = false } = options;
    let globalHistory = window1.history;
    let action = Action.Pop;
    let listener = null;
    let index = getIndex();
    // Index should only be null when we initialize. If not, it's because the
    // user called history.pushState or history.replaceState directly, in which
    // case we should log a warning as it will result in bugs.
    if (index == null) {
        index = 0;
        globalHistory.replaceState(_extends({}, globalHistory.state, {
            idx: index
        }), "");
    }
    function getIndex() {
        let state = globalHistory.state || {
            idx: null
        };
        return state.idx;
    }
    function handlePop() {
        action = Action.Pop;
        let nextIndex = getIndex();
        let delta = nextIndex == null ? null : nextIndex - index;
        index = nextIndex;
        if (listener) listener({
            action,
            location: history.location,
            delta
        });
    }
    function push(to, state) {
        action = Action.Push;
        let location = createLocation(history.location, to, state);
        if (validateLocation) validateLocation(location, to);
        index = getIndex() + 1;
        let historyState = getHistoryState(location, index);
        let url = history.createHref(location);
        // try...catch because iOS limits us to 100 pushState calls :/
        try {
            globalHistory.pushState(historyState, "", url);
        } catch (error) {
            // If the exception is because `state` can't be serialized, let that throw
            // outwards just like a replace call would so the dev knows the cause
            // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps
            // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal
            if (error instanceof DOMException && error.name === "DataCloneError") throw error;
            // They are going to lose state here, but there is no real
            // way to warn them about it since the page will refresh...
            window1.location.assign(url);
        }
        if (v5Compat && listener) listener({
            action,
            location: history.location,
            delta: 1
        });
    }
    function replace(to, state) {
        action = Action.Replace;
        let location = createLocation(history.location, to, state);
        if (validateLocation) validateLocation(location, to);
        index = getIndex();
        let historyState = getHistoryState(location, index);
        let url = history.createHref(location);
        globalHistory.replaceState(historyState, "", url);
        if (v5Compat && listener) listener({
            action,
            location: history.location,
            delta: 0
        });
    }
    function createURL(to) {
        // window.location.origin is "null" (the literal string value) in Firefox
        // under certain conditions, notably when serving from a local HTML file
        // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297
        let base = window1.location.origin !== "null" ? window1.location.origin : window1.location.href;
        let href = typeof to === "string" ? to : createPath(to);
        // Treating this as a full URL will strip any trailing spaces so we need to
        // pre-encode them since they might be part of a matching splat param from
        // an ancestor route
        href = href.replace(/ $/, "%20");
        invariant(base, "No window.location.(origin|href) available to create URL for href: " + href);
        return new URL(href, base);
    }
    let history = {
        get action () {
            return action;
        },
        get location () {
            return getLocation(window1, globalHistory);
        },
        listen (fn) {
            if (listener) throw new Error("A history only accepts one active listener");
            window1.addEventListener(PopStateEventType, handlePop);
            listener = fn;
            return ()=>{
                window1.removeEventListener(PopStateEventType, handlePop);
                listener = null;
            };
        },
        createHref (to) {
            return createHref(window1, to);
        },
        createURL,
        encodeLocation (to) {
            // Encode a Location the same way window.location would
            let url = createURL(to);
            return {
                pathname: url.pathname,
                search: url.search,
                hash: url.hash
            };
        },
        push,
        replace,
        go (n) {
            return globalHistory.go(n);
        }
    };
    return history;
}
//#endregion
var ResultType;
(function(ResultType) {
    ResultType["data"] = "data";
    ResultType["deferred"] = "deferred";
    ResultType["redirect"] = "redirect";
    ResultType["error"] = "error";
})(ResultType || (ResultType = {}));
const immutableRouteKeys = new Set([
    "lazy",
    "caseSensitive",
    "path",
    "id",
    "index",
    "children"
]);
function isIndexRoute(route) {
    return route.index === true;
}
// Walk the route tree generating unique IDs where necessary, so we are working
// solely with AgnosticDataRouteObject's within the Router
function convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {
    if (parentPath === void 0) parentPath = [];
    if (manifest === void 0) manifest = {};
    return routes.map((route, index)=>{
        let treePath = [
            ...parentPath,
            index
        ];
        let id = typeof route.id === "string" ? route.id : treePath.join("-");
        invariant(route.index !== true || !route.children, "Cannot specify children on an index route");
        invariant(!manifest[id], 'Found a route id collision on id "' + id + '".  Route ' + "id's must be globally unique within Data Router usages");
        if (isIndexRoute(route)) {
            let indexRoute = _extends({}, route, mapRouteProperties(route), {
                id
            });
            manifest[id] = indexRoute;
            return indexRoute;
        } else {
            let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {
                id,
                children: undefined
            });
            manifest[id] = pathOrLayoutRoute;
            if (route.children) pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);
            return pathOrLayoutRoute;
        }
    });
}
/**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/utils/match-routes
 */ function matchRoutes(routes, locationArg, basename) {
    if (basename === void 0) basename = "/";
    let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    let pathname = stripBasename(location.pathname || "/", basename);
    if (pathname == null) return null;
    let branches = flattenRoutes(routes);
    rankRouteBranches(branches);
    let matches = null;
    for(let i = 0; matches == null && i < branches.length; ++i){
        // Incoming pathnames are generally encoded from either window.location
        // or from router.navigate, but we want to match against the unencoded
        // paths in the route definitions.  Memory router locations won't be
        // encoded here but there also shouldn't be anything to decode so this
        // should be a safe operation.  This avoids needing matchRoutes to be
        // history-aware.
        let decoded = decodePath(pathname);
        matches = matchRouteBranch(branches[i], decoded);
    }
    return matches;
}
function convertRouteMatchToUiMatch(match, loaderData) {
    let { route, pathname, params } = match;
    return {
        id: route.id,
        pathname,
        params,
        data: loaderData[route.id],
        handle: route.handle
    };
}
function flattenRoutes(routes, branches, parentsMeta, parentPath) {
    if (branches === void 0) branches = [];
    if (parentsMeta === void 0) parentsMeta = [];
    if (parentPath === void 0) parentPath = "";
    let flattenRoute = (route, index, relativePath)=>{
        let meta = {
            relativePath: relativePath === undefined ? route.path || "" : relativePath,
            caseSensitive: route.caseSensitive === true,
            childrenIndex: index,
            route
        };
        if (meta.relativePath.startsWith("/")) {
            invariant(meta.relativePath.startsWith(parentPath), 'Absolute route path "' + meta.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes.");
            meta.relativePath = meta.relativePath.slice(parentPath.length);
        }
        let path = joinPaths([
            parentPath,
            meta.relativePath
        ]);
        let routesMeta = parentsMeta.concat(meta);
        // Add the children before adding this route to the array, so we traverse the
        // route tree depth-first and child routes appear before their parents in
        // the "flattened" version.
        if (route.children && route.children.length > 0) {
            invariant(// Our types know better, but runtime JS may not!
            // @ts-expect-error
            route.index !== true, "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".'));
            flattenRoutes(route.children, branches, routesMeta, path);
        }
        // Routes without a path shouldn't ever match by themselves unless they are
        // index routes, so don't add them to the list of possible branches.
        if (route.path == null && !route.index) return;
        branches.push({
            path,
            score: computeScore(path, route.index),
            routesMeta
        });
    };
    routes.forEach((route, index)=>{
        var _route$path;
        // coarse-grain check for optional params
        if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?"))) flattenRoute(route, index);
        else for (let exploded of explodeOptionalSegments(route.path))flattenRoute(route, index, exploded);
    });
    return branches;
}
/**
 * Computes all combinations of optional path segments for a given path,
 * excluding combinations that are ambiguous and of lower priority.
 *
 * For example, `/one/:two?/three/:four?/:five?` explodes to:
 * - `/one/three`
 * - `/one/:two/three`
 * - `/one/three/:four`
 * - `/one/three/:five`
 * - `/one/:two/three/:four`
 * - `/one/:two/three/:five`
 * - `/one/three/:four/:five`
 * - `/one/:two/three/:four/:five`
 */ function explodeOptionalSegments(path) {
    let segments = path.split("/");
    if (segments.length === 0) return [];
    let [first, ...rest] = segments;
    // Optional path segments are denoted by a trailing `?`
    let isOptional = first.endsWith("?");
    // Compute the corresponding required segment: `foo?` -> `foo`
    let required = first.replace(/\?$/, "");
    if (rest.length === 0) // Intepret empty string as omitting an optional segment
    // `["one", "", "three"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`
    return isOptional ? [
        required,
        ""
    ] : [
        required
    ];
    let restExploded = explodeOptionalSegments(rest.join("/"));
    let result = [];
    // All child paths with the prefix.  Do this for all children before the
    // optional version for all children, so we get consistent ordering where the
    // parent optional aspect is preferred as required.  Otherwise, we can get
    // child sections interspersed where deeper optional segments are higher than
    // parent optional segments, where for example, /:two would explode _earlier_
    // then /:one.  By always including the parent as required _for all children_
    // first, we avoid this issue
    result.push(...restExploded.map((subpath)=>subpath === "" ? required : [
            required,
            subpath
        ].join("/")));
    // Then, if this is an optional value, add all child versions without
    if (isOptional) result.push(...restExploded);
    // for absolute paths, ensure `/` instead of empty segment
    return result.map((exploded)=>path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
    branches.sort((a, b)=>a.score !== b.score ? b.score - a.score // Higher score first
         : compareIndexes(a.routesMeta.map((meta)=>meta.childrenIndex), b.routesMeta.map((meta)=>meta.childrenIndex)));
}
const paramRe = /^:[\w-]+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;
const isSplat = (s)=>s === "*";
function computeScore(path, index) {
    let segments = path.split("/");
    let initialScore = segments.length;
    if (segments.some(isSplat)) initialScore += splatPenalty;
    if (index) initialScore += indexRouteValue;
    return segments.filter((s)=>!isSplat(s)).reduce((score, segment)=>score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a, b) {
    let siblings = a.length === b.length && a.slice(0, -1).every((n, i)=>n === b[i]);
    return siblings ? // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0;
}
function matchRouteBranch(branch, pathname) {
    let { routesMeta } = branch;
    let matchedParams = {};
    let matchedPathname = "/";
    let matches = [];
    for(let i = 0; i < routesMeta.length; ++i){
        let meta = routesMeta[i];
        let end = i === routesMeta.length - 1;
        let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
        let match = matchPath({
            path: meta.relativePath,
            caseSensitive: meta.caseSensitive,
            end
        }, remainingPathname);
        if (!match) return null;
        Object.assign(matchedParams, match.params);
        let route = meta.route;
        matches.push({
            // TODO: Can this as be avoided?
            params: matchedParams,
            pathname: joinPaths([
                matchedPathname,
                match.pathname
            ]),
            pathnameBase: normalizePathname(joinPaths([
                matchedPathname,
                match.pathnameBase
            ])),
            route
        });
        if (match.pathnameBase !== "/") matchedPathname = joinPaths([
            matchedPathname,
            match.pathnameBase
        ]);
    }
    return matches;
}
/**
 * Returns a path with params interpolated.
 *
 * @see https://reactrouter.com/utils/generate-path
 */ function generatePath(originalPath, params) {
    if (params === void 0) params = {};
    let path = originalPath;
    if (path.endsWith("*") && path !== "*" && !path.endsWith("/*")) {
        warning(false, 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
        path = path.replace(/\*$/, "/*");
    }
    // ensure `/` is added at the beginning if the path is absolute
    const prefix = path.startsWith("/") ? "/" : "";
    const stringify = (p)=>p == null ? "" : typeof p === "string" ? p : String(p);
    const segments = path.split(/\/+/).map((segment, index, array)=>{
        const isLastSegment = index === array.length - 1;
        // only apply the splat if it's the last segment
        if (isLastSegment && segment === "*") {
            const star = "*";
            // Apply the splat
            return stringify(params[star]);
        }
        const keyMatch = segment.match(/^:([\w-]+)(\??)$/);
        if (keyMatch) {
            const [, key, optional] = keyMatch;
            let param = params[key];
            invariant(optional === "?" || param != null, 'Missing ":' + key + '" param');
            return stringify(param);
        }
        // Remove any optional markers from optional static segments
        return segment.replace(/\?$/g, "");
    })// Remove empty segments
    .filter((segment)=>!!segment);
    return prefix + segments.join("/");
}
/**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/utils/match-path
 */ function matchPath(pattern, pathname) {
    if (typeof pattern === "string") pattern = {
        path: pattern,
        caseSensitive: false,
        end: true
    };
    let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
    let match = pathname.match(matcher);
    if (!match) return null;
    let matchedPathname = match[0];
    let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
    let captureGroups = match.slice(1);
    let params = compiledParams.reduce((memo, _ref, index)=>{
        let { paramName, isOptional } = _ref;
        // We need to compute the pathnameBase here using the raw splat value
        // instead of using params["*"] later because it will be decoded then
        if (paramName === "*") {
            let splatValue = captureGroups[index] || "";
            pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
        }
        const value = captureGroups[index];
        if (isOptional && !value) memo[paramName] = undefined;
        else memo[paramName] = (value || "").replace(/%2F/g, "/");
        return memo;
    }, {});
    return {
        params,
        pathname: matchedPathname,
        pathnameBase,
        pattern
    };
}
function compilePath(path, caseSensitive, end) {
    if (caseSensitive === void 0) caseSensitive = false;
    if (end === void 0) end = true;
    warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
    let params = [];
    let regexpSource = "^" + path.replace(/\/*\*?$/, "") // Ignore trailing / and /*, we'll handle it below
    .replace(/^\/*/, "/") // Make sure it has a leading /
    .replace(/[\\.*+^${}|()[\]]/g, "\\$&") // Escape special regex chars
    .replace(/\/:([\w-]+)(\?)?/g, (_, paramName, isOptional)=>{
        params.push({
            paramName,
            isOptional: isOptional != null
        });
        return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
    });
    if (path.endsWith("*")) {
        params.push({
            paramName: "*"
        });
        regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest
         : "(?:\\/(.+)|\\/*)$"; // Don't include the / in params["*"]
    } else if (end) // When matching to the end, ignore trailing slashes
    regexpSource += "\\/*$";
    else if (path !== "" && path !== "/") // If our path is non-empty and contains anything beyond an initial slash,
    // then we have _some_ form of path in our regex, so we should expect to
    // match only if we find the end of this path segment.  Look for an optional
    // non-captured trailing slash (to match a portion of the URL) or the end
    // of the path (if we've matched to the end).  We used to do this with a
    // word boundary but that gives false positives on routes like
    // /user-preferences since `-` counts as a word boundary.
    regexpSource += "(?:(?=\\/|$))";
    let matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");
    return [
        matcher,
        params
    ];
}
function decodePath(value) {
    try {
        return value.split("/").map((v)=>decodeURIComponent(v).replace(/\//g, "%2F")).join("/");
    } catch (error) {
        warning(false, 'The URL path "' + value + '" could not be decoded because it is is a ' + "malformed URL segment. This is probably due to a bad percent " + ("encoding (" + error + ")."));
        return value;
    }
}
/**
 * @private
 */ function stripBasename(pathname, basename) {
    if (basename === "/") return pathname;
    if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) return null;
    // We want to leave trailing slash behavior in the user's control, so if they
    // specify a basename with a trailing slash, we should support it
    let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
    let nextChar = pathname.charAt(startIndex);
    if (nextChar && nextChar !== "/") // pathname does not start with basename/
    return null;
    return pathname.slice(startIndex) || "/";
}
/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/utils/resolve-path
 */ function resolvePath(to, fromPathname) {
    if (fromPathname === void 0) fromPathname = "/";
    let { pathname: toPathname, search = "", hash = "" } = typeof to === "string" ? parsePath(to) : to;
    let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
    return {
        pathname,
        search: normalizeSearch(search),
        hash: normalizeHash(hash)
    };
}
function resolvePathname(relativePath, fromPathname) {
    let segments = fromPathname.replace(/\/+$/, "").split("/");
    let relativeSegments = relativePath.split("/");
    relativeSegments.forEach((segment)=>{
        if (segment === "..") // Keep the root "" segment so the pathname starts at /
        {
            if (segments.length > 1) segments.pop();
        } else if (segment !== ".") segments.push(segment);
    });
    return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
    return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
/**
 * @private
 *
 * When processing relative navigation we want to ignore ancestor routes that
 * do not contribute to the path, such that index/pathless layout routes don't
 * interfere.
 *
 * For example, when moving a route element into an index route and/or a
 * pathless layout route, relative link behavior contained within should stay
 * the same.  Both of the following examples should link back to the root:
 *
 *   <Route path="/">
 *     <Route path="accounts" element={<Link to=".."}>
 *   </Route>
 *
 *   <Route path="/">
 *     <Route path="accounts">
 *       <Route element={<AccountsLayout />}>       // <-- Does not contribute
 *         <Route index element={<Link to=".."} />  // <-- Does not contribute
 *       </Route
 *     </Route>
 *   </Route>
 */ function getPathContributingMatches(matches) {
    return matches.filter((match, index)=>index === 0 || match.route.path && match.route.path.length > 0);
}
// Return the array of pathnames for the current route matches - used to
// generate the routePathnames input for resolveTo()
function getResolveToMatches(matches, v7_relativeSplatPath) {
    let pathMatches = getPathContributingMatches(matches);
    // When v7_relativeSplatPath is enabled, use the full pathname for the leaf
    // match so we include splat values for "." links.  See:
    // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329
    if (v7_relativeSplatPath) return pathMatches.map((match, idx)=>idx === matches.length - 1 ? match.pathname : match.pathnameBase);
    return pathMatches.map((match)=>match.pathnameBase);
}
/**
 * @private
 */ function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
    if (isPathRelative === void 0) isPathRelative = false;
    let to;
    if (typeof toArg === "string") to = parsePath(toArg);
    else {
        to = _extends({}, toArg);
        invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to));
        invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to));
        invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to));
    }
    let isEmptyPath = toArg === "" || to.pathname === "";
    let toPathname = isEmptyPath ? "/" : to.pathname;
    let from;
    // Routing is relative to the current pathname if explicitly requested.
    //
    // If a pathname is explicitly provided in `to`, it should be relative to the
    // route context. This is explained in `Note on `<Link to>` values` in our
    // migration guide from v5 as a means of disambiguation between `to` values
    // that begin with `/` and those that do not. However, this is problematic for
    // `to` values that do not provide a pathname. `to` can simply be a search or
    // hash string, in which case we should assume that the navigation is relative
    // to the current location's pathname and *not* the route pathname.
    if (toPathname == null) from = locationPathname;
    else {
        let routePathnameIndex = routePathnames.length - 1;
        // With relative="route" (the default), each leading .. segment means
        // "go up one route" instead of "go up one URL segment".  This is a key
        // difference from how <a href> works and a major reason we call this a
        // "to" value instead of a "href".
        if (!isPathRelative && toPathname.startsWith("..")) {
            let toSegments = toPathname.split("/");
            while(toSegments[0] === ".."){
                toSegments.shift();
                routePathnameIndex -= 1;
            }
            to.pathname = toSegments.join("/");
        }
        from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
    }
    let path = resolvePath(to, from);
    // Ensure the pathname has a trailing slash if the original "to" had one
    let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
    // Or if this was a link to the current path which has a trailing slash
    let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
    if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) path.pathname += "/";
    return path;
}
/**
 * @private
 */ function getToPathname(to) {
    // Empty strings should be treated the same as / paths
    return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? parsePath(to).pathname : to.pathname;
}
/**
 * @private
 */ const joinPaths = (paths)=>paths.join("/").replace(/\/\/+/g, "/");
/**
 * @private
 */ const normalizePathname = (pathname)=>pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
/**
 * @private
 */ const normalizeSearch = (search)=>!search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
/**
 * @private
 */ const normalizeHash = (hash)=>!hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
/**
 * This is a shortcut for creating `application/json` responses. Converts `data`
 * to JSON and sets the `Content-Type` header.
 */ const json = function json(data, init) {
    if (init === void 0) init = {};
    let responseInit = typeof init === "number" ? {
        status: init
    } : init;
    let headers = new Headers(responseInit.headers);
    if (!headers.has("Content-Type")) headers.set("Content-Type", "application/json; charset=utf-8");
    return new Response(JSON.stringify(data), _extends({}, responseInit, {
        headers
    }));
};
class AbortedDeferredError extends Error {
}
class DeferredData {
    constructor(data, responseInit){
        this.pendingKeysSet = new Set();
        this.subscribers = new Set();
        this.deferredKeys = [];
        invariant(data && typeof data === "object" && !Array.isArray(data), "defer() only accepts plain objects");
        // Set up an AbortController + Promise we can race against to exit early
        // cancellation
        let reject;
        this.abortPromise = new Promise((_, r)=>reject = r);
        this.controller = new AbortController();
        let onAbort = ()=>reject(new AbortedDeferredError("Deferred data aborted"));
        this.unlistenAbortSignal = ()=>this.controller.signal.removeEventListener("abort", onAbort);
        this.controller.signal.addEventListener("abort", onAbort);
        this.data = Object.entries(data).reduce((acc, _ref2)=>{
            let [key, value] = _ref2;
            return Object.assign(acc, {
                [key]: this.trackPromise(key, value)
            });
        }, {});
        if (this.done) // All incoming values were resolved
        this.unlistenAbortSignal();
        this.init = responseInit;
    }
    trackPromise(key, value) {
        if (!(value instanceof Promise)) return value;
        this.deferredKeys.push(key);
        this.pendingKeysSet.add(key);
        // We store a little wrapper promise that will be extended with
        // _data/_error props upon resolve/reject
        let promise = Promise.race([
            value,
            this.abortPromise
        ]).then((data)=>this.onSettle(promise, key, undefined, data), (error)=>this.onSettle(promise, key, error));
        // Register rejection listeners to avoid uncaught promise rejections on
        // errors or aborted deferred values
        promise.catch(()=>{});
        Object.defineProperty(promise, "_tracked", {
            get: ()=>true
        });
        return promise;
    }
    onSettle(promise, key, error, data) {
        if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {
            this.unlistenAbortSignal();
            Object.defineProperty(promise, "_error", {
                get: ()=>error
            });
            return Promise.reject(error);
        }
        this.pendingKeysSet.delete(key);
        if (this.done) // Nothing left to abort!
        this.unlistenAbortSignal();
        // If the promise was resolved/rejected with undefined, we'll throw an error as you
        // should always resolve with a value or null
        if (error === undefined && data === undefined) {
            let undefinedError = new Error('Deferred data for key "' + key + '" resolved/rejected with `undefined`, ' + "you must resolve/reject with a value or `null`.");
            Object.defineProperty(promise, "_error", {
                get: ()=>undefinedError
            });
            this.emit(false, key);
            return Promise.reject(undefinedError);
        }
        if (data === undefined) {
            Object.defineProperty(promise, "_error", {
                get: ()=>error
            });
            this.emit(false, key);
            return Promise.reject(error);
        }
        Object.defineProperty(promise, "_data", {
            get: ()=>data
        });
        this.emit(false, key);
        return data;
    }
    emit(aborted, settledKey) {
        this.subscribers.forEach((subscriber)=>subscriber(aborted, settledKey));
    }
    subscribe(fn) {
        this.subscribers.add(fn);
        return ()=>this.subscribers.delete(fn);
    }
    cancel() {
        this.controller.abort();
        this.pendingKeysSet.forEach((v, k)=>this.pendingKeysSet.delete(k));
        this.emit(true);
    }
    async resolveData(signal) {
        let aborted = false;
        if (!this.done) {
            let onAbort = ()=>this.cancel();
            signal.addEventListener("abort", onAbort);
            aborted = await new Promise((resolve)=>{
                this.subscribe((aborted)=>{
                    signal.removeEventListener("abort", onAbort);
                    if (aborted || this.done) resolve(aborted);
                });
            });
        }
        return aborted;
    }
    get done() {
        return this.pendingKeysSet.size === 0;
    }
    get unwrappedData() {
        invariant(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds");
        return Object.entries(this.data).reduce((acc, _ref3)=>{
            let [key, value] = _ref3;
            return Object.assign(acc, {
                [key]: unwrapTrackedPromise(value)
            });
        }, {});
    }
    get pendingKeys() {
        return Array.from(this.pendingKeysSet);
    }
}
function isTrackedPromise(value) {
    return value instanceof Promise && value._tracked === true;
}
function unwrapTrackedPromise(value) {
    if (!isTrackedPromise(value)) return value;
    if (value._error) throw value._error;
    return value._data;
}
const defer = function defer(data, init) {
    if (init === void 0) init = {};
    let responseInit = typeof init === "number" ? {
        status: init
    } : init;
    return new DeferredData(data, responseInit);
};
/**
 * A redirect response. Sets the status code and the `Location` header.
 * Defaults to "302 Found".
 */ const redirect = function redirect(url, init) {
    if (init === void 0) init = 302;
    let responseInit = init;
    if (typeof responseInit === "number") responseInit = {
        status: responseInit
    };
    else if (typeof responseInit.status === "undefined") responseInit.status = 302;
    let headers = new Headers(responseInit.headers);
    headers.set("Location", url);
    return new Response(null, _extends({}, responseInit, {
        headers
    }));
};
/**
 * A redirect response that will force a document reload to the new location.
 * Sets the status code and the `Location` header.
 * Defaults to "302 Found".
 */ const redirectDocument = (url, init)=>{
    let response = redirect(url, init);
    response.headers.set("X-Remix-Reload-Document", "true");
    return response;
};
/**
 * @private
 * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies
 *
 * We don't export the class for public use since it's an implementation
 * detail, but we export the interface above so folks can build their own
 * abstractions around instances via isRouteErrorResponse()
 */ class ErrorResponseImpl {
    constructor(status, statusText, data, internal){
        if (internal === void 0) internal = false;
        this.status = status;
        this.statusText = statusText || "";
        this.internal = internal;
        if (data instanceof Error) {
            this.data = data.toString();
            this.error = data;
        } else this.data = data;
    }
}
/**
 * Check if the given error is an ErrorResponse generated from a 4xx/5xx
 * Response thrown from an action/loader
 */ function isRouteErrorResponse(error) {
    return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
const validMutationMethodsArr = [
    "post",
    "put",
    "patch",
    "delete"
];
const validMutationMethods = new Set(validMutationMethodsArr);
const validRequestMethodsArr = [
    "get",
    ...validMutationMethodsArr
];
const validRequestMethods = new Set(validRequestMethodsArr);
const redirectStatusCodes = new Set([
    301,
    302,
    303,
    307,
    308
]);
const redirectPreserveMethodStatusCodes = new Set([
    307,
    308
]);
const IDLE_NAVIGATION = {
    state: "idle",
    location: undefined,
    formMethod: undefined,
    formAction: undefined,
    formEncType: undefined,
    formData: undefined,
    json: undefined,
    text: undefined
};
const IDLE_FETCHER = {
    state: "idle",
    data: undefined,
    formMethod: undefined,
    formAction: undefined,
    formEncType: undefined,
    formData: undefined,
    json: undefined,
    text: undefined
};
const IDLE_BLOCKER = {
    state: "unblocked",
    proceed: undefined,
    reset: undefined,
    location: undefined
};
const ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
const defaultMapRouteProperties = (route)=>({
        hasErrorBoundary: Boolean(route.hasErrorBoundary)
    });
const TRANSITIONS_STORAGE_KEY = "remix-router-transitions";
//#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createRouter
////////////////////////////////////////////////////////////////////////////////
/**
 * Create a router and listen to history POP navigations
 */ function createRouter(init) {
    const routerWindow = init.window ? init.window : typeof window !== "undefined" ? window : undefined;
    const isBrowser = typeof routerWindow !== "undefined" && typeof routerWindow.document !== "undefined" && typeof routerWindow.document.createElement !== "undefined";
    const isServer = !isBrowser;
    invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
    let mapRouteProperties;
    if (init.mapRouteProperties) mapRouteProperties = init.mapRouteProperties;
    else if (init.detectErrorBoundary) {
        // If they are still using the deprecated version, wrap it with the new API
        let detectErrorBoundary = init.detectErrorBoundary;
        mapRouteProperties = (route)=>({
                hasErrorBoundary: detectErrorBoundary(route)
            });
    } else mapRouteProperties = defaultMapRouteProperties;
    // Routes keyed by ID
    let manifest = {};
    // Routes in tree format for matching
    let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);
    let inFlightDataRoutes;
    let basename = init.basename || "/";
    // Config driven behavior flags
    let future = _extends({
        v7_fetcherPersist: false,
        v7_normalizeFormMethod: false,
        v7_partialHydration: false,
        v7_prependBasename: false,
        v7_relativeSplatPath: false
    }, init.future);
    // Cleanup function for history
    let unlistenHistory = null;
    // Externally-provided functions to call on all state changes
    let subscribers = new Set();
    // Externally-provided object to hold scroll restoration locations during routing
    let savedScrollPositions = null;
    // Externally-provided function to get scroll restoration keys
    let getScrollRestorationKey = null;
    // Externally-provided function to get current scroll position
    let getScrollPosition = null;
    // One-time flag to control the initial hydration scroll restoration.  Because
    // we don't get the saved positions from <ScrollRestoration /> until _after_
    // the initial render, we need to manually trigger a separate updateState to
    // send along the restoreScrollPosition
    // Set to true if we have `hydrationData` since we assume we were SSR'd and that
    // SSR did the initial scroll restoration.
    let initialScrollRestored = init.hydrationData != null;
    let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);
    let initialErrors = null;
    if (initialMatches == null) {
        // If we do not match a user-provided-route, fall back to the root
        // to allow the error boundary to take over
        let error = getInternalRouterError(404, {
            pathname: init.history.location.pathname
        });
        let { matches, route } = getShortCircuitMatches(dataRoutes);
        initialMatches = matches;
        initialErrors = {
            [route.id]: error
        };
    }
    let initialized;
    let hasLazyRoutes = initialMatches.some((m)=>m.route.lazy);
    let hasLoaders = initialMatches.some((m)=>m.route.loader);
    if (hasLazyRoutes) // All initialMatches need to be loaded before we're ready.  If we have lazy
    // functions around still then we'll need to run them in initialize()
    initialized = false;
    else if (!hasLoaders) // If we've got no loaders to run, then we're good to go
    initialized = true;
    else if (future.v7_partialHydration) {
        // If partial hydration is enabled, we're initialized so long as we were
        // provided with hydrationData for every route with a loader, and no loaders
        // were marked for explicit hydration
        let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;
        let errors = init.hydrationData ? init.hydrationData.errors : null;
        initialized = initialMatches.every((m)=>m.route.loader && m.route.loader.hydrate !== true && (loaderData && loaderData[m.route.id] !== undefined || errors && errors[m.route.id] !== undefined));
    } else // Without partial hydration - we're initialized if we were provided any
    // hydrationData - which is expected to be complete
    initialized = init.hydrationData != null;
    let router;
    let state = {
        historyAction: init.history.action,
        location: init.history.location,
        matches: initialMatches,
        initialized,
        navigation: IDLE_NAVIGATION,
        // Don't restore on initial updateState() if we were SSR'd
        restoreScrollPosition: init.hydrationData != null ? false : null,
        preventScrollReset: false,
        revalidation: "idle",
        loaderData: init.hydrationData && init.hydrationData.loaderData || {},
        actionData: init.hydrationData && init.hydrationData.actionData || null,
        errors: init.hydrationData && init.hydrationData.errors || initialErrors,
        fetchers: new Map(),
        blockers: new Map()
    };
    // -- Stateful internal variables to manage navigations --
    // Current navigation in progress (to be committed in completeNavigation)
    let pendingAction = Action.Pop;
    // Should the current navigation prevent the scroll reset if scroll cannot
    // be restored?
    let pendingPreventScrollReset = false;
    // AbortController for the active navigation
    let pendingNavigationController;
    // Should the current navigation enable document.startViewTransition?
    let pendingViewTransitionEnabled = false;
    // Store applied view transitions so we can apply them on POP
    let appliedViewTransitions = new Map();
    // Cleanup function for persisting applied transitions to sessionStorage
    let removePageHideEventListener = null;
    // We use this to avoid touching history in completeNavigation if a
    // revalidation is entirely uninterrupted
    let isUninterruptedRevalidation = false;
    // Use this internal flag to force revalidation of all loaders:
    //  - submissions (completed or interrupted)
    //  - useRevalidator()
    //  - X-Remix-Revalidate (from redirect)
    let isRevalidationRequired = false;
    // Use this internal array to capture routes that require revalidation due
    // to a cancelled deferred on action submission
    let cancelledDeferredRoutes = [];
    // Use this internal array to capture fetcher loads that were cancelled by an
    // action navigation and require revalidation
    let cancelledFetcherLoads = [];
    // AbortControllers for any in-flight fetchers
    let fetchControllers = new Map();
    // Track loads based on the order in which they started
    let incrementingLoadId = 0;
    // Track the outstanding pending navigation data load to be compared against
    // the globally incrementing load when a fetcher load lands after a completed
    // navigation
    let pendingNavigationLoadId = -1;
    // Fetchers that triggered data reloads as a result of their actions
    let fetchReloadIds = new Map();
    // Fetchers that triggered redirect navigations
    let fetchRedirectIds = new Set();
    // Most recent href/match for fetcher.load calls for fetchers
    let fetchLoadMatches = new Map();
    // Ref-count mounted fetchers so we know when it's ok to clean them up
    let activeFetchers = new Map();
    // Fetchers that have requested a delete when using v7_fetcherPersist,
    // they'll be officially removed after they return to idle
    let deletedFetchers = new Set();
    // Store DeferredData instances for active route matches.  When a
    // route loader returns defer() we stick one in here.  Then, when a nested
    // promise resolves we update loaderData.  If a new navigation starts we
    // cancel active deferreds for eliminated routes.
    let activeDeferreds = new Map();
    // Store blocker functions in a separate Map outside of router state since
    // we don't need to update UI state if they change
    let blockerFunctions = new Map();
    // Flag to ignore the next history update, so we can revert the URL change on
    // a POP navigation that was blocked by the user without touching router state
    let ignoreNextHistoryUpdate = false;
    // Initialize the router, all side effects should be kicked off from here.
    // Implemented as a Fluent API for ease of:
    //   let router = createRouter(init).initialize();
    function initialize() {
        // If history informs us of a POP navigation, start the navigation but do not update
        // state.  We'll update our own state once the navigation completes
        unlistenHistory = init.history.listen((_ref)=>{
            let { action: historyAction, location, delta } = _ref;
            // Ignore this event if it was just us resetting the URL from a
            // blocked POP navigation
            if (ignoreNextHistoryUpdate) {
                ignoreNextHistoryUpdate = false;
                return;
            }
            warning(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
            let blockerKey = shouldBlockNavigation({
                currentLocation: state.location,
                nextLocation: location,
                historyAction
            });
            if (blockerKey && delta != null) {
                // Restore the URL to match the current UI, but don't update router state
                ignoreNextHistoryUpdate = true;
                init.history.go(delta * -1);
                // Put the blocker into a blocked state
                updateBlocker(blockerKey, {
                    state: "blocked",
                    location,
                    proceed () {
                        updateBlocker(blockerKey, {
                            state: "proceeding",
                            proceed: undefined,
                            reset: undefined,
                            location
                        });
                        // Re-do the same POP navigation we just blocked
                        init.history.go(delta);
                    },
                    reset () {
                        let blockers = new Map(state.blockers);
                        blockers.set(blockerKey, IDLE_BLOCKER);
                        updateState({
                            blockers
                        });
                    }
                });
                return;
            }
            return startNavigation(historyAction, location);
        });
        if (isBrowser) {
            // FIXME: This feels gross.  How can we cleanup the lines between
            // scrollRestoration/appliedTransitions persistance?
            restoreAppliedTransitions(routerWindow, appliedViewTransitions);
            let _saveAppliedTransitions = ()=>persistAppliedTransitions(routerWindow, appliedViewTransitions);
            routerWindow.addEventListener("pagehide", _saveAppliedTransitions);
            removePageHideEventListener = ()=>routerWindow.removeEventListener("pagehide", _saveAppliedTransitions);
        }
        // Kick off initial data load if needed.  Use Pop to avoid modifying history
        // Note we don't do any handling of lazy here.  For SPA's it'll get handled
        // in the normal navigation flow.  For SSR it's expected that lazy modules are
        // resolved prior to router creation since we can't go into a fallbackElement
        // UI for SSR'd apps
        if (!state.initialized) startNavigation(Action.Pop, state.location, {
            initialHydration: true
        });
        return router;
    }
    // Clean up a router and it's side effects
    function dispose() {
        if (unlistenHistory) unlistenHistory();
        if (removePageHideEventListener) removePageHideEventListener();
        subscribers.clear();
        pendingNavigationController && pendingNavigationController.abort();
        state.fetchers.forEach((_, key)=>deleteFetcher(key));
        state.blockers.forEach((_, key)=>deleteBlocker(key));
    }
    // Subscribe to state updates for the router
    function subscribe(fn) {
        subscribers.add(fn);
        return ()=>subscribers.delete(fn);
    }
    // Update our state and notify the calling context of the change
    function updateState(newState, opts) {
        if (opts === void 0) opts = {};
        state = _extends({}, state, newState);
        // Prep fetcher cleanup so we can tell the UI which fetcher data entries
        // can be removed
        let completedFetchers = [];
        let deletedFetchersKeys = [];
        if (future.v7_fetcherPersist) state.fetchers.forEach((fetcher, key)=>{
            if (fetcher.state === "idle") {
                if (deletedFetchers.has(key)) // Unmounted from the UI and can be totally removed
                deletedFetchersKeys.push(key);
                else // Returned to idle but still mounted in the UI, so semi-remains for
                // revalidations and such
                completedFetchers.push(key);
            }
        });
        // Iterate over a local copy so that if flushSync is used and we end up
        // removing and adding a new subscriber due to the useCallback dependencies,
        // we don't get ourselves into a loop calling the new subscriber immediately
        [
            ...subscribers
        ].forEach((subscriber)=>subscriber(state, {
                deletedFetchers: deletedFetchersKeys,
                unstable_viewTransitionOpts: opts.viewTransitionOpts,
                unstable_flushSync: opts.flushSync === true
            }));
        // Remove idle fetchers from state since we only care about in-flight fetchers.
        if (future.v7_fetcherPersist) {
            completedFetchers.forEach((key)=>state.fetchers.delete(key));
            deletedFetchersKeys.forEach((key)=>deleteFetcher(key));
        }
    }
    // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION
    // and setting state.[historyAction/location/matches] to the new route.
    // - Location is a required param
    // - Navigation will always be set to IDLE_NAVIGATION
    // - Can pass any other state in newState
    function completeNavigation(location, newState, _temp) {
        var _location$state, _location$state2;
        let { flushSync } = _temp === void 0 ? {} : _temp;
        // Deduce if we're in a loading/actionReload state:
        // - We have committed actionData in the store
        // - The current navigation was a mutation submission
        // - We're past the submitting state and into the loading state
        // - The location being loaded is not the result of a redirect
        let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;
        let actionData;
        if (newState.actionData) {
            if (Object.keys(newState.actionData).length > 0) actionData = newState.actionData;
            else // Empty actionData -> clear prior actionData due to an action error
            actionData = null;
        } else if (isActionReload) // Keep the current data if we're wrapping up the action reload
        actionData = state.actionData;
        else // Clear actionData on any other completed navigations
        actionData = null;
        // Always preserve any existing loaderData from re-used routes
        let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;
        // On a successful navigation we can assume we got through all blockers
        // so we can start fresh
        let blockers = state.blockers;
        if (blockers.size > 0) {
            blockers = new Map(blockers);
            blockers.forEach((_, k)=>blockers.set(k, IDLE_BLOCKER));
        }
        // Always respect the user flag.  Otherwise don't reset on mutation
        // submission navigations unless they redirect
        let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;
        if (inFlightDataRoutes) {
            dataRoutes = inFlightDataRoutes;
            inFlightDataRoutes = undefined;
        }
        if (isUninterruptedRevalidation) ;
        else if (pendingAction === Action.Pop) ;
        else if (pendingAction === Action.Push) init.history.push(location, location.state);
        else if (pendingAction === Action.Replace) init.history.replace(location, location.state);
        let viewTransitionOpts;
        // On POP, enable transitions if they were enabled on the original navigation
        if (pendingAction === Action.Pop) {
            // Forward takes precedence so they behave like the original navigation
            let priorPaths = appliedViewTransitions.get(state.location.pathname);
            if (priorPaths && priorPaths.has(location.pathname)) viewTransitionOpts = {
                currentLocation: state.location,
                nextLocation: location
            };
            else if (appliedViewTransitions.has(location.pathname)) // If we don't have a previous forward nav, assume we're popping back to
            // the new location and enable if that location previously enabled
            viewTransitionOpts = {
                currentLocation: location,
                nextLocation: state.location
            };
        } else if (pendingViewTransitionEnabled) {
            // Store the applied transition on PUSH/REPLACE
            let toPaths = appliedViewTransitions.get(state.location.pathname);
            if (toPaths) toPaths.add(location.pathname);
            else {
                toPaths = new Set([
                    location.pathname
                ]);
                appliedViewTransitions.set(state.location.pathname, toPaths);
            }
            viewTransitionOpts = {
                currentLocation: state.location,
                nextLocation: location
            };
        }
        updateState(_extends({}, newState, {
            actionData,
            loaderData,
            historyAction: pendingAction,
            location,
            initialized: true,
            navigation: IDLE_NAVIGATION,
            revalidation: "idle",
            restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
            preventScrollReset,
            blockers
        }), {
            viewTransitionOpts,
            flushSync: flushSync === true
        });
        // Reset stateful navigation vars
        pendingAction = Action.Pop;
        pendingPreventScrollReset = false;
        pendingViewTransitionEnabled = false;
        isUninterruptedRevalidation = false;
        isRevalidationRequired = false;
        cancelledDeferredRoutes = [];
        cancelledFetcherLoads = [];
    }
    // Trigger a navigation event, which can either be a numerical POP or a PUSH
    // replace with an optional submission
    async function navigate(to, opts) {
        if (typeof to === "number") {
            init.history.go(to);
            return;
        }
        let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);
        let { path, submission, error } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);
        let currentLocation = state.location;
        let nextLocation = createLocation(state.location, path, opts && opts.state);
        // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded
        // URL from window.location, so we need to encode it here so the behavior
        // remains the same as POP and non-data-router usages.  new URL() does all
        // the same encoding we'd get from a history.pushState/window.location read
        // without having to touch history
        nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));
        let userReplace = opts && opts.replace != null ? opts.replace : undefined;
        let historyAction = Action.Push;
        if (userReplace === true) historyAction = Action.Replace;
        else if (userReplace === false) ;
        else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) // By default on submissions to the current location we REPLACE so that
        // users don't have to double-click the back button to get to the prior
        // location.  If the user redirects to a different location from the
        // action/loader this will be ignored and the redirect will be a PUSH
        historyAction = Action.Replace;
        let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === true : undefined;
        let flushSync = (opts && opts.unstable_flushSync) === true;
        let blockerKey = shouldBlockNavigation({
            currentLocation,
            nextLocation,
            historyAction
        });
        if (blockerKey) {
            // Put the blocker into a blocked state
            updateBlocker(blockerKey, {
                state: "blocked",
                location: nextLocation,
                proceed () {
                    updateBlocker(blockerKey, {
                        state: "proceeding",
                        proceed: undefined,
                        reset: undefined,
                        location: nextLocation
                    });
                    // Send the same navigation through
                    navigate(to, opts);
                },
                reset () {
                    let blockers = new Map(state.blockers);
                    blockers.set(blockerKey, IDLE_BLOCKER);
                    updateState({
                        blockers
                    });
                }
            });
            return;
        }
        return await startNavigation(historyAction, nextLocation, {
            submission,
            // Send through the formData serialization error if we have one so we can
            // render at the right error boundary after we match routes
            pendingError: error,
            preventScrollReset,
            replace: opts && opts.replace,
            enableViewTransition: opts && opts.unstable_viewTransition,
            flushSync
        });
    }
    // Revalidate all current loaders.  If a navigation is in progress or if this
    // is interrupted by a navigation, allow this to "succeed" by calling all
    // loaders during the next loader round
    function revalidate() {
        interruptActiveLoads();
        updateState({
            revalidation: "loading"
        });
        // If we're currently submitting an action, we don't need to start a new
        // navigation, we'll just let the follow up loader execution call all loaders
        if (state.navigation.state === "submitting") return;
        // If we're currently in an idle state, start a new navigation for the current
        // action/location and mark it as uninterrupted, which will skip the history
        // update in completeNavigation
        if (state.navigation.state === "idle") {
            startNavigation(state.historyAction, state.location, {
                startUninterruptedRevalidation: true
            });
            return;
        }
        // Otherwise, if we're currently in a loading state, just start a new
        // navigation to the navigation.location but do not trigger an uninterrupted
        // revalidation so that history correctly updates once the navigation completes
        startNavigation(pendingAction || state.historyAction, state.navigation.location, {
            overrideNavigation: state.navigation
        });
    }
    // Start a navigation to the given action/location.  Can optionally provide a
    // overrideNavigation which will override the normalLoad in the case of a redirect
    // navigation
    async function startNavigation(historyAction, location, opts) {
        // Abort any in-progress navigations and start a new one. Unset any ongoing
        // uninterrupted revalidations unless told otherwise, since we want this
        // new navigation to update history normally
        pendingNavigationController && pendingNavigationController.abort();
        pendingNavigationController = null;
        pendingAction = historyAction;
        isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;
        // Save the current scroll position every time we start a new navigation,
        // and track whether we should reset scroll on completion
        saveScrollPosition(state.location, state.matches);
        pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
        pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let loadingNavigation = opts && opts.overrideNavigation;
        let matches = matchRoutes(routesToUse, location, basename);
        let flushSync = (opts && opts.flushSync) === true;
        // Short circuit with a 404 on the root error boundary if we match nothing
        if (!matches) {
            let error = getInternalRouterError(404, {
                pathname: location.pathname
            });
            let { matches: notFoundMatches, route } = getShortCircuitMatches(routesToUse);
            // Cancel all pending deferred on 404s since we don't keep any routes
            cancelActiveDeferreds();
            completeNavigation(location, {
                matches: notFoundMatches,
                loaderData: {},
                errors: {
                    [route.id]: error
                }
            }, {
                flushSync
            });
            return;
        }
        // Short circuit if it's only a hash change and not a revalidation or
        // mutation submission.
        //
        // Ignore on initial page loads because since the initial load will always
        // be "same hash".  For example, on /page#hash and submit a <Form method="post">
        // which will default to a navigation to /page
        if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
            completeNavigation(location, {
                matches
            }, {
                flushSync
            });
            return;
        }
        // Create a controller/Request for this navigation
        pendingNavigationController = new AbortController();
        let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);
        let pendingActionData;
        let pendingError;
        if (opts && opts.pendingError) // If we have a pendingError, it means the user attempted a GET submission
        // with binary FormData so assign here and skip to handleLoaders.  That
        // way we handle calling loaders above the boundary etc.  It's not really
        // different from an actionError in that sense.
        pendingError = {
            [findNearestBoundary(matches).route.id]: opts.pendingError
        };
        else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
            // Call action if we received an action submission
            let actionOutput = await handleAction(request, location, opts.submission, matches, {
                replace: opts.replace,
                flushSync
            });
            if (actionOutput.shortCircuited) return;
            pendingActionData = actionOutput.pendingActionData;
            pendingError = actionOutput.pendingActionError;
            loadingNavigation = getLoadingNavigation(location, opts.submission);
            flushSync = false;
            // Create a GET request for the loaders
            request = new Request(request.url, {
                signal: request.signal
            });
        }
        // Call loaders
        let { shortCircuited, loaderData, errors } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionData, pendingError);
        if (shortCircuited) return;
        // Clean up now that the action/loaders have completed.  Don't clean up if
        // we short circuited because pendingNavigationController will have already
        // been assigned to a new controller for the next navigation
        pendingNavigationController = null;
        completeNavigation(location, _extends({
            matches
        }, pendingActionData ? {
            actionData: pendingActionData
        } : {}, {
            loaderData,
            errors
        }));
    }
    // Call the action matched by the leaf route for this navigation and handle
    // redirects/errors
    async function handleAction(request, location, submission, matches, opts) {
        if (opts === void 0) opts = {};
        interruptActiveLoads();
        // Put us in a submitting state
        let navigation = getSubmittingNavigation(location, submission);
        updateState({
            navigation
        }, {
            flushSync: opts.flushSync === true
        });
        // Call our action and get the result
        let result;
        let actionMatch = getTargetMatch(matches, location);
        if (!actionMatch.route.action && !actionMatch.route.lazy) result = {
            type: ResultType.error,
            error: getInternalRouterError(405, {
                method: request.method,
                pathname: location.pathname,
                routeId: actionMatch.route.id
            })
        };
        else {
            result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);
            if (request.signal.aborted) return {
                shortCircuited: true
            };
        }
        if (isRedirectResult(result)) {
            let replace;
            if (opts && opts.replace != null) replace = opts.replace;
            else // If the user didn't explicity indicate replace behavior, replace if
            // we redirected to the exact same location we're currently at to avoid
            // double back-buttons
            replace = result.location === state.location.pathname + state.location.search;
            await startRedirectNavigation(state, result, {
                submission,
                replace
            });
            return {
                shortCircuited: true
            };
        }
        if (isErrorResult(result)) {
            // Store off the pending error - we use it to determine which loaders
            // to call and will commit it when we complete the navigation
            let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
            // By default, all submissions are REPLACE navigations, but if the
            // action threw an error that'll be rendered in an errorElement, we fall
            // back to PUSH so that the user can use the back button to get back to
            // the pre-submission form location to try again
            if ((opts && opts.replace) !== true) pendingAction = Action.Push;
            return {
                // Send back an empty object we can use to clear out any prior actionData
                pendingActionData: {},
                pendingActionError: {
                    [boundaryMatch.route.id]: result.error
                }
            };
        }
        if (isDeferredResult(result)) throw getInternalRouterError(400, {
            type: "defer-action"
        });
        return {
            pendingActionData: {
                [actionMatch.route.id]: result.data
            }
        };
    }
    // Call all applicable loaders for the given matches, handling redirects,
    // errors, etc.
    async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionData, pendingError) {
        // Figure out the right navigation we want to use for data loading
        let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);
        // If this was a redirect from an action we don't have a "submission" but
        // we have it on the loading navigation so use that if available
        let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);
        // Cancel pending deferreds for no-longer-matched routes or routes we're
        // about to reload.  Note that if this is an action reload we would have
        // already cancelled all pending deferreds so this would be a no-op
        cancelActiveDeferreds((routeId)=>!(matches && matches.some((m)=>m.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m)=>m.route.id === routeId));
        pendingNavigationLoadId = ++incrementingLoadId;
        // Short circuit if we have no loaders to run
        if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
            let updatedFetchers = markFetchRedirectsDone();
            completeNavigation(location, _extends({
                matches,
                loaderData: {},
                // Commit pending error if we're short circuiting
                errors: pendingError || null
            }, pendingActionData ? {
                actionData: pendingActionData
            } : {}, updatedFetchers ? {
                fetchers: new Map(state.fetchers)
            } : {}), {
                flushSync
            });
            return {
                shortCircuited: true
            };
        }
        // If this is an uninterrupted revalidation, we remain in our current idle
        // state.  If not, we need to switch to our loading state and load data,
        // preserving any new action data or existing action data (in the case of
        // a revalidation interrupting an actionReload)
        // If we have partialHydration enabled, then don't update the state for the
        // initial data load since it's not a "navigation"
        if (!isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration)) {
            revalidatingFetchers.forEach((rf)=>{
                let fetcher = state.fetchers.get(rf.key);
                let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);
                state.fetchers.set(rf.key, revalidatingFetcher);
            });
            let actionData = pendingActionData || state.actionData;
            updateState(_extends({
                navigation: loadingNavigation
            }, actionData ? Object.keys(actionData).length === 0 ? {
                actionData: null
            } : {
                actionData
            } : {}, revalidatingFetchers.length > 0 ? {
                fetchers: new Map(state.fetchers)
            } : {}), {
                flushSync
            });
        }
        revalidatingFetchers.forEach((rf)=>{
            if (fetchControllers.has(rf.key)) abortFetcher(rf.key);
            if (rf.controller) // Fetchers use an independent AbortController so that aborting a fetcher
            // (via deleteFetcher) does not abort the triggering navigation that
            // triggered the revalidation
            fetchControllers.set(rf.key, rf.controller);
        });
        // Proxy navigation abort through to revalidation fetchers
        let abortPendingFetchRevalidations = ()=>revalidatingFetchers.forEach((f)=>abortFetcher(f.key));
        if (pendingNavigationController) pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let { results, loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
        if (request.signal.aborted) return {
            shortCircuited: true
        };
        // Clean up _after_ loaders have completed.  Don't clean up if we short
        // circuited because fetchControllers would have been aborted and
        // reassigned to new controllers for the next navigation
        if (pendingNavigationController) pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
        revalidatingFetchers.forEach((rf)=>fetchControllers.delete(rf.key));
        // If any loaders returned a redirect Response, start a new REPLACE navigation
        let redirect = findRedirect(results);
        if (redirect) {
            if (redirect.idx >= matchesToLoad.length) {
                // If this redirect came from a fetcher make sure we mark it in
                // fetchRedirectIds so it doesn't get revalidated on the next set of
                // loader executions
                let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;
                fetchRedirectIds.add(fetcherKey);
            }
            await startRedirectNavigation(state, redirect.result, {
                replace
            });
            return {
                shortCircuited: true
            };
        }
        // Process and commit output from loaders
        let { loaderData, errors } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);
        // Wire up subscribers to update loaderData as promises settle
        activeDeferreds.forEach((deferredData, routeId)=>{
            deferredData.subscribe((aborted)=>{
                // Note: No need to updateState here since the TrackedPromise on
                // loaderData is stable across resolve/reject
                // Remove this instance if we were aborted or if promises have settled
                if (aborted || deferredData.done) activeDeferreds.delete(routeId);
            });
        });
        // During partial hydration, preserve SSR errors for routes that don't re-run
        if (future.v7_partialHydration && initialHydration && state.errors) Object.entries(state.errors).filter((_ref2)=>{
            let [id] = _ref2;
            return !matchesToLoad.some((m)=>m.route.id === id);
        }).forEach((_ref3)=>{
            let [routeId, error] = _ref3;
            errors = Object.assign(errors || {}, {
                [routeId]: error
            });
        });
        let updatedFetchers = markFetchRedirectsDone();
        let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);
        let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
        return _extends({
            loaderData,
            errors
        }, shouldUpdateFetchers ? {
            fetchers: new Map(state.fetchers)
        } : {});
    }
    // Trigger a fetcher load/submit for the given fetcher key
    function fetch(key, routeId, href, opts) {
        if (isServer) throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
        if (fetchControllers.has(key)) abortFetcher(key);
        let flushSync = (opts && opts.unstable_flushSync) === true;
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);
        let matches = matchRoutes(routesToUse, normalizedPath, basename);
        if (!matches) {
            setFetcherError(key, routeId, getInternalRouterError(404, {
                pathname: normalizedPath
            }), {
                flushSync
            });
            return;
        }
        let { path, submission, error } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);
        if (error) {
            setFetcherError(key, routeId, error, {
                flushSync
            });
            return;
        }
        let match = getTargetMatch(matches, path);
        pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;
        if (submission && isMutationMethod(submission.formMethod)) {
            handleFetcherAction(key, routeId, path, match, matches, flushSync, submission);
            return;
        }
        // Store off the match so we can call it's shouldRevalidate on subsequent
        // revalidations
        fetchLoadMatches.set(key, {
            routeId,
            path
        });
        handleFetcherLoader(key, routeId, path, match, matches, flushSync, submission);
    }
    // Call the action for the matched fetcher.submit(), and then handle redirects,
    // errors, and revalidation
    async function handleFetcherAction(key, routeId, path, match, requestMatches, flushSync, submission) {
        interruptActiveLoads();
        fetchLoadMatches.delete(key);
        if (!match.route.action && !match.route.lazy) {
            let error = getInternalRouterError(405, {
                method: submission.formMethod,
                pathname: path,
                routeId: routeId
            });
            setFetcherError(key, routeId, error, {
                flushSync
            });
            return;
        }
        // Put this fetcher into it's submitting state
        let existingFetcher = state.fetchers.get(key);
        updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {
            flushSync
        });
        // Call the action for the fetcher
        let abortController = new AbortController();
        let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);
        fetchControllers.set(key, abortController);
        let originatingLoadId = incrementingLoadId;
        let actionResult = await callLoaderOrAction("action", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);
        if (fetchRequest.signal.aborted) {
            // We can delete this so long as we weren't aborted by our own fetcher
            // re-submit which would have put _new_ controller is in fetchControllers
            if (fetchControllers.get(key) === abortController) fetchControllers.delete(key);
            return;
        }
        // When using v7_fetcherPersist, we don't want errors bubbling up to the UI
        // or redirects processed for unmounted fetchers so we just revert them to
        // idle
        if (future.v7_fetcherPersist && deletedFetchers.has(key)) {
            if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {
                updateFetcherState(key, getDoneFetcher(undefined));
                return;
            }
        } else {
            if (isRedirectResult(actionResult)) {
                fetchControllers.delete(key);
                if (pendingNavigationLoadId > originatingLoadId) {
                    // A new navigation was kicked off after our action started, so that
                    // should take precedence over this redirect navigation.  We already
                    // set isRevalidationRequired so all loaders for the new route should
                    // fire unless opted out via shouldRevalidate
                    updateFetcherState(key, getDoneFetcher(undefined));
                    return;
                } else {
                    fetchRedirectIds.add(key);
                    updateFetcherState(key, getLoadingFetcher(submission));
                    return startRedirectNavigation(state, actionResult, {
                        fetcherSubmission: submission
                    });
                }
            }
            // Process any non-redirect errors thrown
            if (isErrorResult(actionResult)) {
                setFetcherError(key, routeId, actionResult.error);
                return;
            }
        }
        if (isDeferredResult(actionResult)) throw getInternalRouterError(400, {
            type: "defer-action"
        });
        // Start the data load for current matches, or the next location if we're
        // in the middle of a navigation
        let nextLocation = state.navigation.location || state.location;
        let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);
        let routesToUse = inFlightDataRoutes || dataRoutes;
        let matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
        invariant(matches, "Didn't find any matches after fetcher action");
        let loadId = ++incrementingLoadId;
        fetchReloadIds.set(key, loadId);
        let loadFetcher = getLoadingFetcher(submission, actionResult.data);
        state.fetchers.set(key, loadFetcher);
        let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, {
            [match.route.id]: actionResult.data
        }, undefined // No need to send through errors since we short circuit above
        );
        // Put all revalidating fetchers into the loading state, except for the
        // current fetcher which we want to keep in it's current loading state which
        // contains it's action submission info + action data
        revalidatingFetchers.filter((rf)=>rf.key !== key).forEach((rf)=>{
            let staleKey = rf.key;
            let existingFetcher = state.fetchers.get(staleKey);
            let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);
            state.fetchers.set(staleKey, revalidatingFetcher);
            if (fetchControllers.has(staleKey)) abortFetcher(staleKey);
            if (rf.controller) fetchControllers.set(staleKey, rf.controller);
        });
        updateState({
            fetchers: new Map(state.fetchers)
        });
        let abortPendingFetchRevalidations = ()=>revalidatingFetchers.forEach((rf)=>abortFetcher(rf.key));
        abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
        let { results, loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
        if (abortController.signal.aborted) return;
        abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations);
        fetchReloadIds.delete(key);
        fetchControllers.delete(key);
        revalidatingFetchers.forEach((r)=>fetchControllers.delete(r.key));
        let redirect = findRedirect(results);
        if (redirect) {
            if (redirect.idx >= matchesToLoad.length) {
                // If this redirect came from a fetcher make sure we mark it in
                // fetchRedirectIds so it doesn't get revalidated on the next set of
                // loader executions
                let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;
                fetchRedirectIds.add(fetcherKey);
            }
            return startRedirectNavigation(state, redirect.result);
        }
        // Process and commit output from loaders
        let { loaderData, errors } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);
        // Since we let revalidations complete even if the submitting fetcher was
        // deleted, only put it back to idle if it hasn't been deleted
        if (state.fetchers.has(key)) {
            let doneFetcher = getDoneFetcher(actionResult.data);
            state.fetchers.set(key, doneFetcher);
        }
        abortStaleFetchLoads(loadId);
        // If we are currently in a navigation loading state and this fetcher is
        // more recent than the navigation, we want the newer data so abort the
        // navigation and complete it with the fetcher data
        if (state.navigation.state === "loading" && loadId > pendingNavigationLoadId) {
            invariant(pendingAction, "Expected pending action");
            pendingNavigationController && pendingNavigationController.abort();
            completeNavigation(state.navigation.location, {
                matches,
                loaderData,
                errors,
                fetchers: new Map(state.fetchers)
            });
        } else {
            // otherwise just update with the fetcher data, preserving any existing
            // loaderData for loaders that did not need to reload.  We have to
            // manually merge here since we aren't going through completeNavigation
            updateState({
                errors,
                loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),
                fetchers: new Map(state.fetchers)
            });
            isRevalidationRequired = false;
        }
    }
    // Call the matched loader for fetcher.load(), handling redirects, errors, etc.
    async function handleFetcherLoader(key, routeId, path, match, matches, flushSync, submission) {
        let existingFetcher = state.fetchers.get(key);
        updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {
            flushSync
        });
        // Call the loader for this fetcher route match
        let abortController = new AbortController();
        let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);
        fetchControllers.set(key, abortController);
        let originatingLoadId = incrementingLoadId;
        let result = await callLoaderOrAction("loader", fetchRequest, match, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);
        // Deferred isn't supported for fetcher loads, await everything and treat it
        // as a normal load.  resolveDeferredData will return undefined if this
        // fetcher gets aborted, so we just leave result untouched and short circuit
        // below if that happens
        if (isDeferredResult(result)) result = await resolveDeferredData(result, fetchRequest.signal, true) || result;
        // We can delete this so long as we weren't aborted by our our own fetcher
        // re-load which would have put _new_ controller is in fetchControllers
        if (fetchControllers.get(key) === abortController) fetchControllers.delete(key);
        if (fetchRequest.signal.aborted) return;
        // We don't want errors bubbling up or redirects followed for unmounted
        // fetchers, so short circuit here if it was removed from the UI
        if (deletedFetchers.has(key)) {
            updateFetcherState(key, getDoneFetcher(undefined));
            return;
        }
        // If the loader threw a redirect Response, start a new REPLACE navigation
        if (isRedirectResult(result)) {
            if (pendingNavigationLoadId > originatingLoadId) {
                // A new navigation was kicked off after our loader started, so that
                // should take precedence over this redirect navigation
                updateFetcherState(key, getDoneFetcher(undefined));
                return;
            } else {
                fetchRedirectIds.add(key);
                await startRedirectNavigation(state, result);
                return;
            }
        }
        // Process any non-redirect errors thrown
        if (isErrorResult(result)) {
            setFetcherError(key, routeId, result.error);
            return;
        }
        invariant(!isDeferredResult(result), "Unhandled fetcher deferred data");
        // Put the fetcher back into an idle state
        updateFetcherState(key, getDoneFetcher(result.data));
    }
    /**
   * Utility function to handle redirects returned from an action or loader.
   * Normally, a redirect "replaces" the navigation that triggered it.  So, for
   * example:
   *
   *  - user is on /a
   *  - user clicks a link to /b
   *  - loader for /b redirects to /c
   *
   * In a non-JS app the browser would track the in-flight navigation to /b and
   * then replace it with /c when it encountered the redirect response.  In
   * the end it would only ever update the URL bar with /c.
   *
   * In client-side routing using pushState/replaceState, we aim to emulate
   * this behavior and we also do not update history until the end of the
   * navigation (including processed redirects).  This means that we never
   * actually touch history until we've processed redirects, so we just use
   * the history action from the original navigation (PUSH or REPLACE).
   */ async function startRedirectNavigation(state, redirect, _temp2) {
        let { submission, fetcherSubmission, replace } = _temp2 === void 0 ? {} : _temp2;
        if (redirect.revalidate) isRevalidationRequired = true;
        let redirectLocation = createLocation(state.location, redirect.location, {
            _isRedirect: true
        });
        invariant(redirectLocation, "Expected a location on the redirect navigation");
        if (isBrowser) {
            let isDocumentReload = false;
            if (redirect.reloadDocument) // Hard reload if the response contained X-Remix-Reload-Document
            isDocumentReload = true;
            else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {
                const url = init.history.createURL(redirect.location);
                isDocumentReload = // Hard reload if it's an absolute URL to a new origin
                url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename
                stripBasename(url.pathname, basename) == null;
            }
            if (isDocumentReload) {
                if (replace) routerWindow.location.replace(redirect.location);
                else routerWindow.location.assign(redirect.location);
                return;
            }
        }
        // There's no need to abort on redirects, since we don't detect the
        // redirect until the action/loaders have settled
        pendingNavigationController = null;
        let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;
        // Use the incoming submission if provided, fallback on the active one in
        // state.navigation
        let { formMethod, formAction, formEncType } = state.navigation;
        if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) submission = getSubmissionFromNavigation(state.navigation);
        // If this was a 307/308 submission we want to preserve the HTTP method and
        // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the
        // redirected location
        let activeSubmission = submission || fetcherSubmission;
        if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) await startNavigation(redirectHistoryAction, redirectLocation, {
            submission: _extends({}, activeSubmission, {
                formAction: redirect.location
            }),
            // Preserve this flag across redirects
            preventScrollReset: pendingPreventScrollReset
        });
        else {
            // If we have a navigation submission, we will preserve it through the
            // redirect navigation
            let overrideNavigation = getLoadingNavigation(redirectLocation, submission);
            await startNavigation(redirectHistoryAction, redirectLocation, {
                overrideNavigation,
                // Send fetcher submissions through for shouldRevalidate
                fetcherSubmission,
                // Preserve this flag across redirects
                preventScrollReset: pendingPreventScrollReset
            });
        }
    }
    async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
        // Call all navigation loaders and revalidating fetcher loaders in parallel,
        // then slice off the results into separate arrays so we can handle them
        // accordingly
        let results = await Promise.all([
            ...matchesToLoad.map((match)=>callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath)),
            ...fetchersToLoad.map((f)=>{
                if (f.matches && f.match && f.controller) return callLoaderOrAction("loader", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);
                else {
                    let error = {
                        type: ResultType.error,
                        error: getInternalRouterError(404, {
                            pathname: f.path
                        })
                    };
                    return error;
                }
            })
        ]);
        let loaderResults = results.slice(0, matchesToLoad.length);
        let fetcherResults = results.slice(matchesToLoad.length);
        await Promise.all([
            resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(()=>request.signal), false, state.loaderData),
            resolveDeferredResults(currentMatches, fetchersToLoad.map((f)=>f.match), fetcherResults, fetchersToLoad.map((f)=>f.controller ? f.controller.signal : null), true)
        ]);
        return {
            results,
            loaderResults,
            fetcherResults
        };
    }
    function interruptActiveLoads() {
        // Every interruption triggers a revalidation
        isRevalidationRequired = true;
        // Cancel pending route-level deferreds and mark cancelled routes for
        // revalidation
        cancelledDeferredRoutes.push(...cancelActiveDeferreds());
        // Abort in-flight fetcher loads
        fetchLoadMatches.forEach((_, key)=>{
            if (fetchControllers.has(key)) {
                cancelledFetcherLoads.push(key);
                abortFetcher(key);
            }
        });
    }
    function updateFetcherState(key, fetcher, opts) {
        if (opts === void 0) opts = {};
        state.fetchers.set(key, fetcher);
        updateState({
            fetchers: new Map(state.fetchers)
        }, {
            flushSync: (opts && opts.flushSync) === true
        });
    }
    function setFetcherError(key, routeId, error, opts) {
        if (opts === void 0) opts = {};
        let boundaryMatch = findNearestBoundary(state.matches, routeId);
        deleteFetcher(key);
        updateState({
            errors: {
                [boundaryMatch.route.id]: error
            },
            fetchers: new Map(state.fetchers)
        }, {
            flushSync: (opts && opts.flushSync) === true
        });
    }
    function getFetcher(key) {
        if (future.v7_fetcherPersist) {
            activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);
            // If this fetcher was previously marked for deletion, unmark it since we
            // have a new instance
            if (deletedFetchers.has(key)) deletedFetchers.delete(key);
        }
        return state.fetchers.get(key) || IDLE_FETCHER;
    }
    function deleteFetcher(key) {
        let fetcher = state.fetchers.get(key);
        // Don't abort the controller if this is a deletion of a fetcher.submit()
        // in it's loading phase since - we don't want to abort the corresponding
        // revalidation and want them to complete and land
        if (fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key))) abortFetcher(key);
        fetchLoadMatches.delete(key);
        fetchReloadIds.delete(key);
        fetchRedirectIds.delete(key);
        deletedFetchers.delete(key);
        state.fetchers.delete(key);
    }
    function deleteFetcherAndUpdateState(key) {
        if (future.v7_fetcherPersist) {
            let count = (activeFetchers.get(key) || 0) - 1;
            if (count <= 0) {
                activeFetchers.delete(key);
                deletedFetchers.add(key);
            } else activeFetchers.set(key, count);
        } else deleteFetcher(key);
        updateState({
            fetchers: new Map(state.fetchers)
        });
    }
    function abortFetcher(key) {
        let controller = fetchControllers.get(key);
        invariant(controller, "Expected fetch controller: " + key);
        controller.abort();
        fetchControllers.delete(key);
    }
    function markFetchersDone(keys) {
        for (let key of keys){
            let fetcher = getFetcher(key);
            let doneFetcher = getDoneFetcher(fetcher.data);
            state.fetchers.set(key, doneFetcher);
        }
    }
    function markFetchRedirectsDone() {
        let doneKeys = [];
        let updatedFetchers = false;
        for (let key of fetchRedirectIds){
            let fetcher = state.fetchers.get(key);
            invariant(fetcher, "Expected fetcher: " + key);
            if (fetcher.state === "loading") {
                fetchRedirectIds.delete(key);
                doneKeys.push(key);
                updatedFetchers = true;
            }
        }
        markFetchersDone(doneKeys);
        return updatedFetchers;
    }
    function abortStaleFetchLoads(landedId) {
        let yeetedKeys = [];
        for (let [key, id] of fetchReloadIds)if (id < landedId) {
            let fetcher = state.fetchers.get(key);
            invariant(fetcher, "Expected fetcher: " + key);
            if (fetcher.state === "loading") {
                abortFetcher(key);
                fetchReloadIds.delete(key);
                yeetedKeys.push(key);
            }
        }
        markFetchersDone(yeetedKeys);
        return yeetedKeys.length > 0;
    }
    function getBlocker(key, fn) {
        let blocker = state.blockers.get(key) || IDLE_BLOCKER;
        if (blockerFunctions.get(key) !== fn) blockerFunctions.set(key, fn);
        return blocker;
    }
    function deleteBlocker(key) {
        state.blockers.delete(key);
        blockerFunctions.delete(key);
    }
    // Utility function to update blockers, ensuring valid state transitions
    function updateBlocker(key, newBlocker) {
        let blocker = state.blockers.get(key) || IDLE_BLOCKER;
        // Poor mans state machine :)
        // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM
        invariant(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state);
        let blockers = new Map(state.blockers);
        blockers.set(key, newBlocker);
        updateState({
            blockers
        });
    }
    function shouldBlockNavigation(_ref4) {
        let { currentLocation, nextLocation, historyAction } = _ref4;
        if (blockerFunctions.size === 0) return;
        // We ony support a single active blocker at the moment since we don't have
        // any compelling use cases for multi-blocker yet
        if (blockerFunctions.size > 1) warning(false, "A router only supports one blocker at a time");
        let entries = Array.from(blockerFunctions.entries());
        let [blockerKey, blockerFunction] = entries[entries.length - 1];
        let blocker = state.blockers.get(blockerKey);
        if (blocker && blocker.state === "proceeding") // If the blocker is currently proceeding, we don't need to re-check
        // it and can let this navigation continue
        return;
        // At this point, we know we're unblocked/blocked so we need to check the
        // user-provided blocker function
        if (blockerFunction({
            currentLocation,
            nextLocation,
            historyAction
        })) return blockerKey;
    }
    function cancelActiveDeferreds(predicate) {
        let cancelledRouteIds = [];
        activeDeferreds.forEach((dfd, routeId)=>{
            if (!predicate || predicate(routeId)) {
                // Cancel the deferred - but do not remove from activeDeferreds here -
                // we rely on the subscribers to do that so our tests can assert proper
                // cleanup via _internalActiveDeferreds
                dfd.cancel();
                cancelledRouteIds.push(routeId);
                activeDeferreds.delete(routeId);
            }
        });
        return cancelledRouteIds;
    }
    // Opt in to capturing and reporting scroll positions during navigations,
    // used by the <ScrollRestoration> component
    function enableScrollRestoration(positions, getPosition, getKey) {
        savedScrollPositions = positions;
        getScrollPosition = getPosition;
        getScrollRestorationKey = getKey || null;
        // Perform initial hydration scroll restoration, since we miss the boat on
        // the initial updateState() because we've not yet rendered <ScrollRestoration/>
        // and therefore have no savedScrollPositions available
        if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
            initialScrollRestored = true;
            let y = getSavedScrollPosition(state.location, state.matches);
            if (y != null) updateState({
                restoreScrollPosition: y
            });
        }
        return ()=>{
            savedScrollPositions = null;
            getScrollPosition = null;
            getScrollRestorationKey = null;
        };
    }
    function getScrollKey(location, matches) {
        if (getScrollRestorationKey) {
            let key = getScrollRestorationKey(location, matches.map((m)=>convertRouteMatchToUiMatch(m, state.loaderData)));
            return key || location.key;
        }
        return location.key;
    }
    function saveScrollPosition(location, matches) {
        if (savedScrollPositions && getScrollPosition) {
            let key = getScrollKey(location, matches);
            savedScrollPositions[key] = getScrollPosition();
        }
    }
    function getSavedScrollPosition(location, matches) {
        if (savedScrollPositions) {
            let key = getScrollKey(location, matches);
            let y = savedScrollPositions[key];
            if (typeof y === "number") return y;
        }
        return null;
    }
    function _internalSetRoutes(newRoutes) {
        manifest = {};
        inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);
    }
    router = {
        get basename () {
            return basename;
        },
        get future () {
            return future;
        },
        get state () {
            return state;
        },
        get routes () {
            return dataRoutes;
        },
        get window () {
            return routerWindow;
        },
        initialize,
        subscribe,
        enableScrollRestoration,
        navigate,
        fetch,
        revalidate,
        // Passthrough to history-aware createHref used by useHref so we get proper
        // hash-aware URLs in DOM paths
        createHref: (to)=>init.history.createHref(to),
        encodeLocation: (to)=>init.history.encodeLocation(to),
        getFetcher,
        deleteFetcher: deleteFetcherAndUpdateState,
        dispose,
        getBlocker,
        deleteBlocker,
        _internalFetchControllers: fetchControllers,
        _internalActiveDeferreds: activeDeferreds,
        // TODO: Remove setRoutes, it's temporary to avoid dealing with
        // updating the tree while validating the update algorithm.
        _internalSetRoutes
    };
    return router;
}
//#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createStaticHandler
////////////////////////////////////////////////////////////////////////////////
const UNSAFE_DEFERRED_SYMBOL = Symbol("deferred");
function createStaticHandler(routes, opts) {
    invariant(routes.length > 0, "You must provide a non-empty routes array to createStaticHandler");
    let manifest = {};
    let basename = (opts ? opts.basename : null) || "/";
    let mapRouteProperties;
    if (opts != null && opts.mapRouteProperties) mapRouteProperties = opts.mapRouteProperties;
    else if (opts != null && opts.detectErrorBoundary) {
        // If they are still using the deprecated version, wrap it with the new API
        let detectErrorBoundary = opts.detectErrorBoundary;
        mapRouteProperties = (route)=>({
                hasErrorBoundary: detectErrorBoundary(route)
            });
    } else mapRouteProperties = defaultMapRouteProperties;
    // Config driven behavior flags
    let future = _extends({
        v7_relativeSplatPath: false,
        v7_throwAbortReason: false
    }, opts ? opts.future : null);
    let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);
    /**
   * The query() method is intended for document requests, in which we want to
   * call an optional action and potentially multiple loaders for all nested
   * routes.  It returns a StaticHandlerContext object, which is very similar
   * to the router state (location, loaderData, actionData, errors, etc.) and
   * also adds SSR-specific information such as the statusCode and headers
   * from action/loaders Responses.
   *
   * It _should_ never throw and should report all errors through the
   * returned context.errors object, properly associating errors to their error
   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be
   * used to emulate React error boundaries during SSr by performing a second
   * pass only down to the boundaryId.
   *
   * The one exception where we do not return a StaticHandlerContext is when a
   * redirect response is returned or thrown from any action/loader.  We
   * propagate that out and return the raw Response so the HTTP server can
   * return it directly.
   */ async function query(request, _temp3) {
        let { requestContext } = _temp3 === void 0 ? {} : _temp3;
        let url = new URL(request.url);
        let method = request.method;
        let location = createLocation("", createPath(url), null, "default");
        let matches = matchRoutes(dataRoutes, location, basename);
        // SSR supports HEAD requests while SPA doesn't
        if (!isValidMethod(method) && method !== "HEAD") {
            let error = getInternalRouterError(405, {
                method
            });
            let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);
            return {
                basename,
                location,
                matches: methodNotAllowedMatches,
                loaderData: {},
                actionData: null,
                errors: {
                    [route.id]: error
                },
                statusCode: error.status,
                loaderHeaders: {},
                actionHeaders: {},
                activeDeferreds: null
            };
        } else if (!matches) {
            let error = getInternalRouterError(404, {
                pathname: location.pathname
            });
            let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);
            return {
                basename,
                location,
                matches: notFoundMatches,
                loaderData: {},
                actionData: null,
                errors: {
                    [route.id]: error
                },
                statusCode: error.status,
                loaderHeaders: {},
                actionHeaders: {},
                activeDeferreds: null
            };
        }
        let result = await queryImpl(request, location, matches, requestContext);
        if (isResponse(result)) return result;
        // When returning StaticHandlerContext, we patch back in the location here
        // since we need it for React Context.  But this helps keep our submit and
        // loadRouteData operating on a Request instead of a Location
        return _extends({
            location,
            basename
        }, result);
    }
    /**
   * The queryRoute() method is intended for targeted route requests, either
   * for fetch ?_data requests or resource route requests.  In this case, we
   * are only ever calling a single action or loader, and we are returning the
   * returned value directly.  In most cases, this will be a Response returned
   * from the action/loader, but it may be a primitive or other value as well -
   * and in such cases the calling context should handle that accordingly.
   *
   * We do respect the throw/return differentiation, so if an action/loader
   * throws, then this method will throw the value.  This is important so we
   * can do proper boundary identification in Remix where a thrown Response
   * must go to the Catch Boundary but a returned Response is happy-path.
   *
   * One thing to note is that any Router-initiated Errors that make sense
   * to associate with a status code will be thrown as an ErrorResponse
   * instance which include the raw Error, such that the calling context can
   * serialize the error as they see fit while including the proper response
   * code.  Examples here are 404 and 405 errors that occur prior to reaching
   * any user-defined loaders.
   */ async function queryRoute(request, _temp4) {
        let { routeId, requestContext } = _temp4 === void 0 ? {} : _temp4;
        let url = new URL(request.url);
        let method = request.method;
        let location = createLocation("", createPath(url), null, "default");
        let matches = matchRoutes(dataRoutes, location, basename);
        // SSR supports HEAD requests while SPA doesn't
        if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS") throw getInternalRouterError(405, {
            method
        });
        else if (!matches) throw getInternalRouterError(404, {
            pathname: location.pathname
        });
        let match = routeId ? matches.find((m)=>m.route.id === routeId) : getTargetMatch(matches, location);
        if (routeId && !match) throw getInternalRouterError(403, {
            pathname: location.pathname,
            routeId
        });
        else if (!match) // This should never hit I don't think?
        throw getInternalRouterError(404, {
            pathname: location.pathname
        });
        let result = await queryImpl(request, location, matches, requestContext, match);
        if (isResponse(result)) return result;
        let error = result.errors ? Object.values(result.errors)[0] : undefined;
        if (error !== undefined) // If we got back result.errors, that means the loader/action threw
        // _something_ that wasn't a Response, but it's not guaranteed/required
        // to be an `instanceof Error` either, so we have to use throw here to
        // preserve the "error" state outside of queryImpl.
        throw error;
        // Pick off the right state value to return
        if (result.actionData) return Object.values(result.actionData)[0];
        if (result.loaderData) {
            var _result$activeDeferre;
            let data = Object.values(result.loaderData)[0];
            if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];
            return data;
        }
        return undefined;
    }
    async function queryImpl(request, location, matches, requestContext, routeMatch) {
        invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
        try {
            if (isMutationMethod(request.method.toLowerCase())) {
                let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);
                return result;
            }
            let result = await loadRouteData(request, matches, requestContext, routeMatch);
            return isResponse(result) ? result : _extends({}, result, {
                actionData: null,
                actionHeaders: {}
            });
        } catch (e) {
            // If the user threw/returned a Response in callLoaderOrAction, we throw
            // it to bail out and then return or throw here based on whether the user
            // returned or threw
            if (isQueryRouteResponse(e)) {
                if (e.type === ResultType.error) throw e.response;
                return e.response;
            }
            // Redirects are always returned since they don't propagate to catch
            // boundaries
            if (isRedirectResponse(e)) return e;
            throw e;
        }
    }
    async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {
        let result;
        if (!actionMatch.route.action && !actionMatch.route.lazy) {
            let error = getInternalRouterError(405, {
                method: request.method,
                pathname: new URL(request.url).pathname,
                routeId: actionMatch.route.id
            });
            if (isRouteRequest) throw error;
            result = {
                type: ResultType.error,
                error
            };
        } else {
            result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath, {
                isStaticRequest: true,
                isRouteRequest,
                requestContext
            });
            if (request.signal.aborted) throwStaticHandlerAbortedError(request, isRouteRequest, future);
        }
        if (isRedirectResult(result)) // Uhhhh - this should never happen, we should always throw these from
        // callLoaderOrAction, but the type narrowing here keeps TS happy and we
        // can get back on the "throw all redirect responses" train here should
        // this ever happen :/
        throw new Response(null, {
            status: result.status,
            headers: {
                Location: result.location
            }
        });
        if (isDeferredResult(result)) {
            let error = getInternalRouterError(400, {
                type: "defer-action"
            });
            if (isRouteRequest) throw error;
            result = {
                type: ResultType.error,
                error
            };
        }
        if (isRouteRequest) {
            // Note: This should only be non-Response values if we get here, since
            // isRouteRequest should throw any Response received in callLoaderOrAction
            if (isErrorResult(result)) throw result.error;
            return {
                matches: [
                    actionMatch
                ],
                loaderData: {},
                actionData: {
                    [actionMatch.route.id]: result.data
                },
                errors: null,
                // Note: statusCode + headers are unused here since queryRoute will
                // return the raw Response or value
                statusCode: 200,
                loaderHeaders: {},
                actionHeaders: {},
                activeDeferreds: null
            };
        }
        if (isErrorResult(result)) {
            // Store off the pending error - we use it to determine which loaders
            // to call and will commit it when we complete the navigation
            let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
            let context = await loadRouteData(request, matches, requestContext, undefined, {
                [boundaryMatch.route.id]: result.error
            });
            // action status codes take precedence over loader status codes
            return _extends({}, context, {
                statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,
                actionData: null,
                actionHeaders: _extends({}, result.headers ? {
                    [actionMatch.route.id]: result.headers
                } : {})
            });
        }
        // Create a GET request for the loaders
        let loaderRequest = new Request(request.url, {
            headers: request.headers,
            redirect: request.redirect,
            signal: request.signal
        });
        let context = await loadRouteData(loaderRequest, matches, requestContext);
        return _extends({}, context, result.statusCode ? {
            statusCode: result.statusCode
        } : {}, {
            actionData: {
                [actionMatch.route.id]: result.data
            },
            actionHeaders: _extends({}, result.headers ? {
                [actionMatch.route.id]: result.headers
            } : {})
        });
    }
    async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {
        let isRouteRequest = routeMatch != null;
        // Short circuit if we have no loaders to run (queryRoute())
        if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) throw getInternalRouterError(400, {
            method: request.method,
            pathname: new URL(request.url).pathname,
            routeId: routeMatch == null ? void 0 : routeMatch.route.id
        });
        let requestMatches = routeMatch ? [
            routeMatch
        ] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);
        let matchesToLoad = requestMatches.filter((m)=>m.route.loader || m.route.lazy);
        // Short circuit if we have no loaders to run (query())
        if (matchesToLoad.length === 0) return {
            matches,
            // Add a null for all matched routes for proper revalidation on the client
            loaderData: matches.reduce((acc, m)=>Object.assign(acc, {
                    [m.route.id]: null
                }), {}),
            errors: pendingActionError || null,
            statusCode: 200,
            loaderHeaders: {},
            activeDeferreds: null
        };
        let results = await Promise.all([
            ...matchesToLoad.map((match)=>callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath, {
                    isStaticRequest: true,
                    isRouteRequest,
                    requestContext
                }))
        ]);
        if (request.signal.aborted) throwStaticHandlerAbortedError(request, isRouteRequest, future);
        // Process and commit output from loaders
        let activeDeferreds = new Map();
        let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);
        // Add a null for any non-loader matches for proper revalidation on the client
        let executedLoaders = new Set(matchesToLoad.map((match)=>match.route.id));
        matches.forEach((match)=>{
            if (!executedLoaders.has(match.route.id)) context.loaderData[match.route.id] = null;
        });
        return _extends({}, context, {
            matches,
            activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null
        });
    }
    return {
        dataRoutes,
        query,
        queryRoute
    };
}
//#endregion
////////////////////////////////////////////////////////////////////////////////
//#region Helpers
////////////////////////////////////////////////////////////////////////////////
/**
 * Given an existing StaticHandlerContext and an error thrown at render time,
 * provide an updated StaticHandlerContext suitable for a second SSR render
 */ function getStaticContextFromError(routes, context, error) {
    let newContext = _extends({}, context, {
        statusCode: isRouteErrorResponse(error) ? error.status : 500,
        errors: {
            [context._deepestRenderedBoundaryId || routes[0].id]: error
        }
    });
    return newContext;
}
function throwStaticHandlerAbortedError(request, isRouteRequest, future) {
    if (future.v7_throwAbortReason && request.signal.reason !== undefined) throw request.signal.reason;
    let method = isRouteRequest ? "queryRoute" : "query";
    throw new Error(method + "() call aborted: " + request.method + " " + request.url);
}
function isSubmissionNavigation(opts) {
    return opts != null && ("formData" in opts && opts.formData != null || "body" in opts && opts.body !== undefined);
}
function normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {
    let contextualMatches;
    let activeRouteMatch;
    if (fromRouteId) {
        // Grab matches up to the calling route so our route-relative logic is
        // relative to the correct source route
        contextualMatches = [];
        for (let match of matches){
            contextualMatches.push(match);
            if (match.route.id === fromRouteId) {
                activeRouteMatch = match;
                break;
            }
        }
    } else {
        contextualMatches = matches;
        activeRouteMatch = matches[matches.length - 1];
    }
    // Resolve the relative path
    let path = resolveTo(to ? to : ".", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === "path");
    // When `to` is not specified we inherit search/hash from the current
    // location, unlike when to="." and we just inherit the path.
    // See https://github.com/remix-run/remix/issues/927
    if (to == null) {
        path.search = location.search;
        path.hash = location.hash;
    }
    // Add an ?index param for matched index routes if we don't already have one
    if ((to == null || to === "" || to === ".") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
    // If we're operating within a basename, prepend it to the pathname.  If
    // this is a root navigation, then just use the raw basename which allows
    // the basename to have full control over the presence of a trailing slash
    // on root actions
    if (prependBasename && basename !== "/") path.pathname = path.pathname === "/" ? basename : joinPaths([
        basename,
        path.pathname
    ]);
    return createPath(path);
}
// Normalize navigation options by converting formMethod=GET formData objects to
// URLSearchParams so they behave identically to links with query params
function normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {
    // Return location verbatim on non-submission navigations
    if (!opts || !isSubmissionNavigation(opts)) return {
        path
    };
    if (opts.formMethod && !isValidMethod(opts.formMethod)) return {
        path,
        error: getInternalRouterError(405, {
            method: opts.formMethod
        })
    };
    let getInvalidBodyError = ()=>({
            path,
            error: getInternalRouterError(400, {
                type: "invalid-body"
            })
        });
    // Create a Submission on non-GET navigations
    let rawFormMethod = opts.formMethod || "get";
    let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();
    let formAction = stripHashFromPath(path);
    if (opts.body !== undefined) {
        if (opts.formEncType === "text/plain") {
            // text only support POST/PUT/PATCH/DELETE submissions
            if (!isMutationMethod(formMethod)) return getInvalidBodyError();
            let text = typeof opts.body === "string" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data
            Array.from(opts.body.entries()).reduce((acc, _ref5)=>{
                let [name, value] = _ref5;
                return "" + acc + name + "=" + value + "\n";
            }, "") : String(opts.body);
            return {
                path,
                submission: {
                    formMethod,
                    formAction,
                    formEncType: opts.formEncType,
                    formData: undefined,
                    json: undefined,
                    text
                }
            };
        } else if (opts.formEncType === "application/json") {
            // json only supports POST/PUT/PATCH/DELETE submissions
            if (!isMutationMethod(formMethod)) return getInvalidBodyError();
            try {
                let json = typeof opts.body === "string" ? JSON.parse(opts.body) : opts.body;
                return {
                    path,
                    submission: {
                        formMethod,
                        formAction,
                        formEncType: opts.formEncType,
                        formData: undefined,
                        json,
                        text: undefined
                    }
                };
            } catch (e) {
                return getInvalidBodyError();
            }
        }
    }
    invariant(typeof FormData === "function", "FormData is not available in this environment");
    let searchParams;
    let formData;
    if (opts.formData) {
        searchParams = convertFormDataToSearchParams(opts.formData);
        formData = opts.formData;
    } else if (opts.body instanceof FormData) {
        searchParams = convertFormDataToSearchParams(opts.body);
        formData = opts.body;
    } else if (opts.body instanceof URLSearchParams) {
        searchParams = opts.body;
        formData = convertSearchParamsToFormData(searchParams);
    } else if (opts.body == null) {
        searchParams = new URLSearchParams();
        formData = new FormData();
    } else try {
        searchParams = new URLSearchParams(opts.body);
        formData = convertSearchParamsToFormData(searchParams);
    } catch (e) {
        return getInvalidBodyError();
    }
    let submission = {
        formMethod,
        formAction,
        formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
        formData,
        json: undefined,
        text: undefined
    };
    if (isMutationMethod(submission.formMethod)) return {
        path,
        submission
    };
    // Flatten submission onto URLSearchParams for GET submissions
    let parsedPath = parsePath(path);
    // On GET navigation submissions we can drop the ?index param from the
    // resulting location since all loaders will run.  But fetcher GET submissions
    // only run a single loader so we need to preserve any incoming ?index params
    if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) searchParams.append("index", "");
    parsedPath.search = "?" + searchParams;
    return {
        path: createPath(parsedPath),
        submission
    };
}
// Filter out all routes below any caught error as they aren't going to
// render so we don't need to load them
function getLoaderMatchesUntilBoundary(matches, boundaryId) {
    let boundaryMatches = matches;
    if (boundaryId) {
        let index = matches.findIndex((m)=>m.route.id === boundaryId);
        if (index >= 0) boundaryMatches = matches.slice(0, index);
    }
    return boundaryMatches;
}
function getMatchesToLoad(history, state, matches, submission, location, isInitialLoad, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {
    let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;
    let currentUrl = history.createURL(state.location);
    let nextUrl = history.createURL(location);
    // Pick navigation matches that are net-new or qualify for revalidation
    let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;
    let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);
    let navigationMatches = boundaryMatches.filter((match, index)=>{
        let { route } = match;
        if (route.lazy) // We haven't loaded this route yet so we don't know if it's got a loader!
        return true;
        if (route.loader == null) return false;
        if (isInitialLoad) {
            if (route.loader.hydrate) return true;
            return state.loaderData[route.id] === undefined && // Don't re-run if the loader ran and threw an error
            (!state.errors || state.errors[route.id] === undefined);
        }
        // Always call the loader on new route instances and pending defer cancellations
        if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some((id)=>id === match.route.id)) return true;
        // This is the default implementation for when we revalidate.  If the route
        // provides it's own implementation, then we give them full control but
        // provide this value so they can leverage it if needed after they check
        // their own specific use cases
        let currentRouteMatch = state.matches[index];
        let nextRouteMatch = match;
        return shouldRevalidateLoader(match, _extends({
            currentUrl,
            currentParams: currentRouteMatch.params,
            nextUrl,
            nextParams: nextRouteMatch.params
        }, submission, {
            actionResult,
            defaultShouldRevalidate: // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
            isRevalidationRequired || // Clicked the same link, resubmitted a GET form
            currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
            currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
        }));
    });
    // Pick fetcher.loads that need to be revalidated
    let revalidatingFetchers = [];
    fetchLoadMatches.forEach((f, key)=>{
        // Don't revalidate:
        //  - on initial load (shouldn't be any fetchers then anyway)
        //  - if fetcher won't be present in the subsequent render
        //    - no longer matches the URL (v7_fetcherPersist=false)
        //    - was unmounted but persisted due to v7_fetcherPersist=true
        if (isInitialLoad || !matches.some((m)=>m.route.id === f.routeId) || deletedFetchers.has(key)) return;
        let fetcherMatches = matchRoutes(routesToUse, f.path, basename);
        // If the fetcher path no longer matches, push it in with null matches so
        // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is
        // currently only a use-case for Remix HMR where the route tree can change
        // at runtime and remove a route previously loaded via a fetcher
        if (!fetcherMatches) {
            revalidatingFetchers.push({
                key,
                routeId: f.routeId,
                path: f.path,
                matches: null,
                match: null,
                controller: null
            });
            return;
        }
        // Revalidating fetchers are decoupled from the route matches since they
        // load from a static href.  They revalidate based on explicit revalidation
        // (submission, useRevalidator, or X-Remix-Revalidate)
        let fetcher = state.fetchers.get(key);
        let fetcherMatch = getTargetMatch(fetcherMatches, f.path);
        let shouldRevalidate = false;
        if (fetchRedirectIds.has(key)) // Never trigger a revalidation of an actively redirecting fetcher
        shouldRevalidate = false;
        else if (cancelledFetcherLoads.includes(key)) // Always revalidate if the fetcher was cancelled
        shouldRevalidate = true;
        else if (fetcher && fetcher.state !== "idle" && fetcher.data === undefined) // If the fetcher hasn't ever completed loading yet, then this isn't a
        // revalidation, it would just be a brand new load if an explicit
        // revalidation is required
        shouldRevalidate = isRevalidationRequired;
        else // Otherwise fall back on any user-defined shouldRevalidate, defaulting
        // to explicit revalidations only
        shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({
            currentUrl,
            currentParams: state.matches[state.matches.length - 1].params,
            nextUrl,
            nextParams: matches[matches.length - 1].params
        }, submission, {
            actionResult,
            defaultShouldRevalidate: isRevalidationRequired
        }));
        if (shouldRevalidate) revalidatingFetchers.push({
            key,
            routeId: f.routeId,
            path: f.path,
            matches: fetcherMatches,
            match: fetcherMatch,
            controller: new AbortController()
        });
    });
    return [
        navigationMatches,
        revalidatingFetchers
    ];
}
function isNewLoader(currentLoaderData, currentMatch, match) {
    let isNew = // [a] -> [a, b]
    !currentMatch || // [a, b] -> [a, c]
    match.route.id !== currentMatch.route.id;
    // Handle the case that we don't have data for a re-used route, potentially
    // from a prior error or from a cancelled pending deferred
    let isMissingData = currentLoaderData[match.route.id] === undefined;
    // Always load if this is a net-new route or we don't yet have data
    return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match) {
    let currentPath = currentMatch.route.path;
    return(// param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]);
}
function shouldRevalidateLoader(loaderMatch, arg) {
    if (loaderMatch.route.shouldRevalidate) {
        let routeChoice = loaderMatch.route.shouldRevalidate(arg);
        if (typeof routeChoice === "boolean") return routeChoice;
    }
    return arg.defaultShouldRevalidate;
}
/**
 * Execute route.lazy() methods to lazily load route modules (loader, action,
 * shouldRevalidate) and update the routeManifest in place which shares objects
 * with dataRoutes so those get updated as well.
 */ async function loadLazyRouteModule(route, mapRouteProperties, manifest) {
    if (!route.lazy) return;
    let lazyRoute = await route.lazy();
    // If the lazy route function was executed and removed by another parallel
    // call then we can return - first lazy() to finish wins because the return
    // value of lazy is expected to be static
    if (!route.lazy) return;
    let routeToUpdate = manifest[route.id];
    invariant(routeToUpdate, "No route found in manifest");
    // Update the route in place.  This should be safe because there's no way
    // we could yet be sitting on this route as we can't get there without
    // resolving lazy() first.
    //
    // This is different than the HMR "update" use-case where we may actively be
    // on the route being updated.  The main concern boils down to "does this
    // mutation affect any ongoing navigations or any current state.matches
    // values?".  If not, it should be safe to update in place.
    let routeUpdates = {};
    for(let lazyRouteProperty in lazyRoute){
        let staticRouteValue = routeToUpdate[lazyRouteProperty];
        let isPropertyStaticallyDefined = staticRouteValue !== undefined && // This property isn't static since it should always be updated based
        // on the route updates
        lazyRouteProperty !== "hasErrorBoundary";
        warning(!isPropertyStaticallyDefined, 'Route "' + routeToUpdate.id + '" has a static property "' + lazyRouteProperty + '" ' + "defined but its lazy function is also returning a value for this property. " + ('The lazy route property "' + lazyRouteProperty + '" will be ignored.'));
        if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];
    }
    // Mutate the route with the provided updates.  Do this first so we pass
    // the updated version to mapRouteProperties
    Object.assign(routeToUpdate, routeUpdates);
    // Mutate the `hasErrorBoundary` property on the route based on the route
    // updates and remove the `lazy` function so we don't resolve the lazy
    // route again.
    Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {
        lazy: undefined
    }));
}
async function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, v7_relativeSplatPath, opts) {
    if (opts === void 0) opts = {};
    let resultType;
    let result;
    let onReject;
    let runHandler = (handler)=>{
        // Setup a promise we can race against so that abort signals short circuit
        let reject;
        let abortPromise = new Promise((_, r)=>reject = r);
        onReject = ()=>reject();
        request.signal.addEventListener("abort", onReject);
        return Promise.race([
            handler({
                request,
                params: match.params,
                context: opts.requestContext
            }),
            abortPromise
        ]);
    };
    try {
        let handler = match.route[type];
        if (match.route.lazy) {
            if (handler) {
                // Run statically defined handler in parallel with lazy()
                let handlerError;
                let values = await Promise.all([
                    // If the handler throws, don't let it immediately bubble out,
                    // since we need to let the lazy() execution finish so we know if this
                    // route has a boundary that can handle the error
                    runHandler(handler).catch((e)=>{
                        handlerError = e;
                    }),
                    loadLazyRouteModule(match.route, mapRouteProperties, manifest)
                ]);
                if (handlerError) throw handlerError;
                result = values[0];
            } else {
                // Load lazy route module, then run any returned handler
                await loadLazyRouteModule(match.route, mapRouteProperties, manifest);
                handler = match.route[type];
                if (handler) // Handler still run even if we got interrupted to maintain consistency
                // with un-abortable behavior of handler execution on non-lazy or
                // previously-lazy-loaded routes
                result = await runHandler(handler);
                else if (type === "action") {
                    let url = new URL(request.url);
                    let pathname = url.pathname + url.search;
                    throw getInternalRouterError(405, {
                        method: request.method,
                        pathname,
                        routeId: match.route.id
                    });
                } else // lazy() route has no loader to run.  Short circuit here so we don't
                // hit the invariant below that errors on returning undefined.
                return {
                    type: ResultType.data,
                    data: undefined
                };
            }
        } else if (!handler) {
            let url = new URL(request.url);
            let pathname = url.pathname + url.search;
            throw getInternalRouterError(404, {
                pathname
            });
        } else result = await runHandler(handler);
        invariant(result !== undefined, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ('"' + match.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
    } catch (e) {
        resultType = ResultType.error;
        result = e;
    } finally{
        if (onReject) request.signal.removeEventListener("abort", onReject);
    }
    if (isResponse(result)) {
        let status = result.status;
        // Process redirects
        if (redirectStatusCodes.has(status)) {
            let location = result.headers.get("Location");
            invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header");
            // Support relative routing in internal redirects
            if (!ABSOLUTE_URL_REGEX.test(location)) location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location, v7_relativeSplatPath);
            else if (!opts.isStaticRequest) {
                // Strip off the protocol+origin for same-origin + same-basename absolute
                // redirects. If this is a static request, we can let it go back to the
                // browser as-is
                let currentUrl = new URL(request.url);
                let url = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location);
                let isSameBasename = stripBasename(url.pathname, basename) != null;
                if (url.origin === currentUrl.origin && isSameBasename) location = url.pathname + url.search + url.hash;
            }
            // Don't process redirects in the router during static requests requests.
            // Instead, throw the Response and let the server handle it with an HTTP
            // redirect.  We also update the Location header in place in this flow so
            // basename and relative routing is taken into account
            if (opts.isStaticRequest) {
                result.headers.set("Location", location);
                throw result;
            }
            return {
                type: ResultType.redirect,
                status,
                location,
                revalidate: result.headers.get("X-Remix-Revalidate") !== null,
                reloadDocument: result.headers.get("X-Remix-Reload-Document") !== null
            };
        }
        // For SSR single-route requests, we want to hand Responses back directly
        // without unwrapping.  We do this with the QueryRouteResponse wrapper
        // interface so we can know whether it was returned or thrown
        if (opts.isRouteRequest) {
            let queryRouteResponse = {
                type: resultType === ResultType.error ? ResultType.error : ResultType.data,
                response: result
            };
            throw queryRouteResponse;
        }
        let data;
        try {
            let contentType = result.headers.get("Content-Type");
            // Check between word boundaries instead of startsWith() due to the last
            // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type
            if (contentType && /\bapplication\/json\b/.test(contentType)) {
                if (result.body == null) data = null;
                else data = await result.json();
            } else data = await result.text();
        } catch (e) {
            return {
                type: ResultType.error,
                error: e
            };
        }
        if (resultType === ResultType.error) return {
            type: resultType,
            error: new ErrorResponseImpl(status, result.statusText, data),
            headers: result.headers
        };
        return {
            type: ResultType.data,
            data,
            statusCode: result.status,
            headers: result.headers
        };
    }
    if (resultType === ResultType.error) return {
        type: resultType,
        error: result
    };
    if (isDeferredData(result)) {
        var _result$init, _result$init2;
        return {
            type: ResultType.deferred,
            deferredData: result,
            statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
            headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
        };
    }
    return {
        type: ResultType.data,
        data: result
    };
}
// Utility method for creating the Request instances for loaders/actions during
// client-side navigations and fetches.  During SSR we will always have a
// Request instance from the static handler (query/queryRoute)
function createClientSideRequest(history, location, signal, submission) {
    let url = history.createURL(stripHashFromPath(location)).toString();
    let init = {
        signal
    };
    if (submission && isMutationMethod(submission.formMethod)) {
        let { formMethod, formEncType } = submission;
        // Didn't think we needed this but it turns out unlike other methods, patch
        // won't be properly normalized to uppercase and results in a 405 error.
        // See: https://fetch.spec.whatwg.org/#concept-method
        init.method = formMethod.toUpperCase();
        if (formEncType === "application/json") {
            init.headers = new Headers({
                "Content-Type": formEncType
            });
            init.body = JSON.stringify(submission.json);
        } else if (formEncType === "text/plain") // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)
        init.body = submission.text;
        else if (formEncType === "application/x-www-form-urlencoded" && submission.formData) // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)
        init.body = convertFormDataToSearchParams(submission.formData);
        else // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)
        init.body = submission.formData;
    }
    return new Request(url, init);
}
function convertFormDataToSearchParams(formData) {
    let searchParams = new URLSearchParams();
    for (let [key, value] of formData.entries())// https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs
    searchParams.append(key, typeof value === "string" ? value : value.name);
    return searchParams;
}
function convertSearchParamsToFormData(searchParams) {
    let formData = new FormData();
    for (let [key, value] of searchParams.entries())formData.append(key, value);
    return formData;
}
function processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {
    // Fill in loaderData/errors from our loaders
    let loaderData = {};
    let errors = null;
    let statusCode;
    let foundError = false;
    let loaderHeaders = {};
    // Process loader results into state.loaderData/state.errors
    results.forEach((result, index)=>{
        let id = matchesToLoad[index].route.id;
        invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData");
        if (isErrorResult(result)) {
            // Look upwards from the matched route for the closest ancestor
            // error boundary, defaulting to the root match
            let boundaryMatch = findNearestBoundary(matches, id);
            let error = result.error;
            // If we have a pending action error, we report it at the highest-route
            // that throws a loader error, and then clear it out to indicate that
            // it was consumed
            if (pendingError) {
                error = Object.values(pendingError)[0];
                pendingError = undefined;
            }
            errors = errors || {};
            // Prefer higher error values if lower errors bubble to the same boundary
            if (errors[boundaryMatch.route.id] == null) errors[boundaryMatch.route.id] = error;
            // Clear our any prior loaderData for the throwing route
            loaderData[id] = undefined;
            // Once we find our first (highest) error, we set the status code and
            // prevent deeper status codes from overriding
            if (!foundError) {
                foundError = true;
                statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;
            }
            if (result.headers) loaderHeaders[id] = result.headers;
        } else {
            if (isDeferredResult(result)) {
                activeDeferreds.set(id, result.deferredData);
                loaderData[id] = result.deferredData.data;
            } else loaderData[id] = result.data;
            // Error status codes always override success status codes, but if all
            // loaders are successful we take the deepest status code.
            if (result.statusCode != null && result.statusCode !== 200 && !foundError) statusCode = result.statusCode;
            if (result.headers) loaderHeaders[id] = result.headers;
        }
    });
    // If we didn't consume the pending action error (i.e., all loaders
    // resolved), then consume it here.  Also clear out any loaderData for the
    // throwing route
    if (pendingError) {
        errors = pendingError;
        loaderData[Object.keys(pendingError)[0]] = undefined;
    }
    return {
        loaderData,
        errors,
        statusCode: statusCode || 200,
        loaderHeaders
    };
}
function processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
    let { loaderData, errors } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);
    // Process results from our revalidating fetchers
    for(let index = 0; index < revalidatingFetchers.length; index++){
        let { key, match, controller } = revalidatingFetchers[index];
        invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, "Did not find corresponding fetcher result");
        let result = fetcherResults[index];
        // Process fetcher non-redirect errors
        if (controller && controller.signal.aborted) continue;
        else if (isErrorResult(result)) {
            let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);
            if (!(errors && errors[boundaryMatch.route.id])) errors = _extends({}, errors, {
                [boundaryMatch.route.id]: result.error
            });
            state.fetchers.delete(key);
        } else if (isRedirectResult(result)) // Should never get here, redirects should get processed above, but we
        // keep this to type narrow to a success result in the else
        invariant(false, "Unhandled fetcher revalidation redirect");
        else if (isDeferredResult(result)) // Should never get here, deferred data should be awaited for fetchers
        // in resolveDeferredResults
        invariant(false, "Unhandled fetcher deferred data");
        else {
            let doneFetcher = getDoneFetcher(result.data);
            state.fetchers.set(key, doneFetcher);
        }
    }
    return {
        loaderData,
        errors
    };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
    let mergedLoaderData = _extends({}, newLoaderData);
    for (let match of matches){
        let id = match.route.id;
        if (newLoaderData.hasOwnProperty(id)) {
            if (newLoaderData[id] !== undefined) mergedLoaderData[id] = newLoaderData[id];
        } else if (loaderData[id] !== undefined && match.route.loader) // Preserve existing keys not included in newLoaderData and where a loader
        // wasn't removed by HMR
        mergedLoaderData[id] = loaderData[id];
        if (errors && errors.hasOwnProperty(id)) break;
    }
    return mergedLoaderData;
}
// Find the nearest error boundary, looking upwards from the leaf route (or the
// route specified by routeId) for the closest ancestor error boundary,
// defaulting to the root match
function findNearestBoundary(matches, routeId) {
    let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m)=>m.route.id === routeId) + 1) : [
        ...matches
    ];
    return eligibleMatches.reverse().find((m)=>m.route.hasErrorBoundary === true) || matches[0];
}
function getShortCircuitMatches(routes) {
    // Prefer a root layout route if present, otherwise shim in a route object
    let route = routes.length === 1 ? routes[0] : routes.find((r)=>r.index || !r.path || r.path === "/") || {
        id: "__shim-error-route__"
    };
    return {
        matches: [
            {
                params: {},
                pathname: "",
                pathnameBase: "",
                route
            }
        ],
        route
    };
}
function getInternalRouterError(status, _temp5) {
    let { pathname, routeId, method, type } = _temp5 === void 0 ? {} : _temp5;
    let statusText = "Unknown Server Error";
    let errorMessage = "Unknown @remix-run/router error";
    if (status === 400) {
        statusText = "Bad Request";
        if (method && pathname && routeId) errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request.";
        else if (type === "defer-action") errorMessage = "defer() is not supported in actions";
        else if (type === "invalid-body") errorMessage = "Unable to encode submission body";
    } else if (status === 403) {
        statusText = "Forbidden";
        errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"';
    } else if (status === 404) {
        statusText = "Not Found";
        errorMessage = 'No route matches URL "' + pathname + '"';
    } else if (status === 405) {
        statusText = "Method Not Allowed";
        if (method && pathname && routeId) errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request.";
        else if (method) errorMessage = 'Invalid request method "' + method.toUpperCase() + '"';
    }
    return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);
}
// Find any returned redirect errors, starting from the lowest match
function findRedirect(results) {
    for(let i = results.length - 1; i >= 0; i--){
        let result = results[i];
        if (isRedirectResult(result)) return {
            result,
            idx: i
        };
    }
}
function stripHashFromPath(path) {
    let parsedPath = typeof path === "string" ? parsePath(path) : path;
    return createPath(_extends({}, parsedPath, {
        hash: ""
    }));
}
function isHashChangeOnly(a, b) {
    if (a.pathname !== b.pathname || a.search !== b.search) return false;
    if (a.hash === "") // /page -> /page#hash
    return b.hash !== "";
    else if (a.hash === b.hash) // /page#hash -> /page#hash
    return true;
    else if (b.hash !== "") // /page#hash -> /page#other
    return true;
    // If the hash is removed the browser will re-perform a request to the server
    // /page#hash -> /page
    return false;
}
function isDeferredResult(result) {
    return result.type === ResultType.deferred;
}
function isErrorResult(result) {
    return result.type === ResultType.error;
}
function isRedirectResult(result) {
    return (result && result.type) === ResultType.redirect;
}
function isDeferredData(value) {
    let deferred = value;
    return deferred && typeof deferred === "object" && typeof deferred.data === "object" && typeof deferred.subscribe === "function" && typeof deferred.cancel === "function" && typeof deferred.resolveData === "function";
}
function isResponse(value) {
    return value != null && typeof value.status === "number" && typeof value.statusText === "string" && typeof value.headers === "object" && typeof value.body !== "undefined";
}
function isRedirectResponse(result) {
    if (!isResponse(result)) return false;
    let status = result.status;
    let location = result.headers.get("Location");
    return status >= 300 && status <= 399 && location != null;
}
function isQueryRouteResponse(obj) {
    return obj && isResponse(obj.response) && (obj.type === ResultType.data || obj.type === ResultType.error);
}
function isValidMethod(method) {
    return validRequestMethods.has(method.toLowerCase());
}
function isMutationMethod(method) {
    return validMutationMethods.has(method.toLowerCase());
}
async function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {
    for(let index = 0; index < results.length; index++){
        let result = results[index];
        let match = matchesToLoad[index];
        // If we don't have a match, then we can have a deferred result to do
        // anything with.  This is for revalidating fetchers where the route was
        // removed during HMR
        if (!match) continue;
        let currentMatch = currentMatches.find((m)=>m.route.id === match.route.id);
        let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;
        if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {
            // Note: we do not have to touch activeDeferreds here since we race them
            // against the signal in resolveDeferredData and they'll get aborted
            // there if needed
            let signal = signals[index];
            invariant(signal, "Expected an AbortSignal for revalidating fetcher deferred result");
            await resolveDeferredData(result, signal, isFetcher).then((result)=>{
                if (result) results[index] = result || results[index];
            });
        }
    }
}
async function resolveDeferredData(result, signal, unwrap) {
    if (unwrap === void 0) unwrap = false;
    let aborted = await result.deferredData.resolveData(signal);
    if (aborted) return;
    if (unwrap) try {
        return {
            type: ResultType.data,
            data: result.deferredData.unwrappedData
        };
    } catch (e) {
        // Handle any TrackedPromise._error values encountered while unwrapping
        return {
            type: ResultType.error,
            error: e
        };
    }
    return {
        type: ResultType.data,
        data: result.deferredData.data
    };
}
function hasNakedIndexQuery(search) {
    return new URLSearchParams(search).getAll("index").some((v)=>v === "");
}
function getTargetMatch(matches, location) {
    let search = typeof location === "string" ? parsePath(location).search : location.search;
    if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || "")) // Return the leaf index route when index is present
    return matches[matches.length - 1];
    // Otherwise grab the deepest "path contributing" match (ignoring index and
    // pathless layout routes)
    let pathMatches = getPathContributingMatches(matches);
    return pathMatches[pathMatches.length - 1];
}
function getSubmissionFromNavigation(navigation) {
    let { formMethod, formAction, formEncType, text, formData, json } = navigation;
    if (!formMethod || !formAction || !formEncType) return;
    if (text != null) return {
        formMethod,
        formAction,
        formEncType,
        formData: undefined,
        json: undefined,
        text
    };
    else if (formData != null) return {
        formMethod,
        formAction,
        formEncType,
        formData,
        json: undefined,
        text: undefined
    };
    else if (json !== undefined) return {
        formMethod,
        formAction,
        formEncType,
        formData: undefined,
        json,
        text: undefined
    };
}
function getLoadingNavigation(location, submission) {
    if (submission) {
        let navigation = {
            state: "loading",
            location,
            formMethod: submission.formMethod,
            formAction: submission.formAction,
            formEncType: submission.formEncType,
            formData: submission.formData,
            json: submission.json,
            text: submission.text
        };
        return navigation;
    } else {
        let navigation = {
            state: "loading",
            location,
            formMethod: undefined,
            formAction: undefined,
            formEncType: undefined,
            formData: undefined,
            json: undefined,
            text: undefined
        };
        return navigation;
    }
}
function getSubmittingNavigation(location, submission) {
    let navigation = {
        state: "submitting",
        location,
        formMethod: submission.formMethod,
        formAction: submission.formAction,
        formEncType: submission.formEncType,
        formData: submission.formData,
        json: submission.json,
        text: submission.text
    };
    return navigation;
}
function getLoadingFetcher(submission, data) {
    if (submission) {
        let fetcher = {
            state: "loading",
            formMethod: submission.formMethod,
            formAction: submission.formAction,
            formEncType: submission.formEncType,
            formData: submission.formData,
            json: submission.json,
            text: submission.text,
            data
        };
        return fetcher;
    } else {
        let fetcher = {
            state: "loading",
            formMethod: undefined,
            formAction: undefined,
            formEncType: undefined,
            formData: undefined,
            json: undefined,
            text: undefined,
            data
        };
        return fetcher;
    }
}
function getSubmittingFetcher(submission, existingFetcher) {
    let fetcher = {
        state: "submitting",
        formMethod: submission.formMethod,
        formAction: submission.formAction,
        formEncType: submission.formEncType,
        formData: submission.formData,
        json: submission.json,
        text: submission.text,
        data: existingFetcher ? existingFetcher.data : undefined
    };
    return fetcher;
}
function getDoneFetcher(data) {
    let fetcher = {
        state: "idle",
        formMethod: undefined,
        formAction: undefined,
        formEncType: undefined,
        formData: undefined,
        json: undefined,
        text: undefined,
        data
    };
    return fetcher;
}
function restoreAppliedTransitions(_window, transitions) {
    try {
        let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);
        if (sessionPositions) {
            let json = JSON.parse(sessionPositions);
            for (let [k, v] of Object.entries(json || {}))if (v && Array.isArray(v)) transitions.set(k, new Set(v || []));
        }
    } catch (e) {
    // no-op, use default empty object
    }
}
function persistAppliedTransitions(_window, transitions) {
    if (transitions.size > 0) {
        let json = {};
        for (let [k, v] of transitions)json[k] = [
            ...v
        ];
        try {
            _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));
        } catch (error) {
            warning(false, "Failed to save applied view transitions in sessionStorage (" + error + ").");
        }
    }
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkKU3":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"2SFoV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Mobile", ()=>(0, _mobile.Mobile));
var _mobile = require("./Mobile");

},{"./Mobile":"1AvTw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1AvTw":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$efb8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$efb8.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Mobile", ()=>Mobile);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _appBar = require("../../components/AppBar");
var _bottomNavigationWrapper = require("../../components/BottomNavigationWrapper");
var _customFormsEmail = require("../../components/CustomFormsEmail");
var _iconButton = require("../../components/IconButton");
var _logoInstagramWrapper = require("../../components/LogoInstagramWrapper");
var _homefilled3 = require("../../icons/Homefilled3");
var _logo = require("../../icons/Logo");
var _menufilled9 = require("../../icons/Menufilled9");
var _peoplefilled = require("../../icons/Peoplefilled");
var _searchfilled = require("../../icons/Searchfilled");
var _starsharp30 = require("../../icons/Starsharp30");
var _styleCss = require("./style.css");
const Mobile = ()=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "mobile",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "mobile-home",
            "data-palette-mode": "light",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "overlap-6",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _customFormsEmail.CustomFormsEmail), {
                            className: "custom-forms-email-password-instance",
                            formcontrollabelLabelPlacementEndClassName: "custom-forms-email-2"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 20,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "blue-brush-2",
                            alt: "Blue brush",
                            src: "/img/blue-brush-1-2.png"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 24,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/screens/Mobile/Mobile.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "main-tagline-wrapper",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                        className: "main-tagline",
                        children: "We are your connection to arts"
                    }, void 0, false, {
                        fileName: "src/screens/Mobile/Mobile.jsx",
                        lineNumber: 27,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/screens/Mobile/Mobile.jsx",
                    lineNumber: 26,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "overlap-group-5",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "brush-brown-3",
                            alt: "Brush brown",
                            src: "/img/brush-brown-2.png"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 30,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "here-every-piece",
                            children: "Here, every piece tells a story, every artist shares a vision, and every member finds a place. Join us in weaving a collective tapestry of creativity, where art isn't just seen\u2014it's experienced, shared, and celebrated. Welcome to ArtLinks, where your journey through art begins"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 31,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoInstagramWrapper.LogoInstagramWrapper), {
                            className: "logo-instagram"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "text-wrapper-7",
                            children: "Juan Rubio, San Sebastian Couple, digital photograph"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 37,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "couple",
                            alt: "Couple",
                            src: "/img/hpim1656-1.png"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 38,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/screens/Mobile/Mobile.jsx",
                    lineNumber: 29,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                    className: "text-wrapper-8",
                    children: "ArtLinks is your gateway to a vibrant world where art meets community. Our platform is dedicated to bridging the gap between talented artists and passionate art lovers, creating a dynamic space for discovery, inspiration, and connection."
                }, void 0, false, {
                    fileName: "src/screens/Mobile/Mobile.jsx",
                    lineNumber: 40,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                    className: "NY-city-girl",
                    alt: "Ny city girl",
                    src: "/img/rooster-color-1.png"
                }, void 0, false, {
                    fileName: "src/screens/Mobile/Mobile.jsx",
                    lineNumber: 45,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                    className: "text-wrapper-9",
                    children: "Find the art work you always wanted"
                }, void 0, false, {
                    fileName: "src/screens/Mobile/Mobile.jsx",
                    lineNumber: 46,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "overlap-7",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logoInstagramWrapper.LogoInstagramWrapper), {
                            className: "logo-instagram-instance"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 48,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "text-wrapper-10",
                            children: "Juan Rubio, NY City Girl, digital photograph"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 49,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/screens/Mobile/Mobile.jsx",
                    lineNumber: 47,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _logo.Logo), {
                    className: "logo-instance"
                }, void 0, false, {
                    fileName: "src/screens/Mobile/Mobile.jsx",
                    lineNumber: 51,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _appBar.AppBar), {
                    className: "app-bar-4",
                    color: "primary",
                    paperClassName: "app-bar-5",
                    to: "/menu",
                    toolbarIconButtonIconIcon: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _menufilled9.Menufilled9), {
                        className: "menufilled-2",
                        color: "white"
                    }, void 0, false, {
                        fileName: "src/screens/Mobile/Mobile.jsx",
                        lineNumber: 57,
                        columnNumber: 38
                    }, void 0),
                    toolbarIconButtonIconSize: "large",
                    toolbarSmallScreen: true,
                    toolbarStack: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _iconButton.IconButton), {
                        className: "instance-3",
                        color: "inherit-white",
                        iconIcon: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _starsharp30.Starsharp30), {
                            className: "starsharp-126",
                            color: "white"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 64,
                            columnNumber: 25
                        }, void 0),
                        iconSize: "medium",
                        size: "small",
                        stateProp: "enabled"
                    }, void 0, false, {
                        fileName: "src/screens/Mobile/Mobile.jsx",
                        lineNumber: 61,
                        columnNumber: 13
                    }, void 0),
                    toolbarTypographyBodyClassName: "app-bar-6",
                    toolbarTypographyContent: "Arts Link",
                    toolbarTypographyVariant: "h-4"
                }, void 0, false, {
                    fileName: "src/screens/Mobile/Mobile.jsx",
                    lineNumber: 52,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "nav-bar-fixed",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _bottomNavigationWrapper.BottomNavigationWrapper), {
                        className: "bottom-navigation-3",
                        iconOnlyFalseWrapperBottomNavigationIcon: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _searchfilled.Searchfilled), {
                            className: "icon-instance-node-4",
                            color: "#173F56"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 77,
                            columnNumber: 55
                        }, void 0),
                        iconOnlyFalseWrapperBottomNavigationIcon1: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _peoplefilled.Peoplefilled), {
                            className: "icon-instance-node-4",
                            color: "#173F56"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 79,
                            columnNumber: 15
                        }, void 0),
                        override: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _homefilled3.Homefilled3), {
                            className: "icon-instance-node-4"
                        }, void 0, false, {
                            fileName: "src/screens/Mobile/Mobile.jsx",
                            lineNumber: 81,
                            columnNumber: 23
                        }, void 0),
                        to1: "/search"
                    }, void 0, false, {
                        fileName: "src/screens/Mobile/Mobile.jsx",
                        lineNumber: 75,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/screens/Mobile/Mobile.jsx",
                    lineNumber: 74,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/screens/Mobile/Mobile.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/screens/Mobile/Mobile.jsx",
        lineNumber: 17,
        columnNumber: 5
    }, undefined);
};
_c = Mobile;
var _c;
$RefreshReg$(_c, "Mobile");

  $parcel$ReactRefreshHelpers$efb8.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","../../components/AppBar":"95j7i","../../components/BottomNavigationWrapper":"8pvxL","../../components/CustomFormsEmail":"6DyY9","../../components/IconButton":"bh0Yx","../../components/LogoInstagramWrapper":"iQBkT","../../icons/Homefilled3":"4jH8C","../../icons/Logo":"cuRYp","../../icons/Menufilled9":"fLaQU","../../icons/Peoplefilled":"18lwt","../../icons/Searchfilled":"4JBh2","../../icons/Starsharp30":"8U7jr","./style.css":"koSth","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"95j7i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AppBar", ()=>(0, _appBar.AppBar));
var _appBar = require("./AppBar");

},{"./AppBar":"4KhPU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4KhPU":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$7905 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$7905.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AppBar", ()=>AppBar);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _menufilled9 = require("../../icons/Menufilled9");
var _starsharp30 = require("../../icons/Starsharp30");
var _iconButton = require("../IconButton");
var _toolbar = require("../Toolbar");
var _styleCss = require("./style.css");
const AppBar = ({ color, className, paperClassName, toolbarStack, toolbarSmallScreen = false, toolbarTypographyVariant = "body-1", toolbarIconButtonIconSize = "medium", toolbarIconButtonIconIcon = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _menufilled9.Menufilled9), {
    className: "menu-filled",
    color: "white"
}, void 0, false, {
    fileName: "src/components/AppBar/AppBar.jsx",
    lineNumber: 22,
    columnNumber: 31
}, undefined), toolbarTypographyContent = "Website", toolbarTypographyBodyClassName, to })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `app-bar ${className}`,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: `paper ${color} ${paperClassName}`,
            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _toolbar.Toolbar), {
                className: "toolbar-instance",
                iconButtonColor: [
                    "default",
                    "inherit-white",
                    "transparent"
                ].includes(color) ? "inherit" : undefined,
                iconButtonIconIcon: toolbarIconButtonIconIcon,
                iconButtonIconSize: toolbarIconButtonIconSize,
                override: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _iconButton.IconButton), {
                    className: "instance-node",
                    color: [
                        "primary",
                        "secondary"
                    ].includes(color) ? "inherit-white" : [
                        "default",
                        "inherit-white",
                        "transparent"
                    ].includes(color) ? "inherit" : undefined,
                    iconIcon: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _starsharp30.Starsharp30), {
                        className: "menu-filled",
                        color: [
                            "primary",
                            "secondary"
                        ].includes(color) ? "white" : [
                            "default",
                            "inherit-white",
                            "transparent"
                        ].includes(color) ? "black" : undefined,
                        opacity: [
                            "default",
                            "inherit-white",
                            "transparent"
                        ].includes(color) ? "0.87" : undefined
                    }, void 0, false, {
                        fileName: "src/components/AppBar/AppBar.jsx",
                        lineNumber: 46,
                        columnNumber: 17
                    }, void 0),
                    iconSize: "medium",
                    size: "medium",
                    stateProp: "enabled"
                }, void 0, false, {
                    fileName: "src/components/AppBar/AppBar.jsx",
                    lineNumber: 36,
                    columnNumber: 13
                }, void 0),
                smallScreen: toolbarSmallScreen,
                stack: toolbarStack,
                to: to,
                typographyBodyClassName: toolbarTypographyBodyClassName,
                typographyContent: toolbarTypographyContent,
                typographyVariant: toolbarTypographyVariant,
                variant: "regular"
            }, void 0, false, {
                fileName: "src/components/AppBar/AppBar.jsx",
                lineNumber: 30,
                columnNumber: 9
            }, undefined)
        }, void 0, false, {
            fileName: "src/components/AppBar/AppBar.jsx",
            lineNumber: 29,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/AppBar/AppBar.jsx",
        lineNumber: 28,
        columnNumber: 5
    }, undefined);
};
_c = AppBar;
AppBar.propTypes = {
    color: (0, _propTypesDefault.default).oneOf([
        "default",
        "secondary",
        "primary",
        "inherit-white",
        "transparent"
    ]),
    toolbarSmallScreen: (0, _propTypesDefault.default).bool,
    toolbarTypographyVariant: (0, _propTypesDefault.default).string,
    toolbarIconButtonIconSize: (0, _propTypesDefault.default).string,
    toolbarTypographyContent: (0, _propTypesDefault.default).string,
    to: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "AppBar");

  $parcel$ReactRefreshHelpers$7905.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../../icons/Menufilled9":"fLaQU","../../icons/Starsharp30":"8U7jr","../IconButton":"bh0Yx","../Toolbar":"95cRN","./style.css":"cTutT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"7wKI2":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ReactIs = require("96e34ae03f5a2631");
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require("cb216452e2171041")(ReactIs.isElement, throwOnDirectAccess);

},{"96e34ae03f5a2631":"gfIo3","cb216452e2171041":"bBUgD"}],"gfIo3":[function(require,module,exports) {
"use strict";
module.exports = require("ad47820528c6facb");

},{"ad47820528c6facb":"7GE9i"}],"7GE9i":[function(require,module,exports) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === "function" && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 0xead4;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 0xead9;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 0xead7;
    function isValidElementType(type) {
        return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"bBUgD":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var ReactIs = require("c437388b089702c3");
var assign = require("c067a60101d8520c");
var ReactPropTypesSecret = require("74a0f89a70b9f3c2");
var has = require("18441b11647bc78");
var checkPropTypes = require("bec3f6ff89f0b072");
var printWarning = function() {};
printWarning = function(text) {
    var message = "Warning: " + text;
    if (typeof console !== "undefined") console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = "@@iterator"; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = "<<anonymous>>";
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = "Invariant Violation";
                    throw err;
                } else if (typeof console !== "undefined") {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ":" + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated " + "and will throw in the standalone `prop-types` package. " + "You may be seeing this warning due to a third-party PropTypes " + "library. See https://fb.me/react-warning-dont-call-proptypes " + "for details.");
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
                    return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== "function") return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning("Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. " + "A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).");
                else printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === "symbol") return String(value);
                return value;
            });
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== "function") return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning("Invalid argument supplied to oneOfType, expected an instance of array.");
            return emptyFunctionThatReturnsNull;
        }
        for(var i = 0; i < arrayOfTypeCheckers.length; i++){
            var checker = arrayOfTypeCheckers[i];
            if (typeof checker !== "function") {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + ".");
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) return null;
                if (checkerResult.data && has(checkerResult.data, "expectedType")) expectedTypes.push(checkerResult.data.expectedType);
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + type + "`.");
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== "function") return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== "object") return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== "function") return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker) return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`." + "\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
                var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case "number":
            case "string":
            case "undefined":
                return true;
            case "boolean":
                return !propValue;
            case "object":
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === "symbol") return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue["@@toStringTag"] === "Symbol") return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === "function" && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return "array";
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return "object";
        if (isSymbol(propType, propValue)) return "symbol";
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) return "" + propValue;
        var propType = getPropType(propValue);
        if (propType === "object") {
            if (propValue instanceof Date) return "date";
            else if (propValue instanceof RegExp) return "regexp";
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case "array":
            case "object":
                return "an " + type;
            case "boolean":
            case "date":
            case "regexp":
                return "a " + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"c437388b089702c3":"gfIo3","c067a60101d8520c":"7OXxh","74a0f89a70b9f3c2":"jZTZJ","18441b11647bc78":"fqKuf","bec3f6ff89f0b072":"5VwyJ"}],"7OXxh":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ "use strict";
/* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
    if (val === null || val === undefined) throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(val);
}
function shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = new String("abc"); // eslint-disable-line no-new-wrappers
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {};
        for(var i = 0; i < 10; i++)test2["_" + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join("") !== "0123456789") return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if (hasOwnProperty.call(from, key)) to[key] = from[key];
        if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

},{}],"jZTZJ":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
module.exports = ReactPropTypesSecret;

},{}],"fqKuf":[function(require,module,exports) {
module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

},{}],"5VwyJ":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
var printWarning = function() {};
var ReactPropTypesSecret = require("24ba1e58d167a82c");
var loggedTypeFailures = {};
var has = require("898bc82f39d83f7c");
printWarning = function(text) {
    var message = "Warning: " + text;
    if (typeof console !== "undefined") console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; " + "it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`." + "This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                err.name = "Invariant Violation";
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker " + "function must return `null` or an `Error` but returned a " + typeof error + ". " + "You may have forgotten to pass an argument to the type checker " + "creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and " + "shape all require an argument).");
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : "";
            printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {};
};
module.exports = checkPropTypes;

},{"24ba1e58d167a82c":"jZTZJ","898bc82f39d83f7c":"fqKuf"}],"fLaQU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Menufilled9", ()=>(0, _menufilled9.Menufilled9));
var _menufilled9 = require("./Menufilled9");

},{"./Menufilled9":"3Vf13","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Vf13":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$3f27 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$3f27.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Menufilled9", ()=>Menufilled9);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Menufilled9 = ({ color = "white", opacity = "unset", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `menufilled-9 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 24 24",
        width: "24",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M3 18H21V16H3V18ZM3 13H21V11H3V13ZM3 6V8H21V6H3Z",
            fill: color,
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Menufilled9/Menufilled9.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Menufilled9/Menufilled9.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Menufilled9;
Menufilled9.propTypes = {
    color: (0, _propTypesDefault.default).string,
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Menufilled9");

  $parcel$ReactRefreshHelpers$3f27.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"km3Ru":[function(require,module,exports) {
"use strict";
var Refresh = require("7422ead32dcc1e6b");
function debounce(func, delay) {
    {
        let timeout = undefined;
        let lastTime = 0;
        return function(args) {
            // Call immediately if last call was more than the delay ago.
            // Otherwise, set a timeout. This means the first call is fast
            // (for the common case of a single update), and subsequent updates
            // are batched.
            let now = Date.now();
            if (now - lastTime > delay) {
                lastTime = now;
                func.call(null, args);
            } else {
                clearTimeout(timeout);
                timeout = setTimeout(function() {
                    timeout = undefined;
                    lastTime = Date.now();
                    func.call(null, args);
                }, delay);
            }
        };
    }
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30);
// Everthing below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module1) {
    window.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module1.id + " " + id);
    };
    window.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module1) {
    if (isReactRefreshBoundary(module1.exports)) {
        registerExportsForReactRefresh(module1);
        if (module1.hot) {
            module1.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module1.exports;
            });
            module1.hot.accept(function(getParents) {
                var prevExports = module1.hot.data.prevExports;
                var nextExports = module1.exports;
                // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports);
                // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== "object") // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = "__esModule" in exports;
    for(var key in exports){
        hasExports = true;
        if (key === "__esModule") continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
}
// When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== "object") // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = "__esModule" in exports;
    for(var key in exports){
        if (key === "__esModule") continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module1) {
    var exports = module1.exports, id = module1.id;
    Refresh.register(exports, id + " %exports%");
    if (exports == null || typeof exports !== "object") // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = "__esModule" in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        var typeID = id + " %exports% " + key;
        Refresh.register(exportValue, typeID);
    }
}

},{"7422ead32dcc1e6b":"jEdJI"}],"jEdJI":[function(require,module,exports) {
"use strict";
module.exports = require("9e039173d01172ab");

},{"9e039173d01172ab":"uTjV2"}],"uTjV2":[function(require,module,exports) {
/** @license React v0.9.0
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ "use strict";
(function() {
    "use strict";
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 0xeac7;
    var REACT_PORTAL_TYPE = 0xeaca;
    var REACT_FRAGMENT_TYPE = 0xeacb;
    var REACT_STRICT_MODE_TYPE = 0xeacc;
    var REACT_PROFILER_TYPE = 0xead2;
    var REACT_PROVIDER_TYPE = 0xeacd;
    var REACT_CONTEXT_TYPE = 0xeace;
    var REACT_FORWARD_REF_TYPE = 0xead0;
    var REACT_SUSPENSE_TYPE = 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = 0xead8;
    var REACT_MEMO_TYPE = 0xead3;
    var REACT_LAZY_TYPE = 0xead4;
    var REACT_BLOCK_TYPE = 0xead9;
    var REACT_SERVER_BLOCK_TYPE = 0xeada;
    var REACT_FUNDAMENTAL_TYPE = 0xead5;
    var REACT_SCOPE_TYPE = 0xead7;
    var REACT_OPAQUE_ID_TYPE = 0xeae0;
    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
    var REACT_OFFSCREEN_TYPE = 0xeae2;
    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;
    if (typeof Symbol === "function" && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor("react.element");
        REACT_PORTAL_TYPE = symbolFor("react.portal");
        REACT_FRAGMENT_TYPE = symbolFor("react.fragment");
        REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
        REACT_PROFILER_TYPE = symbolFor("react.profiler");
        REACT_PROVIDER_TYPE = symbolFor("react.provider");
        REACT_CONTEXT_TYPE = symbolFor("react.context");
        REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
        REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
        REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
        REACT_MEMO_TYPE = symbolFor("react.memo");
        REACT_LAZY_TYPE = symbolFor("react.lazy");
        REACT_BLOCK_TYPE = symbolFor("react.block");
        REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
        REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
        REACT_SCOPE_TYPE = symbolFor("react.scope");
        REACT_OPAQUE_ID_TYPE = symbolFor("react.opaque.id");
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
        REACT_OFFSCREEN_TYPE = symbolFor("react.offscreen");
        REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
    }
    var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map; // We never remove these associations.
    // It's OK to reference families, but use WeakMap/Set for types.
    var allFamiliesByID = new Map();
    var allFamiliesByType = new PossiblyWeakMap();
    var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families
    // that have actually been edited here. This keeps checks fast.
    // $FlowIssue
    var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.
    // It is an array of [Family, NextType] tuples.
    var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.
    var helpersByRendererID = new Map();
    var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.
    var mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.
    var failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.
    // It needs to be weak because we do this even for roots that failed to mount.
    // If there is no WeakMap, we won't attempt to do retrying.
    // $FlowIssue
    var rootElements = typeof WeakMap === "function" ? new WeakMap() : null;
    var isPerformingRefresh = false;
    function computeFullKey(signature) {
        if (signature.fullKey !== null) return signature.fullKey;
        var fullKey = signature.ownKey;
        var hooks;
        try {
            hooks = signature.getCustomHooks();
        } catch (err) {
            // This can happen in an edge case, e.g. if expression like Foo.useSomething
            // depends on Foo which is lazily initialized during rendering.
            // In that case just assume we'll have to remount.
            signature.forceReset = true;
            signature.fullKey = fullKey;
            return fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if (typeof hook !== "function") {
                // Something's wrong. Assume we need to remount.
                signature.forceReset = true;
                signature.fullKey = fullKey;
                return fullKey;
            }
            var nestedHookSignature = allSignaturesByType.get(hook);
            if (nestedHookSignature === undefined) continue;
            var nestedHookKey = computeFullKey(nestedHookSignature);
            if (nestedHookSignature.forceReset) signature.forceReset = true;
            fullKey += "\n---\n" + nestedHookKey;
        }
        signature.fullKey = fullKey;
        return fullKey;
    }
    function haveEqualSignatures(prevType, nextType) {
        var prevSignature = allSignaturesByType.get(prevType);
        var nextSignature = allSignaturesByType.get(nextType);
        if (prevSignature === undefined && nextSignature === undefined) return true;
        if (prevSignature === undefined || nextSignature === undefined) return false;
        if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) return false;
        if (nextSignature.forceReset) return false;
        return true;
    }
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function canPreserveStateBetween(prevType, nextType) {
        if (isReactClass(prevType) || isReactClass(nextType)) return false;
        if (haveEqualSignatures(prevType, nextType)) return true;
        return false;
    }
    function resolveFamily(type) {
        // Only check updated types to keep lookups fast.
        return updatedFamiliesByType.get(type);
    } // If we didn't care about IE11, we could use new Map/Set(iterable).
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function performReactRefresh() {
        if (pendingUpdates.length === 0) return null;
        if (isPerformingRefresh) return null;
        isPerformingRefresh = true;
        try {
            var staleFamilies = new Set();
            var updatedFamilies = new Set();
            var updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0], nextType = _ref[1];
                // Now that we got a real edit, we can create associations
                // that will be read by the React reconciler.
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(nextType, family);
                family.current = nextType; // Determine whether this should be a re-render or a re-mount.
                if (canPreserveStateBetween(prevType, nextType)) updatedFamilies.add(family);
                else staleFamilies.add(family);
            }); // TODO: rename these fields to something more meaningful.
            var update = {
                updatedFamilies: updatedFamilies,
                // Families that will re-render preserving state
                staleFamilies: staleFamilies // Families that will be remounted
            };
            helpersByRendererID.forEach(function(helpers) {
                // Even if there are no roots, set the handler on first update.
                // This ensures that if *new* roots are mounted, they'll use the resolve handler.
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = false;
            var firstError = null; // We snapshot maps and sets that are mutated during commits.
            // If we don't do this, there is a risk they will be mutated while
            // we iterate over them. For example, trying to recover a failed root
            // may cause another root to be added to the failed list -- an infinite loop.
            var failedRootsSnapshot = cloneSet(failedRoots);
            var mountedRootsSnapshot = cloneSet(mountedRoots);
            var helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
                failedRoots.has(root);
                if (rootElements === null) return;
                if (!rootElements.has(root)) return;
                var element = rootElements.get(root);
                try {
                    helpers.scheduleRoot(root, element);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = false;
        }
    }
    function register(type, id) {
        if (type === null) return;
        if (typeof type !== "function" && typeof type !== "object") return;
         // This can happen in an edge case, e.g. if we register
        // return value of a HOC but it returns a cached component.
        // Ignore anything but the first registration for each type.
        if (allFamiliesByType.has(type)) return;
         // Create family or remember to update it.
        // None of this bookkeeping affects reconciliation
        // until the first performReactRefresh() call above.
        var family = allFamiliesByID.get(id);
        if (family === undefined) {
            family = {
                current: type
            };
            allFamiliesByID.set(id, family);
        } else pendingUpdates.push([
            family,
            type
        ]);
        allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.
        if (typeof type === "object" && type !== null) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                register(type.render, id + "$render");
                break;
            case REACT_MEMO_TYPE:
                register(type.type, id + "$type");
                break;
        }
    }
    function setSignature(type, key) {
        var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;
        allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
    } // This is lazily called during first render for a type.
    // It captures Hook list at that time so inline requires don't break comparisons.
    function collectCustomHooksForSignature(type) {
        var signature = allSignaturesByType.get(type);
        if (signature !== undefined) computeFullKey(signature);
    }
    function getFamilyByID(id) {
        return allFamiliesByID.get(id);
    }
    function getFamilyByType(type) {
        return allFamiliesByType.get(type);
    }
    function findAffectedHostInstances(families) {
        var affectedInstances = new Set();
        mountedRoots.forEach(function(root) {
            var helpers = helpersByRoot.get(root);
            if (helpers === undefined) throw new Error("Could not find helpers for a root. This is a bug in React Refresh.");
            var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);
            instancesForRoot.forEach(function(inst) {
                affectedInstances.add(inst);
            });
        });
        return affectedInstances;
    }
    function injectIntoGlobalHook(globalObject) {
        // For React Native, the global hook will be set up by require('react-devtools-core').
        // That code will run before us. So we need to monkeypatch functions on existing hook.
        // For React Web, the global hook will be set up by the extension.
        // This will also run before us.
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook === undefined) {
            // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.
            // Note that in this case it's important that renderer code runs *after* this method call.
            // Otherwise, the renderer will think that there is no global hook, and won't do the injection.
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: true,
                inject: function(injected) {
                    return nextID++;
                },
                onScheduleFiberRoot: function(id, root, children) {},
                onCommitFiberRoot: function(id, root, maybePriorityLevel, didError) {},
                onCommitFiberUnmount: function() {}
            };
        } // Here, we just want to get a reference to scheduleRefresh.
        var oldInject = hook.inject;
        hook.inject = function(injected) {
            var id = oldInject.apply(this, arguments);
            if (typeof injected.scheduleRefresh === "function" && typeof injected.setRefreshHandler === "function") // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
            return id;
        }; // Do the same for any already injected roots.
        // This is useful if ReactDOM has already been initialized.
        // https://github.com/facebook/react/issues/17626
        hook.renderers.forEach(function(injected, id) {
            if (typeof injected.scheduleRefresh === "function" && typeof injected.setRefreshHandler === "function") // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
        }); // We also want to track currently mounted roots.
        var oldOnCommitFiberRoot = hook.onCommitFiberRoot;
        var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
        hook.onScheduleFiberRoot = function(id, root, children) {
            if (!isPerformingRefresh) {
                // If it was intentionally scheduled, don't attempt to restore.
                // This includes intentionally scheduled unmounts.
                failedRoots.delete(root);
                if (rootElements !== null) rootElements.set(root, children);
            }
            return oldOnScheduleFiberRoot.apply(this, arguments);
        };
        hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
            var helpers = helpersByRendererID.get(id);
            if (helpers === undefined) return;
            helpersByRoot.set(root, helpers);
            var current = root.current;
            var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.
            // This logic is copy-pasted from similar logic in the DevTools backend.
            // If this breaks with some refactoring, you'll want to update DevTools too.
            if (alternate !== null) {
                var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;
                var isMounted = current.memoizedState != null && current.memoizedState.element != null;
                if (!wasMounted && isMounted) {
                    // Mount a new root.
                    mountedRoots.add(root);
                    failedRoots.delete(root);
                } else if (wasMounted && isMounted) ;
                else if (wasMounted && !isMounted) {
                    // Unmount an existing root.
                    mountedRoots.delete(root);
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                    else helpersByRoot.delete(root);
                } else if (!wasMounted && !isMounted) {
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                }
            } else // Mount a new root.
            mountedRoots.add(root);
            return oldOnCommitFiberRoot.apply(this, arguments);
        };
    }
    function hasUnrecoverableErrors() {
        // TODO: delete this after removing dependency in RN.
        return false;
    } // Exposed for testing.
    function _getMountedRootCount() {
        return mountedRoots.size;
    } // This is a wrapper over more primitive functions for setting signature.
    // Signatures let us decide whether the Hook order has changed on refresh.
    //
    // This function is intended to be used as a transform target, e.g.:
    // var _s = createSignatureFunctionForTransform()
    //
    // function Hello() {
    //   const [foo, setFoo] = useState(0);
    //   const value = useCustomHook();
    //   _s(); /* Second call triggers collecting the custom Hook list.
    //          * This doesn't happen during the module evaluation because we
    //          * don't want to change the module order with inline requires.
    //          * Next calls are noops. */
    //   return <h1>Hi</h1>;
    // }
    //
    // /* First call specifies the signature: */
    // _s(
    //   Hello,
    //   'useState{[foo, setFoo]}(0)',
    //   () => [useCustomHook], /* Lazy to avoid triggering inline requires */
    // );
    function createSignatureFunctionForTransform() {
        // We'll fill in the signature in two steps.
        // First, we'll know the signature itself. This happens outside the component.
        // Then, we'll know the references to custom Hooks. This happens inside the component.
        // After that, the returned function will be a fast path no-op.
        var status = "needsSignature";
        var savedType;
        var hasCustomHooks;
        return function(type, key, forceReset, getCustomHooks) {
            switch(status){
                case "needsSignature":
                    if (type !== undefined) {
                        // If we received an argument, this is the initial registration call.
                        savedType = type;
                        hasCustomHooks = typeof getCustomHooks === "function";
                        setSignature(type, key, forceReset, getCustomHooks); // The next call we expect is from inside a function, to fill in the custom Hooks.
                        status = "needsCustomHooks";
                    }
                    break;
                case "needsCustomHooks":
                    if (hasCustomHooks) collectCustomHooksForSignature(savedType);
                    status = "resolved";
                    break;
            }
            return type;
        };
    }
    function isLikelyComponentType(type) {
        switch(typeof type){
            case "function":
                // First, deal with classes.
                if (type.prototype != null) {
                    if (type.prototype.isReactComponent) // React class.
                    return true;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (ownNames.length > 1 || ownNames[0] !== "constructor") // This looks like a class.
                    return false;
                     // eslint-disable-next-line no-proto
                    if (type.prototype.__proto__ !== Object.prototype) // It has a superclass.
                    return false;
                     // Pass through.
                // This looks like a regular function with empty prototype.
                } // For plain functions and arrows, use name as a heuristic.
                var name = type.name || type.displayName;
                return typeof name === "string" && /^[A-Z]/.test(name);
            case "object":
                if (type != null) switch(type.$$typeof){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        // Definitely React components.
                        return true;
                    default:
                        return false;
                }
                return false;
            default:
                return false;
        }
    }
    exports._getMountedRootCount = _getMountedRootCount;
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;
    exports.findAffectedHostInstances = findAffectedHostInstances;
    exports.getFamilyByID = getFamilyByID;
    exports.getFamilyByType = getFamilyByType;
    exports.hasUnrecoverableErrors = hasUnrecoverableErrors;
    exports.injectIntoGlobalHook = injectIntoGlobalHook;
    exports.isLikelyComponentType = isLikelyComponentType;
    exports.performReactRefresh = performReactRefresh;
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"8U7jr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Starsharp30", ()=>(0, _starsharp30.Starsharp30));
var _starsharp30 = require("./Starsharp30");

},{"./Starsharp30":"eqVOm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eqVOm":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$722c = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$722c.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Starsharp30", ()=>Starsharp30);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Starsharp30 = ({ color = "#D32F2F", opacity = "unset", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `starsharp-30 ${className}`,
        fill: "none",
        height: "35",
        viewBox: "0 0 35 35",
        width: "35",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M17.5 25.9146L26.5125 31.3542L24.1208 21.1021L32.0833 14.2042L21.5979 13.3146L17.5 3.64583L13.402 13.3146L2.91663 14.2042L10.8791 21.1021L8.48746 31.3542L17.5 25.9146Z",
            fill: color,
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Starsharp30/Starsharp30.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Starsharp30/Starsharp30.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Starsharp30;
Starsharp30.propTypes = {
    color: (0, _propTypesDefault.default).string,
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Starsharp30");

  $parcel$ReactRefreshHelpers$722c.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"bh0Yx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconButton", ()=>(0, _iconButton.IconButton));
var _iconButton = require("./IconButton");

},{"./IconButton":"3gzh7","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3gzh7":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$3c93 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$3c93.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconButton", ()=>IconButton);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouterDom = require("react-router-dom");
var _starsharp30 = require("../../icons/Starsharp30");
var _icon = require("../Icon");
var _styleCss = require("./style.css");
var _s = $RefreshSig$();
const IconButton = ({ size, color, stateProp, className, iconSize = "medium", iconIcon = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _starsharp30.Starsharp30), {
    className: "starsharp-30",
    color: "white"
}, void 0, false, {
    fileName: "src/components/IconButton/IconButton.jsx",
    lineNumber: 20,
    columnNumber: 14
}, undefined), to })=>{
    _s();
    const [state, dispatch] = (0, _react.useReducer)(reducer, {
        size: size || "medium",
        color: color || "default",
        state: stateProp || "enabled"
    });
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouterDom.Link), {
        className: `icon-button size-${state.size} color-${state.color} ${state.state} ${className}`,
        to: to,
        onMouseLeave: ()=>{
            dispatch("mouse_leave");
        },
        onMouseEnter: ()=>{
            dispatch("mouse_enter");
        },
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _icon.Icon), {
            className: "icon-instance",
            icon: iconIcon,
            size: iconSize
        }, void 0, false, {
            fileName: "src/components/IconButton/IconButton.jsx",
            lineNumber: 40,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/IconButton/IconButton.jsx",
        lineNumber: 30,
        columnNumber: 5
    }, undefined);
};
_s(IconButton, "p4I838L12tfNCDoofRza9WYU5PU=");
_c = IconButton;
function reducer(state, action) {
    if (state.color === "primary" && state.size === "small" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "primary",
                size: "small",
                state: "hovered"
            };
    }
    if (state.color === "primary" && state.size === "small" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "primary",
                size: "small",
                state: "enabled"
            };
    }
    if (state.color === "inherit" && state.size === "small" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "inherit",
                size: "small",
                state: "hovered"
            };
    }
    if (state.color === "inherit" && state.size === "small" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "inherit",
                size: "small",
                state: "enabled"
            };
    }
    if (state.color === "inherit-white" && state.size === "small" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "inherit-white",
                size: "small",
                state: "hovered"
            };
    }
    if (state.color === "inherit-white" && state.size === "small" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "inherit-white",
                size: "small",
                state: "enabled"
            };
    }
    if (state.color === "default" && state.size === "small" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "default",
                size: "small",
                state: "hovered"
            };
    }
    if (state.color === "default" && state.size === "small" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "default",
                size: "small",
                state: "enabled"
            };
    }
    if (state.color === "secondary" && state.size === "small" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "secondary",
                size: "small",
                state: "hovered"
            };
    }
    if (state.color === "secondary" && state.size === "small" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "secondary",
                size: "small",
                state: "enabled"
            };
    }
    if (state.color === "error" && state.size === "small" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "error",
                size: "small",
                state: "hovered"
            };
    }
    if (state.color === "error" && state.size === "small" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "error",
                size: "small",
                state: "enabled"
            };
    }
    if (state.color === "warning" && state.size === "small" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "warning",
                size: "small",
                state: "hovered"
            };
    }
    if (state.color === "warning" && state.size === "small" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "warning",
                size: "small",
                state: "enabled"
            };
    }
    if (state.color === "info" && state.size === "small" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "info",
                size: "small",
                state: "hovered"
            };
    }
    if (state.color === "info" && state.size === "small" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "info",
                size: "small",
                state: "enabled"
            };
    }
    if (state.color === "success" && state.size === "small" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "success",
                size: "small",
                state: "hovered"
            };
    }
    if (state.color === "success" && state.size === "small" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "success",
                size: "small",
                state: "enabled"
            };
    }
    if (state.color === "primary" && state.size === "medium" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "primary",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "primary" && state.size === "medium" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "primary",
                size: "large",
                state: "enabled"
            };
    }
    if (state.color === "primary" && state.size === "large" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "primary",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "inherit" && state.size === "medium" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "inherit",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "inherit" && state.size === "medium" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "inherit",
                size: "large",
                state: "enabled"
            };
    }
    if (state.color === "inherit" && state.size === "large" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "inherit",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "inherit-white" && state.size === "medium" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "inherit-white",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "inherit-white" && state.size === "medium" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "inherit-white",
                size: "large",
                state: "enabled"
            };
    }
    if (state.color === "inherit-white" && state.size === "large" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "inherit-white",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "default" && state.size === "medium" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "default",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "default" && state.size === "medium" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "default",
                size: "large",
                state: "enabled"
            };
    }
    if (state.color === "default" && state.size === "large" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "default",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "secondary" && state.size === "medium" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "secondary",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "secondary" && state.size === "medium" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "secondary",
                size: "large",
                state: "enabled"
            };
    }
    if (state.color === "secondary" && state.size === "large" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "secondary",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "error" && state.size === "medium" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "error",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "error" && state.size === "medium" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "error",
                size: "large",
                state: "enabled"
            };
    }
    if (state.color === "error" && state.size === "large" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "error",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "warning" && state.size === "medium" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "warning",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "warning" && state.size === "medium" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "warning",
                size: "large",
                state: "enabled"
            };
    }
    if (state.color === "warning" && state.size === "large" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "warning",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "info" && state.size === "medium" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "info",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "info" && state.size === "medium" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "info",
                size: "large",
                state: "enabled"
            };
    }
    if (state.color === "info" && state.size === "large" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "info",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "success" && state.size === "medium" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "success",
                size: "medium",
                state: "hovered"
            };
    }
    if (state.color === "success" && state.size === "medium" && state.state === "hovered") switch(action){
        case "mouse_leave":
            return {
                color: "success",
                size: "large",
                state: "enabled"
            };
    }
    if (state.color === "success" && state.size === "large" && state.state === "enabled") switch(action){
        case "mouse_enter":
            return {
                color: "success",
                size: "medium",
                state: "hovered"
            };
    }
    return state;
}
IconButton.propTypes = {
    size: (0, _propTypesDefault.default).oneOf([
        "large",
        "medium",
        "small"
    ]),
    color: (0, _propTypesDefault.default).oneOf([
        "warning",
        "inherit",
        "info",
        "default",
        "success",
        "secondary",
        "primary",
        "inherit-white",
        "error"
    ]),
    stateProp: (0, _propTypesDefault.default).oneOf([
        "hovered",
        "disabled",
        "focused",
        "enabled"
    ]),
    iconSize: (0, _propTypesDefault.default).string,
    to: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "IconButton");

  $parcel$ReactRefreshHelpers$3c93.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","react-router-dom":"9xmpe","../../icons/Starsharp30":"8U7jr","../Icon":"JmJkt","./style.css":"4TTXb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"JmJkt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>(0, _icon.Icon));
var _icon = require("./Icon");

},{"./Icon":"jfJGq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jfJGq":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$8bdf = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$8bdf.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Icon", ()=>Icon);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _starsharp30 = require("../../icons/Starsharp30");
var _styleCss = require("./style.css");
const Icon = ({ size, className, icon = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _starsharp30.Starsharp30), {
    className: "star-sharp",
    color: "black",
    opacity: "0.56"
}, void 0, false, {
    fileName: "src/components/Icon/Icon.jsx",
    lineNumber: 14,
    columnNumber: 10
}, undefined) })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `icon ${size} ${className}`,
        children: icon
    }, void 0, false, {
        fileName: "src/components/Icon/Icon.jsx",
        lineNumber: 16,
        columnNumber: 10
    }, undefined);
};
_c = Icon;
Icon.propTypes = {
    size: (0, _propTypesDefault.default).oneOf([
        "large",
        "inherit",
        "medium",
        "small"
    ])
};
var _c;
$RefreshReg$(_c, "Icon");

  $parcel$ReactRefreshHelpers$8bdf.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../../icons/Starsharp30":"8U7jr","./style.css":"kFW1E","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"kFW1E":[function() {},{}],"4TTXb":[function() {},{}],"95cRN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Toolbar", ()=>(0, _toolbar.Toolbar));
var _toolbar = require("./Toolbar");

},{"./Toolbar":"exzaS","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"exzaS":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$8c8a = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$8c8a.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Toolbar", ()=>Toolbar);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _menufilled9 = require("../../icons/Menufilled9");
var _starsharp30 = require("../../icons/Starsharp30");
var _iconButton = require("../IconButton");
var _stack = require("../Stack");
var _typography = require("../Typography");
var _styleCss = require("./style.css");
const Toolbar = ({ menu = true, variant, smallScreen, className, iconButtonIconSize = "medium", iconButtonIconIcon = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _menufilled9.Menufilled9), {
    className: "icon-instance-node",
    color: "white"
}, void 0, false, {
    fileName: "src/components/Toolbar/Toolbar.jsx",
    lineNumber: 21,
    columnNumber: 24
}, undefined), typographyVariant = "body-1", typographyContent = "Website", typographyBodyClassName, stack = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _iconButton.IconButton), {
    className: "icon-button-instance",
    color: "inherit-white",
    iconIcon: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _starsharp30.Starsharp30), {
        className: "icon-instance-node",
        color: "white"
    }, void 0, false, {
        fileName: "src/components/Toolbar/Toolbar.jsx",
        lineNumber: 29,
        columnNumber: 17
    }, void 0),
    iconSize: "medium",
    size: "medium",
    stateProp: "enabled"
}, void 0, false, {
    fileName: "src/components/Toolbar/Toolbar.jsx",
    lineNumber: 26,
    columnNumber: 5
}, undefined), override = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _iconButton.IconButton), {
    className: "icon-button-instance",
    color: "inherit-white",
    iconIcon: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _starsharp30.Starsharp30), {
        className: "icon-instance-node",
        color: "white"
    }, void 0, false, {
        fileName: "src/components/Toolbar/Toolbar.jsx",
        lineNumber: 39,
        columnNumber: 17
    }, void 0),
    iconSize: "medium",
    size: "medium",
    stateProp: "enabled"
}, void 0, false, {
    fileName: "src/components/Toolbar/Toolbar.jsx",
    lineNumber: 36,
    columnNumber: 5
}, undefined), iconButtonColor = "inherit-white", to })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `toolbar small-screen-${smallScreen} ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "left-side",
                children: [
                    menu && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _iconButton.IconButton), {
                        className: "icon-button-instance",
                        color: iconButtonColor,
                        iconIcon: iconButtonIconIcon,
                        iconSize: iconButtonIconSize,
                        size: "medium",
                        stateProp: "enabled",
                        to: to
                    }, void 0, false, {
                        fileName: "src/components/Toolbar/Toolbar.jsx",
                        lineNumber: 52,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _typography.Typography), {
                        bodyClassName: typographyBodyClassName,
                        className: "icon-button-instance",
                        content: typographyContent,
                        gutterBottom: false,
                        variant: typographyVariant
                    }, void 0, false, {
                        fileName: "src/components/Toolbar/Toolbar.jsx",
                        lineNumber: 63,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/components/Toolbar/Toolbar.jsx",
                lineNumber: 50,
                columnNumber: 7
            }, undefined),
            variant === "regular" && !smallScreen && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "min-height"
            }, void 0, false, {
                fileName: "src/components/Toolbar/Toolbar.jsx",
                lineNumber: 71,
                columnNumber: 49
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _stack.Stack), {
                className: "icon-button-instance",
                direction: "row",
                instances: "one",
                override: variant === "regular" && !smallScreen ? override : stack,
                spacing: "zero"
            }, void 0, false, {
                fileName: "src/components/Toolbar/Toolbar.jsx",
                lineNumber: 73,
                columnNumber: 7
            }, undefined),
            (smallScreen || variant === "dense") && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `div ${variant}`
            }, void 0, false, {
                fileName: "src/components/Toolbar/Toolbar.jsx",
                lineNumber: 80,
                columnNumber: 48
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/components/Toolbar/Toolbar.jsx",
        lineNumber: 49,
        columnNumber: 5
    }, undefined);
};
_c = Toolbar;
Toolbar.propTypes = {
    menu: (0, _propTypesDefault.default).bool,
    variant: (0, _propTypesDefault.default).oneOf([
        "regular",
        "dense"
    ]),
    smallScreen: (0, _propTypesDefault.default).bool,
    iconButtonIconSize: (0, _propTypesDefault.default).string,
    typographyVariant: (0, _propTypesDefault.default).string,
    typographyContent: (0, _propTypesDefault.default).string,
    iconButtonColor: (0, _propTypesDefault.default).string,
    to: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Toolbar");

  $parcel$ReactRefreshHelpers$8c8a.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../../icons/Menufilled9":"fLaQU","../../icons/Starsharp30":"8U7jr","../IconButton":"bh0Yx","../Stack":"9vgrA","../Typography":"15iJi","./style.css":"jSbCf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"9vgrA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Stack", ()=>(0, _stack.Stack));
var _stack = require("./Stack");

},{"./Stack":"iNK27","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iNK27":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$64ec = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$64ec.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Stack", ()=>Stack);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _libraryInstance = require("../LibraryInstance");
var _styleCss = require("./style.css");
const Stack = ({ instances, direction, spacing, className, override = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _libraryInstance.LibraryInstance), {
    className: "instance"
}, void 0, false, {
    fileName: "src/components/Stack/Stack.jsx",
    lineNumber: 16,
    columnNumber: 14
}, undefined) })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `stack ${direction} ${spacing} ${instances} ${className}`,
        children: [
            [
                "five",
                "four",
                "three",
                "two"
            ].includes(instances) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _libraryInstance.LibraryInstance), {
                className: `${direction === "column" ? "class" : "class-2"}`
            }, void 0, false, {
                fileName: "src/components/Stack/Stack.jsx",
                lineNumber: 21,
                columnNumber: 9
            }, undefined),
            [
                "five",
                "four",
                "three",
                "two"
            ].includes(instances) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _libraryInstance.LibraryInstance), {
                className: `${instances === "two" && direction === "row" ? "class-3" : direction === "column" && instances === "two" ? "class-4" : direction === "column" && [
                    "five",
                    "four",
                    "three"
                ].includes(instances) ? "class-5" : "class-6"}`
            }, void 0, false, {
                fileName: "src/components/Stack/Stack.jsx",
                lineNumber: 25,
                columnNumber: 9
            }, undefined),
            instances === "one" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                children: override
            }, void 0, false),
            [
                "five",
                "four",
                "three"
            ].includes(instances) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _libraryInstance.LibraryInstance), {
                className: `${direction === "column" && [
                    "five",
                    "four"
                ].includes(instances) ? "class-5" : instances === "three" && direction === "row" ? "class-3" : instances === "three" && direction === "column" ? "class-4" : "class-6"}`
            }, void 0, false, {
                fileName: "src/components/Stack/Stack.jsx",
                lineNumber: 41,
                columnNumber: 9
            }, undefined),
            [
                "five",
                "four"
            ].includes(instances) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _libraryInstance.LibraryInstance), {
                className: `${instances === "four" && direction === "column" ? "class-4" : direction === "row" && instances === "five" ? "class-6" : direction === "column" && instances === "five" ? "class-5" : "class-3"}`
            }, void 0, false, {
                fileName: "src/components/Stack/Stack.jsx",
                lineNumber: 55,
                columnNumber: 9
            }, undefined),
            instances === "five" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _libraryInstance.LibraryInstance), {
                className: `${direction === "column" ? "class-4" : "class-3"}`
            }, void 0, false, {
                fileName: "src/components/Stack/Stack.jsx",
                lineNumber: 68,
                columnNumber: 32
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/components/Stack/Stack.jsx",
        lineNumber: 19,
        columnNumber: 5
    }, undefined);
};
_c = Stack;
Stack.propTypes = {
    instances: (0, _propTypesDefault.default).oneOf([
        "two",
        "three",
        "four",
        "one",
        "five"
    ]),
    direction: (0, _propTypesDefault.default).oneOf([
        "row",
        "column"
    ]),
    spacing: (0, _propTypesDefault.default).oneOf([
        "seven",
        "zero",
        "two",
        "three",
        "four",
        "one",
        "five_1",
        "eight",
        "six"
    ])
};
var _c;
$RefreshReg$(_c, "Stack");

  $parcel$ReactRefreshHelpers$64ec.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../LibraryInstance":"dHdu4","./style.css":"9KlHQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"dHdu4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LibraryInstance", ()=>(0, _libraryInstance.LibraryInstance));
var _libraryInstance = require("./LibraryInstance");

},{"./LibraryInstance":"9tbCr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9tbCr":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$fe95 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$fe95.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LibraryInstance", ()=>LibraryInstance);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const LibraryInstance = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `library-instance ${className}`,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "text-wrapper-5",
            children: "Instance Slot"
        }, void 0, false, {
            fileName: "src/components/LibraryInstance/LibraryInstance.jsx",
            lineNumber: 12,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/LibraryInstance/LibraryInstance.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = LibraryInstance;
var _c;
$RefreshReg$(_c, "LibraryInstance");

  $parcel$ReactRefreshHelpers$fe95.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","./style.css":"2bLUD","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"2bLUD":[function() {},{}],"9KlHQ":[function() {},{}],"15iJi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Typography", ()=>(0, _typography.Typography));
var _typography = require("./Typography");

},{"./Typography":"9YgLC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9YgLC":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$e848 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$e848.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Typography", ()=>Typography);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const Typography = ({ content = "Typography", variant, gutterBottom, className, bodyClassName })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `typography ${variant} gutter-bottom-${gutterBottom} ${className}`,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: `body ${bodyClassName}`,
            children: content
        }, void 0, false, {
            fileName: "src/components/Typography/Typography.jsx",
            lineNumber: 13,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/Typography/Typography.jsx",
        lineNumber: 12,
        columnNumber: 5
    }, undefined);
};
_c = Typography;
Typography.propTypes = {
    content: (0, _propTypesDefault.default).string,
    variant: (0, _propTypesDefault.default).oneOf([
        "h-5",
        "caption",
        "subtitle-1",
        "custom",
        "overline",
        "h-1",
        "h-6",
        "h-2",
        "subtitle-2",
        "body-1",
        "h-4",
        "h-3",
        "body-2"
    ]),
    gutterBottom: (0, _propTypesDefault.default).bool
};
var _c;
$RefreshReg$(_c, "Typography");

  $parcel$ReactRefreshHelpers$e848.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"eme6Q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"eme6Q":[function() {},{}],"jSbCf":[function() {},{}],"cTutT":[function() {},{}],"8pvxL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BottomNavigationWrapper", ()=>(0, _bottomNavigationWrapper.BottomNavigationWrapper));
var _bottomNavigationWrapper = require("./BottomNavigationWrapper");

},{"./BottomNavigationWrapper":"5S3Ga","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5S3Ga":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$3f35 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$3f35.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BottomNavigationWrapper", ()=>BottomNavigationWrapper);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _homefilled = require("../../icons/Homefilled");
var _peoplefilled = require("../../icons/Peoplefilled");
var _searchfilled = require("../../icons/Searchfilled");
var _iconOnlyFalseWrapper = require("../IconOnlyFalseWrapper");
var _styleCss = require("./style.css");
const BottomNavigationWrapper = ({ className, iconOnlyFalseWrapperBottomNavigationIcon = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _searchfilled.Searchfilled), {
    className: "icon-instance-node-2",
    color: "#173F56"
}, void 0, false, {
    fileName: "src/components/BottomNavigationWrapper/BottomNavigationWrapper.jsx",
    lineNumber: 16,
    columnNumber: 46
}, undefined), override = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _homefilled.Homefilled), {
    className: "icon-instance-node-2"
}, void 0, false, {
    fileName: "src/components/BottomNavigationWrapper/BottomNavigationWrapper.jsx",
    lineNumber: 17,
    columnNumber: 14
}, undefined), iconOnlyFalseWrapperBottomNavigationIcon1 = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _peoplefilled.Peoplefilled), {
    className: "icon-instance-node-2",
    color: "#173F56"
}, void 0, false, {
    fileName: "src/components/BottomNavigationWrapper/BottomNavigationWrapper.jsx",
    lineNumber: 18,
    columnNumber: 47
}, undefined), to, to1 })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `bottom-navigation-wrapper ${className}`,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _iconOnlyFalseWrapper.IconOnlyFalseWrapper), {
            bottomNavigationActiveFalseLabelClassName: "design-component-instance-node",
            bottomNavigationActiveTrueLabelClassName: "design-component-instance-node",
            bottomNavigationActiveTrueLabelClassNameOverride: "design-component-instance-node",
            bottomNavigationIcon: override,
            bottomNavigationIcon1: iconOnlyFalseWrapperBottomNavigationIcon1,
            bottomNavigationLabelContent: "home",
            bottomNavigationLabelContent1: "browse",
            bottomNavigationLabelContent2: "join",
            className: "bottom-navigation-instance",
            iconOnly: false,
            items: "three",
            override: iconOnlyFalseWrapperBottomNavigationIcon,
            to: to,
            to1: to1
        }, void 0, false, {
            fileName: "src/components/BottomNavigationWrapper/BottomNavigationWrapper.jsx",
            lineNumber: 24,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/BottomNavigationWrapper/BottomNavigationWrapper.jsx",
        lineNumber: 23,
        columnNumber: 5
    }, undefined);
};
_c = BottomNavigationWrapper;
BottomNavigationWrapper.propTypes = {
    to: (0, _propTypesDefault.default).string,
    to1: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "BottomNavigationWrapper");

  $parcel$ReactRefreshHelpers$3f35.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../../icons/Homefilled":"8M00X","../../icons/Peoplefilled":"18lwt","../../icons/Searchfilled":"4JBh2","../IconOnlyFalseWrapper":"18taf","./style.css":"ck5oe","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8M00X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Homefilled", ()=>(0, _homefilled.Homefilled));
var _homefilled = require("./Homefilled");

},{"./Homefilled":"i4oNR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i4oNR":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$725b = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$725b.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Homefilled", ()=>Homefilled);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Homefilled = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `homefilled ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 25 24",
        width: "25",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_493_237)",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                    className: "g",
                    filter: "url(#filter0_d_493_237)",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path",
                        d: "M10.5 20V14H14.5V20H19.5V12H22.5L12.5 3L2.5 12H5.5V20H10.5Z",
                        fill: "#173F56"
                    }, void 0, false, {
                        fileName: "src/icons/Homefilled/Homefilled.jsx",
                        lineNumber: 20,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/Homefilled/Homefilled.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/Homefilled/Homefilled.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("filter", {
                        className: "filter",
                        colorInterpolationFilters: "sRGB",
                        filterUnits: "userSpaceOnUse",
                        height: "25",
                        id: "filter0_d_493_237",
                        width: "28",
                        x: "-1.5",
                        y: "3",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feFlood", {
                                className: "fe-flood",
                                floodOpacity: "0",
                                result: "BackgroundImageFix"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled/Homefilled.jsx",
                                lineNumber: 34,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feColorMatrix", {
                                className: "fe-color-matrix",
                                in: "SourceAlpha",
                                result: "hardAlpha",
                                type: "matrix",
                                values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled/Homefilled.jsx",
                                lineNumber: 35,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feOffset", {
                                className: "fe-offset",
                                dy: "4"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled/Homefilled.jsx",
                                lineNumber: 42,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feGaussianBlur", {
                                className: "fe-gaussian-blur",
                                stdDeviation: "2"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled/Homefilled.jsx",
                                lineNumber: 43,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feComposite", {
                                className: "fe-composite",
                                in2: "hardAlpha",
                                operator: "out"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled/Homefilled.jsx",
                                lineNumber: 44,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feColorMatrix", {
                                className: "fe-color-matrix",
                                type: "matrix",
                                values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled/Homefilled.jsx",
                                lineNumber: 45,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feBlend", {
                                className: "fe-blend",
                                in2: "BackgroundImageFix",
                                mode: "normal",
                                result: "effect1_dropShadow_493_237"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled/Homefilled.jsx",
                                lineNumber: 50,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feBlend", {
                                className: "fe-blend",
                                in: "SourceGraphic",
                                in2: "effect1_dropShadow_493_237",
                                mode: "normal",
                                result: "shape"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled/Homefilled.jsx",
                                lineNumber: 51,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/icons/Homefilled/Homefilled.jsx",
                        lineNumber: 24,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                        className: "clip-path",
                        id: "clip0_493_237",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                            className: "rect",
                            fill: "white",
                            height: "24",
                            transform: "translate(0.5)",
                            width: "24"
                        }, void 0, false, {
                            fileName: "src/icons/Homefilled/Homefilled.jsx",
                            lineNumber: 60,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/Homefilled/Homefilled.jsx",
                        lineNumber: 59,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/Homefilled/Homefilled.jsx",
                lineNumber: 23,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/Homefilled/Homefilled.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = Homefilled;
var _c;
$RefreshReg$(_c, "Homefilled");

  $parcel$ReactRefreshHelpers$725b.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"18lwt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Peoplefilled", ()=>(0, _peoplefilled.Peoplefilled));
var _peoplefilled = require("./Peoplefilled");

},{"./Peoplefilled":"l5k37","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l5k37":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$4cae = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$4cae.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Peoplefilled", ()=>Peoplefilled);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Peoplefilled = ({ color = "#173F56", opacity = "unset", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `peoplefilled ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 24 24",
        width: "24",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M16 11C17.66 11 18.99 9.66 18.99 8C18.99 6.34 17.66 5 16 5C14.34 5 13 6.34 13 8C13 9.66 14.34 11 16 11ZM8 11C9.66 11 10.99 9.66 10.99 8C10.99 6.34 9.66 5 8 5C6.34 5 5 6.34 5 8C5 9.66 6.34 11 8 11ZM8 13C5.67 13 1 14.17 1 16.5V19H15V16.5C15 14.17 10.33 13 8 13ZM16 13C15.71 13 15.38 13.02 15.03 13.05C16.19 13.89 17 15.02 17 16.5V19H23V16.5C23 14.17 18.33 13 16 13Z",
            fill: color,
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Peoplefilled/Peoplefilled.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Peoplefilled/Peoplefilled.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Peoplefilled;
Peoplefilled.propTypes = {
    color: (0, _propTypesDefault.default).string,
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Peoplefilled");

  $parcel$ReactRefreshHelpers$4cae.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"4JBh2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Searchfilled", ()=>(0, _searchfilled.Searchfilled));
var _searchfilled = require("./Searchfilled");

},{"./Searchfilled":"3jcx8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3jcx8":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$20da = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$20da.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Searchfilled", ()=>Searchfilled);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Searchfilled = ({ color = "#173F56", opacity = "unset", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `searchfilled ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 24 24",
        width: "24",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M15.755 14.2549H14.965L14.685 13.9849C15.665 12.8449 16.255 11.3649 16.255 9.75488C16.255 6.16488 13.345 3.25488 9.755 3.25488C6.165 3.25488 3.255 6.16488 3.255 9.75488C3.255 13.3449 6.165 16.2549 9.755 16.2549C11.365 16.2549 12.845 15.6649 13.985 14.6849L14.255 14.9649V15.7549L19.255 20.7449L20.745 19.2549L15.755 14.2549ZM9.755 14.2549C7.26501 14.2549 5.255 12.2449 5.255 9.75488C5.255 7.26488 7.26501 5.25488 9.755 5.25488C12.245 5.25488 14.255 7.26488 14.255 9.75488C14.255 12.2449 12.245 14.2549 9.755 14.2549Z",
            fill: color,
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Searchfilled/Searchfilled.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Searchfilled/Searchfilled.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Searchfilled;
Searchfilled.propTypes = {
    color: (0, _propTypesDefault.default).string,
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Searchfilled");

  $parcel$ReactRefreshHelpers$20da.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"18taf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconOnlyFalseWrapper", ()=>(0, _iconOnlyFalseWrapper.IconOnlyFalseWrapper));
var _iconOnlyFalseWrapper = require("./IconOnlyFalseWrapper");

},{"./IconOnlyFalseWrapper":"3Ekat","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Ekat":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$c2ee = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$c2ee.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconOnlyFalseWrapper", ()=>IconOnlyFalseWrapper);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _favoritefilled22 = require("../../icons/Favoritefilled22");
var _favoritefilled7 = require("../../icons/Favoritefilled7");
var _bottomNavigation = require("../BottomNavigation");
var _styleCss = require("./style.css");
const IconOnlyFalseWrapper = ({ iconOnly, items, className, bottomNavigationLabelContent = "Label", bottomNavigationIcon = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
    className: "favorite-filled-3",
    color: "black",
    opacity: "0.6"
}, void 0, false, {
    fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
    lineNumber: 18,
    columnNumber: 26
}, undefined), bottomNavigationActiveTrueLabelClassName, bottomNavigationLabelContent1 = "Label", override = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled22.Favoritefilled22), {
    className: "favorite-filled-3",
    color: "black",
    opacity: "0.6"
}, void 0, false, {
    fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
    lineNumber: 21,
    columnNumber: 14
}, undefined), bottomNavigationActiveTrueLabelClassNameOverride, bottomNavigationLabelContent2 = "Label", bottomNavigationIcon1 = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
    className: "favorite-filled-3",
    color: "black",
    opacity: "0.38"
}, void 0, false, {
    fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
    lineNumber: 24,
    columnNumber: 27
}, undefined), bottomNavigationActiveFalseLabelClassName, to, to1 })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `icon-only-false-wrapper ${className}`,
        children: [
            items === "three" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _bottomNavigation.BottomNavigation), {
                        active: iconOnly ? true : undefined,
                        className: bottomNavigationActiveTrueLabelClassName,
                        icon: bottomNavigationIcon,
                        label: iconOnly ? false : true,
                        labelContent: bottomNavigationLabelContent,
                        override: iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
                            className: "favorite-filled-2",
                            color: "#173F56"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 39,
                            columnNumber: 34
                        }, void 0) : undefined,
                        state: "enabled",
                        to: to
                    }, void 0, false, {
                        fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                        lineNumber: 33,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _bottomNavigation.BottomNavigation), {
                        active: false,
                        className: bottomNavigationActiveTrueLabelClassNameOverride,
                        icon: override,
                        label: iconOnly ? false : true,
                        labelContent: bottomNavigationLabelContent1,
                        override: iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled22.Favoritefilled22), {
                            className: "favorite-filled-2",
                            color: "black",
                            opacity: "0.6"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 50,
                            columnNumber: 26
                        }, void 0) : undefined,
                        state: "enabled",
                        to: to1
                    }, void 0, false, {
                        fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                        lineNumber: 43,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _bottomNavigation.BottomNavigation), {
                        active: false,
                        className: bottomNavigationActiveFalseLabelClassName,
                        icon: bottomNavigationIcon1,
                        label: iconOnly ? false : true,
                        labelContent: bottomNavigationLabelContent2,
                        override: iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
                            className: "favorite-filled-2",
                            color: "black",
                            opacity: "0.38"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 62,
                            columnNumber: 26
                        }, void 0) : undefined,
                        state: "disabled"
                    }, void 0, false, {
                        fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                        lineNumber: 55,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true),
            items === "four" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _bottomNavigation.BottomNavigation), {
                        active: true,
                        className: "bottom-navigation-action",
                        icon: !iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
                            className: "favorite-filled-3",
                            color: "#173F56"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 74,
                            columnNumber: 31
                        }, void 0) : undefined,
                        label: iconOnly ? false : true,
                        labelContent: !iconOnly ? "Label" : undefined,
                        override: iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
                            className: "favorite-filled-2",
                            color: "#173F56"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 77,
                            columnNumber: 34
                        }, void 0) : undefined,
                        state: "enabled"
                    }, void 0, false, {
                        fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                        lineNumber: 71,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _bottomNavigation.BottomNavigation), {
                        active: false,
                        className: "bottom-navigation-action",
                        icon: !iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
                            className: "favorite-filled-3",
                            color: "black",
                            opacity: "0.6"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 83,
                            columnNumber: 31
                        }, void 0) : undefined,
                        label: iconOnly ? false : true,
                        labelContent: !iconOnly ? "Label" : undefined,
                        override: iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
                            className: "favorite-filled-2",
                            color: "black",
                            opacity: "0.6"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 87,
                            columnNumber: 26
                        }, void 0) : undefined,
                        state: "enabled"
                    }, void 0, false, {
                        fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                        lineNumber: 80,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _bottomNavigation.BottomNavigation), {
                        active: false,
                        className: "bottom-navigation-action",
                        icon: !iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
                            className: "favorite-filled-3",
                            color: "black",
                            opacity: "0.38"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 95,
                            columnNumber: 27
                        }, void 0) : undefined,
                        label: iconOnly ? false : true,
                        labelContent: !iconOnly ? "Label" : undefined,
                        override: iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
                            className: "favorite-filled-2",
                            color: "black",
                            opacity: "0.38"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 100,
                            columnNumber: 26
                        }, void 0) : undefined,
                        state: "disabled"
                    }, void 0, false, {
                        fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                        lineNumber: 91,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _bottomNavigation.BottomNavigation), {
                        active: false,
                        className: "bottom-navigation-action",
                        icon: !iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
                            className: "favorite-filled-3",
                            color: "black",
                            opacity: "0.6"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 107,
                            columnNumber: 31
                        }, void 0) : undefined,
                        label: iconOnly ? false : true,
                        labelContent: !iconOnly ? "Label" : undefined,
                        override: iconOnly ? /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
                            className: "favorite-filled-2",
                            color: "black",
                            opacity: "0.6"
                        }, void 0, false, {
                            fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                            lineNumber: 111,
                            columnNumber: 26
                        }, void 0) : undefined,
                        state: "enabled"
                    }, void 0, false, {
                        fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
                        lineNumber: 104,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true)
        ]
    }, void 0, true, {
        fileName: "src/components/IconOnlyFalseWrapper/IconOnlyFalseWrapper.jsx",
        lineNumber: 30,
        columnNumber: 5
    }, undefined);
};
_c = IconOnlyFalseWrapper;
IconOnlyFalseWrapper.propTypes = {
    iconOnly: (0, _propTypesDefault.default).bool,
    items: (0, _propTypesDefault.default).oneOf([
        "three",
        "four"
    ]),
    bottomNavigationLabelContent: (0, _propTypesDefault.default).string,
    bottomNavigationLabelContent1: (0, _propTypesDefault.default).string,
    bottomNavigationLabelContent2: (0, _propTypesDefault.default).string,
    to: (0, _propTypesDefault.default).string,
    to1: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "IconOnlyFalseWrapper");

  $parcel$ReactRefreshHelpers$c2ee.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../../icons/Favoritefilled22":"4pcfh","../../icons/Favoritefilled7":"8L0OI","../BottomNavigation":"96fAf","./style.css":"9Ufnm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"4pcfh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Favoritefilled22", ()=>(0, _favoritefilled22.Favoritefilled22));
var _favoritefilled22 = require("./Favoritefilled22");

},{"./Favoritefilled22":"36CC6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"36CC6":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$2f26 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$2f26.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Favoritefilled22", ()=>Favoritefilled22);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Favoritefilled22 = ({ color = "black", opacity = "unset", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `favoritefilled-22 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 24 24",
        width: "24",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M12 21.175L10.55 19.855C5.4 15.185 2 12.105 2 8.32501C2 5.24501 4.42 2.82501 7.5 2.82501C9.24 2.82501 10.91 3.63501 12 4.91501C13.09 3.63501 14.76 2.82501 16.5 2.82501C19.58 2.82501 22 5.24501 22 8.32501C22 12.105 18.6 15.185 13.45 19.865L12 21.175Z",
            fill: color,
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Favoritefilled22/Favoritefilled22.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Favoritefilled22/Favoritefilled22.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Favoritefilled22;
Favoritefilled22.propTypes = {
    color: (0, _propTypesDefault.default).string,
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Favoritefilled22");

  $parcel$ReactRefreshHelpers$2f26.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8L0OI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Favoritefilled7", ()=>(0, _favoritefilled7.Favoritefilled7));
var _favoritefilled7 = require("./Favoritefilled7");

},{"./Favoritefilled7":"92nTd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"92nTd":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$5428 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$5428.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Favoritefilled7", ()=>Favoritefilled7);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Favoritefilled7 = ({ color = "#173F56", opacity = "unset", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `favoritefilled-7 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 25 24",
        width: "25",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M12.5 21.175L11.05 19.855C5.9 15.185 2.5 12.105 2.5 8.32501C2.5 5.24501 4.92 2.82501 8 2.82501C9.74 2.82501 11.41 3.63501 12.5 4.91501C13.59 3.63501 15.26 2.82501 17 2.82501C20.08 2.82501 22.5 5.24501 22.5 8.32501C22.5 12.105 19.1 15.185 13.95 19.865L12.5 21.175Z",
            fill: color,
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Favoritefilled7/Favoritefilled7.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Favoritefilled7/Favoritefilled7.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Favoritefilled7;
Favoritefilled7.propTypes = {
    color: (0, _propTypesDefault.default).string,
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Favoritefilled7");

  $parcel$ReactRefreshHelpers$5428.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"96fAf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BottomNavigation", ()=>(0, _bottomNavigation.BottomNavigation));
var _bottomNavigation = require("./BottomNavigation");

},{"./BottomNavigation":"6KYap","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6KYap":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$cc1f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$cc1f.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BottomNavigation", ()=>BottomNavigation);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouterDom = require("react-router-dom");
var _favoritefilled22 = require("../../icons/Favoritefilled22");
var _favoritefilled7 = require("../../icons/Favoritefilled7");
var _styleCss = require("./style.css");
const BottomNavigation = ({ labelContent = "Label", active, label, state, className, icon = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled7.Favoritefilled7), {
    className: "favorite-filled",
    color: "black",
    opacity: "0.6"
}, void 0, false, {
    fileName: "src/components/BottomNavigation/BottomNavigation.jsx",
    lineNumber: 19,
    columnNumber: 10
}, undefined), override = /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _favoritefilled22.Favoritefilled22), {
    className: "favoritefilled-22",
    color: "#173F56"
}, void 0, false, {
    fileName: "src/components/BottomNavigation/BottomNavigation.jsx",
    lineNumber: 20,
    columnNumber: 14
}, undefined), to })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouterDom.Link), {
        className: `bottom-navigation label-${label} state-0-${state} active-${active} ${className}`,
        to: to,
        children: [
            !label && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                children: override
            }, void 0, false),
            label && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                children: [
                    icon,
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "tab-one-wrapper",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "tab-one",
                            children: labelContent
                        }, void 0, false, {
                            fileName: "src/components/BottomNavigation/BottomNavigation.jsx",
                            lineNumber: 31,
                            columnNumber: 13
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/components/BottomNavigation/BottomNavigation.jsx",
                        lineNumber: 30,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true)
        ]
    }, void 0, true, {
        fileName: "src/components/BottomNavigation/BottomNavigation.jsx",
        lineNumber: 24,
        columnNumber: 5
    }, undefined);
};
_c = BottomNavigation;
BottomNavigation.propTypes = {
    labelContent: (0, _propTypesDefault.default).string,
    active: (0, _propTypesDefault.default).bool,
    label: (0, _propTypesDefault.default).bool,
    state: (0, _propTypesDefault.default).oneOf([
        "disabled",
        "focused",
        "enabled"
    ]),
    to: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "BottomNavigation");

  $parcel$ReactRefreshHelpers$cc1f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","react-router-dom":"9xmpe","../../icons/Favoritefilled22":"4pcfh","../../icons/Favoritefilled7":"8L0OI","./style.css":"aydfH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"aydfH":[function() {},{}],"9Ufnm":[function() {},{}],"ck5oe":[function() {},{}],"6DyY9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CustomFormsEmail", ()=>(0, _customFormsEmail.CustomFormsEmail));
var _customFormsEmail = require("./CustomFormsEmail");

},{"./CustomFormsEmail":"aE5Vh","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aE5Vh":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$3cd8 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$3cd8.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CustomFormsEmail", ()=>CustomFormsEmail);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _button = require("../Button");
var _formcontrollabel = require("../Formcontrollabel");
var _spacingVertical = require("../SpacingVertical");
var _textField = require("../TextField");
var _styleCss = require("./style.css");
const CustomFormsEmail = ({ className, formcontrollabelLabelPlacementEndClassName })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `custom-forms-email ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _textField.TextField), {
                className: "text-field-instance",
                hasValue: true,
                label: "Email address",
                size: "medium",
                stateProp: "enabled",
                value: "john@gmail.com",
                variant: "outlined"
            }, void 0, false, {
                fileName: "src/components/CustomFormsEmail/CustomFormsEmail.jsx",
                lineNumber: 16,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _spacingVertical.SpacingVertical), {
                className: "spacing-vertical-instance",
                spacing: "two",
                visibility: false
            }, void 0, false, {
                fileName: "src/components/CustomFormsEmail/CustomFormsEmail.jsx",
                lineNumber: 25,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _textField.TextField), {
                className: "text-field-instance",
                hasValue: true,
                label: "Password",
                size: "medium",
                stateProp: "enabled",
                value: "**********",
                variant: "outlined"
            }, void 0, false, {
                fileName: "src/components/CustomFormsEmail/CustomFormsEmail.jsx",
                lineNumber: 26,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _spacingVertical.SpacingVertical), {
                className: "spacing-vertical-instance",
                spacing: "two",
                visibility: false
            }, void 0, false, {
                fileName: "src/components/CustomFormsEmail/CustomFormsEmail.jsx",
                lineNumber: 35,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _formcontrollabel.Formcontrollabel), {
                className: formcontrollabelLabelPlacementEndClassName,
                disabled: false,
                formLabelValue: "I accept the Terms and Conditions",
                labelPlacement: "end"
            }, void 0, false, {
                fileName: "src/components/CustomFormsEmail/CustomFormsEmail.jsx",
                lineNumber: 36,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _spacingVertical.SpacingVertical), {
                className: "spacing-vertical-instance",
                spacing: "two",
                visibility: false
            }, void 0, false, {
                fileName: "src/components/CustomFormsEmail/CustomFormsEmail.jsx",
                lineNumber: 42,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _button.Button), {
                className: "button-instance",
                color: "primary",
                label: "SIGN IN",
                size: "large",
                stateProp: "enabled",
                variant: "contained"
            }, void 0, false, {
                fileName: "src/components/CustomFormsEmail/CustomFormsEmail.jsx",
                lineNumber: 43,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/components/CustomFormsEmail/CustomFormsEmail.jsx",
        lineNumber: 15,
        columnNumber: 5
    }, undefined);
};
_c = CustomFormsEmail;
var _c;
$RefreshReg$(_c, "CustomFormsEmail");

  $parcel$ReactRefreshHelpers$3cd8.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","../Button":"bNbfl","../Formcontrollabel":"2x4US","../SpacingVertical":"bQtop","../TextField":"2Hx5j","./style.css":"f2CZ0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"bNbfl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Button", ()=>(0, _button.Button));
var _button = require("./Button");

},{"./Button":"6PHRv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6PHRv":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$8b80 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$8b80.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Button", ()=>Button);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _progressCircular1 = require("../../icons/ProgressCircular1");
var _styleCss = require("./style.css");
var _s = $RefreshSig$();
const Button = ({ loadingEnd = false, loadingStart = true, label = "Label", startIcon = false, endIcon = false, size, color, stateProp, variant, className })=>{
    _s();
    const [state, dispatch] = (0, _react.useReducer)(reducer, {
        size: size || "large",
        color: color || "primary",
        state: stateProp || "enabled",
        variant: variant || "contained"
    });
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
        className: `button variant-${state.variant} state-22-${state.state} size-30-${state.size} color-23-${state.color} ${className}`,
        onMouseLeave: ()=>{
            dispatch("mouse_leave");
        },
        onMouseEnter: ()=>{
            dispatch("mouse_enter");
        },
        children: [
            [
                "disabled",
                "enabled",
                "hovered",
                "loading"
            ].includes(state.state) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "base",
                children: [
                    [
                        "disabled",
                        "enabled",
                        "hovered"
                    ].includes(state.state) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                        className: "text-wrapper-3",
                        children: label
                    }, void 0, false, {
                        fileName: "src/components/Button/Button.jsx",
                        lineNumber: 44,
                        columnNumber: 13
                    }, undefined),
                    state.state === "loading" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                            children: loadingStart && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _progressCircular1.ProgressCircular1), {
                                className: `${state.variant === "contained" && state.size === "large" ? "class-47" : "class-48"}`
                            }, void 0, false, {
                                fileName: "src/components/Button/Button.jsx",
                                lineNumber: 51,
                                columnNumber: 19
                            }, undefined)
                        }, void 0, false)
                    }, void 0, false)
                ]
            }, void 0, true, {
                fileName: "src/components/Button/Button.jsx",
                lineNumber: 42,
                columnNumber: 9
            }, undefined),
            state.state === "focused" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                        className: "focus-ripple",
                        alt: "Focus ripple",
                        src: state.color === "inherit" && state.variant === "contained" && state.size === "large" ? "/img/focusripple-1.svg" : state.color === "inherit-white" && state.variant === "contained" && state.size === "large" ? "/img/focusripple-2.svg" : state.variant === "contained" && state.color === "secondary" && state.size === "large" ? "/img/focusripple-3.svg" : state.variant === "contained" && state.color === "error" && state.size === "large" ? "/img/focusripple-4.svg" : state.color === "warning" && state.variant === "contained" && state.size === "large" ? "/img/focusripple-5.svg" : state.color === "info" && state.variant === "contained" && state.size === "large" ? "/img/focusripple-6.svg" : state.variant === "contained" && state.color === "success" && state.size === "large" ? "/img/focusripple-7.svg" : state.color === "primary" && state.variant === "contained" && state.size === "medium" ? "/img/focusripple-8.svg" : state.color === "inherit" && state.variant === "contained" && state.size === "medium" ? "/img/focusripple-9.svg" : state.color === "inherit-white" && state.variant === "contained" && state.size === "medium" ? "/img/focusripple-10.svg" : state.color === "secondary" && state.variant === "contained" && state.size === "medium" ? "/img/focusripple-11.svg" : state.variant === "contained" && state.color === "error" && state.size === "medium" ? "/img/focusripple-12.svg" : state.color === "warning" && state.variant === "contained" && state.size === "medium" ? "/img/focusripple-13.svg" : state.color === "info" && state.variant === "contained" && state.size === "medium" ? "/img/focusripple-14.svg" : state.variant === "contained" && state.color === "success" && state.size === "medium" ? "/img/focusripple-15.svg" : state.variant === "contained" && state.size === "small" && state.color === "primary" ? "/img/focusripple-16.svg" : state.color === "inherit" && state.size === "small" && state.variant === "contained" ? "/img/focusripple-17.svg" : state.size === "small" && state.variant === "contained" && state.color === "inherit-white" ? "/img/focusripple-18.svg" : state.variant === "contained" && state.size === "small" && state.color === "secondary" ? "/img/focusripple-19.svg" : state.variant === "contained" && state.size === "small" && state.color === "error" ? "/img/focusripple-20.svg" : state.size === "small" && state.color === "warning" && state.variant === "contained" ? "/img/focusripple-21.svg" : state.color === "info" && state.variant === "contained" && state.size === "small" ? "/img/focusripple-22.svg" : state.variant === "contained" && state.size === "small" && state.color === "success" ? "/img/focusripple-23.svg" : state.variant === "outlined" && state.color === "primary" && state.size === "large" ? "/img/focusripple-24.svg" : state.color === "inherit" && state.variant === "outlined" && state.size === "large" ? "/img/focusripple-25.svg" : state.color === "inherit-white" && state.variant === "outlined" && state.size === "large" ? "/img/focusripple-26.svg" : state.variant === "outlined" && state.color === "secondary" && state.size === "large" ? "/img/focusripple-27.svg" : state.variant === "outlined" && state.color === "error" && state.size === "large" ? "/img/focusripple-28.svg" : state.color === "warning" && state.variant === "outlined" && state.size === "large" ? "/img/focusripple-29.svg" : state.color === "info" && state.variant === "outlined" && state.size === "large" ? "/img/focusripple-30.svg" : state.variant === "outlined" && state.color === "success" && state.size === "large" ? "/img/focusripple-31.svg" : state.color === "primary" && state.variant === "outlined" && state.size === "medium" ? "/img/focusripple-32.svg" : state.color === "inherit" && state.variant === "outlined" && state.size === "medium" ? "/img/focusripple-33.svg" : state.color === "inherit-white" && state.variant === "outlined" && state.size === "medium" ? "/img/focusripple-34.svg" : state.color === "secondary" && state.variant === "outlined" && state.size === "medium" ? "/img/focusripple-35.svg" : state.variant === "outlined" && state.color === "error" && state.size === "medium" ? "/img/focusripple-36.svg" : state.color === "warning" && state.variant === "outlined" && state.size === "medium" ? "/img/focusripple-37.svg" : state.variant === "outlined" && state.color === "info" && state.size === "medium" ? "/img/focusripple-38.svg" : state.variant === "outlined" && state.color === "success" && state.size === "medium" ? "/img/focusripple-39.svg" : state.variant === "outlined" && state.size === "small" && state.color === "primary" ? "/img/focusripple-40.svg" : state.color === "inherit" && state.variant === "outlined" && state.size === "small" ? "/img/focusripple-41.svg" : state.color === "inherit-white" && state.variant === "outlined" && state.size === "small" ? "/img/focusripple-42.svg" : state.variant === "outlined" && state.size === "small" && state.color === "secondary" ? "/img/focusripple-43.svg" : state.variant === "outlined" && state.size === "small" && state.color === "error" ? "/img/focusripple-44.svg" : state.color === "warning" && state.variant === "outlined" && state.size === "small" ? "/img/focusripple-45.svg" : state.variant === "outlined" && state.color === "info" && state.size === "small" ? "/img/focusripple-46.svg" : state.variant === "outlined" && state.size === "small" && state.color === "success" ? "/img/focusripple-47.svg" : state.color === "primary" && state.variant === "text" && state.size === "medium" ? "/img/focusripple-48.svg" : state.color === "inherit" && state.variant === "text" && state.size === "medium" ? "/img/focusripple-49.svg" : state.color === "inherit-white" && state.variant === "text" && state.size === "medium" ? "/img/focusripple-50.svg" : state.color === "secondary" && state.variant === "text" && state.size === "medium" ? "/img/focusripple-51.svg" : state.variant === "text" && state.color === "error" && state.size === "medium" ? "/img/focusripple-52.svg" : state.color === "warning" && state.variant === "text" && state.size === "medium" ? "/img/focusripple-53.svg" : state.color === "info" && state.variant === "text" && state.size === "medium" ? "/img/focusripple-54.svg" : state.variant === "text" && state.color === "success" && state.size === "medium" ? "/img/focusripple-55.svg" : state.variant === "text" && state.color === "primary" && state.size === "large" ? "/img/focusripple-56.svg" : state.color === "inherit" && state.variant === "text" && state.size === "large" ? "/img/focusripple-57.svg" : state.color === "inherit-white" && state.variant === "text" && state.size === "large" ? "/img/focusripple-58.svg" : state.variant === "text" && state.color === "secondary" && state.size === "large" ? "/img/focusripple-59.svg" : state.variant === "text" && state.color === "error" && state.size === "large" ? "/img/focusripple-60.svg" : state.color === "warning" && state.variant === "text" && state.size === "large" ? "/img/focusripple-61.svg" : state.color === "info" && state.variant === "text" && state.size === "large" ? "/img/focusripple-62.svg" : state.variant === "text" && state.color === "success" && state.size === "large" ? "/img/focusripple-63.svg" : state.size === "small" && state.variant === "text" && state.color === "primary" ? "/img/focusripple-64.svg" : state.color === "inherit" && state.size === "small" && state.variant === "text" ? "/img/focusripple-65.svg" : state.color === "inherit-white" && state.size === "small" && state.variant === "text" ? "/img/focusripple-66.svg" : state.size === "small" && state.variant === "text" && state.color === "secondary" ? "/img/focusripple-67.svg" : state.size === "small" && state.variant === "text" && state.color === "error" ? "/img/focusripple-68.svg" : state.color === "warning" && state.size === "small" && state.variant === "text" ? "/img/focusripple-69.svg" : state.color === "info" && state.size === "small" && state.variant === "text" ? "/img/focusripple-70.svg" : state.size === "small" && state.variant === "text" && state.color === "success" ? "/img/focusripple-71.svg" : "/img/focusripple.svg"
                    }, void 0, false, {
                        fileName: "src/components/Button/Button.jsx",
                        lineNumber: 63,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "button-wrapper",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("button", {
                            className: "text-wrapper-4",
                            children: label
                        }, void 0, false, {
                            fileName: "src/components/Button/Button.jsx",
                            lineNumber: 213,
                            columnNumber: 13
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/components/Button/Button.jsx",
                        lineNumber: 212,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true)
        ]
    }, void 0, true, {
        fileName: "src/components/Button/Button.jsx",
        lineNumber: 32,
        columnNumber: 5
    }, undefined);
};
_s(Button, "0YaR36net9XIzbubFZLvnDns00s=");
_c = Button;
function reducer(state, action) {
    switch(action){
        case "mouse_enter":
            return {
                ...state,
                state: "hovered"
            };
        case "mouse_leave":
            return {
                ...state,
                state: "enabled"
            };
    }
    return state;
}
Button.propTypes = {
    loadingEnd: (0, _propTypesDefault.default).bool,
    loadingStart: (0, _propTypesDefault.default).bool,
    label: (0, _propTypesDefault.default).string,
    startIcon: (0, _propTypesDefault.default).bool,
    endIcon: (0, _propTypesDefault.default).bool,
    size: (0, _propTypesDefault.default).oneOf([
        "large",
        "medium",
        "small"
    ]),
    color: (0, _propTypesDefault.default).oneOf([
        "warning",
        "inherit",
        "info",
        "success",
        "secondary",
        "primary",
        "inherit-white",
        "error"
    ]),
    stateProp: (0, _propTypesDefault.default).oneOf([
        "enabled",
        "focused",
        "hovered",
        "loading",
        "disabled"
    ]),
    variant: (0, _propTypesDefault.default).oneOf([
        "text",
        "outlined",
        "contained"
    ])
};
var _c;
$RefreshReg$(_c, "Button");

  $parcel$ReactRefreshHelpers$8b80.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../../icons/ProgressCircular1":"bUouh","./style.css":"82QeZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"bUouh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ProgressCircular1", ()=>(0, _progressCircular1.ProgressCircular1));
var _progressCircular1 = require("./ProgressCircular1");

},{"./ProgressCircular1":"hp8UV","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hp8UV":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$ab70 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$ab70.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ProgressCircular1", ()=>ProgressCircular1);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const ProgressCircular1 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `progress-circular-1 ${className}`,
        fill: "none",
        height: "18",
        viewBox: "0 0 17 18",
        width: "17",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M8 2C8.91925 2 9.82951 2.18106 10.6788 2.53284C11.5281 2.88463 12.2997 3.40024 12.9497 4.05025C13.5998 4.70026 14.1154 5.47194 14.4672 6.32122C14.8189 7.1705 15 8.08075 15 9C15 9.91925 14.8189 10.8295 14.4672 11.6788C14.1154 12.5281 13.5998 13.2997 12.9497 13.9497C12.2997 14.5998 11.5281 15.1154 10.6788 15.4672C9.8295 15.8189 8.91925 16 8 16C7.08074 16 6.17049 15.8189 5.32121 15.4672C4.47193 15.1154 3.70026 14.5998 3.05025 13.9497C2.40024 13.2997 1.88462 12.5281 1.53284 11.6788C1.18106 10.8295 1 9.91925 1 9C1 8.08074 1.18106 7.17049 1.53284 6.32121C1.88463 5.47193 2.40024 4.70026 3.05026 4.05025C3.70027 3.40024 4.47194 2.88462 5.32122 2.53284C6.1705 2.18106 7.08075 2 8 2L8 2Z",
                opacity: "0",
                stroke: "white",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                strokeWidth: "2"
            }, void 0, false, {
                fileName: "src/icons/ProgressCircular1/ProgressCircular1.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M8.00012 1C9.05069 1 10.091 1.20693 11.0616 1.60896C12.0322 2.011 12.9141 2.60028 13.657 3.34315C14.3998 4.08602 14.9891 4.96793 15.3912 5.93853C15.7932 6.90914 16.0001 7.94943 16.0001 9C16.0001 10.0506 15.7932 11.0909 15.3912 12.0615C14.9891 13.0321 14.3998 13.914 13.657 14.6569C12.9141 15.3997 12.0322 15.989 11.0616 16.391C10.091 16.7931 9.05069 17 8.00012 17C6.94954 17 5.90925 16.7931 4.93865 16.391C3.96804 15.989 3.08613 15.3997 2.34326 14.6569",
                stroke: "black",
                strokeLinecap: "square",
                strokeLinejoin: "round",
                strokeOpacity: "0.38",
                strokeWidth: "2"
            }, void 0, false, {
                fileName: "src/icons/ProgressCircular1/ProgressCircular1.jsx",
                lineNumber: 27,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/ProgressCircular1/ProgressCircular1.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = ProgressCircular1;
var _c;
$RefreshReg$(_c, "ProgressCircular1");

  $parcel$ReactRefreshHelpers$ab70.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"82QeZ":[function() {},{}],"2x4US":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Formcontrollabel", ()=>(0, _formcontrollabel.Formcontrollabel));
var _formcontrollabel = require("./Formcontrollabel");

},{"./Formcontrollabel":"a5Oks","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a5Oks":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$aa3a = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$aa3a.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Formcontrollabel", ()=>Formcontrollabel);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _checkbox = require("../Checkbox");
var _formLabel = require("../FormLabel");
var _styleCss = require("./style.css");
const Formcontrollabel = ({ labelPlacement, disabled, className, formLabelValue = "Label" })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `formcontrollabel ${labelPlacement} ${className}`,
        children: [
            [
                "start",
                "top"
            ].includes(labelPlacement) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _formLabel.FormLabel), {
                className: "instance-node-2",
                color: "one",
                state: disabled ? "disabled" : "enabled",
                value: "Label"
            }, void 0, false, {
                fileName: "src/components/Formcontrollabel/Formcontrollabel.jsx",
                lineNumber: 16,
                columnNumber: 9
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _checkbox.Checkbox), {
                checked: false,
                className: "instance-node-2",
                color: disabled ? "default" : "primary",
                indeterminate: false,
                size: "medium",
                stateProp: disabled ? "disabled" : "enabled"
            }, void 0, false, {
                fileName: "src/components/Formcontrollabel/Formcontrollabel.jsx",
                lineNumber: 19,
                columnNumber: 7
            }, undefined),
            [
                "bottom",
                "end"
            ].includes(labelPlacement) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _formLabel.FormLabel), {
                className: "instance-node-2",
                color: "one",
                state: disabled ? "disabled" : "enabled",
                value: formLabelValue
            }, void 0, false, {
                fileName: "src/components/Formcontrollabel/Formcontrollabel.jsx",
                lineNumber: 28,
                columnNumber: 9
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/components/Formcontrollabel/Formcontrollabel.jsx",
        lineNumber: 14,
        columnNumber: 5
    }, undefined);
};
_c = Formcontrollabel;
Formcontrollabel.propTypes = {
    labelPlacement: (0, _propTypesDefault.default).oneOf([
        "start",
        "top",
        "end",
        "bottom"
    ]),
    disabled: (0, _propTypesDefault.default).bool,
    formLabelValue: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Formcontrollabel");

  $parcel$ReactRefreshHelpers$aa3a.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../Checkbox":"1RCV2","../FormLabel":"aqJv9","./style.css":"iUO5V","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"1RCV2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Checkbox", ()=>(0, _checkbox.Checkbox));
var _checkbox = require("./Checkbox");

},{"./Checkbox":"iObQ7","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iObQ7":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$445c = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$445c.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Checkbox", ()=>Checkbox);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _hidden106 = require("../../icons/Hidden106");
var _hidden2 = require("../../icons/Hidden2");
var _hidden43 = require("../../icons/Hidden43");
var _hidden59 = require("../../icons/Hidden59");
var _hidden86 = require("../../icons/Hidden86");
var _styleCss = require("./style.css");
var _s = $RefreshSig$();
const Checkbox = ({ checked, indeterminate, size, color, stateProp, className })=>{
    _s();
    const [state, dispatch] = (0, _react.useReducer)(reducer, {
        checked: checked || false,
        indeterminate: indeterminate || false,
        size: size || "medium",
        color: color || "primary",
        state: stateProp || "enabled"
    });
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `checkbox ${className}`,
        onMouseLeave: ()=>{
            dispatch("mouse_leave");
        },
        onMouseEnter: ()=>{
            dispatch("mouse_enter");
        },
        onClick: ()=>{
            dispatch("click");
        },
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: `padding state-${state.state} color-21-${state.color}`,
            children: [
                !state.checked && !state.indeterminate && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _hidden2.Hidden2), {
                    className: `${state.size === "large" ? "hidden" : state.size === "medium" ? "hidden-106" : "hidden-86"}`,
                    opacity: state.state === "disabled" ? "0.38" : "0.6"
                }, void 0, false, {
                    fileName: "src/components/Checkbox/Checkbox.jsx",
                    lineNumber: 40,
                    columnNumber: 11
                }, undefined),
                state.indeterminate && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _hidden43.Hidden43), {
                    className: `${state.size === "large" ? "hidden" : state.size === "medium" ? "hidden-106" : "hidden-86"}`,
                    color: state.color === "primary" ? "#173F56" : state.color === "secondary" ? "#574B3F" : state.color === "error" ? "#D32F2F" : state.color === "warning" ? "#EF6C00" : state.color === "info" ? "#0288D1" : state.color === "success" ? "#2E7D32" : undefined,
                    opacity: state.color === "secondary" ? "0.82" : undefined
                }, void 0, false, {
                    fileName: "src/components/Checkbox/Checkbox.jsx",
                    lineNumber: 47,
                    columnNumber: 11
                }, undefined),
                state.checked && state.size === "small" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _hidden86.Hidden86), {
                    className: "hidden-86",
                    color: state.color === "primary" ? "#173F56" : state.color === "secondary" ? "#574B3F" : state.color === "error" ? "#D32F2F" : state.color === "warning" ? "#EF6C00" : state.color === "info" ? "#0288D1" : state.color === "success" ? "#2E7D32" : "black",
                    opacity: state.color === "default" && [
                        "enabled",
                        "focused",
                        "hovered"
                    ].includes(state.state) ? "0.6" : state.color === "secondary" ? "0.82" : state.state === "disabled" ? "0.38" : undefined
                }, void 0, false, {
                    fileName: "src/components/Checkbox/Checkbox.jsx",
                    lineNumber: 69,
                    columnNumber: 11
                }, undefined),
                state.checked && !state.indeterminate && state.size === "large" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _hidden59.Hidden59), {
                    className: "hidden",
                    color: state.color === "default" || state.state === "disabled" ? "black" : state.color === "secondary" ? "#574B3F" : state.color === "error" ? "#D32F2F" : state.color === "warning" ? "#EF6C00" : state.color === "info" ? "#0288D1" : state.color === "success" ? "#2E7D32" : "#173F56",
                    opacity: state.state === "disabled" ? "0.38" : state.color === "default" ? "0.6" : state.color === "secondary" ? "0.82" : undefined
                }, void 0, false, {
                    fileName: "src/components/Checkbox/Checkbox.jsx",
                    lineNumber: 99,
                    columnNumber: 11
                }, undefined),
                state.checked && state.size === "medium" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _hidden106.Hidden106), {
                    className: "hidden-106",
                    color: state.color === "primary" ? "#173F56" : state.color === "secondary" ? "#574B3F" : state.color === "error" ? "#D32F2F" : state.color === "warning" ? "#EF6C00" : state.color === "info" ? "#0288D1" : state.color === "success" ? "#2E7D32" : "black",
                    opacity: state.color === "default" && [
                        "enabled",
                        "focused",
                        "hovered"
                    ].includes(state.state) ? "0.6" : state.color === "secondary" ? "0.82" : state.state === "disabled" ? "0.38" : undefined
                }, void 0, false, {
                    fileName: "src/components/Checkbox/Checkbox.jsx",
                    lineNumber: 129,
                    columnNumber: 11
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/components/Checkbox/Checkbox.jsx",
            lineNumber: 38,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/Checkbox/Checkbox.jsx",
        lineNumber: 26,
        columnNumber: 5
    }, undefined);
};
_s(Checkbox, "V4IGVPfw7WEHb4B2CqeO7oECTGQ=");
_c = Checkbox;
function reducer(state, action) {
    if (state.checked === false && state.color === "default" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "default",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "primary" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "primary",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "primary" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "primary",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "default" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "default",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "secondary" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "secondary",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "error" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "error",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "warning" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "warning",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "info" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "info",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "success" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "success",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "secondary" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "secondary",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "error" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "error",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "warning" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "warning",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "info" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "info",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "success" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "success",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "default" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "default",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "primary" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "primary",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "primary" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "primary",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "default" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "default",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "secondary" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "secondary",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "error" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "error",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "warning" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "warning",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "info" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "info",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "success" && state.indeterminate === false && state.size === "large" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "success",
                indeterminate: false,
                size: "large",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "secondary" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "secondary",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "error" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "error",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "warning" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "warning",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "info" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "info",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "success" && state.indeterminate === false && state.size === "small" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "success",
                indeterminate: false,
                size: "small",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "default" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "default",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "primary" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "primary",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "secondary" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "secondary",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "error" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "error",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "warning" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "warning",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "info" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "info",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === false && state.color === "success" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: true,
                color: "success",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "default" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "default",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "primary" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "primary",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "secondary" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "secondary",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "error" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "error",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "warning" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "warning",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "info" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "info",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    if (state.checked === true && state.color === "success" && state.indeterminate === false && state.size === "medium" && state.state === "hovered") switch(action){
        case "click":
            return {
                checked: false,
                color: "success",
                indeterminate: false,
                size: "medium",
                state: "enabled"
            };
    }
    switch(action){
        case "mouse_enter":
            return {
                ...state,
                state: "hovered"
            };
        case "mouse_leave":
            return {
                ...state,
                state: "enabled"
            };
    }
    return state;
}
Checkbox.propTypes = {
    checked: (0, _propTypesDefault.default).bool,
    indeterminate: (0, _propTypesDefault.default).bool,
    size: (0, _propTypesDefault.default).oneOf([
        "large",
        "medium",
        "small"
    ]),
    color: (0, _propTypesDefault.default).oneOf([
        "warning",
        "info",
        "default",
        "success",
        "secondary",
        "primary",
        "error"
    ]),
    stateProp: (0, _propTypesDefault.default).oneOf([
        "hovered",
        "disabled",
        "focused",
        "enabled"
    ])
};
var _c;
$RefreshReg$(_c, "Checkbox");

  $parcel$ReactRefreshHelpers$445c.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../../icons/Hidden106":"dEECx","../../icons/Hidden2":"jX2zH","../../icons/Hidden43":"3WKPX","../../icons/Hidden59":"8CsWD","../../icons/Hidden86":"hxcHv","./style.css":"9kip7","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"dEECx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hidden106", ()=>(0, _hidden106.Hidden106));
var _hidden106 = require("./Hidden106");

},{"./Hidden106":"ge6yW","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ge6yW":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$c3ab = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$c3ab.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hidden106", ()=>Hidden106);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Hidden106 = ({ color = "#574B3F", opacity = "unset", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `hidden-106 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 24 24",
        width: "24",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M19 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.11 21 21 20.1 21 19V5C21 3.9 20.11 3 19 3ZM10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z",
            fill: color,
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Hidden106/Hidden106.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Hidden106/Hidden106.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Hidden106;
Hidden106.propTypes = {
    color: (0, _propTypesDefault.default).string,
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Hidden106");

  $parcel$ReactRefreshHelpers$c3ab.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"jX2zH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hidden2", ()=>(0, _hidden2.Hidden2));
var _hidden2 = require("./Hidden2");

},{"./Hidden2":"6Eexe","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6Eexe":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f3a1 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f3a1.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hidden2", ()=>Hidden2);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Hidden2 = ({ opacity = "0.38", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `hidden-2 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 24 24",
        width: "24",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M19 5V19H5V5H19ZM19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3Z",
            fill: "black",
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Hidden2/Hidden2.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Hidden2/Hidden2.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Hidden2;
Hidden2.propTypes = {
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Hidden2");

  $parcel$ReactRefreshHelpers$f3a1.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"3WKPX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hidden43", ()=>(0, _hidden43.Hidden43));
var _hidden43 = require("./Hidden43");

},{"./Hidden43":"8mugR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8mugR":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$0fde = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$0fde.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hidden43", ()=>Hidden43);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Hidden43 = ({ color = "#2E7D32", opacity = "unset", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `hidden-43 ${className}`,
        fill: "none",
        height: "28",
        viewBox: "0 0 28 28",
        width: "28",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M22.1667 3.5H5.83333C4.55 3.5 3.5 4.55 3.5 5.83333V22.1667C3.5 23.45 4.55 24.5 5.83333 24.5H22.1667C23.45 24.5 24.5 23.45 24.5 22.1667V5.83333C24.5 4.55 23.45 3.5 22.1667 3.5ZM19.8333 15.1667H8.16667V12.8333H19.8333V15.1667Z",
            fill: color,
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Hidden43/Hidden43.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Hidden43/Hidden43.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Hidden43;
Hidden43.propTypes = {
    color: (0, _propTypesDefault.default).string,
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Hidden43");

  $parcel$ReactRefreshHelpers$0fde.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"8CsWD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hidden59", ()=>(0, _hidden59.Hidden59));
var _hidden59 = require("./Hidden59");

},{"./Hidden59":"hY1ng","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hY1ng":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$f459 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$f459.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hidden59", ()=>Hidden59);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Hidden59 = ({ color = "#2E7D32", opacity = "unset", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `hidden-59 ${className}`,
        fill: "none",
        height: "28",
        viewBox: "0 0 28 28",
        width: "28",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M22.1667 3.5H5.83333C4.53833 3.5 3.5 4.55 3.5 5.83333V22.1667C3.5 23.45 4.53833 24.5 5.83333 24.5H22.1667C23.4617 24.5 24.5 23.45 24.5 22.1667V5.83333C24.5 4.55 23.4617 3.5 22.1667 3.5ZM11.6667 19.8333L5.83333 14L7.47833 12.355L11.6667 16.5317L20.5217 7.67667L22.1667 9.33333L11.6667 19.8333Z",
            fill: color,
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Hidden59/Hidden59.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Hidden59/Hidden59.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Hidden59;
Hidden59.propTypes = {
    color: (0, _propTypesDefault.default).string,
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Hidden59");

  $parcel$ReactRefreshHelpers$f459.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"hxcHv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hidden86", ()=>(0, _hidden86.Hidden86));
var _hidden86 = require("./Hidden86");

},{"./Hidden86":"4ra65","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ra65":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$b87b = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$b87b.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hidden86", ()=>Hidden86);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Hidden86 = ({ color = "#574B3F", opacity = "unset", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `hidden-86 ${className}`,
        fill: "none",
        height: "20",
        viewBox: "0 0 20 20",
        width: "20",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M15.8333 2.5H4.16667C3.24167 2.5 2.5 3.25 2.5 4.16667V15.8333C2.5 16.75 3.24167 17.5 4.16667 17.5H15.8333C16.7583 17.5 17.5 16.75 17.5 15.8333V4.16667C17.5 3.25 16.7583 2.5 15.8333 2.5ZM8.33333 14.1667L4.16667 10L5.34167 8.825L8.33333 11.8083L14.6583 5.48333L15.8333 6.66667L8.33333 14.1667Z",
            fill: color,
            fillOpacity: opacity
        }, void 0, false, {
            fileName: "src/icons/Hidden86/Hidden86.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/Hidden86/Hidden86.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = Hidden86;
Hidden86.propTypes = {
    color: (0, _propTypesDefault.default).string,
    opacity: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "Hidden86");

  $parcel$ReactRefreshHelpers$b87b.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"9kip7":[function() {},{}],"aqJv9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FormLabel", ()=>(0, _formLabel.FormLabel));
var _formLabel = require("./FormLabel");

},{"./FormLabel":"lf2zU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lf2zU":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$fd68 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$fd68.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FormLabel", ()=>FormLabel);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const FormLabel = ({ value = "Label", color, state, className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `form-label ${className}`,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: `label-5 color-22-${color} state-21-${state}`,
            children: value
        }, void 0, false, {
            fileName: "src/components/FormLabel/FormLabel.jsx",
            lineNumber: 13,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/FormLabel/FormLabel.jsx",
        lineNumber: 12,
        columnNumber: 5
    }, undefined);
};
_c = FormLabel;
FormLabel.propTypes = {
    value: (0, _propTypesDefault.default).string,
    color: (0, _propTypesDefault.default).oneOf([
        "warning",
        "info",
        "success",
        "secondary",
        "primary",
        "one",
        "error"
    ]),
    state: (0, _propTypesDefault.default).oneOf([
        "disabled",
        "error",
        "enabled"
    ])
};
var _c;
$RefreshReg$(_c, "FormLabel");

  $parcel$ReactRefreshHelpers$fd68.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"1exie","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"1exie":[function() {},{}],"iUO5V":[function() {},{}],"bQtop":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SpacingVertical", ()=>(0, _spacingVertical.SpacingVertical));
var _spacingVertical = require("./SpacingVertical");

},{"./SpacingVertical":"bR1o1","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bR1o1":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$0efa = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$0efa.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SpacingVertical", ()=>SpacingVertical);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const SpacingVertical = ({ spacing, visibility, className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `spacing-vertical visibility-${visibility} spacing-${spacing} ${className}`,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "min-height-4"
        }, void 0, false, {
            fileName: "src/components/SpacingVertical/SpacingVertical.jsx",
            lineNumber: 13,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/SpacingVertical/SpacingVertical.jsx",
        lineNumber: 12,
        columnNumber: 5
    }, undefined);
};
_c = SpacingVertical;
SpacingVertical.propTypes = {
    spacing: (0, _propTypesDefault.default).oneOf([
        "seven",
        "two",
        "three",
        "four",
        "one",
        "five",
        "eight",
        "six"
    ]),
    visibility: (0, _propTypesDefault.default).bool
};
var _c;
$RefreshReg$(_c, "SpacingVertical");

  $parcel$ReactRefreshHelpers$0efa.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"6YtpY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"6YtpY":[function() {},{}],"2Hx5j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TextField", ()=>(0, _textField.TextField));
var _textField = require("./TextField");

},{"./TextField":"aiNOI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aiNOI":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$bddc = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$bddc.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TextField", ()=>TextField);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
var _s = $RefreshSig$();
const TextField = ({ placeholder = "Placeholder", value = "Value", adornEnd = false, placeholder1 = false, value1 = true, label = "Label", adornStart = false, helper = false, variant, size, stateProp, hasValue, className })=>{
    _s();
    const [state, dispatch] = (0, _react.useReducer)(reducer, {
        variant: variant || "standard",
        size: size || "medium",
        state: stateProp || "enabled",
        hasValue: hasValue || true
    });
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `text-field ${className}`,
        onMouseLeave: ()=>{
            dispatch("mouse_leave");
        },
        onMouseEnter: ()=>{
            dispatch("mouse_enter");
        },
        children: [
            (!state.hasValue && state.size === "medium" || !state.hasValue && state.size === "small" && state.state === "disabled" && state.variant === "filled" || !state.hasValue && state.size === "small" && state.state === "disabled" && state.variant === "standard" || !state.hasValue && state.size === "small" && state.state === "hovered" && state.variant === "filled" || !state.hasValue && state.size === "small" && state.state === "hovered" && state.variant === "standard" || !state.hasValue && state.size === "small" && state.variant === "outlined" || state.hasValue && state.size === "medium" && state.state === "disabled" && state.variant === "outlined" || state.hasValue && state.size === "medium" && state.state === "hovered" && state.variant === "outlined" || state.hasValue && state.size === "medium" && state.variant === "filled" || state.hasValue && state.size === "medium" && state.variant === "standard" || state.hasValue && state.size === "small" && state.state === "disabled" || state.hasValue && state.size === "small" && state.state === "enabled" && state.variant === "outlined" || state.hasValue && state.size === "small" && state.state === "hovered" || state.hasValue && state.state === "error" && state.variant === "outlined" || state.hasValue && state.state === "focused" && state.variant === "outlined" || state.size === "small" && state.state === "enabled" && state.variant === "filled" || state.size === "small" && state.state === "enabled" && state.variant === "standard" || state.size === "small" && state.state === "error" && state.variant === "filled" || state.size === "small" && state.state === "error" && state.variant === "standard" || state.size === "small" && state.state === "focused" && state.variant === "filled" || state.size === "small" && state.state === "focused" && state.variant === "standard") && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `input ${state.variant} state-9-${state.state} size-24-${state.size}`,
                children: [
                    state.variant === "standard" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: `temp-label state-10-${state.state} has-value-${state.hasValue}`,
                                children: [
                                    !state.hasValue && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: "Label"
                                    }, void 0, false),
                                    state.hasValue && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: label
                                    }, void 0, false)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/TextField/TextField.jsx",
                                lineNumber: 67,
                                columnNumber: 15
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: `label has-value-0-${state.hasValue} state-11-${state.state}`,
                                children: [
                                    !state.hasValue && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: label
                                    }, void 0, false),
                                    state.hasValue && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                            children: value1 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "value",
                                                children: value
                                            }, void 0, false, {
                                                fileName: "src/components/TextField/TextField.jsx",
                                                lineNumber: 77,
                                                columnNumber: 34
                                            }, undefined)
                                        }, void 0, false)
                                    }, void 0, false)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/TextField/TextField.jsx",
                                lineNumber: 72,
                                columnNumber: 15
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                className: "underline",
                                alt: "Underline",
                                src: state.state === "error" && (state.hasValue || state.size === "small") && (!state.hasValue || state.size === "medium") ? "/img/underline-1.svg" : state.state === "disabled" && (state.hasValue || state.size === "medium") && (!state.hasValue || state.size === "small") ? "/img/underline-2.svg" : state.state === "focused" && (state.hasValue || state.size === "medium") && (!state.hasValue || state.size === "small") ? "/img/underline-3.svg" : state.state === "focused" && (state.hasValue || state.size === "small") && (!state.hasValue || state.size === "medium") ? "/img/underline-4.svg" : state.state === "disabled" && (state.hasValue || state.size === "small") && (!state.hasValue || state.size === "medium") ? "/img/underline-5.svg" : state.state === "enabled" && (state.hasValue || state.size === "medium") && (!state.hasValue || state.size === "small") ? "/img/underline-12.svg" : state.state === "enabled" && (state.hasValue || state.size === "small") && (!state.hasValue || state.size === "medium") ? "/img/underline-13.svg" : state.state === "hovered" && (state.hasValue || state.size === "medium") && (!state.hasValue || state.size === "small") ? "/img/underline-16.svg" : state.state === "hovered" && (state.hasValue || state.size === "small") && (!state.hasValue || state.size === "medium") ? "/img/underline-17.svg" : "/img/underline.svg"
                            }, void 0, false, {
                                fileName: "src/components/TextField/TextField.jsx",
                                lineNumber: 81,
                                columnNumber: 15
                            }, undefined)
                        ]
                    }, void 0, true),
                    state.variant === "filled" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: `input-2 size-25-${state.size} has-value-1-${state.hasValue}`,
                                children: [
                                    !state.hasValue && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "text-wrapper",
                                        children: label
                                    }, void 0, false, {
                                        fileName: "src/components/TextField/TextField.jsx",
                                        lineNumber: 130,
                                        columnNumber: 37
                                    }, undefined),
                                    state.hasValue && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "label-2",
                                                children: label
                                            }, void 0, false, {
                                                fileName: "src/components/TextField/TextField.jsx",
                                                lineNumber: 134,
                                                columnNumber: 21
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "content",
                                                children: [
                                                    [
                                                        "disabled",
                                                        "enabled",
                                                        "error",
                                                        "hovered"
                                                    ].includes(state.state) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "min-height-2"
                                                    }, void 0, false, {
                                                        fileName: "src/components/TextField/TextField.jsx",
                                                        lineNumber: 137,
                                                        columnNumber: 25
                                                    }, undefined),
                                                    value1 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "value-2",
                                                        children: value
                                                    }, void 0, false, {
                                                        fileName: "src/components/TextField/TextField.jsx",
                                                        lineNumber: 140,
                                                        columnNumber: 34
                                                    }, undefined),
                                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "min-height-3"
                                                    }, void 0, false, {
                                                        fileName: "src/components/TextField/TextField.jsx",
                                                        lineNumber: 142,
                                                        columnNumber: 23
                                                    }, undefined),
                                                    state.state === "focused" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                        className: "min-width"
                                                    }, void 0, false, {
                                                        fileName: "src/components/TextField/TextField.jsx",
                                                        lineNumber: 143,
                                                        columnNumber: 53
                                                    }, undefined)
                                                ]
                                            }, void 0, true, {
                                                fileName: "src/components/TextField/TextField.jsx",
                                                lineNumber: 135,
                                                columnNumber: 21
                                            }, undefined)
                                        ]
                                    }, void 0, true)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/TextField/TextField.jsx",
                                lineNumber: 129,
                                columnNumber: 15
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                                className: "img",
                                alt: "Underline",
                                src: state.state === "focused" ? "/img/underline-3.svg" : state.state === "disabled" ? "/img/underline-2.svg" : state.state === "error" ? "/img/underline.svg" : state.state === "hovered" ? "/img/underline-16.svg" : "/img/underline-12.svg"
                            }, void 0, false, {
                                fileName: "src/components/TextField/TextField.jsx",
                                lineNumber: 148,
                                columnNumber: 15
                            }, undefined)
                        ]
                    }, void 0, true),
                    state.variant === "outlined" && !state.hasValue && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "content-2",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "text-wrapper-2",
                            children: "Label"
                        }, void 0, false, {
                            fileName: "src/components/TextField/TextField.jsx",
                            lineNumber: 168,
                            columnNumber: 15
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/components/TextField/TextField.jsx",
                        lineNumber: 167,
                        columnNumber: 13
                    }, undefined),
                    state.variant === "outlined" && state.hasValue && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "content-3",
                                children: value1 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "value-3",
                                    children: value
                                }, void 0, false, {
                                    fileName: "src/components/TextField/TextField.jsx",
                                    lineNumber: 174,
                                    columnNumber: 53
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/components/TextField/TextField.jsx",
                                lineNumber: 174,
                                columnNumber: 15
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "label-container",
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "label-3",
                                    children: label
                                }, void 0, false, {
                                    fileName: "src/components/TextField/TextField.jsx",
                                    lineNumber: 176,
                                    columnNumber: 17
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/components/TextField/TextField.jsx",
                                lineNumber: 175,
                                columnNumber: 15
                            }, undefined)
                        ]
                    }, void 0, true)
                ]
            }, void 0, true, {
                fileName: "src/components/TextField/TextField.jsx",
                lineNumber: 64,
                columnNumber: 9
            }, undefined),
            state.variant === "outlined" && state.hasValue && state.size === "medium" && state.state === "enabled" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "content-wrapper",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "content-4",
                            children: value1 && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "value-4",
                                children: value
                            }, void 0, false, {
                                fileName: "src/components/TextField/TextField.jsx",
                                lineNumber: 186,
                                columnNumber: 51
                            }, undefined)
                        }, void 0, false, {
                            fileName: "src/components/TextField/TextField.jsx",
                            lineNumber: 186,
                            columnNumber: 13
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/components/TextField/TextField.jsx",
                        lineNumber: 185,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "label-container",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "label-4",
                            children: label
                        }, void 0, false, {
                            fileName: "src/components/TextField/TextField.jsx",
                            lineNumber: 189,
                            columnNumber: 13
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/components/TextField/TextField.jsx",
                        lineNumber: 188,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true)
        ]
    }, void 0, true, {
        fileName: "src/components/TextField/TextField.jsx",
        lineNumber: 34,
        columnNumber: 5
    }, undefined);
};
_s(TextField, "gXL1diqlJDD/W4wZ/+BYU8C+QBA=");
_c = TextField;
function reducer(state, action) {
    switch(action){
        case "mouse_enter":
            return {
                ...state,
                state: "hovered"
            };
        case "mouse_leave":
            return {
                ...state,
                state: "enabled"
            };
    }
    return state;
}
TextField.propTypes = {
    placeholder: (0, _propTypesDefault.default).string,
    value: (0, _propTypesDefault.default).string,
    adornEnd: (0, _propTypesDefault.default).bool,
    placeholder1: (0, _propTypesDefault.default).bool,
    value1: (0, _propTypesDefault.default).bool,
    label: (0, _propTypesDefault.default).string,
    adornStart: (0, _propTypesDefault.default).bool,
    helper: (0, _propTypesDefault.default).bool,
    variant: (0, _propTypesDefault.default).oneOf([
        "outlined",
        "filled",
        "standard"
    ]),
    size: (0, _propTypesDefault.default).oneOf([
        "medium",
        "small"
    ]),
    stateProp: (0, _propTypesDefault.default).oneOf([
        "enabled",
        "focused",
        "hovered",
        "error",
        "disabled"
    ]),
    hasValue: (0, _propTypesDefault.default).bool
};
var _c;
$RefreshReg$(_c, "TextField");

  $parcel$ReactRefreshHelpers$bddc.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"93Snf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"93Snf":[function() {},{}],"f2CZ0":[function() {},{}],"iQBkT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoInstagramWrapper", ()=>(0, _logoInstagramWrapper.LogoInstagramWrapper));
var _logoInstagramWrapper = require("./LogoInstagramWrapper");

},{"./LogoInstagramWrapper":"atwwu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"atwwu":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$786e = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$786e.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LogoInstagramWrapper", ()=>LogoInstagramWrapper);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const LogoInstagramWrapper = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `logo-instagram-wrapper ${className}`
    }, void 0, false, {
        fileName: "src/components/LogoInstagramWrapper/LogoInstagramWrapper.jsx",
        lineNumber: 10,
        columnNumber: 10
    }, undefined);
};
_c = LogoInstagramWrapper;
var _c;
$RefreshReg$(_c, "LogoInstagramWrapper");

  $parcel$ReactRefreshHelpers$786e.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","./style.css":"htpP8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"htpP8":[function() {},{}],"4jH8C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Homefilled3", ()=>(0, _homefilled3.Homefilled3));
var _homefilled3 = require("./Homefilled3");

},{"./Homefilled3":"lidTw","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lidTw":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$c064 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$c064.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Homefilled3", ()=>Homefilled3);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Homefilled3 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `homefilled-3 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 25 24",
        width: "25",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_493_328)",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                    className: "g",
                    filter: "url(#filter0_d_493_328)",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path",
                        d: "M10.5 20V14H14.5V20H19.5V12H22.5L12.5 3L2.5 12H5.5V20H10.5Z",
                        fill: "#173F56"
                    }, void 0, false, {
                        fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                        lineNumber: 20,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("filter", {
                        className: "filter",
                        colorInterpolationFilters: "sRGB",
                        filterUnits: "userSpaceOnUse",
                        height: "25",
                        id: "filter0_d_493_328",
                        width: "28",
                        x: "-1.5",
                        y: "3",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feFlood", {
                                className: "fe-flood",
                                floodOpacity: "0",
                                result: "BackgroundImageFix"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                                lineNumber: 34,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feColorMatrix", {
                                className: "fe-color-matrix",
                                in: "SourceAlpha",
                                result: "hardAlpha",
                                type: "matrix",
                                values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                                lineNumber: 35,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feOffset", {
                                className: "fe-offset",
                                dy: "4"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                                lineNumber: 42,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feGaussianBlur", {
                                className: "fe-gaussian-blur",
                                stdDeviation: "2"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                                lineNumber: 43,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feComposite", {
                                className: "fe-composite",
                                in2: "hardAlpha",
                                operator: "out"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                                lineNumber: 44,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feColorMatrix", {
                                className: "fe-color-matrix",
                                type: "matrix",
                                values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                                lineNumber: 45,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feBlend", {
                                className: "fe-blend",
                                in2: "BackgroundImageFix",
                                mode: "normal",
                                result: "effect1_dropShadow_493_328"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                                lineNumber: 50,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feBlend", {
                                className: "fe-blend",
                                in: "SourceGraphic",
                                in2: "effect1_dropShadow_493_328",
                                mode: "normal",
                                result: "shape"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                                lineNumber: 51,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                        lineNumber: 24,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                        className: "clip-path",
                        id: "clip0_493_328",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                            className: "rect",
                            fill: "white",
                            height: "24",
                            transform: "translate(0.5)",
                            width: "24"
                        }, void 0, false, {
                            fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                            lineNumber: 60,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                        lineNumber: 59,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/Homefilled3/Homefilled3.jsx",
                lineNumber: 23,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/Homefilled3/Homefilled3.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = Homefilled3;
var _c;
$RefreshReg$(_c, "Homefilled3");

  $parcel$ReactRefreshHelpers$c064.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"cuRYp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Logo", ()=>(0, _logo.Logo));
var _logo = require("./Logo");

},{"./Logo":"cDBsk","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cDBsk":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$18b0 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$18b0.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Logo", ()=>Logo);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Logo = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `logo ${className}`,
        fill: "none",
        height: "319",
        viewBox: "0 0 262 319",
        width: "262",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M199.203 254.945C196.53 254.103 193.857 253.262 190.957 252.195C189.315 251.201 187.925 250.359 186.455 249.697C186.029 249.505 185.371 249.829 184.773 249.75C181.76 248.206 178.807 246.828 175.835 245.463C175.828 245.476 175.835 245.449 175.795 245.29C175.449 245.072 175.137 245.012 174.831 244.966C174.831 244.979 174.851 244.966 174.864 244.8C174.678 244.575 174.485 244.515 174.172 244.462C174.059 244.469 173.833 244.488 173.8 244.376C173.74 244.124 173.707 243.978 173.674 243.839C173.614 243.872 173.554 243.912 173.487 243.945C173.6 244.124 173.72 244.303 173.853 244.681C173.78 245.794 173.694 246.708 173.607 247.623C159.815 238.584 147.472 227.777 135.555 216.459C133.82 214.816 132.071 213.186 130.116 211.351C125.201 206.54 120.513 201.908 115.791 197.316C110.957 192.618 106.122 187.92 101.214 183.302C100.29 182.434 99.0131 181.943 97.9491 181.108C97.9092 180.658 97.9025 180.28 97.7097 180.095C93.1278 175.602 88.5326 171.109 83.8975 166.676C83.5184 166.319 82.7935 166.312 82.2083 165.961C81.7029 165.126 81.2973 164.39 80.7254 163.834C74.2881 157.539 67.7976 151.297 61.3736 144.982C58.268 141.927 55.2821 138.76 52.2364 135.639C46.4375 129.51 40.632 123.381 34.7467 116.953C34.5006 116.549 34.341 116.443 34.1814 116.337C34.0285 116.297 33.9088 116.204 33.7957 115.787C33.4366 115.27 33.1174 115.025 32.7916 114.78C32.6187 114.747 32.4857 114.654 32.3593 114.21C30.8231 110.811 29.3934 107.676 27.7641 104.642C27.4449 104.045 26.3809 103.853 25.5097 103.396C23.4482 100.633 21.5396 97.9491 19.6909 95.0601C19.7507 94.5366 19.8572 94.1457 19.7175 93.8939C17.4565 89.7591 15.2021 85.6177 12.828 81.5425C12.5421 81.0588 11.5578 80.9793 10.8064 80.6016C10.4938 79.9787 10.2611 79.4685 10.1946 78.9451C10.8197 78.6667 11.2918 78.3951 11.9635 78.0174C11.365 77.5734 10.9793 77.2819 10.5271 76.8512C10.2744 76.4668 10.0815 76.2283 9.89532 75.9964C9.89532 75.9964 9.90197 75.9964 9.90862 75.844C9.74237 75.4596 9.56947 75.2277 9.40322 75.0024C9.40322 75.0024 9.40987 75.0024 9.42317 74.8235C9.09731 73.9356 8.75816 73.2266 8.41236 72.5176C8.41236 72.5176 8.41236 72.5043 8.44561 72.3387C8.29265 71.7887 8.10645 71.411 7.9136 71.0267C7.9136 71.0267 7.9136 71.0134 7.9402 70.8412C7.78725 70.2713 7.60105 69.8737 7.41484 69.3039C7.24194 68.6015 7.08234 68.0714 6.91609 67.3359C6.92274 66.5672 6.93604 66.0106 7.06904 65.5865C8.88451 69.072 10.5803 72.4248 12.2761 75.7777L13.1073 75.5193C12.7017 73.6904 12.296 71.8616 12.0766 70.0129C14.9627 69.9996 12.316 66.6004 15.1888 66.5341C13.9452 66.0504 13.2802 65.792 12.6152 65.3546C12.449 64.4866 12.2894 63.7975 12.2827 63.115C12.6219 63.0288 12.8014 62.9361 12.981 62.8433C12.6352 62.7505 12.2827 62.6577 11.8771 62.4126C11.7906 62.0349 11.7573 61.8162 11.9369 61.6108C12.7083 61.6108 13.2669 61.6108 13.8787 61.7367C14.1713 62.1807 14.4107 62.4987 14.6501 62.8102C14.7765 62.7836 14.9028 62.7505 15.0292 62.724C14.7233 61.3192 14.4107 59.9145 14.2844 58.47C14.3176 56.1905 14.1647 53.9509 14.1913 51.7046C14.9427 52.3539 15.508 53.0033 16.1132 53.6991C17.0442 51.3467 17.9619 49.0209 19.0525 46.6819C19.4581 46.6355 19.6909 46.6024 20.0766 46.5957C20.4357 46.6487 20.6485 46.6819 20.8547 46.9204C21.3667 49.8691 21.8389 52.619 22.4307 55.3358C22.5238 55.7598 23.2952 56.4423 23.4748 56.3694C24.0002 56.1441 24.6652 55.6538 24.7649 55.1568C24.9445 54.3021 24.8115 53.3545 24.6984 52.46C24.4524 50.5251 24.1398 48.6035 24.08 46.6686C25.8422 46.8343 27.4316 46.8343 28.9279 47.1987C34.7267 48.6234 40.4924 50.1607 46.371 51.7775C46.7634 52.0226 47.0626 52.1485 47.3353 52.46C47.3619 52.9702 47.3353 53.3214 47.455 53.6196C49.0244 57.761 50.6138 61.9024 52.0436 66.0703C51.7377 66.8124 51.5847 67.5214 51.445 68.184C50.3677 67.9985 49.2904 67.7335 48.1998 67.6473C44.3295 67.3624 40.2663 67.7865 36.6287 66.7263C32.6187 65.5534 28.4025 63.93 26.1282 59.7753C25.9819 59.5103 25.5164 59.4308 24.7184 59.0133C25.1839 61.2861 25.5496 63.0951 25.9619 65.136C25.2238 64.7848 24.6984 64.533 24.1664 64.2812C23.9603 64.4004 23.7541 64.5197 23.5479 64.639C24.6386 67.4883 25.1839 70.7351 26.9262 73.1206C31.7941 79.7866 33.0443 88.2085 37.9786 94.7884C38.2513 95.1528 38.0983 95.8353 38.3776 96.1865C39.4283 97.5051 40.3461 99.387 41.7359 99.8906C45.1807 101.123 46.8831 103.78 48.6786 106.557C50.5473 109.452 52.2963 112.487 54.5706 115.045C57.623 118.484 61.1409 121.512 64.4393 124.732C66.8533 127.091 69.2407 129.483 71.6613 131.836C71.934 132.101 72.3396 132.379 72.6987 132.406C75.2656 132.565 76.9016 134.069 77.387 136.401C77.5267 137.084 78.3646 137.726 79.0296 138.164C79.648 138.561 80.6456 138.455 81.1643 138.919C84.7553 142.173 88.2599 145.526 91.7977 148.839C92.4029 149.409 93.0147 149.965 93.5401 150.687C92.363 152.377 91.3256 152.218 90.0155 150.966C84.7753 145.969 79.4752 141.026 74.1351 136.13C73.4967 135.546 72.466 135.394 71.6147 135.043C71.4551 135.308 71.3022 135.573 71.1426 135.838C73.1177 138.296 74.9664 140.874 77.0944 143.186C79.6813 145.996 82.5342 148.554 85.2075 151.284C88.2599 154.398 91.2458 157.572 94.2516 160.726C96.4994 163.092 98.6606 165.55 100.995 167.836C102.671 169.479 104.619 170.831 106.335 172.435C110.504 176.344 114.475 180.466 118.777 184.216C121.198 186.323 124.31 187.622 126.771 189.689C129.424 191.922 131.698 194.613 134.112 197.124C136.546 199.655 138.96 202.206 141.354 204.777C142.671 206.195 143.861 207.733 145.238 209.091C145.876 209.727 146.794 210.416 147.625 210.469C149.873 210.615 151.954 212.152 152.5 214.458C151.635 214.014 150.777 213.584 149.913 212.981C149.441 212.272 148.982 211.735 148.53 211.198C148.337 211.417 148.151 211.636 147.958 211.854C148.616 212.285 149.274 212.716 149.946 213.319C150.172 213.835 150.305 214.273 150.598 214.511C154.202 217.467 157.787 220.435 161.477 223.278C162.209 223.841 163.359 224.047 164.33 224.086C165.334 224.126 166.358 223.768 167.369 223.583C167.369 223.583 167.369 223.583 167.389 223.762C167.708 224.915 169.058 225.796 167.609 226.942C167.456 227.061 167.629 228.022 167.895 228.181C169.338 229.043 170.861 229.772 172.383 230.719C173.554 231.441 174.698 231.985 175.975 232.594C176.347 232.946 176.593 233.237 176.906 233.668C177.424 234.211 177.883 234.615 178.335 235.205C179.014 238.001 181.128 238.3 183.476 238.571C185.192 239.426 186.741 240.201 188.31 241.142C188.816 241.527 189.301 241.752 189.966 241.99C191.356 242.494 192.566 242.978 193.943 243.468C195.014 243.574 195.985 243.514 196.796 243.846C197.394 244.091 197.78 244.84 198.066 245.396C197.295 245.681 196.716 245.933 195.632 246.403C196.756 247.093 197.355 247.457 197.953 247.828C197.727 248.186 197.507 248.55 197.208 248.749C196.723 248.597 196.31 248.597 195.306 248.597C196.251 248.968 196.623 249.114 197.128 249.339C197.754 249.591 198.246 249.763 198.891 250.008C200.094 250.571 201.145 251.055 202.282 251.658C202.828 251.989 203.28 252.195 203.732 252.619C203.732 252.983 203.732 253.122 203.539 253.189C201.491 252.513 199.636 251.916 197.78 251.314C197.727 251.459 197.674 251.612 197.621 251.757C199.549 252.572 201.478 253.381 203.306 254.348C201.877 254.633 200.54 254.772 199.21 254.912L199.203 254.945Z",
                fill: "#10273C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M214.193 313.063C211.087 313.242 207.968 313.322 204.882 313.673C204.091 313.766 203.386 314.7 202.601 315.277C200.5 314.382 198.478 312.659 195.739 313.845C195.346 314.018 194.568 313.382 194.003 313.057C193.025 312.487 192.221 312.182 191.642 313.594C191.476 313.998 190.485 314.508 190.379 314.415C188.044 312.295 185.89 315.098 183.595 314.667C183.044 314.561 182.259 315.694 181.547 316.29C177.823 313.322 173.767 313.295 172.144 315.833C170.235 315.833 168.686 315.939 167.156 315.807C165.527 315.661 163.918 315.29 162.708 315.084C161.91 316.118 161.318 316.88 160.526 317.901C159.895 316.887 159.569 316.337 159.223 315.807C158.545 314.766 157.8 314.409 156.935 315.615C156.749 315.873 156.636 316.244 156.39 316.396C155.393 317.006 151.622 315.601 150.445 314.336C150.279 315.27 150.106 316.211 149.993 316.847C149.115 316.721 148.111 316.562 147.093 316.449C146.688 316.403 146.129 316.635 145.89 316.436C142.817 313.892 141.394 316.198 140.284 318.02C138.016 317.682 136.034 317.516 134.119 317.059C132.875 316.768 131.725 316.059 130.335 315.449C130.322 315.469 129.949 315.952 129.497 316.549C128.825 316.059 128.24 315.634 127.662 315.21C124.363 315.893 121.231 317.947 117.726 316.098C117.248 315.846 116.45 315.866 115.918 316.072C112.027 317.536 112.034 317.556 109.234 314.972C108.955 315.668 108.682 316.35 108.376 317.112C106.993 314.793 105.071 315.184 102.883 315.634C101.075 316.005 99.3257 316.907 97.1843 315.416C94.6905 313.686 90.8335 312.858 88.5126 314.362C85.0346 316.609 82.0221 314.627 79.0296 314.455C76.5026 314.309 74.4676 313.375 72.9448 316.608C72.4128 315.528 72.1534 314.998 71.8874 314.462C70.717 314.813 69.5532 315.164 68.3895 315.515C68.4227 315.27 68.4626 315.025 68.4959 314.786C67.2589 314.462 66.0287 313.925 64.7785 313.872C63.3886 313.812 61.8458 314.634 60.6222 314.256C59.638 313.951 59.0328 312.441 58.2414 311.089C59.1458 310.095 60.0569 309.479 60.9746 308.856C61.0145 309.147 61.0478 309.446 61.0877 309.737C62.032 309.969 62.963 310.353 63.9206 310.406C65.0046 310.466 66.1018 310.115 67.1924 310.148C68.5823 310.194 70.0254 310.247 71.3421 310.652C73.9755 311.453 77.1742 309.85 79.0961 312.248C81.0778 311.712 82.88 311.228 84.8551 310.691C84.7287 311.592 84.6689 312.056 84.6223 312.407C86.4843 312.116 88.1269 311.811 89.7828 311.612C90.8202 311.486 92.1369 311.102 92.8684 311.566C95.0097 312.924 97.4437 312.845 99.3988 312.209C101.913 311.394 103.821 311.301 105.623 313.295C106.056 312.944 106.647 312.315 106.747 312.388C108.376 313.547 109.6 312.421 110.923 311.771C111.076 311.698 111.362 311.944 111.595 311.97C113.271 312.129 115.485 313.004 116.523 312.262C118.504 310.844 118.817 311.785 119.329 313.302C120.699 312.964 122.002 312.407 123.326 312.374C125.334 312.328 127.442 312.335 129.344 312.885C131.426 313.488 133.268 312.639 135.21 312.686C137.85 312.759 140.476 313.845 143.13 312.673C143.382 312.56 143.762 312.772 144.087 312.785C146.415 312.885 148.749 313.077 151.077 313.03C153.052 312.991 155.02 312.6 156.995 312.467C158.598 312.361 160.214 312.414 161.823 312.368C163.752 312.308 165.68 312.248 167.602 312.136C168.5 312.083 169.378 311.864 170.275 311.771C171.845 311.612 173.594 310.267 174.664 312.195C177.544 311.665 180.277 311.162 183.21 310.618C183.516 311.003 183.948 311.553 184.653 312.441C185.451 311.573 186.116 310.844 186.914 310.194C187.293 310.446 187.625 310.824 187.792 310.758C189.607 310.075 191.33 309.035 193.398 310.049C193.644 310.168 194.295 309.446 194.761 309.121C194.761 309.121 194.761 309.121 194.914 309.147C195.466 309.485 195.858 309.797 196.397 310.174C197.84 310.314 199.15 310.526 200.434 310.439C202.522 310.294 204.703 309.406 206.658 309.79C211.26 310.691 215.183 308.041 219.533 307.922C219.779 307.915 220.191 307.597 220.237 307.365C220.47 306.205 220.61 305.019 220.783 303.846C219.499 303.946 218.222 304.052 216.939 304.145C216.693 304.164 216.44 304.145 216.168 304.085C216.094 303.992 216.055 303.972 216.008 303.946C216.068 304.019 216.128 304.092 216.161 304.323C214.106 304.608 213.222 304.078 212.783 302.322C212.118 302.733 211.506 303.104 210.828 303.522C210.588 303.045 210.355 302.587 209.976 301.832C209.631 302.508 209.431 302.892 209.232 303.276C207.895 302.071 205.893 304.463 204.663 302.428C204.523 302.196 203.865 302.236 203.439 302.203C198.877 301.878 194.309 301.627 189.753 301.202C188.676 301.103 187.479 299.917 186.648 300.189C185.491 300.566 184.207 298.81 183.23 300.56C183.057 300.871 181.96 300.672 181.142 300.719C180.43 300.719 179.871 300.706 179.306 300.513C179.306 299.957 179.306 299.586 179.306 299.215C180.935 299.009 182.571 298.83 184.201 298.592C185.245 298.439 186.282 298.082 187.32 298.075C187.931 298.075 188.55 298.578 189.348 298.936C190.498 297.823 191.602 298.32 193.258 298.824C195.758 299.579 198.651 299.022 201.438 299.022C202.276 299.453 203.393 300.5 204.344 300.361C205.162 300.242 205.793 298.791 206.705 297.691C208.693 300.792 211.3 300.182 213.813 300.089C214.505 300.063 215.21 300.421 215.915 300.547C217.511 300.831 219.134 301.355 220.716 301.269C222.618 301.163 224.46 300.48 225.983 302.309C226.169 302.534 227.034 302.196 227.586 302.124C228.218 302.037 229.029 301.666 229.461 301.918C231.031 302.859 232.088 302.422 232.992 300.719C234.003 302.183 234.888 303.462 236.138 305.278C236.783 303.913 237.109 303.224 237.521 302.349C238.512 303.667 239.622 304.628 240.6 302.004C240.959 303.104 241.199 303.82 241.312 304.164C239.975 304.933 238.811 305.609 237.641 306.285C237.767 306.57 237.893 306.855 238.02 307.14C239.596 307 241.179 306.868 242.755 306.729C242.841 306.961 242.928 307.193 243.014 307.431C240.946 308.385 238.798 309.207 236.849 310.353C235.639 311.062 234.575 308.657 233.571 310.439C231.483 309.108 229.754 311.188 227.752 311.069C226.495 310.996 225.212 311.44 223.516 311.718C223.177 311.486 222.352 310.917 221.96 310.645C219.147 311.453 216.733 312.142 214.252 312.971C214.186 313.11 214.186 313.103 214.186 313.103L214.193 313.063ZM236.49 309.008C236.41 309.035 236.331 309.061 236.251 309.088C236.331 309.114 236.41 309.141 236.49 309.008ZM192.686 311.202C192.713 311.281 192.739 311.361 192.766 311.44C192.793 311.361 192.819 311.281 192.686 311.202Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 23,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M119.595 48.08C121.005 49.1667 122.501 50.1673 123.811 51.36C126.418 53.7322 128.919 56.2104 131.705 58.8079C132.609 59.6759 133.274 60.3849 133.999 61.2464C135.549 62.7505 137.038 64.0956 138.561 65.5799C138.84 65.8781 139.073 66.0305 139.339 66.3552C140.849 67.8726 142.332 69.2177 143.848 70.7418C145.165 72.1598 146.441 73.4254 147.745 74.6579C152.759 79.389 157.787 84.1135 162.847 89.0103C165.826 91.9723 168.759 94.7685 171.705 97.5582C173.8 99.546 175.908 101.521 178.069 103.628C178.681 104.29 179.233 104.821 179.845 105.503C180.716 106.49 181.521 107.325 182.379 108.313C182.598 108.551 182.771 108.644 182.917 108.737C182.884 108.737 182.911 108.684 182.93 108.823C183.123 109.048 183.29 109.128 183.429 109.214C183.396 109.22 183.416 109.161 183.443 109.306C183.642 109.512 183.815 109.572 183.928 109.631C183.868 109.631 183.988 109.605 183.975 109.77C184.36 110.267 184.759 110.599 185.211 111.056C185.424 111.407 185.591 111.626 185.83 111.964C186.196 112.328 186.488 112.573 186.841 112.944C187.193 113.322 187.473 113.574 187.818 113.932C187.978 114.164 188.104 114.263 188.317 114.429C188.477 114.654 188.603 114.753 188.809 114.926C188.969 115.157 189.095 115.257 189.328 115.462C190.013 116.019 190.611 116.43 191.236 117.026C192.074 117.914 192.892 118.623 193.797 119.431C194.056 119.577 194.229 119.624 194.369 119.683C194.342 119.696 194.335 119.643 194.375 119.789C194.601 120.021 194.781 120.107 195.1 120.266C195.825 120.962 196.417 121.585 196.836 122.274C195.213 123.195 195.812 124.076 196.683 124.878C198.186 126.263 199.642 127.727 201.285 128.933C203.32 130.431 204.676 131.796 201.843 133.79C201.657 133.923 201.724 134.413 201.511 134.705C192.66 126.78 183.981 118.888 175.29 111.003C171.007 107.113 166.711 103.243 162.462 99.2346C162.129 98.8635 161.757 98.625 161.391 98.3865C161.391 98.3865 161.391 98.3864 161.344 98.2738C161.165 98.0684 161.025 97.9756 160.892 97.8895C160.892 97.8895 160.892 97.8895 160.885 97.7172C160.433 96.9618 160.068 96.2992 159.535 95.8155C154.043 90.8259 148.516 85.8695 143.017 80.8865C140.323 78.4481 137.67 75.9831 134.93 73.3724C133.115 71.3315 131.366 69.443 129.584 67.5214C130.348 66.8323 130.993 66.2492 131.379 65.898C133.115 66.6998 134.604 67.3889 136.719 68.3696C136.2 67.1702 136.081 66.6799 135.808 66.3022C134.099 63.9432 132.23 62.0481 129.47 60.5108C124.702 57.8603 121.251 53.5334 119.615 48.0866L119.595 48.08Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 28,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M236.637 240.42C237.002 240.446 237.361 240.473 237.82 240.705C236.657 241.116 235.4 241.321 233.91 241.487C230.352 241.493 227.027 241.546 223.589 241.434C213.82 239.651 204.563 236.709 195.546 232.793C196.264 233.734 197.142 234.271 198.079 234.675C200.966 235.907 203.825 237.233 206.791 238.247C212.317 240.142 217.863 242.09 224.061 241.878C227.592 242.03 230.911 242.163 234.382 242.315C235.014 242.282 235.506 242.236 236.005 242.302C236.058 242.573 236.071 242.733 235.839 242.898C234.489 242.951 233.351 242.998 232.008 243.011C231.144 243.137 230.492 243.289 229.834 243.442C229.907 243.726 230.02 244.257 230.046 244.257C230.612 244.17 231.164 244.018 231.915 243.952C234.622 244.151 237.129 244.276 239.629 244.396C243.799 244.681 247.968 244.966 252.63 245.29C245.807 247.344 239.137 246.788 232.188 247.338C228.863 247.146 225.943 247.006 223.024 246.867C223.004 247.099 222.991 247.331 222.971 247.556C225.524 247.868 228.078 248.186 230.638 248.497C231.516 248.643 232.394 248.789 233.445 249.186C232.733 249.783 231.868 250.214 230.957 250.439C229.541 250.797 228.098 251.015 226.661 251.294C225.145 251.214 223.636 251.135 221.72 250.989C219.287 250.485 217.245 250.048 215.203 249.452C215.203 249.186 215.203 249.08 215.343 248.955C215.642 248.782 215.795 248.63 215.955 248.477C215.855 248.385 215.749 248.299 215.649 248.206C215.496 248.451 215.343 248.703 215.03 248.868C213.355 247.132 211.499 246.291 209.198 246.311C208.826 245.999 208.48 245.853 208.134 245.708L207.948 246.244C208.367 246.324 208.793 246.41 209.138 246.609C209.125 247 209.105 247.391 209.278 247.523C209.943 248.014 210.668 248.418 211.2 248.902C208.932 248.471 206.838 247.987 204.743 247.371C204.743 247.146 204.743 247.059 204.736 246.781C204.483 245.966 204.231 245.337 203.971 244.707C203.732 245.118 203.493 245.529 203.067 245.953C201.823 246.032 200.766 246.099 199.689 246.138C199.669 246.112 199.709 246.066 199.749 245.887C200.593 245.184 201.391 244.661 202.608 243.866C200.081 242.772 198.006 242.004 196.058 240.99C193.571 239.698 191.163 238.247 188.776 236.782C184.327 234.052 179.918 231.243 175.476 228.493C172.789 226.836 170.069 225.239 167.363 223.616C167.363 223.616 167.363 223.616 167.343 223.45C167.263 222.807 167.203 222.33 167.123 221.754C172.709 224.822 178.036 227.744 183.369 230.673C183.363 228.532 183.097 226.962 180.922 227.002C180.583 227.002 179.971 226.644 179.925 226.379C179.526 223.868 177.271 223.318 175.595 222.151C172.842 220.23 169.95 218.467 167.409 216.287C165.341 214.511 163.712 212.232 161.963 210.138C161.983 209.966 161.923 209.833 161.87 209.701C161.87 209.701 161.87 209.714 161.87 209.588C161.79 209.33 161.71 209.197 161.637 209.058C161.557 209.27 161.471 209.482 161.205 209.694C159.309 208.038 157.6 206.388 156.064 204.744C157.56 205.851 158.884 206.944 160.207 208.038C160.32 207.832 160.433 207.627 160.546 207.415C161.497 207.845 162.561 208.13 163.379 208.747C165.527 210.37 167.496 212.225 169.664 213.822C171.452 215.141 173.467 216.148 175.303 217.407C178.475 219.58 181.361 222.291 184.766 223.987C193.185 228.181 201.803 231.978 210.402 235.808C211.679 236.378 213.262 236.259 214.897 236.484C219.1 237.286 223.11 238.061 227.041 238.823C226.169 238.922 225.185 239.035 224.208 239.141C224.208 239.28 224.208 239.419 224.208 239.559C225.571 239.678 226.934 239.797 228.504 239.923C230.538 240.049 232.361 240.168 234.183 240.294C234.695 240.34 235.2 240.393 236.038 240.466C236.45 240.466 236.543 240.446 236.63 240.42H236.637ZM221.341 247.252C221.188 246.562 221.182 245.37 220.843 245.27C219.513 244.86 218.07 244.787 216.653 244.588C216.912 247.503 219.506 246.582 221.341 247.252ZM225.464 243.501C224.281 243.601 223.104 243.7 221.514 243.832C226.09 245.562 228.224 245.363 228.317 243.508C227.506 243.508 226.695 243.508 225.471 243.508L225.464 243.501Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 33,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M20.3626 249.418C20.735 249.445 21.114 249.465 21.8921 249.498C28.1099 248.796 33.9154 248.087 39.9205 247.417C40.9379 247.192 41.7692 246.934 42.5938 246.675C42.5206 246.443 42.4408 246.218 42.3677 245.986C41.45 246.238 40.5323 246.483 39.4483 246.728C38.8298 246.761 38.3776 246.801 37.7126 246.775C32.7716 246.284 28.0501 245.867 23.3351 245.443C26.0018 244.999 28.6486 245.045 31.3019 244.959C31.7808 244.946 32.2396 244.376 32.9179 244.038C39.3286 246.085 45.0078 243.64 50.7601 242.176C50.4143 242.845 50.0884 243.349 49.4899 244.276C52.416 243.442 54.9696 242.845 57.4301 241.977C60.7485 240.804 64.5058 240.659 67.4984 239.161C75.7445 235.039 83.6181 230.182 91.6315 225.816C91.6913 228.34 93.2741 227.87 94.3248 227.154C96.526 225.643 98.521 223.834 100.749 222.072C101.952 221.204 103.01 220.409 104.253 219.627C104.819 220.303 105.198 220.959 105.464 221.674C105.224 221.827 105.131 221.959 104.965 222.171C104.726 222.33 104.632 222.456 104.44 222.635C104.14 222.807 103.981 222.953 103.821 223.106C103.921 223.192 104.027 223.284 104.127 223.371C104.28 223.119 104.433 222.874 104.692 222.569C104.938 222.416 105.031 222.291 105.191 222.072C105.43 221.919 105.524 221.787 105.763 221.648C106.674 222.648 107.399 223.636 108.051 224.749C107.672 225.286 107.366 225.69 106.913 226.154C105.218 227.34 103.668 228.46 101.946 229.573C101.374 229.917 100.988 230.262 100.549 230.706C100.403 230.925 100.283 231.011 99.9508 231.057C98.0422 231.932 96.3198 232.8 94.5974 233.668L94.112 232.926C95.9674 231.547 97.8161 230.176 99.6715 228.798C99.5518 228.599 99.432 228.4 99.3123 228.201C98.8801 228.281 98.368 228.241 98.0355 228.466C95.6681 230.083 93.3938 231.839 90.9798 233.389C84.4095 237.617 77.786 241.765 71.1426 245.774C71.0761 245.496 71.0495 245.383 71.0894 245.131C71.7411 244.508 72.3263 244.025 73.131 243.369C71.2822 243.779 69.7195 244.131 68.0104 244.475C67.6447 244.475 67.4385 244.475 67.086 244.429C66.4609 244.442 65.9821 244.495 65.5033 244.555C65.7361 245.005 65.9622 245.456 66.0154 245.9C64.8117 245.933 63.781 245.966 62.4975 245.973C61.8923 245.933 61.5465 245.913 61.3071 245.807C61.48 245.555 61.5532 245.396 61.6197 245.231C61.5465 245.237 61.4601 245.231 61.3936 245.264C60.5424 245.562 59.6712 245.82 58.8333 246.172C52.0968 249.001 45.1674 251.015 37.7791 250.942C30.883 250.876 23.9802 250.757 17.0841 250.664C17.0841 250.399 17.0774 250.141 17.0708 249.876C18.168 249.723 19.2653 249.564 20.3626 249.412V249.418ZM45.9521 244.846C45.5331 244.913 45.1075 244.972 44.6886 245.038C44.7285 245.184 44.775 245.337 44.8149 245.482C45.1541 245.35 45.4999 245.224 45.9454 244.846H45.9521ZM102.312 223.967C102.445 224.106 102.578 224.239 102.704 224.378C102.764 224.325 102.87 224.225 102.87 224.219C102.75 224.073 102.617 223.94 102.312 223.967ZM48.0868 244.223C48.1932 244.25 48.2996 244.276 48.3993 244.303C48.3328 244.237 48.2663 244.17 48.0868 244.223Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 38,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.788 310.075C186.116 310.804 185.451 311.539 184.653 312.407C183.948 311.513 183.509 310.97 183.21 310.585C180.284 311.129 177.544 311.632 174.664 312.162C173.594 310.227 171.845 311.579 170.275 311.738C169.384 311.831 168.5 312.05 167.602 312.103C165.68 312.222 163.752 312.282 161.823 312.335C160.214 312.381 158.598 312.328 156.995 312.434C155.02 312.566 153.052 312.951 151.077 312.997C148.749 313.05 146.415 312.851 144.087 312.752C143.762 312.739 143.382 312.533 143.13 312.639C140.476 313.819 137.85 312.725 135.21 312.653C133.274 312.6 131.426 313.454 129.344 312.851C127.442 312.301 125.334 312.288 123.326 312.341C122.002 312.374 120.699 312.931 119.329 313.269C118.817 311.751 118.504 310.811 116.523 312.229C115.485 312.971 113.278 312.103 111.595 311.937C111.362 311.917 111.076 311.665 110.923 311.738C109.6 312.388 108.376 313.514 106.747 312.354C106.647 312.282 106.049 312.911 105.623 313.262C103.821 311.268 101.913 311.367 99.3988 312.176C97.4437 312.805 95.0164 312.891 92.8684 311.533C92.1436 311.069 90.8202 311.453 89.7828 311.579C88.1269 311.778 86.4777 312.083 84.6223 312.374C84.6689 312.023 84.7354 311.559 84.8551 310.658C82.88 311.188 81.0712 311.679 79.0961 312.215C77.1742 309.817 73.9755 311.42 71.3421 310.618C70.0254 310.221 68.5823 310.161 67.1924 310.115C66.1085 310.082 65.0046 310.433 63.9206 310.373C62.9696 310.32 62.032 309.943 61.0877 309.704C61.0478 309.412 61.0145 309.114 60.9746 308.823C60.0569 309.445 59.1458 310.062 58.2281 310.877C58.2281 311.069 57.9754 311.076 57.8291 310.903C57.0311 309.518 56.3661 309.134 54.7568 309.591C53.2339 310.029 50.9995 311.009 49.8158 309.002C48.7651 307.226 48.1599 307.537 46.8897 308.69C46.1183 309.393 44.9413 309.942 44.0369 308.352C43.6046 307.59 42.5539 307.173 41.7825 306.603C41.7825 306.603 41.7825 306.603 41.7027 306.431C41.5431 305.616 41.45 304.966 41.317 303.966C45.2937 305.801 47.2422 301.839 50.3611 301.719C50.7933 302.322 51.2123 302.905 51.6312 303.489C51.6712 303.237 51.7177 302.985 51.7576 302.74C53.4135 302.7 55.0693 302.667 56.7518 302.693C56.8183 302.786 56.8582 302.806 56.9048 302.833C56.8449 302.766 56.7851 302.693 56.7651 302.435C58.155 301.905 59.505 301.554 60.7618 301.236C61.2805 302.124 61.6729 302.793 62.1184 303.555C63.096 301.911 68.17 301.428 70.1517 302.786C69.1941 303.581 68.323 304.628 67.3254 304.754C64.2997 305.145 61.2273 305.185 58.1616 305.364C58.4542 308.16 60.0503 308.22 61.9921 307.928C63.5283 307.696 65.3238 307.173 66.6205 307.703C70.4443 309.28 74.328 308.379 78.1717 308.604C80.2865 308.73 82.3945 309.214 84.496 309.174C85.8792 309.147 87.2491 308.478 88.752 308.041C89.1244 307.855 89.3705 307.723 89.6165 307.769C90.3214 309.73 91.851 308.988 93.2674 309.074C93.6531 309.074 93.8726 309.074 94.2317 309.22C95.9341 309.187 97.5966 310.645 99.2458 309.081C99.6316 309.081 99.851 309.081 100.144 309.22C100.669 309.267 101.121 309.174 101.773 309.088C103.881 309.353 105.783 309.704 107.705 309.83C108.603 309.889 109.54 309.28 110.445 309.333C112.819 309.465 115.173 309.876 117.54 310.029C119.509 310.155 121.497 310.029 123.472 310.075C124.283 310.095 125.088 310.254 125.893 310.353C126.518 310.459 127.11 309.823 127.715 309.817C129.271 309.797 130.827 310.168 132.383 310.155C133.7 310.148 135.003 309.711 136.327 309.671C137.79 309.624 139.259 309.85 140.729 309.903C143.482 310.002 146.242 310.214 148.982 310.088C150.957 310.002 152.912 309.439 154.88 309.253C154.88 309.638 154.88 309.85 154.934 310.155C155.12 310.181 155.259 310.128 155.612 310.075C157.8 310.168 159.695 310.161 161.743 309.823C165.501 309.207 169.464 309.896 173.348 309.976C174.904 310.009 177.265 310.479 177.863 309.691C179.632 307.365 181.594 308.644 183.436 308.77C184.58 308.849 185.67 309.605 186.781 310.062L186.788 310.075ZM50.8465 308.233C50.7734 308.286 50.6936 308.339 50.6204 308.392C50.7268 308.379 50.8266 308.372 50.8465 308.233ZM54.3844 303.038C54.4376 303.111 54.4974 303.19 54.5506 303.263C54.5373 303.157 54.5307 303.051 54.3844 303.038Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 43,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M41.7958 306.609C42.5672 307.179 43.6113 307.597 44.0435 308.359C44.9479 309.949 46.125 309.406 46.8964 308.697C48.1666 307.544 48.7717 307.226 49.8224 309.008C51.0061 311.016 53.2472 310.035 54.7634 309.598C56.3728 309.134 57.0378 309.525 57.7094 310.91C57.3304 312.262 56.9314 313.441 56.5324 314.621C56.2265 314.521 55.9139 314.422 55.608 314.322C55.7211 313.819 55.8341 313.315 56.0203 312.467C53.214 314.024 50.7468 314.435 48.7983 310.777C47.8208 311.924 46.9762 312.911 46.4309 313.547C45.1807 313.355 44.2763 313.209 43.3785 313.07C43.3054 313.328 43.2388 313.58 43.1657 313.839C42.7866 313.156 42.4009 312.474 41.9687 311.698C40.918 312.348 39.9604 312.931 38.9828 313.534C38.7633 313.335 38.4707 313.209 38.4242 313.024C37.3868 308.962 35.4183 309.353 32.7251 310.353C31.016 310.989 30.1182 310.612 28.888 309.538C27.8838 308.67 26.4673 308.279 25.2903 307.703C24.5122 308.385 23.8472 308.962 23.0226 309.565C22.8497 309.585 22.8563 309.585 22.8563 309.585C21.5064 308.001 20.4424 306.53 23.6477 305.834C24.0866 305.741 24.3593 304.86 24.8048 304.198C23.3218 303.548 21.5662 302.859 23.0359 301.275C23.7807 300.474 26.1614 299.884 26.6469 300.361C28.8082 302.495 30.2978 301.593 32.0867 299.307C32.0335 300.533 32.0002 301.202 31.947 302.415C33.9221 301.434 35.5248 300.633 37.2671 299.765C37.7525 300.136 38.371 300.679 39.0626 301.096C39.4483 301.328 40.1466 301.593 40.386 301.415C42.913 299.526 45.7725 300.116 48.5855 300.096C50.1682 300.083 51.7443 299.592 53.3337 299.44C54.145 299.36 54.9895 299.546 55.9339 299.625V298.34H89.1577C90.5609 296.803 92.6955 296.816 94.4644 298.751C93.7728 299.321 92.9881 299.778 92.1635 299.871C91.2126 299.983 90.1086 299.466 89.2707 299.765C85.806 301.017 82.3081 300.321 78.8102 300.301C77.2673 300.295 75.7245 300.838 74.0354 301.236C72.6588 301.766 71.4219 302.19 70.1916 302.614C68.19 301.434 63.1159 301.911 62.1317 303.561C61.6862 302.799 61.2938 302.13 60.7751 301.242C59.5249 301.56 58.1749 301.905 56.7784 302.442C55.0826 302.667 53.4268 302.707 51.7709 302.746C51.731 302.998 51.6845 303.25 51.6446 303.495C51.2256 302.912 50.8066 302.329 50.3744 301.726C47.2488 301.839 45.307 305.808 41.3303 303.972C41.4699 304.966 41.5564 305.616 41.5564 306.437C41.031 306.358 40.4126 306.212 40.1998 305.841C39.7276 305.019 39.4616 304.078 39.1158 303.184C38.7301 304.476 38.6237 305.596 38.903 306.616C39.0559 307.179 39.8407 307.921 40.3527 307.935C40.8249 307.941 41.317 307.087 41.8024 306.609H41.7958ZM24.0002 301.858C23.8605 301.991 23.7209 302.124 23.5879 302.263C23.5879 302.263 23.6876 302.369 23.7474 302.428C23.8871 302.296 24.0268 302.163 24.0002 301.858Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 48,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.8959 181.274C99.0064 181.937 100.29 182.434 101.208 183.302C106.115 187.92 110.957 192.618 115.785 197.316C120.506 201.908 125.194 206.54 129.936 211.311C128.333 212.888 126.691 214.319 124.829 215.757C124.609 215.757 124.476 215.644 124.483 215.466C123.831 211.755 121.603 214.856 120.293 214.339C120.573 213.179 121.211 212 121.032 210.96C120.772 209.469 118.205 208.713 116.47 209.204C115.612 209.442 114.667 209.389 113.756 209.462C113.849 208.362 114.401 207.932 114.348 207.6C114.069 205.851 113.863 204.029 113.145 202.452C112.898 201.908 111.096 201.59 110.285 201.902C109.228 202.306 108.456 203.432 107.412 204.32C106.042 205.513 104.819 206.626 103.462 207.799C103.083 208.011 102.837 208.163 102.458 208.177C102.518 207.09 102.511 206.023 102.97 205.208C103.415 204.413 104.333 203.876 105.198 203.161C105.889 202.584 106.388 202.021 106.98 201.59C108.257 200.663 107.964 199.582 107.199 198.622C106.687 197.979 105.876 197.568 104.772 196.74C104.701 196.108 103.633 195.792 101.567 195.792C101.567 195.792 101.567 195.792 101.633 195.633C104.134 192.83 104.114 192.499 100.729 191.459C99.7246 191.147 98.3481 191.942 97.3905 191.578C95.043 190.697 92.8352 189.438 90.634 188.172C93.0879 185.773 95.4819 183.52 97.8693 181.274H97.8959Z",
                fill: "#371E2D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 53,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M33.4167 154.087C33.8423 153.669 34.2745 153.252 34.8797 152.649C35.1324 152.324 35.2122 152.178 35.2853 152.039C35.425 151.933 35.558 151.827 35.8506 151.575C36.1432 151.337 36.2031 151.217 36.1831 151.052C36.7484 150.429 37.3203 149.799 38.2513 149.124C40.6387 148.64 42.0418 149.647 43.1258 151.118C42.248 152.384 41.6561 153.676 40.7916 154.749C37.1873 159.189 33.5031 163.556 29.7924 168.081C29.5995 168.459 29.4599 168.704 29.1806 169.022C28.8015 169.532 28.5621 169.976 28.1764 170.493C25.3102 174.177 22.6103 177.795 19.8438 181.367C19.1323 182.288 18.2079 183.037 17.3966 183.686C17.5828 182.785 17.7491 182.063 17.9153 181.347C17.5695 181.254 17.2237 181.168 16.8779 181.075C16.3792 183.004 15.887 184.925 15.3883 186.847C15.3883 186.84 15.4016 186.847 15.2353 186.906C14.8496 187.589 14.6235 188.212 14.3974 188.841C14.3974 188.841 14.3974 188.861 14.2644 188.861C13.0408 188.556 12.4822 188.861 12.2162 190.067C11.9768 191.154 11.4514 192.214 10.8729 193.181C10.6734 193.513 9.91527 193.639 9.43647 193.606C9.25692 193.592 8.99756 192.83 9.01086 192.426C9.07071 191.22 9.24362 190.014 9.37662 188.821C9.37662 188.821 9.37662 188.821 9.55617 188.795C10.1214 187.794 10.5005 186.82 10.8928 185.846C10.8928 185.853 10.8795 185.846 11.0325 185.833C11.2453 185.502 11.3118 185.17 11.4248 184.693C11.7706 183.984 12.0766 183.428 12.5022 182.805C12.6684 182.566 12.7216 182.394 12.828 182.063C15.3085 178.054 17.7358 174.211 20.1564 170.361C21.7657 167.81 23.3617 165.252 24.9644 162.681C24.9644 162.668 24.9511 162.641 25.1307 162.681C27.3252 160.488 29.3468 158.255 31.415 155.922C31.4615 155.823 31.548 155.617 31.6943 155.558C32.366 155.034 32.8913 154.57 33.4233 154.107L33.4167 154.087Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 58,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M119.542 47.9806C121.238 53.5202 124.682 57.8471 129.451 60.4976C132.21 62.0349 134.072 63.93 135.788 66.2889C136.061 66.6666 136.18 67.1636 136.699 68.3563C134.584 67.3756 133.101 66.6865 131.359 65.8847C130.973 66.2359 130.328 66.819 129.564 67.5082C131.346 69.4298 133.095 71.3182 134.797 73.4188C134.611 73.7302 134.511 73.8561 134.305 73.9886C133.979 73.9223 133.793 73.8826 133.58 73.6706C133.062 73.1338 132.576 72.7694 132.024 72.3056C131.858 72.0869 131.738 71.9875 131.559 71.7489C129.843 70.0725 128.167 68.5617 126.491 67.0576C126.491 67.0576 126.505 67.0642 126.451 66.9317C126.265 66.6534 126.125 66.5142 125.913 66.2691C125.447 65.7986 125.055 65.4341 124.563 64.9504C124.144 64.5263 123.825 64.2282 123.426 63.8107C122.94 63.327 122.534 62.9626 122.076 62.4391C119.03 59.5633 116.037 56.8465 112.972 53.984C110.824 51.6184 108.749 49.3986 106.435 46.9204C109.826 47.3776 111.941 50.6642 115.425 49.6571C114.614 46.3241 112.752 44.1507 110.179 42.4808C109.633 42.123 109.214 41.573 108.722 41.1357C105.47 38.2467 102.205 35.3775 98.9532 32.4818C97.9757 31.6138 97.0447 30.6928 96.1403 29.6591C94.3447 27.9495 92.496 26.3724 90.5542 24.6695C89.8559 24.1129 89.2508 23.6888 88.5858 23.1653C88.4262 22.9533 88.2998 22.8672 88.1402 22.8208C88.1269 22.8208 88.1402 22.8009 88.1402 22.6286C88.4794 22.0588 88.8185 21.6612 89.1643 21.2702C89.1643 21.2702 89.1311 21.2835 89.1976 21.416C89.4237 21.6148 89.5766 21.6943 89.7362 21.7672C89.9224 21.8202 90.1086 21.8799 90.4611 22.125C90.8268 22.4696 91.0263 22.622 91.2325 22.7744C91.8177 23.172 92.4096 23.5695 93.1344 24.2255C93.4337 24.5635 93.5999 24.643 93.7662 24.7225C93.7662 24.7225 93.9457 24.7755 94.0787 24.9279C94.3115 25.2195 94.4445 25.299 94.6107 25.3321C94.9166 25.5442 95.2159 25.7562 95.6481 26.22C95.9408 26.5447 96.1136 26.6176 96.2799 26.6905C97.8759 27.9296 99.5251 29.1091 101.061 30.4211C103.096 32.1638 105.045 34.0125 107.12 36.1064C107.346 36.4907 107.492 36.5835 107.638 36.6763C107.638 36.6763 107.625 36.6696 107.685 36.8088C108.017 37.0539 108.283 37.16 108.549 37.2594C108.716 37.4581 108.875 37.6636 109.121 38.1141C109.347 38.4653 109.494 38.5581 109.633 38.6575C109.633 38.6575 109.593 38.7238 109.647 38.8232C109.846 38.9954 109.986 39.075 110.132 39.1545C110.132 39.1545 110.152 39.1743 110.185 39.3267C111.349 40.3737 112.479 41.2616 113.61 42.1562C113.61 42.1562 113.61 42.1694 113.65 42.2953C113.849 42.4941 114.002 42.5736 114.162 42.6465C114.541 42.9646 114.913 43.276 115.425 43.8326C115.864 44.2964 116.17 44.5085 116.47 44.7271C116.795 45.0916 117.128 45.456 117.52 46.1253C118.105 46.8277 118.624 47.2186 119.136 47.6095C119.276 47.6692 119.389 47.762 119.535 47.9806H119.542Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 63,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M52.1101 135.745C55.2821 138.76 58.268 141.934 61.3736 144.982C67.7976 151.297 74.2881 157.539 80.7254 163.834C81.2973 164.397 81.7029 165.126 82.1418 166.113C80.6256 167.796 79.1493 169.141 77.6796 170.288C77.6464 169.307 77.6065 168.532 77.5732 167.836C76.476 167.889 75.5782 167.929 74.6804 167.962C74.6804 167.962 74.6671 167.949 74.6738 167.763C74.993 166.749 75.3055 165.928 75.6647 164.987C74.2415 163.913 72.8384 162.847 71.4352 161.786C70.983 160.408 70.3512 158.692 69.2407 158.288C67.6048 157.698 65.4235 157.274 64.0802 159.593C63.3753 160.13 62.8034 160.58 62.0918 160.965C61.6862 160.759 61.4202 160.613 61.234 160.322C61.8059 159.295 62.298 158.42 62.9563 157.519C64.047 156.605 64.9647 155.703 65.889 154.809L65.3969 154.458C64.5058 154.822 63.6147 155.18 62.7236 155.538C62.7236 155.538 62.7169 155.531 62.7502 155.352C63.0561 154.292 63.3221 153.404 63.5881 152.523C62.2714 152.185 60.9613 151.84 59.505 151.469C60.6022 149.024 58.7535 148.11 56.7119 147.441C56.1334 147.248 55.0893 147.798 54.81 147.5C53.3935 145.963 52.1566 144.26 50.5539 142.219C49.6828 141.961 48.12 141.497 46.5639 141.04C48.3727 139.31 50.1749 137.587 52.1101 135.752V135.745Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 68,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M261.508 57.6152C260.417 64.3541 258.296 70.7616 255.21 76.8512C248.64 89.7922 240.667 101.766 230.425 112.348C230.219 112.368 230.086 112.249 230.113 112.063C230.638 110.864 231.15 109.843 231.742 108.922C234.535 105.417 237.242 101.812 239.915 98.181C240.002 98.0618 239.736 97.6774 239.689 97.26C241.604 94.192 243.499 91.303 245.322 88.3742C245.78 87.632 246.12 86.7706 246.306 85.9225C246.605 84.5774 246.738 83.1991 246.924 81.8341C247.11 80.4956 247.277 79.1505 247.476 77.6463C247.529 77.1626 247.563 76.8379 247.722 76.4006C248.101 75.5392 248.347 74.7904 248.733 73.9621C249.272 73.432 249.677 72.9814 250.096 72.6501C250.256 72.9019 250.396 73.0278 250.535 73.1603C250.602 73.0278 250.668 72.8953 250.735 72.7561C250.515 72.6833 250.296 72.6104 250.056 72.3652C250.223 71.8086 250.396 71.4243 250.608 71.1658C250.768 71.4508 250.901 71.6032 251.034 71.7622C251.114 71.6694 251.194 71.5767 251.28 71.4839C251.047 71.3381 250.808 71.1923 250.549 70.861C250.542 70.2978 250.555 69.9267 250.695 69.602C251.107 69.7743 251.646 70.0195 251.652 70.0062C252.457 68.3894 253.229 66.7594 254.053 64.9504C255.004 61.9554 255.875 59.126 256.8 56.3164C257.611 53.8382 258.482 51.3799 259.327 48.9149C259.566 48.9878 259.805 49.0607 260.045 49.1336C258.928 57.5357 258.01 65.9775 254.299 73.8627C257.558 68.5352 259.48 62.7108 261.382 56.7206C261.441 57.1315 261.475 57.3766 261.508 57.6284V57.6152ZM245.029 92.3433C248.155 87.6056 251.034 82.7485 253.149 77.4873C252.963 77.3879 252.783 77.2951 252.597 77.1957C249.903 82.2449 247.204 87.2941 244.238 92.5288C243.839 93.1053 243.44 93.6752 243.034 94.2517C243.22 94.3709 243.406 94.4968 243.593 94.6161C243.992 93.9336 244.391 93.2577 245.036 92.3433H245.029Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 73,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M230.133 12.888C231.483 12.8947 232.833 12.9079 234.555 13.0404C237.488 13.4049 240.041 13.6501 242.595 13.8886C241.903 13.8886 241.212 13.882 240.088 13.8754C235.273 14.538 230.838 14.9488 226.535 15.9427C223.316 16.6849 220.264 18.1758 216.946 19.3354C214.379 20.1371 212.005 20.9389 209.631 21.7407C209.71 21.9726 209.79 22.1979 209.87 22.4298C211.659 21.9064 213.454 21.4028 215.23 20.8462C216.068 20.5811 216.873 20.21 217.897 19.8787C225.212 18.4408 232.261 16.5789 239.616 16.8373C241.757 16.8704 243.898 16.9102 246.233 17.1421C245.574 17.5065 244.73 17.8047 243.879 17.818C240.334 17.871 236.79 17.8378 233.245 17.8378C235.972 18.3746 238.691 18.3083 241.405 18.421C242.156 18.4541 242.881 19.0306 243.619 19.3619C240.287 19.5408 236.956 19.7197 233.192 19.8986C230.984 20.2299 229.195 20.5082 227.44 20.9124C226.329 21.1708 224.753 21.2835 224.267 22.0323C223.004 23.9737 221.348 24.7291 219.2 24.6496C219.639 23.3045 220.091 22.1648 220.696 20.6076C219.1 21.1841 217.538 21.754 215.975 22.3172C210.089 24.4508 206.239 26.6441 201.418 23.2184C203.32 22.7081 205.035 22.4365 206.591 21.7871C208.533 20.9721 210.342 19.8456 212.271 18.8318C212.297 18.8318 212.251 18.845 212.011 18.8649C210.854 19.0836 209.883 19.2625 208.946 19.5275C207.523 19.9251 206.146 20.5082 204.71 20.7931C202.528 21.2305 200.32 21.5154 198.113 21.7937C197.501 21.8732 196.849 21.6877 196.324 21.4955C201.757 20.1305 206.053 16.1945 212.104 16.4066C215.922 16.5457 219.819 14.485 223.676 13.4049C224.208 13.3983 224.74 13.3916 225.691 13.3784C227.453 13.2127 228.803 13.0471 230.146 12.8814L230.133 12.888ZM214.02 17.9107L214.385 18.7523C214.618 18.5203 214.858 18.2818 215.09 18.0499C214.804 17.9306 214.525 17.8047 214.013 17.9107H214.02Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 78,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M239.656 237.06C238.578 237.127 237.494 237.193 236.264 237.094C236.111 236.928 236.164 236.762 236.304 236.789C236.849 236.55 237.255 236.279 237.654 235.854C237.634 235.159 237.607 234.615 237.581 233.886C237.568 233.456 237.554 233.211 237.581 232.767C237.973 229.851 236.005 230.66 234.409 230.553C233.391 230.394 232.58 230.196 231.762 230.143C217.564 229.228 204.776 223.901 192.227 217.52C192.028 217.168 191.882 216.943 191.921 216.691C192.66 216.831 193.218 216.963 193.75 217.162C201.591 220.164 209.338 223.43 217.285 226.114C223.217 228.115 229.415 229.295 235.765 229.056C236.357 229.036 236.936 228.513 237.521 228.221C237.016 227.85 236.537 227.194 236.005 227.148C227.965 226.399 220.124 224.987 212.51 222.092C203.971 218.845 195.645 215.187 187.758 210.602C187.034 210.184 186.774 208.972 186.482 208.17C188.39 208.992 190.139 209.721 191.842 210.562C196.922 213.073 201.85 215.929 207.07 218.103C215.862 221.76 225.026 224.146 234.615 224.703C236.151 224.789 237.468 225.266 238.219 223.444C238.445 223.53 238.539 223.556 238.632 223.808C238.632 225.809 238.632 227.578 238.632 229.546C239.769 229.348 240.534 229.023 241.179 229.175C241.564 229.268 241.777 230.103 241.85 230.607C240.7 230.607 239.762 230.607 238.791 230.607V232.946C239.609 232.946 240.314 232.946 241.205 232.972C242.967 232.82 244.929 233.423 245.408 230.746C245.588 231.607 245.714 232.217 245.854 232.879C246.519 232.767 247.064 232.667 247.583 232.76C247.17 234.118 246.798 235.285 246.419 236.457C245.608 236.444 244.803 236.438 243.898 236.265C244.61 235.444 244.823 234.649 244.264 234.576C242.469 234.337 240.667 234.198 238.864 234.019C238.698 234.231 238.532 234.45 238.366 234.662C238.798 235.464 239.23 236.265 239.669 237.067L239.656 237.06Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 83,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.664 134.738C201.71 134.413 201.644 133.923 201.83 133.79C204.663 131.803 203.306 130.438 201.271 128.933C199.629 127.727 198.172 126.263 196.67 124.878C195.798 124.076 195.2 123.195 196.942 122.314C197.408 122.579 197.574 122.864 197.793 123.281C198 123.5 198.153 123.593 198.286 123.679C198.266 123.679 198.286 123.639 198.325 123.778C198.518 123.997 198.671 124.083 198.811 124.169C198.791 124.176 198.798 124.129 198.831 124.269C199.017 124.494 199.17 124.587 199.303 124.679C199.283 124.679 199.296 124.64 199.323 124.772C199.509 124.997 199.655 125.084 199.795 125.19C199.782 125.203 199.755 125.176 199.835 125.316C200.114 125.534 200.307 125.614 200.626 125.706C200.912 125.958 201.085 126.197 201.291 126.594C201.484 126.893 201.644 127.032 201.797 127.138C201.783 127.105 201.857 127.078 201.83 127.264C202.595 128.046 203.393 128.648 204.244 129.358C204.404 129.596 204.53 129.689 204.743 129.848C204.889 130.093 205.022 130.186 205.235 130.338C205.388 130.583 205.521 130.676 205.734 130.835C205.887 131.074 206.013 131.173 206.226 131.332C206.385 131.571 206.512 131.663 206.738 131.829C206.964 132.008 207.117 132.081 207.257 132.16C207.243 132.174 207.243 132.134 207.29 132.26C207.496 132.465 207.649 132.551 207.782 132.637C207.755 132.637 207.755 132.591 207.802 132.724C208.001 132.949 208.161 133.035 208.287 133.134C208.254 133.134 208.261 133.075 208.307 133.214C208.52 133.433 208.693 133.512 208.819 133.578C208.779 133.565 208.819 133.492 208.799 133.678C209.597 134.619 210.422 135.374 211.24 136.13C211.24 136.13 211.213 136.149 211.24 136.315C211.918 137.024 212.577 137.574 213.235 138.124C213.235 138.124 213.222 138.144 213.268 138.25C213.454 138.442 213.594 138.535 213.734 138.621C213.734 138.621 213.707 138.621 213.727 138.787C214.226 139.343 214.711 139.734 215.197 140.132C215.35 140.198 215.476 140.297 215.576 140.675C215.935 141.159 216.294 141.404 216.646 141.649C216.779 141.749 216.919 141.848 217.125 142.206C217.391 142.656 217.584 142.849 217.777 143.041C217.777 143.041 217.764 143.041 217.797 143.173C217.97 143.379 218.116 143.458 218.256 143.538C218.256 143.538 218.249 143.558 218.302 143.683C218.608 143.915 218.861 144.028 219.12 144.141C219.12 144.141 219.207 144.32 219.26 144.545C219.459 144.863 219.599 144.962 219.745 145.055C219.745 145.055 219.692 145.108 219.759 145.207C219.978 145.386 220.131 145.466 220.284 145.545C220.557 145.791 220.829 146.029 221.208 146.526C221.461 146.871 221.614 146.957 221.767 147.043C222.199 147.447 222.638 147.851 223.183 148.514C223.429 148.865 223.569 148.958 223.709 149.051C223.868 149.117 223.988 149.23 223.962 149.614C223.456 150.237 222.911 150.561 222.678 151.045C222.372 151.681 221.927 152.742 222.206 153.093C224.088 155.465 226.149 157.698 228.231 160.123C228.417 160.686 228.53 161.097 228.504 161.574C226.635 160.004 224.853 158.407 223.163 156.717C216.174 149.713 209.218 142.676 202.362 135.573C202.222 135.222 201.97 134.957 201.71 134.712C201.71 134.731 201.677 134.745 201.677 134.745L201.664 134.738ZM220.723 150.873C220.144 149.925 219.566 148.984 218.981 148.037C218.668 148.295 218.355 148.56 218.043 148.819C218.828 149.501 219.612 150.184 220.723 150.866V150.873Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 88,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M9.38327 188.802C9.25027 190.008 9.07071 191.207 9.01751 192.413C8.99756 192.824 9.26357 193.579 9.44312 193.592C9.92858 193.625 10.68 193.5 10.8795 193.168C11.4581 192.207 11.9834 191.147 12.2229 190.054C12.4889 188.848 13.0475 188.55 14.2844 189.033C14.1115 190.12 13.2669 191.26 13.5529 191.883C14.8962 194.792 14.5437 197.528 13.1539 200.331C11.0059 202.862 11.3916 205.758 11.7706 208.66C12.1165 207.189 12.4689 205.712 12.9411 204.32C13.3401 204.466 13.7989 204.658 13.8654 204.572C14.2644 204.009 14.577 203.386 14.8962 202.962C15.0691 203.863 15.2619 204.585 15.4747 205.38C15.222 205.606 14.8297 205.95 14.444 206.487C13.8322 209.727 13.1871 212.769 12.6418 215.83C12.582 216.181 13.0475 216.625 13.3135 217.241C13.2204 218.5 13.1073 219.547 12.9411 220.581C12.6817 222.178 13.2536 222.913 15.1489 222.615C18.1946 222.463 21.0143 222.284 23.9802 222.125C24.3659 222.297 24.5987 222.463 24.7051 222.701C23.1822 222.913 21.779 223.039 20.1564 223.152C17.5762 223.271 15.2087 223.41 12.7682 223.397C11.9901 222.92 11.2785 222.595 10.8729 222.41C11.3783 218.533 11.8571 214.856 12.3359 211.185C12.1431 211.145 11.9502 211.105 11.764 211.059C11.212 213.703 10.6601 216.347 10.0549 219.236C9.48967 213.995 8.95101 209.038 8.41901 204.075C8.1929 204.075 7.97345 204.082 7.74735 204.088C7.64095 205.698 7.60105 207.322 7.40819 208.925C6.97594 212.49 6.46388 216.049 5.98507 219.607C5.93852 219.083 5.89197 218.567 5.84542 217.639C5.84542 216.38 5.82547 215.525 5.81217 214.67C5.84542 214.293 5.87202 213.922 6.03163 213.199C6.74318 208.157 7.32174 203.459 7.9668 198.748C7.9934 198.748 7.96015 198.767 7.78725 198.794C7.56779 198.781 7.48134 198.754 7.36829 198.555C7.07569 197.389 6.80304 196.402 6.50378 195.222C7.44144 192.963 8.41236 190.889 9.38327 188.821V188.802Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 93,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.7502 246.006C63.7809 245.973 64.8051 245.94 66.0154 246.046C66.1949 246.284 66.2016 246.377 66.0619 246.562C64.8316 247.404 63.7477 248.153 62.4908 248.928C61.3869 249.558 60.4493 250.154 59.332 250.79C55.2755 251.87 51.4118 252.917 47.3419 253.898C46.2247 253.785 45.3004 253.739 44.3827 253.692C44.3827 253.984 44.3893 254.275 44.396 254.567C45.0743 254.567 45.7592 254.567 46.5838 254.646C51.1059 253.507 55.4816 252.288 60.017 251.022C61.0278 250.472 61.879 249.975 62.9231 249.465C64.0403 249.259 64.9647 249.054 65.889 248.849C65.9489 249.061 66.0154 249.273 66.0752 249.491C61.101 251.592 56.1267 253.686 51.0926 255.594C48.273 255.919 45.5065 256.436 42.5871 256.939C42.2214 256.939 42.0086 256.939 41.7958 256.939C43.2388 254.123 42.6603 253.308 39.3751 253.401C37.2671 253.46 34.7799 254.136 33.1174 253.275C27.5114 250.373 21.247 253.301 15.6343 250.797C13.759 249.962 11.4248 250.161 9.33007 249.611C12.8945 247.768 16.4922 249.014 20.2163 249.266C19.2653 249.558 18.168 249.717 17.0708 249.869C17.0708 250.134 17.0774 250.392 17.0841 250.657C23.9802 250.75 30.883 250.87 37.7791 250.936C45.174 251.009 52.0968 248.994 58.8333 246.165C59.6645 245.814 60.5357 245.555 61.3936 245.257C61.4667 245.231 61.5465 245.237 61.6197 245.224C61.5532 245.383 61.48 245.549 61.1675 245.84C60.9148 246.238 60.9015 246.509 60.8882 246.781C61.5066 246.516 62.1317 246.258 62.7502 245.993V246.006ZM52.1699 250.485C54.2514 249.703 56.3329 248.921 58.4077 248.146L58.002 247.199C55.9006 248.259 53.7992 249.326 51.4184 250.392C51.1724 250.465 50.9197 250.538 50.6736 250.604C50.7069 250.717 50.7401 250.823 50.7734 250.936C51.1125 250.783 51.4517 250.638 52.1699 250.485ZM59.1591 246.695C59.219 247.04 59.2788 247.384 59.3387 247.722C59.6047 247.636 59.8707 247.556 60.1301 247.47C59.9106 247.172 59.6978 246.874 59.1591 246.688V246.695ZM13.9319 249.73C13.4199 249.644 12.9012 249.564 12.3891 249.478L12.3559 249.909C12.8081 249.909 13.2603 249.909 13.9319 249.73Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 98,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M74.1817 301.136C75.7245 300.845 77.2673 300.301 78.8101 300.308C82.3081 300.321 85.806 301.017 89.2707 299.771C90.1086 299.466 91.2125 299.983 92.1635 299.877C92.9881 299.784 93.7662 299.327 94.5908 298.85C94.6174 298.665 94.6107 298.658 94.7903 298.665C97.0114 298.996 99.0463 299.321 101.081 299.652C101.081 299.652 101.081 299.652 101.194 299.784C102.571 299.897 104.207 300.361 105.025 299.745C106.441 298.678 108.849 299.963 109.553 297.657C109.773 297.657 109.992 297.657 110.544 297.73C114.016 299.996 117.62 298.088 120.932 298.91C121.384 299.022 121.989 298.366 122.561 298.188C123.219 297.982 123.984 297.671 124.603 297.816C128.832 298.81 133.022 299.347 137.397 298.532C139.253 298.188 141.301 298.989 143.223 298.81C144.446 298.698 146.375 300.089 146.927 297.664C147.007 297.664 147.093 297.664 147.426 297.75C148.091 298.433 148.51 299.029 148.909 299.791C148.736 300.354 148.576 300.752 148.237 301.149C145.956 301.123 143.861 301.043 141.766 301.096C139.931 301.143 138.089 301.494 136.26 301.415C133.707 301.302 131.166 300.679 128.619 300.692C121.929 300.719 115.246 300.971 108.47 301.017C107.938 300.977 107.505 301.057 106.9 301.143C106.514 301.143 106.295 301.143 105.942 301.096C105.231 301.249 104.652 301.448 103.908 301.646C103.522 301.646 103.302 301.64 102.923 301.62C101.873 301.62 100.975 301.64 99.9175 301.66C99.5385 301.66 99.319 301.653 98.9067 301.646C98.0089 301.805 97.304 301.965 96.4395 302.137C96.0538 302.143 95.8344 302.15 95.4287 302.124C93.3938 302.09 91.5451 302.11 89.703 302.064C88.2865 302.031 86.8634 301.792 85.4536 301.872C84.5093 301.925 83.5849 302.369 82.6539 302.64C82.6539 302.64 82.6539 302.64 82.4544 302.614C80.732 302.574 79.1426 302.296 77.6996 302.62C75.9972 303.005 74.8799 302.78 74.1883 301.143L74.1817 301.136ZM89.683 301.275C89.7229 301.302 89.7628 301.322 89.8027 301.348C89.7429 301.282 89.683 301.216 89.6165 300.911C89.5567 300.778 89.5035 300.639 89.4436 300.507C89.3838 300.546 89.3239 300.593 89.2641 300.633C89.3838 300.805 89.5101 300.977 89.683 301.275Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 103,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M202.768 9.51528C204.916 8.75327 207.177 8.20329 209.192 7.16959C212.244 5.6058 215.41 5.28774 219.054 5.63231C219.819 5.97687 220.251 6.20216 220.617 6.53348C220.45 6.77202 220.317 6.87141 219.971 6.95093C213.421 8.79302 207.303 11.1917 201.657 14.803C205.022 13.8356 208.38 12.8682 211.705 12.0664C210.189 13.0868 208.746 13.988 207.237 14.7699C203.632 16.6451 199.988 18.4342 196.397 20.3293C195.905 20.5877 195.645 21.2901 195.173 21.9395C194.029 22.5292 192.992 22.9666 192.001 23.384C190.401 21.2592 190.704 19.6402 192.912 18.527C194.176 17.8842 195.419 17.1885 196.67 16.5192C196.563 16.2873 196.457 16.062 196.357 15.8301C194.635 16.4861 192.919 17.1421 190.917 17.9041C191.19 17.0825 191.35 16.5987 191.562 15.9692C190.325 15.903 189.268 15.85 188.337 15.6711C190.039 14.9687 191.655 14.4585 193.198 13.7958C196.41 12.411 199.582 10.9466 202.768 9.50866V9.51528Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M36.3161 12.8814C36.9213 12.5103 37.5331 12.1393 38.3377 11.6489C37.7991 11.1453 37.3934 10.761 36.7816 10.1912H38.2313C38.7367 9.15747 39.2089 8.19003 39.6411 7.31537C37.5264 6.32143 35.0792 5.1751 32.632 4.02876C32.6586 3.85647 32.6852 3.68419 32.7184 3.51191C35.3319 4.04201 37.9387 4.57211 40.5988 5.34075C44.0967 8.09064 47.9205 9.72732 52.3096 10.5026C54.943 11.7483 57.4035 12.9344 59.8574 14.1271C59.7444 14.3988 59.6313 14.6639 59.5116 14.9356C57.889 14.3922 56.273 13.8555 54.6504 13.3121C54.544 13.5904 54.4376 13.8687 54.3312 14.147C56.6321 15.2072 58.9397 16.274 61.2872 17.4734C61.3071 18.0234 61.2739 18.4408 61.0478 18.8517C59.4052 18.3083 57.9555 17.7583 56.5058 17.215C54.3844 16.4198 52.2564 15.6379 50.1283 14.8494C50.0818 15.0084 50.0352 15.1741 49.982 15.3331C52.0901 16.4397 54.1982 17.5529 56.1068 18.5999C54.9563 18.2619 54.0053 17.977 53.0477 17.7252C47.6345 16.2807 42.2214 14.8428 36.7151 13.3254C36.4757 13.1531 36.376 13.0272 36.3095 12.8682L36.3161 12.8814ZM43.9837 12.4971C44.1765 12.4971 44.3694 12.4971 44.5622 12.4971C44.5622 12.4176 44.5689 12.2652 44.5622 12.2652C44.3694 12.2519 44.1765 12.2519 43.977 12.4905L43.9837 12.4971Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 113,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.7236 155.538C63.6147 155.173 64.5058 154.816 65.3969 154.451L65.889 154.802C64.9713 155.697 64.047 156.598 62.7701 157.512C61.3603 158.029 60.303 158.533 59.2389 159.023C59.2256 159.01 59.2057 158.99 59.219 158.824C59.6446 157.99 60.0569 157.32 60.5025 156.585C58.6072 155.385 56.8649 154.484 54.943 156.34C54.7036 156.571 54.1583 156.472 53.7526 156.525C53.7526 156.525 53.746 156.525 53.7659 156.346C54.4243 155.266 55.056 154.358 56.1068 152.841C53.6462 152.529 51.6579 152.278 49.8158 152.046C49.184 151.131 47.8607 150.104 47.9072 149.143C48.0735 145.857 45.4866 145.28 43.5248 144.021C44.4359 143.067 45.3536 142.113 46.4109 141.093C48.12 141.49 49.6761 141.954 50.5473 142.212C52.15 144.247 53.3869 145.956 54.8033 147.494C55.0826 147.792 56.1267 147.248 56.7053 147.434C58.7468 148.103 60.6022 149.011 59.4983 151.463C60.948 151.84 62.2647 152.178 63.5815 152.516C63.3154 153.398 63.0428 154.285 62.6305 155.405C62.3578 155.737 62.2647 155.869 62.0985 156.081C61.8591 156.24 61.7593 156.366 61.6396 156.552C61.6197 156.565 61.6662 156.552 61.8258 156.479C62.0652 156.32 62.165 156.194 62.3246 155.982C62.5706 155.829 62.6637 155.703 62.7169 155.544L62.7236 155.538Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 118,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M36.8215 13.4115C42.2347 14.8494 47.6479 16.2873 53.061 17.7318C54.0186 17.9902 54.9696 18.2752 56.2065 18.7258C58.7269 19.7926 60.968 20.6805 63.2024 21.6943C63.2223 21.9925 63.2489 22.1648 63.0627 22.3371C61.6463 22.834 60.4426 23.331 59.0461 23.828C56.2265 22.5624 53.593 21.3034 50.9596 20.0444C50.5872 19.8655 50.2281 19.5474 49.849 19.5408C47.987 19.4878 46.1183 19.5143 44.263 19.5143C44.4359 19.9847 44.6021 20.4287 44.5556 20.8727C43.5314 20.7865 42.6869 20.8329 41.9155 20.6142C37.2671 19.2824 32.5987 18.242 27.5313 19.3884C26.4141 19.342 25.4964 19.2956 24.5854 19.2426C24.5654 18.9643 24.5455 18.6926 24.5255 18.4143C25.4765 18.2288 26.4208 17.924 27.3784 17.8776C29.3801 17.7848 31.3884 17.8312 33.5696 17.818C34.0883 17.818 34.4341 17.818 34.8996 17.9439C35.7509 18.0366 36.489 17.9969 37.42 17.9439C38.5372 18.0631 39.4682 18.189 40.3926 18.3149L40.5123 17.871C39.6012 17.5264 38.6968 17.1818 37.706 16.6981C36.888 16.1813 36.1565 15.8036 35.2122 15.3994C33.6428 15.1476 32.233 15.0482 30.9362 14.6175C30.3244 14.4121 29.9187 13.5772 29.42 13.0272C29.932 13.0073 30.4441 12.9874 31.262 12.9742C31.6544 12.9543 31.7342 12.9344 31.8206 12.9079C32.0268 12.9477 32.233 12.9874 32.7384 13.1531C33.4765 13.2591 33.9221 13.2392 34.3743 13.2194C34.5871 13.2194 34.7999 13.2194 35.2388 13.3585C35.9171 13.4645 36.3693 13.4314 36.8215 13.3983V13.4115ZM42.2081 18.9908C42.2347 19.0703 42.2613 19.1498 42.2879 19.2294C42.3145 19.1498 42.3411 19.0703 42.2081 18.9908Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 123,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M51.1524 255.793C56.1267 253.692 61.101 251.598 66.0752 249.498C66.0154 249.286 65.9489 249.074 65.889 248.855C64.9647 249.061 64.0403 249.266 62.9031 249.326C62.677 249.087 62.6704 248.994 62.6571 248.895C63.7411 248.146 64.825 247.397 66.2016 246.622C66.7402 245.887 66.9863 245.184 67.2257 244.475C67.4318 244.475 67.638 244.475 67.9905 244.654C68.2099 245.264 68.2831 245.694 68.3429 246.026C69.3404 245.747 70.1783 245.516 71.0163 245.284C71.0428 245.396 71.0694 245.509 71.116 245.959C70.6904 247.066 70.2515 247.828 69.5931 248.988C71.4685 248.371 72.8317 247.921 74.195 247.629C75.0728 248.365 75.9506 248.935 76.6954 249.637C74.8001 250.498 73.0312 251.234 71.1293 251.87C70.83 251.154 70.6704 250.538 70.5241 249.975C69.8525 250.386 69.1808 250.79 68.5956 251.148C68.9481 251.572 69.3072 252.009 69.6729 252.447C69.2074 252.765 68.7486 253.103 68.2631 253.401C67.9173 253.613 67.5383 253.772 67.1725 253.951C61.6263 255.409 56.1001 256.952 50.5273 258.298C47.5348 259.02 44.4558 259.398 41.3103 259.868C42.0618 259.172 42.9196 258.536 43.9637 257.893C46.4841 257.184 48.8183 256.489 51.1524 255.793ZM67.4452 252.142C67.4784 252.022 67.5117 251.897 67.5383 251.777C67.4585 251.857 67.3853 251.936 67.4452 252.142Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 128,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M5.81882 219.72C6.45058 216.042 6.95599 212.484 7.38824 208.919C7.5811 207.315 7.621 205.692 7.7274 204.082C7.9535 204.082 8.17295 204.075 8.39906 204.068C8.93771 209.031 9.46972 213.995 10.035 219.229C10.6401 216.34 11.1921 213.696 11.744 211.052C11.9369 211.092 12.1298 211.132 12.316 211.178C11.8371 214.849 11.3583 218.527 10.8529 222.403C11.2586 222.589 11.9701 222.913 12.5554 223.41C11.7906 223.636 11.1389 223.695 10.281 223.715C9.24362 223.715 8.41236 223.755 7.01584 223.815C8.40571 225.239 6.82964 227.976 10.1015 227.525C11.9834 227.916 13.6992 228.294 15.4016 228.857C15.3949 229.169 15.3883 229.295 15.1622 229.42C14.291 229.321 13.6393 229.149 12.9943 229.149C11.4248 229.149 11.5977 229.884 12.3891 230.898C12.5022 231.084 12.6152 231.137 12.7482 231.156C12.7482 231.17 12.7748 231.196 12.7881 231.395C13.1605 233.065 13.5196 234.542 13.8787 236.02C9.82217 236.544 8.75816 233.688 8.0865 230.182C7.15549 231.05 6.63013 231.547 5.65257 232.462C5.65257 227.89 5.65257 223.861 5.79887 219.72H5.81882Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 133,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M219.2 24.8617C221.341 24.7358 222.997 23.9804 224.261 22.0389C224.746 21.2901 226.322 21.1775 227.433 20.919C229.188 20.5148 230.977 20.2299 232.959 19.9185C233.039 20.4088 232.919 20.8793 232.633 21.9792C236.045 22.1582 239.31 22.3304 242.568 22.4961C242.608 22.6617 242.642 22.8274 242.681 22.9931C241.232 23.2647 239.795 23.5894 238.339 23.8081C236.178 24.1328 234.003 24.3779 231.596 24.9345C229.953 25.5574 228.55 25.8954 226.934 26.2465C226.043 26.3261 225.358 26.3923 224.56 26.4652C224.294 26.5248 224.188 26.6309 223.948 26.8694C221.787 27.3796 219.819 28.0886 217.817 28.1748C212.696 28.4001 208.327 30.5138 203.885 33.0583C202.901 33.4294 202.083 33.7673 201.158 34.0125C200.6 34.198 200.154 34.4763 199.602 34.7878C199.503 34.8209 199.296 34.8805 199.29 34.6751C199.276 34.0721 199.276 33.6679 199.396 33.1577C200.088 32.7933 200.66 32.5282 201.398 32.2168C207.443 29.7253 213.321 27.2869 219.2 24.855V24.8617Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M14.3642 28.188C15.5279 27.6646 16.6851 27.1477 18.1614 26.4851C18.72 24.1792 17.7225 22.9997 14.3243 22.8473C12.2096 22.7545 10.0815 22.8274 7.88035 22.3371C8.96431 22.072 10.0549 21.8136 11.1389 21.5485C11.1389 21.416 11.1522 21.2835 11.1522 21.151C9.86872 20.8992 8.58526 20.6407 7.29514 20.3889C7.24859 20.104 7.20869 19.8191 7.16214 19.5342C9.06406 19.0902 10.966 18.6529 12.8746 18.2089C12.8746 18.1294 12.8746 18.0433 12.8746 17.9637L9.51627 17.7848C9.50962 17.6722 9.49632 17.5529 9.48967 17.4403C11.1921 17.2614 12.9012 17.0825 14.843 17.0957C16.3659 17.5132 17.6493 17.7451 18.9394 17.977C18.9261 18.1029 18.9128 18.2288 18.8995 18.3547C16.592 18.7324 14.291 19.1167 11.5778 19.5607C12.6152 19.6932 13.2536 19.7727 13.8854 20.0576C14.4174 20.7931 14.976 21.7871 15.488 21.7606C18.0683 21.6347 20.8547 22.231 23.1888 20.0841C24.612 19.9516 25.8954 19.9516 27.2321 20.1173C26.6402 20.7468 26.0085 21.2106 25.1772 21.7076C24.3593 21.807 23.7408 21.8732 23.1157 21.9461C23.0824 22.0985 23.0558 22.2443 23.0226 22.3967C23.7607 22.6352 24.4923 22.8738 25.2304 23.1123C24.9245 23.2382 24.6253 23.3708 24.326 23.4967C24.3593 23.6491 24.3925 23.8081 24.4324 23.9605C27.8106 23.9605 31.1889 23.9605 34.5671 24.0599C34.0218 24.3316 33.4832 24.5038 32.7916 24.5502C31.5147 24.4177 30.3975 24.4177 29.2737 24.4177C29.2737 24.537 29.2737 24.6562 29.2737 24.7821C30.4108 24.855 31.548 24.9279 32.745 25.1002C33.0443 25.3388 33.2903 25.4845 33.3302 25.6436C29.553 25.0671 26.5338 27.1543 22.9893 27.6911C21.6394 28.1019 20.4956 28.4928 19.1921 28.8705C18.833 28.8705 18.6202 28.8904 18.3409 28.7446C17.4764 28.6585 16.6851 28.7446 15.7407 28.7711C15.1755 28.5392 14.7765 28.3603 14.3708 28.188H14.3642Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 143,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M43.2854 151.039C42.0418 149.647 40.632 148.64 38.3909 149.057C39.0958 148.09 40.0269 147.129 41.2172 146.261C43.4583 147.295 45.5198 148.07 45.7193 150.827C45.7725 151.595 46.7301 152.304 47.2754 153.04C47.2754 153.04 47.2754 153.04 47.2621 153.219C47.5015 153.928 47.6744 154.829 48.0402 154.922C49.3968 155.246 50.8266 155.306 52.2564 155.472C52.0502 156.777 51.9438 157.466 51.8308 158.149C52.0037 157.976 52.1766 157.797 52.3495 157.625C53.8058 158.566 55.2688 159.507 56.6454 160.547C56.9912 160.607 57.4235 160.56 58.002 160.547C58.3611 160.879 58.5806 161.183 58.7734 161.501C58.7535 161.515 58.7202 161.548 58.5673 161.548C58.2015 161.859 58.002 162.171 57.7693 162.641C57.7161 163.025 57.6828 163.244 57.5099 163.542C56.7984 164.298 56.0469 164.894 55.7144 165.669C55.5215 166.12 56.007 166.862 56.1533 167.598C55.9871 167.962 55.8607 168.194 55.5947 168.492C55.0427 168.996 54.6238 169.426 54.0186 169.87C53.46 169.373 53.081 168.857 52.7551 168.187C52.529 167.392 55.4218 166.04 52.2431 165.934C52.5091 164.708 52.8881 163.589 53.327 162.449C53.3536 162.442 53.3071 162.462 53.0743 162.495C52.0901 162.641 51.2987 162.774 50.2547 162.939C50.4808 161.846 50.6271 161.163 50.8399 160.461C50.8665 160.454 50.8199 160.468 50.6005 160.501C49.982 160.613 49.5365 160.713 49.4833 160.726C48.9712 159.268 48.519 157.996 48.0735 156.724C46.9562 157.234 45.839 157.744 44.7285 158.255C44.5822 158.321 44.4425 158.414 44.3029 158.308C44.3029 157.751 44.3095 157.373 44.4093 156.876C44.5622 156.326 44.8282 155.677 44.6487 155.511C43.8972 154.835 43.0194 154.299 42.1815 153.716C42.4209 153.563 42.6603 153.411 42.8997 153.258L43.2987 151.025L43.2854 151.039Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 148,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M237.588 234.072C237.607 234.615 237.634 235.159 237.488 235.861C236.936 236.265 236.55 236.51 236.158 236.756C236.158 236.756 236.105 236.921 236.098 237.007C235.233 237.226 234.376 237.359 233.112 237.471C231.602 237.451 230.499 237.451 229.395 237.451C229.388 237.61 229.375 237.763 229.368 237.922C230.519 238.174 231.676 238.425 232.72 238.657C231.277 239.068 229.787 239.492 228.304 239.916L224.214 239.559C224.214 239.419 224.214 239.28 224.214 239.141C225.192 239.028 226.176 238.922 227.047 238.823C223.11 238.061 219.107 237.286 214.791 236.351C210.202 234.496 205.9 232.84 201.65 231.064C199.968 230.361 198.392 229.381 196.69 228.387C195.832 227.857 195.047 227.472 194.109 227.081C193.73 227.068 193.517 227.068 193.298 226.889C193.444 225.034 194.395 225.975 195.014 226.253C199.23 228.142 203.38 230.163 207.636 231.958C213.907 234.602 220.49 236.033 227.273 236.497C229.448 236.65 231.636 236.524 233.824 236.524C233.817 236.292 233.81 236.066 233.804 235.835C229.754 235.45 225.704 235.066 221.661 234.688C221.687 234.463 221.714 234.238 221.74 234.012C222.665 234.152 223.609 234.47 224.513 234.39C225.418 234.317 226.289 233.847 227.4 233.549C230.951 233.721 234.269 233.893 237.594 234.072H237.588Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 153,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M261.654 57.4893C261.468 57.3766 261.435 57.1315 261.375 56.714C259.48 62.7041 257.551 68.522 254.293 73.8561C258.003 65.9709 258.921 57.529 260.038 49.127C259.799 49.0541 259.559 48.9812 259.32 48.9083C258.475 51.3733 257.604 53.8382 256.793 56.3098C255.869 59.1193 254.997 61.9487 253.92 64.9239C253.302 64.4468 252.869 63.8041 252.47 62.9824C252.55 62.5451 252.59 62.2933 252.816 62.0481C254.805 61.1138 255.643 57.7875 254.512 56.0315C254.964 54.1563 255.357 52.4666 255.928 50.6841C256.713 48.9878 257.318 47.3843 257.904 45.847C258.003 46.2114 258.136 46.6951 258.13 46.6753C259.021 44.3826 260.025 41.8116 261.029 39.234V42.6863C261.195 42.673 261.328 42.6863 261.348 42.6531C261.481 42.3748 261.594 42.0899 261.714 41.7917C261.82 41.8977 261.993 41.9839 261.993 42.07C261.94 47.1722 261.867 52.2678 261.654 57.4959V57.4893Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 158,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M32.6918 244.058C32.2263 244.369 31.7674 244.939 31.2886 244.952C28.6419 245.038 25.9885 244.992 23.3218 245.436C28.0434 245.86 32.765 246.278 37.5198 246.854C32.3194 247.179 27.0791 247.344 21.8389 247.51C17.7092 246.96 13.5728 246.417 9.44312 245.867C9.47637 245.575 9.50962 245.29 9.54952 244.999H14.0516C14.0649 244.899 14.0782 244.807 14.0915 244.707C12.8081 244.396 11.5246 244.084 9.74902 243.654C15.7939 243.408 21.4665 245.184 26.7466 242.713C23.1223 242.269 19.3517 241.811 15.1489 241.301C18.7599 240.917 21.9187 240.586 25.0642 240.4C23.8405 240.791 22.6302 241.043 21.4199 241.288C21.4199 241.368 21.4266 241.447 21.4332 241.52C26.0417 241.52 30.6436 241.52 35.3119 241.633C35.4782 241.977 35.5713 242.209 35.4649 242.448C33.5364 242.666 31.8074 242.878 30.085 243.09L30.1049 243.766C30.9628 243.859 31.8207 243.958 32.6785 244.051L32.6918 244.058ZM20.9345 244.939C20.5554 244.966 20.1697 244.999 19.7906 245.025C19.8372 245.191 19.8838 245.363 19.9237 245.529C20.3626 245.35 20.8015 245.171 20.9345 244.939Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 163,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M184.826 249.922C185.378 249.836 186.036 249.511 186.462 249.703C187.931 250.366 189.321 251.201 190.771 252.155C190.811 252.559 190.738 252.944 190.837 252.99C198.645 256.88 206.791 259.848 215.23 262.022C215.469 262.081 215.695 262.187 216.114 262.552C216.294 263.121 216.287 263.42 216.287 263.718C205.607 261.637 195.798 257.171 185.797 252.765C185.591 252.857 185.577 252.897 185.537 252.698C184.433 252.115 183.376 251.724 182.312 251.38C182.312 251.42 182.385 251.42 182.505 251.267C181.906 250.671 181.182 250.227 180.344 249.677C179.832 249.571 179.439 249.571 178.422 249.571C179.366 249.962 179.712 250.101 180.131 250.386C180.27 250.836 180.337 251.154 180.364 251.453C180.324 251.446 180.31 251.519 180.31 251.519C178.136 250.313 175.968 249.107 173.7 247.762C173.7 246.702 173.787 245.787 173.853 244.674C173.833 244.482 173.833 244.482 173.833 244.482C173.833 244.482 174.059 244.469 174.199 244.601C174.512 244.813 174.684 244.886 174.857 244.959C174.857 244.959 174.837 244.972 174.904 245.098C175.263 245.297 175.556 245.37 175.842 245.443C175.842 245.443 175.828 245.469 175.868 245.628C178.881 247.159 181.853 248.537 184.826 249.909V249.922Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 168,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M56.7252 160.448C55.2688 159.507 53.8058 158.566 52.3495 157.625C52.1766 157.797 52.0037 157.976 51.8308 158.149C51.9372 157.459 52.0502 156.77 52.2564 155.472C50.8199 155.306 49.3968 155.253 48.0402 154.922C47.6744 154.835 47.5015 153.928 47.3286 153.192C47.3685 153.007 47.322 153.02 47.2754 153.033C46.7301 152.298 45.7792 151.595 45.726 150.827C45.5331 148.07 43.4716 147.295 41.3835 146.208C41.9354 145.419 42.5938 144.77 43.3984 144.068C45.4999 145.274 48.0868 145.85 47.9272 149.137C47.8806 150.098 49.1973 151.125 49.8357 152.039C51.6778 152.271 53.6595 152.523 56.1267 152.834C55.0693 154.352 54.4376 155.259 53.7194 156.366C53.6795 156.552 53.7194 156.532 53.7726 156.518C54.1782 156.465 54.7302 156.558 54.9629 156.326C56.8848 154.471 58.6271 155.372 60.5224 156.571C60.0769 157.3 59.6646 157.97 59.1325 158.864C58.8732 159.189 58.7801 159.321 58.6604 159.507C58.6471 159.527 58.7069 159.52 58.8665 159.454C59.1059 159.301 59.2057 159.176 59.2655 159.017C60.3229 158.513 61.3736 158.016 62.6172 157.519C62.3179 158.4 61.8258 159.275 61.0877 160.329C60.1633 160.826 59.485 161.15 58.8067 161.475C58.5939 161.17 58.3744 160.872 57.8291 160.527C57.2439 160.468 56.9912 160.454 56.7452 160.441L56.7252 160.448Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 173,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M146.907 297.485C146.375 300.096 144.44 298.704 143.223 298.817C141.301 298.989 139.253 298.188 137.397 298.539C133.028 299.347 128.832 298.817 124.603 297.823C123.984 297.677 123.226 297.989 122.561 298.194C121.989 298.373 121.384 299.029 120.932 298.916C117.62 298.095 114.016 300.003 110.711 297.737C111.382 297.174 112.194 296.319 113.058 296.279C114.76 296.186 116.509 296.425 118.199 296.75C119.628 297.021 121.012 297.777 121.796 295.749C121.883 295.524 122.647 295.477 123.093 295.491C125.859 295.57 128.553 296.962 131.419 295.862C131.785 295.723 132.51 296.504 132.643 296.591C134.385 296.326 136.187 295.451 137.198 296.008C139.698 297.379 141.933 296.299 144.207 295.941C145.69 295.709 146.395 296.08 146.907 297.505V297.485Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 178,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M9.38327 188.808C8.41236 190.876 7.44144 192.943 6.41733 195.362C4.70161 202.346 3.04574 208.978 1.30342 215.638C1.21697 215.658 1.03076 215.691 1.03076 215.691C0.631758 214.379 0.232753 213.067 0 211.602C0.199503 211.357 0.252703 211.291 0.478806 211.258C0.877811 211.205 1.13051 211.119 1.38322 211.039C1.07066 210.754 0.76476 210.469 0.438906 209.986C0.665008 208.574 0.81796 207.342 1.15711 206.156C4.48216 194.739 9.42317 184.044 15.7806 174.005C17.8488 170.738 20.1631 167.631 22.3576 164.45C22.3576 164.45 22.3576 164.477 22.5105 164.43C22.8896 163.913 23.1223 163.436 23.3551 162.966C23.3551 162.966 23.3551 162.986 23.4881 163.012C23.7075 163.019 23.8006 163.012 24.0201 162.926C24.4191 162.8 24.6851 162.741 24.9578 162.688C23.3551 165.245 21.7591 167.803 20.1498 170.354C17.7291 174.204 15.3018 178.047 12.715 182.136C12.4955 182.54 12.4357 182.705 12.3758 182.871C12.0699 183.428 11.764 183.978 11.2852 184.766C11.0325 185.276 10.9527 185.561 10.8795 185.84C10.8795 185.84 10.8928 185.853 10.7465 185.932C10.1879 186.946 9.78227 187.88 9.37662 188.808H9.38327Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 183,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M30.8763 240.016C31.8406 239.93 32.8049 239.837 34.0218 239.572C34.3676 239.294 34.4275 239.181 34.6403 239.035C35.7375 238.803 36.6353 238.558 37.553 238.386C37.8057 238.339 38.105 238.518 38.4308 238.671C38.637 238.671 38.7899 238.598 38.9828 238.531C39.0227 238.545 39.1025 238.545 39.3219 238.558C47.0759 236.219 54.6105 233.867 62.2581 231.494C62.5307 231.402 62.6438 231.296 62.9031 231.117C66.7668 229.414 70.4377 227.737 74.1285 226.253C74.1551 226.849 74.1684 227.247 74.0753 227.77C67.4451 231.395 60.9613 234.953 53.8191 237.127C51.3985 237.862 49.1109 239.035 46.5639 240.009C45.839 239.996 45.3137 239.989 44.6886 239.824C42.8066 239.704 41.0177 239.737 39.2355 239.784C36.4491 239.857 33.6561 239.936 30.8697 240.016H30.8763Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 188,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M103.602 207.733C104.825 206.619 106.049 205.506 107.612 204.314C108.762 204.678 110.092 204.956 110.278 205.579C110.883 207.6 111.07 209.747 111.462 212.113C112.746 211.629 114.069 211.132 115.638 210.536C116.576 212.398 117.514 214.273 118.325 215.883C119.987 215.81 121.716 215.731 123.465 215.797C123.618 216.181 123.765 216.42 123.904 216.658C123.685 216.937 123.465 217.215 123.02 217.42C122.641 217.593 122.488 217.844 122.342 218.09C121.151 219.262 119.961 220.442 118.644 221.648C118.518 221.681 118.485 221.575 118.504 221.383C119.289 218.103 118.884 217.752 115.539 218.64C115.539 218.64 115.525 218.633 115.539 218.461C115.439 217.646 115.539 216.625 115.179 216.426C113.291 215.373 111.854 212.669 109.008 214.538C108.622 214.79 107.858 214.485 107.272 214.432C110.212 212.444 109.72 210.396 107.519 208.694C106.548 207.938 104.925 208.018 103.602 207.719V207.733Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 193,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M12.1165 63.1282C12.2827 63.8173 12.449 64.5065 12.5288 65.507C12.3492 66.004 12.2495 66.1962 12.1431 66.3751C12.1431 66.3817 11.9569 66.3353 11.9435 66.2889C10.7066 61.3259 7.20204 57.1116 7.12889 51.7642C7.12889 51.3733 6.96929 50.9823 6.88949 50.3926C6.69663 48.0933 6.50378 45.9928 6.34418 43.6736C6.01832 42.3881 5.67252 41.3213 5.32007 40.2544C5.58607 39.6249 5.84542 38.9954 6.27103 38.4256C6.51708 38.5979 6.59023 38.7171 6.67003 38.8298C6.59023 38.472 6.51708 38.1208 6.43728 37.763C6.35083 37.478 6.25773 37.1931 5.99172 36.7226C5.71242 36.3979 5.57942 36.3052 5.41982 36.2522C5.41982 36.2522 5.41982 36.007 5.53287 35.8811C5.64592 35.7552 5.89197 35.7552 5.89197 35.7552C6.23113 35.4106 6.56363 35.0661 6.90279 34.7215C6.66338 34.5294 6.43063 34.3438 5.99838 34.0986C5.71907 33.9197 5.59937 33.8336 5.45307 33.7938C5.80552 33.542 6.12473 33.1842 6.51708 33.0517C7.36829 32.7601 8.25275 32.5812 9.27687 32.5547C9.42982 33.5619 9.43647 34.3703 9.28352 35.1853C8.77811 35.0329 8.42566 34.8739 8.01335 34.6884C7.62765 36.3184 8.3259 37.0871 9.91527 37.4449C10.0749 38.4455 10.1547 39.2605 10.3409 40.049C10.6335 41.2682 10.1746 41.8911 8.93771 42.2423C9.08401 44.2235 9.24362 45.9662 9.26357 47.8216C9.23697 48.736 9.30347 49.551 9.45642 50.3396C10.1946 54.0966 10.9593 57.8537 11.7174 61.6108C11.7507 61.8295 11.7773 62.0481 11.8371 62.5252C11.877 62.9493 11.9568 63.062 12.1098 63.1216L12.1165 63.1282Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 198,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M100.177 238.353C96.9516 240.712 93.7196 243.077 90.1818 245.416C89.7828 245.363 89.6897 245.337 89.6099 245.138C89.7894 244.329 89.9623 243.693 90.1419 243.024C90.1419 242.991 90.2084 243.004 90.3613 242.978C90.7071 242.733 90.9 242.507 91.1793 242.169C91.6116 241.659 91.9707 241.262 92.3231 240.871L92.0239 240.533C91.3322 241.109 90.6406 241.686 89.7761 242.308C89.1244 242.905 88.639 243.448 88.1469 243.992C88.1469 243.992 88.1469 243.998 87.974 243.905C87.422 244.204 87.0363 244.601 86.6439 244.985C86.6439 244.979 86.6506 244.985 86.4644 244.926C85.0878 245.264 83.9041 245.668 82.7137 245.893C85.5001 243.839 88.2932 241.977 91.0729 240.089C91.7845 239.605 92.4428 239.042 93.2741 238.432C97.9823 234.615 102.538 230.878 107.233 227.061C107.931 226.525 108.489 226.074 109.068 225.783C109.414 226.16 109.733 226.379 110.059 226.591C110.059 226.591 110.059 226.591 110.026 226.75C107.346 229.44 104.692 231.972 101.886 234.582C99.0663 236.009 97.6343 237.102 97.59 237.862C98.4944 238.035 99.3389 238.194 100.177 238.353ZM95.954 239.307C96.1003 239.201 96.24 239.095 96.3863 238.989C96.2999 238.896 96.2067 238.803 96.1203 238.717C96.0072 238.856 95.8942 238.995 95.954 239.313V239.307Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 203,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M179.12 299.168C179.313 299.546 179.313 299.917 179.226 300.633C178.475 301.156 177.81 301.487 177.138 301.487C175.143 301.487 173.155 301.348 171.16 301.289C170.528 301.269 169.89 301.368 169.258 301.355C166.152 301.262 163.153 300.209 159.935 300.845C157.501 301.328 154.92 301.083 152.24 301.156C151.855 301.156 151.635 301.156 151.396 301.004C151.223 300.454 151.07 300.063 150.944 299.5C152.447 298.943 153.923 298.552 155.399 298.168C156.35 298.121 157.301 298.068 158.997 297.982C159.895 299.022 161.417 298.996 162.249 297.77C163.831 297.783 164.782 297.757 165.727 297.81C168.267 297.962 170.814 298.088 173.354 298.34C175.223 298.526 177.072 298.883 179.12 299.175V299.168Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 208,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M202.641 9.40926C199.576 10.9466 196.404 12.4176 193.198 13.7958C191.655 14.4585 190.039 14.9687 188.197 15.7042C187.699 16.0024 187.459 16.1415 187.074 16.3072C186.701 16.4993 186.475 16.6584 186.089 16.8903C181.714 19.5739 177.491 22.1847 173.128 24.8617C172.104 25.3851 171.233 25.8291 170.229 26.2532C170.349 25.7628 170.595 25.2857 171.02 24.8087C174.345 22.675 177.491 20.5414 180.623 18.421C180.098 17.586 179.719 16.9831 179.346 16.3801C182.704 14.2199 186.063 12.0598 189.68 9.99237C187.878 11.5959 185.817 13.1067 183.755 14.6109L184.187 15.2006C186.216 14.2597 188.251 13.3254 190.412 12.5236C191.755 12.4176 193.032 12.3447 194.162 11.9007C196.882 10.8273 199.529 9.56829 202.202 8.38882C202.309 8.687 202.415 8.98518 202.641 9.38939V9.40926Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 213,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M228.131 159.964C226.129 157.685 224.068 155.452 222.186 153.079C221.907 152.728 222.352 151.668 222.658 151.032C222.884 150.555 223.429 150.23 223.962 149.727C224.088 149.621 224.307 149.627 224.467 149.799C225.298 150.661 225.97 151.363 226.641 152.059C226.641 152.059 226.648 152.059 226.695 152.225C230.997 157.42 235.26 162.449 239.589 167.637C240.813 169.599 241.97 171.408 242.954 173.27C242.256 173.038 241.478 172.872 241.245 172.428C238.432 167.107 233.77 163.496 229.421 159.6C229.248 159.441 228.577 159.838 228.138 159.971L228.131 159.964Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 218,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M67.1725 254.136C67.5383 253.772 67.9173 253.619 68.2631 253.407C68.7486 253.109 69.2008 252.771 69.6729 252.453C69.3138 252.016 68.9481 251.579 68.5956 251.154C69.1808 250.797 69.8525 250.386 70.5241 249.982C70.6704 250.545 70.83 251.161 71.1359 252.049C72.0404 252.314 72.8251 252.44 73.5433 252.268C75.106 251.89 76.6289 251.367 78.2781 250.896C78.3845 250.889 78.5973 250.909 78.5042 251.055C76.3962 252.109 74.3745 252.997 72.3862 253.951C71.7012 254.282 71.1027 254.792 70.4643 255.223C62.6238 258.901 54.5174 261.823 45.7393 263.857C45.0277 263.44 44.6753 263.015 44.3162 262.585C51.7842 260.007 59.2589 257.43 66.7269 254.839C66.9131 254.772 67.0195 254.494 67.1658 254.136H67.1725Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 223,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M211.207 251.95C211.453 252.321 211.646 252.944 211.958 253.016C213.667 253.407 215.41 253.633 217.132 253.971C218.888 254.315 220.623 254.719 222.419 255.462C221.92 255.561 221.415 255.654 220.916 255.753C222.598 256.827 223.988 258.649 226.435 257.317C226.934 257.045 228.085 257.728 228.809 258.172C230.106 258.973 231.303 259.928 232.627 261.359C231.031 261.114 229.428 260.862 227.559 260.358C225.105 259.55 222.917 259 220.623 258.304C218.143 257.456 215.782 256.76 213.281 255.992C212.756 255.819 212.37 255.72 211.805 255.541C209.331 254.461 207.024 253.46 204.729 252.288C204.756 251.724 204.783 251.333 204.796 251.095C206.046 251.274 207.143 251.433 208.247 251.625C208.254 251.665 208.227 251.738 208.247 251.863C208.447 251.963 208.633 251.943 208.892 251.91C208.966 251.91 209.112 251.91 209.172 252.056C209.604 252.102 209.976 252.003 210.495 251.903C210.828 251.923 211.02 251.936 211.213 251.956L211.207 251.95Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 228,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.605 236.477C246.785 235.278 247.157 234.112 247.689 232.621C249.099 229.043 245.734 230.434 244.258 229.102C245.887 228.87 246.964 228.718 248.228 228.539C249.445 227.618 249.498 226.79 248.188 225.862C248.101 224.968 248.061 224.285 248.055 223.629C248.095 223.662 248.201 223.656 248.341 223.622C248.487 223.258 248.5 222.927 248.54 222.416C248.58 221.866 248.587 221.495 248.673 221.091C248.78 220.998 248.846 220.926 248.833 220.899C248.78 220.806 248.7 220.727 248.68 220.475C248.733 220.084 248.733 219.859 248.839 219.508C248.833 218.805 248.726 218.229 248.58 217.46C248.46 216.241 248.374 215.22 248.454 214.26C248.766 214.843 248.899 215.366 249.052 215.883C249.677 218.003 248.972 220.826 252.098 221.621C254.02 222.509 255.004 224.623 254.399 226.591C254.093 226.333 253.794 226.074 253.328 225.683C253.062 227.982 252.823 230.037 252.53 232.521C252.138 231.812 251.992 231.547 251.719 230.997C251.094 230.012 250.398 229.973 249.631 230.878C250.376 230.964 250.981 231.037 251.593 231.11C251.593 231.11 251.593 231.322 251.386 231.422C250.648 231.945 249.604 232.528 249.677 232.76C249.943 233.588 250.582 234.297 251.081 235.053C250.393 235.68 249.731 235.627 249.092 234.894C248.301 235.45 247.563 235.98 246.618 236.477H246.605ZM250.322 221.509C250.083 221.893 249.85 222.284 249.611 222.668C249.817 222.754 250.023 222.841 250.223 222.927C250.316 222.536 250.416 222.138 250.322 221.509Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 233,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M243.127 173.203C241.97 171.401 240.813 169.592 239.769 167.611C240.454 167.273 241.026 167.107 241.598 166.942C241.598 166.942 241.598 166.948 241.604 167.101C241.77 167.478 241.93 167.704 242.096 167.929C242.096 167.929 242.103 167.935 242.11 168.101C242.442 168.651 242.768 169.035 243.094 169.42C243.094 169.42 243.1 169.433 243.147 169.546C243.287 169.804 243.42 169.89 243.586 169.917C243.586 169.917 243.586 169.923 243.632 170.043C243.819 170.248 243.958 170.341 244.091 170.427C244.091 170.427 244.078 170.427 244.091 170.579C244.264 170.957 244.424 171.189 244.59 171.421C244.59 171.421 244.583 171.428 244.59 171.613C246.253 174.323 247.922 176.854 249.584 179.379C249.584 179.379 249.571 179.379 249.624 179.485C249.777 179.724 249.903 179.816 250.056 179.869C250.881 181.075 251.706 182.281 252.384 183.673C252.304 184.369 252.258 184.925 252.444 185.389C254.731 191.121 257.059 196.833 259.373 202.551C258.948 202.836 258.529 203.121 257.93 203.479C257.411 202.577 257.066 201.61 256.707 200.649C256.687 200.656 256.673 200.696 256.726 200.503C256.381 199.37 255.982 198.429 255.716 197.336C253.574 190.239 250.309 183.799 246.073 177.656C245.062 176.059 244.098 174.628 243.127 173.197V173.203Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 238,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M0.325854 211.231C0.252703 211.291 0.199503 211.357 0.146302 211.51C-0.239403 204.996 2.02163 199.013 4.55531 193.168C8.78476 183.421 14.0915 174.264 20.6153 165.842C21.0143 165.325 21.5463 164.914 22.1913 164.457C20.1631 167.637 17.8488 170.745 15.7806 174.005C9.42317 184.044 4.48216 194.739 1.15711 206.156C0.81131 207.335 0.665008 208.574 0.392355 210.151C0.345804 210.754 0.339154 210.993 0.325854 211.225V211.231Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 243,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.039 234.509C104.692 231.978 107.346 229.454 110.092 226.737C110.145 226.564 110.099 226.584 110.059 226.604C109.733 226.386 109.407 226.174 109.115 225.657C109.281 225.113 109.42 224.868 109.56 224.616C109.56 224.616 109.56 224.616 109.673 224.563C109.919 224.411 110.012 224.285 110.059 224.119C110.059 224.119 110.066 224.119 110.218 224.046C110.91 223.596 111.475 223.245 112.001 222.841C114.169 221.175 116.011 221.098 117.527 222.609L117.573 222.662C114.514 225.604 111.455 228.546 108.124 231.581C107.705 231.746 107.618 231.872 107.585 232.031C107.479 232.177 107.372 232.323 107.046 232.561C106.701 232.727 106.621 232.84 106.588 232.985C106.295 233.29 106.002 233.602 105.424 233.986C104.978 234.258 104.812 234.45 104.646 234.648C104.646 234.648 104.579 234.556 104.406 234.582C103.535 234.609 102.837 234.615 102.112 234.595C102.085 234.569 102.032 234.523 102.032 234.523L102.039 234.509ZM115.665 223.019C115.725 223.106 115.791 223.185 115.851 223.271C115.838 223.152 115.825 223.039 115.665 223.019ZM114.228 224.862C114.122 224.835 114.016 224.809 113.909 224.782C113.976 224.848 114.049 224.915 114.228 224.862Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 248,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M170.841 24.8285C170.595 25.299 170.349 25.7695 170.189 26.4387C168.826 28.0091 167.363 29.3874 165.727 30.7855C162.668 32.8065 159.795 34.801 156.782 36.6961C156.237 36.1461 155.818 35.7088 155.406 35.2649C155.811 34.8209 156.217 34.3836 156.796 34.039C157.188 34.2378 157.407 34.3372 157.627 34.4366C157.514 34.1848 157.407 33.933 157.294 33.6812C160.832 30.7259 164.37 27.7706 168.201 24.7556C168.593 24.5569 168.693 24.4177 168.792 24.2786C168.792 24.2786 168.839 24.3183 168.939 24.2587C169.132 24.0599 169.225 23.9207 169.318 23.7882C169.544 23.6093 169.777 23.4304 170.209 23.3708C170.555 23.9406 170.694 24.3846 170.834 24.8352L170.841 24.8285Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 253,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M252.085 32.5812C252.078 34.1318 252.058 35.4902 251.825 37.0672C250.602 37.5178 249.591 37.9352 248.587 37.9352C247.583 37.9352 246.572 37.5244 245.342 37.2792C241.199 37.0937 237.282 36.9281 233.365 36.716C232.919 36.6895 232.494 36.3781 232.267 36.1859C234.01 36.0136 235.546 35.848 237.242 35.6956C237.627 35.7022 237.847 35.6956 238.253 35.7088C238.678 35.7154 238.918 35.7088 239.363 35.7287C240.248 35.7552 240.926 35.7552 241.764 35.7685C242.143 35.7751 242.356 35.7751 242.755 35.7883C243.825 35.7883 244.716 35.7883 245.76 35.7751C246.133 35.7751 246.339 35.7751 246.559 35.7685C246.565 35.7685 246.572 35.7817 246.618 35.8546C246.805 35.8877 246.951 35.8546 247.29 35.795C249.371 35.2781 248.547 33.827 248.374 32.8065C248.221 31.912 247.549 31.1036 247.11 30.0633C247.144 29.5 247.164 29.1223 247.184 28.7446C249.086 29.5862 252.091 28.9567 252.071 32.5746L252.085 32.5812Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 258,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M88.6523 23.2647C89.2574 23.6888 89.8626 24.1129 90.5475 24.8418C90.6207 25.3719 90.6207 25.5972 90.4677 25.796C90.0621 25.6237 89.8027 25.4845 89.4835 25.2195C89.1577 25.0008 88.8917 24.908 88.6257 24.8219C88.6257 24.8219 88.6257 24.8219 88.5592 24.6894C88.22 24.4575 87.954 24.3581 87.6747 24.2653C87.6681 24.2719 87.6747 24.2653 87.6348 24.1527C87.4486 23.9605 87.3023 23.881 87.1427 23.8213C87.1294 23.8346 87.156 23.8081 87.1028 23.6954C86.9432 23.4503 86.8035 23.3708 86.6306 23.3376C86.6306 23.3376 86.6306 23.3376 86.5508 23.2051C86.2117 22.9864 85.939 22.8937 85.6597 22.8208C85.6531 22.8407 85.6597 22.8009 85.6065 22.6816C85.4203 22.4828 85.2807 22.3967 85.0546 22.1979C84.6955 21.9726 84.4295 21.8666 84.077 21.6148C81.0579 19.6998 78.2382 17.6589 75.1393 16.2277C72.4926 15.0018 70.165 12.1724 66.6338 13.7362C66.5607 13.7693 66.2481 13.279 66.155 12.9543C66.2149 12.2453 66.1683 11.6158 66.2947 11.0327C68.702 12.0134 70.9364 12.9411 73.1775 13.8754C73.1775 13.8754 73.1642 13.8886 73.2507 14.0211C73.6098 14.2265 73.8891 14.2994 74.1617 14.3789C74.1617 14.3789 74.1617 14.3922 74.2216 14.485C74.4344 14.5115 74.594 14.4386 74.7602 14.3723C78.2914 13.7163 81.2441 15.0217 83.9108 17.3276C83.1792 17.8113 82.5009 18.0631 81.816 18.3216C81.8692 18.4475 81.8891 18.6529 82.0022 18.7258C84.0438 20.104 86.092 21.4624 88.1402 22.8208C88.1402 22.8208 88.1203 22.8407 88.1801 22.9467C88.3331 23.1985 88.4661 23.2714 88.639 23.278L88.6523 23.2647Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 263,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M190.405 12.5435C195.512 9.85322 200.753 7.28887 206.113 4.60524C209.498 3.42577 212.749 2.29931 216.055 1.36501C217.365 0.993936 218.788 1.04032 220.211 1.23248C214.319 3.57817 208.434 5.92386 202.375 8.33581C199.529 9.58817 196.882 10.8405 194.169 11.914C193.039 12.3646 191.755 12.4308 190.418 12.5368L190.405 12.5435Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 268,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M204.723 252.447C207.024 253.447 209.331 254.454 211.705 255.64C211.719 255.905 211.652 255.978 211.406 256.031C210.721 255.972 210.216 255.932 209.597 255.773C208.999 255.601 208.52 255.548 208.041 255.495C208.035 255.607 208.021 255.72 208.015 255.833C208.567 255.872 209.119 255.912 209.77 256.104C211.36 256.76 212.863 257.264 214.359 257.767C214.412 257.595 214.472 257.43 214.525 257.257C214.046 257.025 213.574 256.787 213.182 256.436C213.321 256.23 213.368 256.144 213.421 256.058C215.782 256.754 218.149 257.456 220.484 258.384C219.06 258.775 217.671 258.927 216.274 259.086C214.764 258.967 213.208 259.06 211.765 258.695C207.622 257.648 203.532 256.409 199.316 255.104C200.54 254.819 201.877 254.68 203.419 254.428C203.845 254.428 204.045 254.554 204.264 254.786C204.424 254.912 204.57 254.918 204.896 254.905C205.454 254.905 205.827 254.938 206.272 255.09C206.565 255.216 206.784 255.223 207.004 255.23C206.778 255.09 206.545 254.958 206.206 254.706C205.301 254.169 204.517 253.745 203.725 253.315C203.725 253.169 203.725 253.023 203.892 252.665C204.284 252.453 204.503 252.453 204.723 252.46V252.447Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 273,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M52.13 10.4562C47.9205 9.72732 44.0901 8.09727 40.7318 5.46665C46.6437 4.32694 51.6911 6.92442 57.1442 8.95205C57.6695 9.37613 57.9555 9.60143 58.288 9.95262C58.4808 10.1912 58.6138 10.3038 58.7402 10.4098C58.7269 10.4098 58.7468 10.3899 58.6404 10.5225C57.9422 10.5225 57.357 10.3237 56.7585 10.2707C55.209 10.1249 53.5864 8.35569 52.1234 10.4562H52.13Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 278,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M226.223 116.337C223.29 119.465 220.41 122.652 217.405 125.706C214.964 128.185 212.37 130.517 209.631 133.042C209.212 133.28 209.012 133.386 208.806 133.486C208.806 133.486 208.759 133.559 208.753 133.433C208.58 133.227 208.414 133.148 208.247 133.068C208.247 133.068 208.247 133.128 208.247 132.982C208.081 132.75 207.915 132.664 207.755 132.584C207.755 132.584 207.755 132.637 207.755 132.492C207.582 132.273 207.416 132.2 207.25 132.127C207.25 132.127 207.25 132.167 207.276 132.028C207.296 131.809 207.29 131.723 207.469 131.644C208.274 131.465 209.059 131.471 209.471 131.08C213.707 127.065 218.01 123.116 221.986 118.862C223.243 117.523 224.374 116.516 226.169 116.257C226.189 116.284 226.236 116.324 226.236 116.324L226.223 116.337Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 283,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M9.44312 35.1787C9.44312 34.3703 9.43647 33.5619 9.44312 32.5614C9.48967 31.6403 9.53622 30.9114 9.57612 30.1825C10.4872 29.8512 11.3051 29.553 12.1497 29.2482C12.2894 29.6193 12.429 29.9837 12.5953 30.4277C12.9211 29.8512 13.2071 29.3476 13.6925 28.9501C14.025 29.3211 14.1647 29.5795 14.311 29.944C14.311 30.05 14.2977 30.2554 14.158 30.4078C13.9452 32.0909 13.8654 33.6216 13.7923 35.139C14.9095 35.2118 15.6077 35.2649 16.306 35.4106C16.306 35.51 16.2595 35.7022 16.06 35.7287C14.1647 35.5829 13.2337 36.0799 13.4598 38.0479C13.5994 39.2274 13.3534 40.4532 13.0807 41.6261C10.9793 41.9574 11.6443 40.5128 11.3583 39.605C11.0125 38.4918 12.4623 36.5901 9.94852 36.1992C9.73572 35.7685 9.59607 35.4769 9.45642 35.192L9.44312 35.1787Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 288,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M29.1939 12.9808C29.9254 13.5904 30.331 14.432 30.9428 14.6307C32.2396 15.0614 33.6494 15.1542 35.0659 15.5584C33.676 15.8301 32.2197 15.9229 30.7699 16.0223C30.7699 16.1216 30.7566 16.2144 30.75 16.3138C33.0975 16.4927 35.4449 16.665 37.7924 16.8439C38.7035 17.1885 39.6079 17.533 40.519 17.8776L40.3993 18.3216C39.4749 18.1957 38.5439 18.0698 37.2671 17.924C36.2031 17.8776 35.4981 17.8445 34.7932 17.8113C34.4474 17.8113 34.1016 17.8113 33.4034 17.6987C28.3427 17.3475 23.6277 17.1156 18.9195 16.8837C20.7882 16.5855 22.6568 16.2873 24.8913 16.1018C26.587 16.2144 27.9237 16.2144 29.2537 16.2144C29.2471 16.1349 29.2404 16.0488 29.2271 15.9692C28.9079 15.8897 28.5887 15.8168 28.2695 15.7373C26.9794 15.2934 25.7225 14.6241 24.3992 14.4585C21.8522 14.147 19.2719 14.1205 16.6651 13.5374C17.5895 13.4778 18.5072 13.4181 19.8239 13.3651C20.9411 13.2392 21.6593 13.1001 22.3775 12.9676C24.5721 12.9543 26.7666 12.9344 29.1872 12.9808H29.1939Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 293,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M133.939 61.0807C133.274 60.3717 132.609 59.6693 131.871 58.8145C134.904 55.3689 138.003 52.069 141.387 48.8222C141.926 49.8028 142.179 50.7305 142.412 51.8238C142.119 52.281 141.84 52.566 141.574 52.8575C139.027 55.6008 136.48 58.3374 133.939 61.0807Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 298,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M241.538 166.783C241.026 167.101 240.454 167.266 239.702 167.452C235.26 162.442 231.004 157.406 226.695 152.218C227.42 152.258 228.464 152.205 228.922 152.702C233.165 157.294 237.308 161.979 241.538 166.789V166.783Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 303,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M4.24275 69.7478C5.69912 72.6833 7.15549 75.6187 8.77811 78.5276C8.94436 78.5011 8.93106 78.4613 8.83796 78.627C9.47637 80.0185 10.2079 81.2377 10.9261 82.4636C10.9061 82.4636 10.9261 82.4371 10.8396 82.6027C10.9793 83.0003 11.212 83.2322 11.4248 83.4641C11.4049 83.4641 11.4182 83.431 11.3716 83.6232C11.5312 83.8551 11.7307 83.8949 11.9169 83.9479C11.9036 83.9611 11.9369 83.9346 11.744 84.0738C12.1763 84.8623 12.8014 85.5249 13.5795 86.2273C13.7923 86.7375 13.8588 87.2014 13.8056 87.8772C14.0982 88.3676 14.5105 88.6326 14.9095 88.9175C14.8962 88.9308 14.9228 88.9043 14.71 89.0434C14.8031 89.4211 15.1223 89.6663 15.4149 89.9181C15.3949 89.9181 15.4282 89.8982 15.242 90.0374C15.3484 90.4217 15.641 90.6669 15.9137 90.912C15.8937 90.912 15.9203 90.8922 15.7607 91.0512C15.6942 91.7867 15.7806 92.3566 15.8737 92.9198L15.887 92.8999C13.0874 88.4073 10.1547 83.9876 7.53454 79.389C5.95848 76.6192 4.88116 73.5712 3.73735 70.3376C4.01 69.9267 4.12305 69.834 4.24275 69.7346V69.7478Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 308,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M109.553 297.465C108.855 299.963 106.448 298.678 105.031 299.745C104.213 300.361 102.571 299.89 101.267 299.758C101.181 299.619 101.134 299.632 101.088 299.652C99.053 299.327 97.0114 298.996 94.7969 298.671C95.2625 297.432 96.0339 297.088 97.6498 297.015C100.696 296.876 103.974 298.3 106.887 295.941C107.824 295.179 109.374 295.424 109.56 297.479L109.553 297.465Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 313,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M73.2174 13.7362C70.9564 12.9344 68.722 12.0068 66.1417 10.9863C62.9563 9.89298 60.1168 8.88579 57.2772 7.8786C54.7302 6.56661 52.1899 5.25461 49.4567 3.7372C49.2705 3.31312 49.2771 3.08783 49.2771 2.86254C49.6495 2.89567 50.0219 2.9288 50.6537 3.12096C51.3852 3.4854 51.8507 3.68419 52.3162 3.8896C56.5257 5.53291 60.7751 7.06357 64.9181 8.85266C67.485 9.95924 69.8857 11.4501 72.5724 12.9411C72.8849 13.2392 73.0179 13.3187 73.1775 13.3386C73.1975 13.4248 73.2108 13.5109 73.2108 13.7296L73.2174 13.7362Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 318,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M6.88949 50.5914C6.97594 50.9823 7.12224 51.3666 7.12889 51.7576C7.20204 57.105 10.7066 61.3192 11.9436 66.2823C11.9569 66.3287 12.1364 66.3817 12.1431 66.3684C12.2561 66.1895 12.3492 65.9974 12.5288 65.6727C13.2736 65.7986 13.9452 66.057 15.1888 66.5407C12.3226 66.607 14.9627 69.9996 12.0766 70.0195C11.897 70.0394 11.897 70.0394 11.897 69.8671C11.0391 68.787 12.0832 66.6998 9.84212 66.4281C9.35002 65.1227 8.96431 63.9631 8.73821 62.724C8.70496 62.0415 8.51876 61.4451 8.14635 60.8753C7.42149 59.3115 6.88284 57.7146 6.33753 56.1176C6.17128 54.7593 5.99838 53.3943 5.97843 51.7443C6.37743 51.1678 6.63013 50.8763 6.88284 50.5847L6.88949 50.5914Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 323,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M211.406 251.969C211.014 251.93 210.821 251.916 210.375 251.797C209.784 251.764 209.444 251.83 209.105 251.897C209.105 251.897 208.959 251.897 208.733 251.863C208.414 251.797 208.314 251.764 208.221 251.731C208.221 251.731 208.247 251.658 208.161 251.446C207.117 250.505 206.166 249.77 205.394 249.041C207.729 249.491 209.877 249.942 212.198 250.406C212.803 250.187 213.242 249.955 213.873 249.717C214.445 249.677 214.824 249.637 215.203 249.604C217.238 250.041 219.28 250.479 221.514 250.995C222.08 251.366 222.452 251.658 222.991 252.135C223.157 252.665 223.15 253.016 223.144 253.368C219.3 252.91 215.456 252.46 211.406 251.976V251.969Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 328,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M18.6934 16.8903C23.6277 17.1156 28.336 17.3475 33.2238 17.6987C31.395 17.8246 29.3867 17.7782 27.3784 17.871C26.4208 17.9174 25.4765 18.2222 24.5255 18.4077C24.5455 18.686 24.5654 18.9577 24.5854 19.236C25.4964 19.289 26.4141 19.3354 27.5513 19.4878C27.7774 19.5872 27.8173 19.8125 27.6577 19.8456C27.3917 19.9052 27.2786 19.9317 27.1722 19.9582C25.8821 19.9582 24.5987 19.9582 22.9694 19.9847C19.7108 19.9582 16.7915 19.9052 13.8721 19.8522C13.2337 19.7727 12.6019 19.6932 11.5578 19.5607C14.2644 19.1167 16.572 18.7324 18.8796 18.3547C18.8929 18.2288 18.9062 18.1029 18.9195 17.977C17.636 17.7451 16.3459 17.5132 15.0491 17.1355C16.1797 16.9566 17.3168 16.9234 18.6801 16.8837L18.6934 16.8903Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 333,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M232.553 24.9279H237.368C237.435 25.8821 237.494 26.6574 237.574 27.7176C237.601 27.9893 237.601 28.2212 237.474 28.2344C237.255 28.2543 237.169 28.2609 236.982 28.2609C236.883 28.2609 236.676 28.2609 236.45 28.2609C232.547 28.7778 228.869 29.3079 225.039 29.8247C224.646 29.9771 224.407 30.1362 223.995 30.3151C223.277 30.4873 222.731 30.6397 222.186 30.6066C222.179 30.0301 222.173 29.6524 222.319 29.2019C223.197 28.8705 223.928 28.5989 224.76 28.4531C225.311 28.3338 225.757 28.082 226.356 27.817C226.701 27.7507 226.901 27.7043 227.287 27.6381C229.202 27.0881 230.931 26.5779 232.64 25.9881C232.726 25.9616 232.593 25.299 232.567 24.9279H232.553Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 338,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M6.94934 65.4739C6.93604 66.0305 6.92939 66.5871 6.91609 67.3558C6.91609 67.5678 6.91609 67.5678 6.76313 67.5479C6.05823 67.0377 5.50627 66.554 4.94766 66.0636C2.69993 59.5103 1.38322 52.7714 1.16376 45.7741C1.31007 46.3837 1.45637 46.9933 1.72902 47.815C1.85537 48.027 1.94182 48.1993 1.94182 48.1993C1.94182 48.1993 2.13468 48.1927 2.08813 48.4047C2.18123 49.4782 2.32753 50.3396 2.44058 51.3931C2.52038 52.5461 2.62678 53.5003 2.73318 54.4545C2.89944 54.4346 3.06569 54.4213 3.23194 54.4014C3.43144 53.984 3.63095 53.5665 3.8371 53.1491C3.8371 53.1491 3.9036 53.1955 3.88365 53.3678C3.92355 54.09 3.97675 54.64 3.84375 55.1833C3.65755 56.1972 3.65755 57.211 3.65755 58.2314C3.877 58.2248 4.0898 58.2182 4.30925 58.2049C4.3558 57.8935 4.40236 57.5754 4.57526 57.423C5.08066 58.7416 5.46637 59.8946 5.67252 61.0807C5.34002 61.6108 5.19372 62.121 5.04076 62.6246C5.49962 62.6114 5.96512 62.5981 6.53703 62.6975C6.88949 63.3933 7.12889 63.9764 7.25524 64.6257C7.07569 64.9504 7.00919 65.2022 6.94934 65.454V65.4739ZM4.63511 60.3651L4.28265 60.2789C4.3558 60.3518 4.43561 60.4181 4.63511 60.3651Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 343,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M1.38987 215.618C3.04574 208.978 4.70161 202.346 6.44393 195.554C6.80303 196.389 7.06904 197.376 7.22864 198.661C4.83461 203.412 4.04325 208.269 3.22529 213.239C3.21199 213.789 3.22529 214.233 3.27184 214.79C3.30509 214.896 3.27849 215.121 3.09894 215.108C2.63343 215.578 2.37408 216.082 2.05488 216.539C1.79552 216.91 1.45637 217.228 1.15046 217.573C1.14381 217.374 1.13716 217.175 1.24357 216.718C1.36992 216.181 1.37657 215.903 1.38322 215.625L1.38987 215.618Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 348,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M70.6372 255.322C71.1093 254.792 71.7012 254.282 72.3928 253.951C74.3812 252.99 76.4095 252.109 78.604 250.949C78.7569 250.618 78.7237 250.532 78.6705 250.439C78.6572 250.439 78.6505 250.465 78.8101 250.525C79.2091 250.373 79.4486 250.161 79.668 249.949C79.6547 249.949 79.6414 249.975 79.801 249.982C80.2 249.809 80.4394 249.63 80.6655 249.452C80.6522 249.452 80.6456 249.471 80.8318 249.478C82.0554 249.133 83.0928 248.776 84.077 248.59C82.8933 249.67 81.7628 250.598 80.6323 251.519C79.4153 254.375 76.4959 254.984 74.1883 256.436C72.5591 257.463 71.801 256.157 70.6172 255.329L70.6372 255.322Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 353,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M155.26 35.3377C155.825 35.7088 156.244 36.1528 156.762 36.8618C155.379 38.6575 153.89 40.1882 152.254 41.7917C150.884 42.8254 149.66 43.7796 148.363 44.5681C148.151 43.8127 148.011 43.223 147.871 42.6332C147.871 42.6332 147.898 42.673 147.964 42.6531C148.071 42.6001 148.164 42.5471 148.157 42.5338C148.117 42.4345 148.051 42.3417 147.998 42.2489C150.372 39.9695 152.746 37.6901 155.273 35.3377H155.26Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 358,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M43.7709 257.907C42.913 258.536 42.0551 259.172 41.1374 260.014C37.2072 260.544 33.3369 260.862 29.4665 261.18C29.4067 260.835 29.3535 260.491 29.2936 260.146C33.3701 259.172 37.4466 258.198 41.6628 257.085C42.0152 256.939 42.228 256.933 42.6802 257.058C43.2056 257.423 43.4915 257.661 43.7775 257.9L43.7709 257.907Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 363,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M254.366 213.411C253.787 213.842 253.209 214.279 252.457 214.929C252.058 215.154 251.832 215.161 251.586 214.955C251.174 212.093 250.781 209.436 250.435 206.573C250.243 204.963 249.957 203.565 249.81 202.153C249.784 201.882 250.296 201.557 250.635 201.398C250.987 202.12 251.253 202.703 251.539 203.465C251.779 203.87 252.005 204.095 252.264 204.4C252.377 204.539 252.47 204.572 252.49 204.731C252.949 206.832 253.488 208.786 254.033 210.94C254.153 211.894 254.259 212.656 254.372 213.411H254.366Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 368,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M171.014 24.8219C170.694 24.3846 170.555 23.9406 170.349 23.3244C173.195 20.9456 176.107 18.739 179.173 16.4662C179.705 17.0029 180.084 17.6059 180.61 18.4408C177.471 20.5612 174.325 22.6883 171.007 24.8285L171.014 24.8219Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 373,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M258.003 210.701C257.598 210.549 256.84 210.396 256.84 210.244C256.84 208.667 256.008 209.263 254.951 209.528C254.153 207.461 253.674 205.453 253.182 203.26C252.776 201.524 252.371 199.967 252.045 198.29C252.597 198.37 253.069 198.569 253.628 198.854C253.707 198.946 253.794 199.172 253.654 199.225C253.428 199.463 253.342 199.655 253.248 199.841C253.528 199.808 253.807 199.768 254.193 199.841C254.565 200.411 254.838 200.875 255.17 201.537C256.155 204.724 257.072 207.713 257.997 210.701H258.003Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 378,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M5.85207 61.0674C5.46637 59.9145 5.08731 58.7549 4.61516 57.2905C4.36245 56.3827 4.1962 55.793 4.02995 55.2032C3.97675 54.6532 3.92355 54.1033 3.9169 53.3545C4.64176 54.1298 5.32672 55.0972 6.17793 56.1044C6.89614 57.7278 7.43479 59.3247 8.02665 61.0674C8.2461 61.75 8.41901 62.2867 8.59191 62.83C8.97761 63.9896 9.35667 65.1426 9.87537 66.6269C10.3276 67.9919 10.6468 69.0322 10.7864 70.0394C9.52957 68.1973 8.45226 66.3949 7.37494 64.586C7.13554 64.0029 6.89614 63.4198 6.53703 62.5849C6.23113 61.9156 6.04493 61.4982 5.85872 61.0807L5.85207 61.0674Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 383,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M30.8697 240.009C33.6627 239.943 36.4491 239.857 39.2421 239.79C41.031 239.744 42.8132 239.711 44.6886 239.963C44.7817 240.34 44.7817 240.427 44.7817 240.513C44.7817 240.513 44.7817 240.513 44.5622 240.513C41.317 240.851 38.2845 241.195 35.2521 241.533H21.4332C21.4332 241.454 21.4266 241.374 21.4199 241.301C22.6302 241.056 23.8406 240.804 25.2371 240.486C25.9021 240.334 26.3676 240.261 27.139 240.248C27.5313 240.334 27.6311 240.36 27.9171 240.427C29.021 240.307 29.932 240.148 30.8364 239.996C30.8364 239.996 30.8497 240.016 30.8564 240.022L30.8697 240.009Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 388,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M147.692 42.6531C148.004 43.223 148.144 43.8127 148.337 44.7404C147.772 45.8271 147.153 46.5891 146.528 47.3379C145.324 48.7691 144.114 50.1872 142.791 51.6251C142.671 51.6383 142.438 51.6582 142.438 51.6582C142.185 50.7305 141.926 49.8095 141.547 48.7691C143.456 46.662 145.491 44.6609 147.692 42.6465V42.6531Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 393,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M258.063 210.88C257.079 207.706 256.155 204.718 255.35 201.544C256.507 202.233 256.56 201.338 256.726 200.656C257.072 201.623 257.418 202.591 257.884 203.684C258.821 208.09 259.639 212.371 260.244 216.897C259.885 217.155 259.739 217.162 259.586 217.168C259.214 215.565 258.841 213.961 258.296 212.272C258.123 212.186 258.136 212.152 258.136 212.152C258.136 211.788 258.123 211.423 258.056 210.88H258.063Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 398,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M259.433 202.737C257.066 196.839 254.738 191.127 252.45 185.396C252.264 184.932 252.311 184.375 252.411 183.852C256.607 191.213 259.739 198.907 260.756 207.335C260.337 205.857 259.912 204.386 259.44 202.737H259.433Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 403,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M3.25854 213.133C4.0499 208.276 4.84126 203.412 7.26189 198.84C7.48134 198.748 7.5678 198.767 7.78725 198.774C7.92025 198.761 7.90695 198.754 7.90695 198.754C7.32174 203.452 6.74319 208.144 6.03828 213.001C5.91192 212.033 5.91192 210.913 5.91192 209.787C5.79887 209.76 5.67917 209.727 5.56612 209.701C5.28017 210.615 4.98756 211.536 4.53536 212.431C3.9967 212.649 3.63095 212.895 3.25854 213.133Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 408,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M21.8522 247.709C27.0791 247.351 32.3194 247.185 37.7392 246.927C38.371 246.801 38.8232 246.761 39.4616 246.834C39.6943 247.086 39.721 247.232 39.7276 247.378C33.9154 248.087 28.1099 248.796 22.0783 249.458C21.8588 248.908 21.8655 248.398 21.8588 247.709H21.8522Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 413,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M25.676 103.475C26.3942 103.853 27.4582 104.052 27.7774 104.642C29.4067 107.67 30.8364 110.804 32.3327 114.091C30.6968 112.381 29.0808 110.473 27.4316 108.597C26.5538 107.604 25.6028 106.676 24.9112 105.503C25.4632 105.397 25.789 105.503 26.1149 105.596C25.9686 104.887 25.8223 104.178 25.676 103.469V103.475Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 418,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M242.575 35.7751C242.362 35.7751 242.143 35.7751 241.77 35.5895C241.238 34.8408 240.859 34.2775 240.826 34.2312C241.318 32.8728 241.684 31.8523 242.07 30.6132C242.07 29.5795 242.07 28.7513 242.056 27.923C243.433 28.0489 244.803 28.1748 246.439 28.4001C246.798 28.632 246.931 28.6983 247.097 28.7049C247.097 28.7049 247.144 28.7248 247.17 28.738C247.17 29.129 247.15 29.5 246.924 30.1163C246.672 32.1572 246.612 33.9661 246.559 35.7685C246.346 35.7685 246.14 35.7685 245.76 35.5498C245.588 34.0788 245.701 32.8198 245.488 31.6138C245.415 31.1963 244.331 30.5271 244.038 30.6662C243.446 30.9445 242.635 31.7861 242.721 32.2367C242.848 32.8927 243.692 33.4095 243.779 33.5023C243.267 34.4763 242.921 35.1257 242.575 35.7751Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 423,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M14.025 236.073C13.5396 234.549 13.1805 233.078 13.0209 231.362C14.3575 230.746 15.5013 230.368 16.7582 229.977C17.0309 229.984 17.1905 230.003 17.4299 230.182C18.5005 230.646 19.4847 230.944 20.4756 231.243C20.4756 231.335 20.4623 231.422 20.4557 231.514C19.1988 231.574 17.9486 231.634 16.4922 231.7C16.991 233.27 17.4299 234.655 17.7291 236.014C16.5321 236.08 15.3683 234.523 14.4041 236.186C14.3176 236.166 14.2312 236.139 14.025 236.073Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 428,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M243.772 19.3685C242.874 19.0372 242.15 18.4541 241.398 18.4276C238.685 18.3149 235.958 18.3812 233.238 17.8445C236.783 17.8445 240.327 17.8776 243.872 17.8246C244.723 17.8113 245.568 17.5132 246.452 17.162C247.855 17.1421 249.225 17.3077 249.877 17.3873C250.788 18.4342 251.253 18.9709 252.158 20.0046C249.644 19.7926 247.583 19.6137 245.262 19.3287C244.856 19.2691 244.716 19.3155 244.57 19.3685C244.357 19.3685 244.145 19.3751 243.779 19.3751L243.772 19.3685Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 433,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M252.091 221.462C248.959 220.82 249.664 217.997 249.039 215.876C248.886 215.36 248.753 214.843 248.367 214.074C248.075 213.04 248.028 212.258 247.995 211.291C247.849 210.801 247.696 210.489 247.463 210.085C247.39 209.986 247.357 209.747 247.596 209.714C247.995 209.648 248.155 209.621 248.467 209.668C249.059 210.615 249.657 211.45 249.904 212.371C250.416 214.279 250.735 216.234 251.16 218.162C251.16 218.182 251.539 218.123 251.905 218.103C252.397 218.162 252.723 218.209 253.049 218.335C253.049 218.408 253.036 218.553 253.036 218.553C252.723 219.474 252.411 220.389 252.091 221.462Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 438,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M25.523 103.403C25.8223 104.184 25.9619 104.893 26.1082 105.602C25.7824 105.503 25.4565 105.397 24.9511 105.324C24.7782 105.357 24.8048 105.331 24.858 105.172C22.9162 102.051 20.9544 99.0623 18.8995 96.1401C18.6069 95.7227 17.8621 95.6233 17.3235 95.3715C17.1705 95.2125 17.0176 95.0534 16.9311 94.5697C17.0043 93.9469 17.0043 93.6487 17.0774 93.3372C17.1439 93.324 17.2503 93.4101 17.4232 93.4433C18.2744 94.0728 18.9527 94.6691 19.6377 95.2655C21.5463 97.9491 23.4548 100.639 25.5164 103.396L25.523 103.403Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 443,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M59.4318 263.002C58.0951 263.426 56.938 263.791 55.7809 264.155C55.7011 263.95 55.6279 263.744 55.5481 263.539C60.3362 261.591 65.1176 259.643 69.9057 257.701C70.0054 257.926 70.0985 258.152 70.1983 258.37C66.6737 259.894 63.1425 261.412 59.4318 263.002Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 448,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M232.201 243.024C233.338 242.978 234.475 242.938 236.005 242.918C236.863 242.772 237.335 242.607 237.8 242.441C237.774 242.308 237.74 242.176 237.714 242.043C237.135 242.09 236.557 242.13 235.985 242.176C235.499 242.229 235.007 242.275 234.342 242.176C234.156 241.858 234.143 241.686 234.136 241.52C235.393 241.314 236.65 241.109 237.993 240.738C238.791 240.387 239.496 240.208 240.201 240.029C240.261 240.181 240.327 240.34 240.387 240.493C240.008 240.811 239.629 241.129 239.011 241.646C239.955 241.898 240.627 242.07 242.063 242.454C240.587 242.832 239.815 243.024 238.997 243.229C239.21 243.561 239.376 243.826 239.583 244.237C237.115 244.257 234.608 244.137 231.975 243.839C231.962 243.455 232.081 243.236 232.194 243.024H232.201Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 453,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M226.881 251.36C228.091 251.009 229.541 250.79 230.951 250.432C231.862 250.2 232.72 249.776 233.617 249.233C234.389 249.074 235.147 249.107 236.031 249.471C236.643 249.836 237.129 249.882 237.614 249.922C237.847 249.935 238.073 249.948 238.671 249.995C239.908 250.32 240.773 250.611 241.644 250.909C236.796 251.082 231.948 251.26 226.881 251.36Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 458,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M14.5637 236.292C15.375 234.523 16.5388 236.073 17.9353 236.04C21.4532 236.365 24.6386 236.643 27.9902 236.941C28.9545 236.875 29.7458 236.789 30.6436 236.795C30.9362 236.888 31.1157 236.875 31.4948 236.915C32.0734 236.961 32.4657 236.961 32.7118 237.12C31.3751 237.345 30.1581 237.319 28.9877 237.531C28.2695 237.657 27.6178 238.147 26.9328 238.472H20.5288C21.4133 238.127 21.8788 237.948 22.178 237.829C19.7374 237.365 17.2237 236.888 14.557 236.298L14.5637 236.292Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 463,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M57.2705 8.05088C60.1234 8.88579 62.963 9.88635 65.9821 10.9333C66.2016 11.6026 66.2481 12.232 66.0154 12.8947C63.4085 12.0796 61.081 11.2315 58.7535 10.3833C58.7535 10.3833 58.7335 10.4032 58.7069 10.2773C58.534 10.0454 58.3877 9.93936 58.2414 9.82672C57.9555 9.60143 57.6762 9.36951 57.3171 9.02494C57.2439 8.68038 57.2572 8.44846 57.2772 8.04426L57.2705 8.05088Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 468,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M155.393 297.975C153.923 298.545 152.447 298.936 150.817 299.486C150.664 299.652 150.418 299.659 150.292 299.652C150.079 299.652 149.999 299.652 149.747 299.652C149.361 299.645 149.141 299.639 148.922 299.632C148.51 299.036 148.091 298.439 147.552 297.75C147.466 296.935 147.506 296.206 147.552 295.332C148.55 295.935 149.374 296.432 150.305 296.796C152.154 296.67 154.043 296.027 155.393 297.975Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 473,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M241.857 250.949C240.78 250.618 239.908 250.32 238.851 249.982C238.884 249.71 239.097 249.306 239.337 249.286C243.194 248.935 247.064 248.636 250.968 248.557C248.959 248.875 246.951 249.2 244.75 249.544C245.228 249.862 245.541 250.068 246.273 250.558C244.603 250.73 243.333 250.863 241.85 250.949H241.857Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 478,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M10.6069 77.0102C10.9926 77.2951 11.3783 77.5801 11.9768 78.0306C11.3051 78.4083 10.8396 78.68 10.0815 78.8258C9.50962 78.627 9.22367 78.5475 8.93106 78.468C8.93106 78.468 8.94436 78.5077 8.96431 78.5011C8.96431 77.9379 9.07071 77.3283 8.88451 76.8247C7.9136 74.2007 6.86954 71.6032 6.00503 68.7804C6.41068 68.2371 6.66338 67.9057 6.90944 67.5678C7.07569 68.0913 7.24194 68.6214 7.38159 69.5027C7.5412 70.2514 7.7274 70.6424 7.9136 71.0399C7.9136 71.0399 7.9136 71.0466 7.9003 71.2189C8.0599 71.7688 8.23945 72.1465 8.41236 72.5309C8.41236 72.5309 8.41236 72.5375 8.41236 72.7164C8.74486 73.6043 9.07736 74.3133 9.40987 75.0289C9.40987 75.0289 9.40322 75.029 9.40987 75.1747C9.58277 75.5524 9.74237 75.791 9.90197 76.0229C9.90197 76.0229 9.88867 76.0229 9.90197 76.1885C10.1414 76.5729 10.3675 76.7982 10.5869 77.0235L10.6069 77.0102Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 483,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M88.1535 22.6286C86.1053 21.4425 84.0571 20.0841 82.0155 18.7059C81.9024 18.633 81.8825 18.4276 81.8293 18.3017C82.5142 18.0499 83.1859 17.7981 83.9972 17.4668C85.7595 18.5866 87.3887 19.786 89.0978 21.1245C88.8385 21.6612 88.4927 22.0588 88.1535 22.6286Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 488,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M228.51 239.923C229.787 239.499 231.27 239.075 232.72 238.657C231.676 238.425 230.525 238.174 229.368 237.922C229.375 237.763 229.388 237.61 229.395 237.451C230.499 237.451 231.602 237.451 232.919 237.491C235.034 237.902 236.923 238.28 238.811 238.651C237.361 239.068 235.819 239.506 234.229 240.115C232.361 240.162 230.538 240.036 228.504 239.916L228.51 239.923Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 493,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M239.855 237.074C239.223 236.265 238.785 235.464 238.352 234.662C238.519 234.45 238.685 234.231 238.851 234.019C240.653 234.198 242.455 234.337 244.251 234.576C244.816 234.648 244.603 235.444 243.699 236.199C242.415 236.563 241.238 236.829 239.855 237.08V237.074Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 498,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M84.1435 248.418C83.1061 248.769 82.0687 249.12 80.8118 249.292C82.614 247.735 84.629 246.364 86.6506 244.992C86.6506 244.992 86.6373 244.979 86.8102 245.005C87.3688 244.687 87.7545 244.343 88.1469 243.998C88.1469 243.998 88.1469 243.985 88.3065 244.005C89.0313 243.7 89.5833 243.375 90.1419 243.051C89.969 243.687 89.7961 244.329 89.5899 245.184C89.55 245.403 89.5367 245.516 89.5367 245.516C89.4702 245.569 89.3971 245.622 89.0779 245.807C87.7545 246.456 86.1917 246.529 86.6107 248.391C86.5442 248.451 86.4843 248.511 86.2782 248.471C85.7861 248.285 85.4403 248.199 84.9415 248.053C84.5691 248.14 84.3497 248.285 84.1435 248.438C84.1568 248.438 84.1502 248.411 84.1502 248.411L84.1435 248.418Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 503,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M1.06401 217.765C1.45637 217.228 1.79552 216.91 2.05488 216.532C2.37408 216.075 2.63343 215.572 3.13219 215.26C3.01914 216.817 2.68663 218.196 2.36078 219.58C2.12803 221.615 1.89527 223.649 1.66252 225.69C1.54947 225.703 1.42977 225.723 1.31672 225.736C1.20367 223.145 1.09061 220.554 1.06401 217.765Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 508,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M254.412 213.604C254.253 212.649 254.14 211.887 254.193 210.973C254.678 210.933 255.004 211.052 255.33 211.172C255.543 213.166 255.769 215.161 255.968 217.155C256.075 218.209 256.128 219.262 255.942 220.402C255.45 218.202 254.958 216.002 254.412 213.61V213.604Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 513,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M216.427 263.791C216.294 263.42 216.294 263.128 216.301 262.605C219.572 262.962 222.844 263.539 226.123 264.115C226.103 264.288 226.083 264.46 226.07 264.632C222.904 264.374 219.739 264.122 216.434 263.791H216.427Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 518,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M216.407 259.232C217.664 258.927 219.06 258.768 220.597 258.529C222.924 258.993 225.105 259.543 227.433 260.199C223.895 260.001 220.218 259.689 216.4 259.232H216.407Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 523,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.401 2.94205C202.03 4.28718 198.831 5.61243 195.446 6.93105C196.783 6.00338 198.239 4.93655 199.848 4.18779C202.435 2.98844 205.115 2.00775 207.755 0.9343C207.848 1.14634 207.941 1.35838 208.035 1.56379C207.217 2.01438 206.399 2.46496 205.401 2.93543V2.94205Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 528,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M17.37 95.5504C17.8754 95.6233 18.6202 95.7293 18.9128 96.1468C20.9677 99.0689 22.9295 102.057 24.878 105.198C23.508 103.833 22.1182 102.342 20.8746 100.732C19.6377 99.1286 18.5537 97.3991 17.37 95.557V95.5504Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 533,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M3.09229 69.1051C1.93517 66.1233 0.478806 63.2144 0.79801 59.6031C1.88197 62.7704 2.88614 65.7058 3.69745 68.8467C3.36494 69.072 3.22529 69.0918 3.08564 69.1117L3.09229 69.1051Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 538,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M27.1257 238.472C27.6178 238.141 28.2695 237.657 28.9877 237.531C30.1581 237.326 31.3751 237.345 32.8381 236.988C33.8356 236.636 34.5671 236.577 35.3053 236.643C35.3053 236.862 35.3053 236.948 35.1523 237.12C34.8198 237.822 34.6403 238.439 34.4541 239.048C34.4275 239.181 34.3676 239.3 34.1947 239.453C33.3103 239.187 32.5389 238.684 31.7143 238.584C30.2645 238.419 28.7882 238.498 27.1323 238.465L27.1257 238.472Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 543,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M185.584 252.897C185.584 252.897 185.597 252.857 185.61 252.838C186.628 253.732 187.639 254.646 188.709 255.746C188.763 255.932 188.63 256.051 188.63 256.051C185.863 254.66 183.097 253.268 180.324 251.698C180.317 251.526 180.337 251.446 180.517 251.413C181.261 251.393 181.833 251.413 182.398 251.42C182.398 251.42 182.319 251.419 182.398 251.552C183.516 252.089 184.553 252.493 185.591 252.897H185.584Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 548,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M228.331 4.94318C225.784 5.44015 223.43 5.93711 220.876 6.42745C220.244 6.20216 219.819 5.97687 219.28 5.64556C222.685 4.9233 226.189 4.31368 229.694 3.69744C229.754 3.98237 229.82 4.2673 229.88 4.55223C229.428 4.67813 228.969 4.81065 228.331 4.93655V4.94318Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 553,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M44.1233 262.552C44.6753 263.015 45.0344 263.44 45.5464 263.89C42.5339 264.215 39.3618 264.513 36.1964 264.818C36.1698 264.592 36.1499 264.367 36.1233 264.142C38.7234 263.599 41.3303 263.055 44.1233 262.552Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 558,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M6.88949 50.3926C6.63013 50.8829 6.37743 51.1745 5.99838 51.5389C5.65257 49.1005 5.43312 46.5891 5.49962 43.9519C5.95848 43.8525 6.13803 43.8657 6.31758 43.8856C6.51043 45.9861 6.70328 48.0866 6.89614 50.3859L6.88949 50.3926Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 563,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M2.13468 48.1927H1.94182C1.94182 48.1927 1.85537 48.027 1.86867 47.9409C2.22113 46.4433 2.55363 45.0386 2.73318 44.2898C3.06569 46.6156 3.50459 49.6769 3.8903 52.9437C3.63095 53.5732 3.43144 53.9906 3.23194 54.4081C3.06569 54.428 2.89944 54.4412 2.73318 54.4611C2.62678 53.5069 2.52038 52.5527 2.62013 51.2937C2.60018 50.0613 2.36743 49.127 2.13468 48.1927Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 568,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M230.718 248.352C228.078 248.173 225.524 247.861 222.971 247.543C222.991 247.311 223.004 247.079 223.024 246.854C225.943 246.993 228.856 247.132 231.962 247.358C231.702 247.702 231.25 247.961 230.718 248.352Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 573,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M100.343 238.293C99.3323 238.2 98.4944 238.041 97.59 237.869C97.6387 237.109 99.0707 236.016 101.886 234.589C102.039 234.509 102.092 234.556 102.119 234.774C102.418 235.377 102.697 235.768 102.97 236.153C102.152 236.842 101.327 237.531 100.343 238.286V238.293Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 578,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M237.601 28.2212C237.601 28.2212 237.601 27.9893 237.601 27.8766C238.465 27.7772 239.323 27.7838 240.274 27.9627C240.115 29.0097 239.855 29.891 239.503 30.9048C239.33 32.5879 239.237 34.1517 239.15 35.7088C238.911 35.7155 238.665 35.7221 238.239 35.5432C238.239 32.9523 239.27 30.5006 237.594 28.2212H237.601Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 583,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M49.184 2.73001C49.2771 3.09446 49.2771 3.31975 49.2771 3.7107C46.9097 3.06795 44.5356 2.26618 42.1682 1.45777C42.2679 1.13971 42.3743 0.82828 42.4741 0.510221C44.6819 1.19935 46.8831 1.88848 49.184 2.72339V2.73001Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 588,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M259.559 217.387C259.739 217.162 259.885 217.155 260.251 217.122C260.643 219.574 260.816 222.039 260.983 224.51C260.783 224.517 260.577 224.53 260.377 224.537C260.091 222.224 259.812 219.912 259.559 217.387Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 593,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M249.571 179.2C247.922 176.854 246.259 174.323 244.597 171.613C246.253 173.959 247.902 176.49 249.571 179.2Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 598,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M255.317 210.986C255.011 211.059 254.685 210.946 254.186 210.787C253.481 208.786 252.943 206.832 252.677 204.459C253.029 203.843 253.109 203.644 253.189 203.439C253.674 205.453 254.153 207.461 254.785 209.588C255.057 210.065 255.177 210.43 255.31 210.986H255.317Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 603,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M232.394 24.9346C232.58 25.299 232.713 25.955 232.62 25.9881C230.911 26.5712 229.182 27.0881 227.28 27.4592C227.114 26.9489 227.12 26.5977 227.127 26.2399C228.537 25.8954 229.94 25.5574 231.483 25.1068C231.822 24.9809 232.035 24.9544 232.394 24.9279V24.9346Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 608,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M85.0812 248.126C85.427 248.212 85.7794 248.292 86.1452 248.537C84.4561 249.63 82.7403 250.558 80.8318 251.499C81.7694 250.591 82.8999 249.664 84.0837 248.583C84.1369 248.424 84.1435 248.451 84.2632 248.464C84.6157 248.358 84.8484 248.246 85.0812 248.133V248.126Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 613,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.1966 7.93824C65.5831 6.84491 62.9763 5.75158 60.3628 4.66488C60.5091 4.35344 60.6554 4.04863 60.8017 3.7372C63.2223 5.02932 65.6363 6.32144 68.1301 7.77258C68.2033 7.93161 68.1966 7.93824 68.1966 7.93824Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 618,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M239.596 30.7789C239.855 29.8976 240.115 29.0097 240.487 27.9959C240.966 27.8567 241.332 27.8501 241.877 27.8832C242.063 28.7513 242.07 29.5729 241.864 30.6C240.966 30.7921 240.281 30.7855 239.596 30.7789Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 623,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M2.50043 219.667C2.69328 218.196 3.02579 216.817 3.31839 215.273C3.28514 215.114 3.31174 214.889 3.44474 214.757C3.80385 214.571 4.02995 214.518 4.2494 214.472C4.1031 216.214 3.97675 217.957 3.7706 219.693C3.76395 219.759 3.02579 219.733 2.49378 219.667H2.50043Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 628,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M223.356 253.381C223.15 253.016 223.157 252.665 223.157 252.142C225.139 252.122 227.127 252.274 229.109 252.427C229.109 252.539 229.109 252.659 229.109 252.771C227.26 252.983 225.418 253.189 223.356 253.381Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 633,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M251.087 234.854C250.575 234.297 249.93 233.588 249.664 232.76C249.591 232.528 250.635 231.945 251.373 231.521C251.42 232.568 251.26 233.615 251.087 234.854Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 638,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M253.175 218.64C253.036 218.547 253.049 218.408 253.049 218.149C252.889 217.453 252.723 217.009 252.637 216.466C252.863 216.274 253.016 216.194 253.169 216.108C253.8 217.52 254.426 218.931 255.057 220.342L254.279 220.634C253.96 219.998 253.634 219.362 253.175 218.64Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 643,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M24.9578 162.668C24.6851 162.741 24.4191 162.794 24.0135 162.734C23.8738 162.482 23.8672 162.356 23.8605 162.23C24.7184 161.316 25.5829 160.401 26.6269 159.48C26.8131 159.474 26.8663 159.52 26.8331 159.686C26.1814 160.779 25.5629 161.7 24.9445 162.628C24.9445 162.628 24.9511 162.654 24.9578 162.668Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 648,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M113.577 41.9839C112.479 41.255 111.349 40.3671 110.179 39.3069C111.276 40.0358 112.406 40.9237 113.577 41.9839Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 653,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M86.7769 248.385C86.1851 246.536 87.7412 246.463 88.9715 245.9C88.3929 246.682 87.6747 247.523 86.7769 248.385Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 658,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M208.786 133.671C209.012 133.386 209.218 133.28 209.537 133.181C210.163 134.056 210.668 134.924 211.207 135.957C210.415 135.368 209.591 134.612 208.793 133.671H208.786Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 663,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M4.2361 214.293C4.02995 214.525 3.80385 214.571 3.41149 214.65C3.22529 214.233 3.21199 213.789 3.22529 213.239C3.61765 212.895 3.99005 212.656 4.38906 212.55C4.3558 213.16 4.2893 213.643 4.2361 214.299V214.293Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 668,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M38.4242 0.00662624C39.3552 0.21204 40.1067 0.410827 40.8581 0.609614C40.8249 0.755392 40.7983 0.901169 40.765 1.04695C39.5946 0.887917 38.4242 0.728887 37.2538 0.569857L37.307 0.0795149C37.6195 0.0530099 37.9321 0.026505 38.4242 0V0.00662624Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 673,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M103.103 236.1C102.691 235.768 102.418 235.377 102.145 234.794C102.844 234.595 103.542 234.589 104.446 234.609C104.187 235.106 103.708 235.576 103.103 236.1Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 678,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M6.34418 43.6736C6.13803 43.8724 5.95847 43.8525 5.64592 43.826C5.46637 42.779 5.42647 41.7321 5.34667 40.4731C5.66587 41.3212 6.01833 42.3881 6.33753 43.6736H6.34418Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 683,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M6.76313 67.5479C6.66338 67.8991 6.41733 68.237 5.99838 68.5882C5.53287 67.8792 5.24692 67.1437 4.95431 66.2425C5.50627 66.554 6.06488 67.0443 6.76978 67.5545L6.76313 67.5479Z",
                fill: "#10273C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 688,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M14.2977 29.838C14.158 29.5795 14.0184 29.3211 13.8455 28.9103C13.9253 28.6254 14.0383 28.4862 14.2578 28.2675C14.7698 28.3603 15.1755 28.5392 15.7208 28.9567C15.3417 29.4073 14.823 29.6193 14.3043 29.838H14.2977Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 693,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M33.2238 154.073C32.8847 154.55 32.3593 155.014 31.4881 155.525C30.8763 155.564 30.6037 155.558 30.3377 155.544C31.2354 155.047 32.1332 154.55 33.2238 154.073Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 698,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M226.648 151.867C225.97 151.357 225.298 150.654 224.58 149.806C225.238 150.33 225.943 151.005 226.648 151.867Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 703,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M228.716 113.852C228.151 114.482 227.579 115.104 226.841 115.76C226.668 115.787 226.628 115.754 226.648 115.582C227.32 114.859 227.971 114.309 228.65 113.779C228.67 113.806 228.716 113.845 228.716 113.845V113.852Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 708,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M22.2711 12.8218C21.666 13.1001 20.9478 13.2392 20.0367 13.3453C20.6153 13.1067 21.3867 12.8947 22.2711 12.8218Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 713,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M28.0634 15.7506C28.5887 15.8168 28.9079 15.8897 29.2271 15.9692C29.2338 16.0488 29.2404 16.1349 29.2537 16.2144C27.9237 16.2144 26.587 16.2144 25.0974 16.1084C25.9154 15.9229 26.8863 15.8433 28.0634 15.7506Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 718,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M213.195 137.952C212.557 137.567 211.898 137.024 211.233 136.302C211.872 136.68 212.523 137.236 213.195 137.952Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 723,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M5.66587 214.757C5.81217 215.519 5.82547 216.373 5.80552 217.44C5.69247 216.718 5.61267 215.79 5.66587 214.757Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 728,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M253.129 215.969C253.009 216.194 252.856 216.281 252.517 216.532C252.125 216.857 251.918 217.009 251.659 216.97C251.606 216.234 251.606 215.697 251.606 215.161C251.832 215.161 252.058 215.147 252.457 215.128C252.783 215.346 252.943 215.585 253.135 215.969H253.129Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 733,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M30.7101 239.883C29.9453 240.135 29.0343 240.294 27.9703 240.34C27.8173 240.228 27.8572 240.062 27.8572 240.062C28.7616 239.969 29.666 239.877 30.7101 239.883Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 738,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M195.08 6.93105C194.488 7.34188 193.717 7.75933 192.859 8.05088C193.478 7.6003 194.189 7.26236 195.08 6.93105Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 743,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M214.193 313.07C214.545 313.547 214.897 314.018 215.25 314.495C215.017 314.607 214.784 314.713 214.552 314.826C214.432 314.362 214.312 313.898 214.199 313.249C214.199 313.07 214.199 313.07 214.199 313.07H214.193Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 748,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M215.17 139.96C214.698 139.734 214.212 139.343 213.727 138.773C214.199 138.999 214.678 139.396 215.17 139.96Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 753,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M256.075 43.5808C256.068 44.2699 256.048 44.8332 255.862 45.5952C255.51 45.8006 255.323 45.8138 255.137 45.8271C255.357 45.0253 255.569 44.2235 255.928 43.3157C256.068 43.2892 256.068 43.3754 256.068 43.5808H256.075Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 758,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M119.103 47.4505C118.624 47.2186 118.112 46.8277 117.607 46.2512C118.099 46.4765 118.584 46.8807 119.103 47.4505Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 763,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M237.548 249.77C237.129 249.882 236.643 249.842 236.138 249.637C236.57 249.524 237.022 249.571 237.548 249.77Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 768,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M52.2697 3.7372C51.8574 3.69082 51.3918 3.49203 50.8465 3.15409C51.2522 3.2071 51.731 3.39264 52.2697 3.7372Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 773,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M23.1955 163.012C23.1223 163.443 22.8962 163.913 22.4972 164.43C22.5704 163.999 22.7965 163.529 23.1955 163.012Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 778,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M59.3653 3.57155C59.1059 3.69744 58.8266 3.70407 58.5473 3.67756C58.5274 3.67756 58.5407 3.41251 58.534 3.27336C58.8 3.333 59.0727 3.38601 59.3653 3.57817V3.57155Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 783,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M36.7218 13.3386C36.3627 13.4513 35.9105 13.4844 35.3917 13.3784C35.5646 13.1332 35.8041 13.0206 36.1765 12.9013C36.376 13.0471 36.4824 13.1663 36.7218 13.3386Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 788,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M30.2047 155.604C30.6037 155.551 30.8697 155.558 31.3418 155.584C31.5413 155.597 31.4549 155.803 31.2288 155.915C30.4441 156.187 29.8855 156.353 29.3269 156.518C29.5729 156.234 29.8256 155.949 30.2047 155.604Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 793,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.2099 7.92499C68.6488 8.03763 69.0877 8.16353 69.52 8.2828C69.4601 8.43521 69.4003 8.58761 69.3471 8.74001C69.0079 8.56773 68.6754 8.38882 68.2698 8.07739C68.2033 7.93824 68.2099 7.93161 68.2166 7.92499H68.2099Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 798,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M188.816 255.872C189.261 256.018 189.647 256.224 190.026 256.429C189.966 256.575 189.906 256.714 189.847 256.86C189.481 256.681 189.115 256.508 188.683 256.19C188.616 256.051 188.749 255.939 188.816 255.872Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 803,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M243.107 169.247C242.775 169.035 242.449 168.651 242.123 168.108C242.449 168.326 242.788 168.698 243.107 169.247Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 808,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M216.6 141.497C216.281 141.397 215.928 141.152 215.616 140.781C215.961 140.887 216.261 141.119 216.6 141.497Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 813,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M32.8381 114.932C33.1307 115.025 33.4499 115.27 33.7758 115.681C33.4765 115.595 33.1706 115.336 32.8381 114.932Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 818,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M157.195 33.7143C157.407 33.933 157.514 34.1848 157.627 34.4366C157.407 34.3372 157.181 34.2378 156.942 34.0059C156.922 33.8734 157.095 33.7541 157.195 33.7209V33.7143Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 823,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M116.463 44.5681C116.164 44.5085 115.864 44.2898 115.532 43.9254C115.825 43.985 116.137 44.197 116.463 44.5681Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 828,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M71.3886 9.88635C71.5749 9.77371 71.7677 9.77371 71.9606 9.78696C71.9672 9.78696 71.9606 9.93274 71.9606 10.0123C71.7677 10.0123 71.5815 10.0123 71.3886 9.88635Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 833,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M124.051 216.612C123.765 216.42 123.625 216.181 123.638 215.797C124.024 215.644 124.25 215.638 124.476 215.631C124.476 215.631 124.609 215.75 124.676 215.81C124.556 216.102 124.377 216.334 124.051 216.612Z",
                fill: "#371E2D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 838,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M122.488 218.05C122.488 217.844 122.647 217.599 122.887 217.434C122.86 217.679 122.747 217.844 122.488 218.05Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 843,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M22.8563 309.585C22.7034 309.836 22.5571 310.088 22.4108 310.34C22.311 310.254 22.2046 310.161 22.1049 310.075C22.2645 309.923 22.4241 309.777 22.7233 309.611C22.863 309.591 22.863 309.591 22.863 309.591L22.8563 309.585Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 848,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M6.42398 37.8822C6.51708 38.1208 6.59023 38.4786 6.67003 38.8298C6.59023 38.7171 6.51043 38.5979 6.41733 38.3593C6.40403 38.2334 6.41068 38.0015 6.41733 37.8822H6.42398Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 853,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M5.41317 36.398C5.57942 36.3052 5.70577 36.398 5.85872 36.6431C5.82547 36.9347 5.73237 37.1202 5.64592 37.3057C5.56612 37.054 5.48632 36.7955 5.41317 36.398Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 858,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M34.2346 13.1332C33.9221 13.2591 33.4765 13.279 32.8913 13.1862C33.2039 13.0603 33.6494 13.0404 34.2346 13.1332Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 863,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M242.449 305.172C242.489 305.317 242.449 305.503 242.342 305.549C242.263 305.582 242.103 305.437 241.983 305.37C242.103 305.298 242.223 305.225 242.449 305.172Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 868,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M242.103 167.783C241.943 167.704 241.777 167.478 241.617 167.101C241.777 167.18 241.943 167.405 242.103 167.783Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 873,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M91.1992 22.6419C91.0396 22.622 90.8335 22.4696 90.6007 22.1913C90.7603 22.2178 90.9598 22.3636 91.1992 22.6419Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 878,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M1.29677 215.638C1.37657 215.896 1.36992 216.175 1.27017 216.565C1.12386 216.459 1.07066 216.247 1.02411 215.863C1.02411 215.697 1.21032 215.664 1.29677 215.638Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 883,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M28.7749 157.459C28.8813 157.201 28.9877 156.936 29.2138 156.598C29.3335 156.518 29.3402 156.518 29.3269 156.664C29.1606 157.049 29.001 157.28 28.8281 157.499C28.8082 157.486 28.7749 157.453 28.7749 157.453V157.459Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 888,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M74.1218 14.2265C73.909 14.2928 73.6297 14.2133 73.2773 14.0079C73.4901 13.9482 73.776 14.0145 74.1218 14.2265Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 893,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M108.483 37.1268C108.277 37.1533 108.011 37.0473 107.691 36.8022C107.898 36.769 108.157 36.8817 108.483 37.1268Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 898,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M104.785 234.615C104.819 234.443 104.978 234.244 105.277 234.032C105.244 234.205 105.078 234.403 104.785 234.615Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 903,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M3.11224 69.2641C3.23194 69.0852 3.37159 69.072 3.7174 69.0322C4.01665 69.1714 4.10975 69.3238 4.2228 69.6153C4.1297 69.8472 4.01665 69.94 3.71075 70.1653C3.39154 70.0063 3.26519 69.7147 3.11224 69.2707V69.2641Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 908,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M244.597 171.275C244.43 171.196 244.271 170.964 244.105 170.579C244.264 170.659 244.43 170.891 244.597 171.275Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 913,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M17.0242 93.3637C17.0242 93.6619 17.0176 93.9601 16.9511 94.4703C16.6917 94.4239 16.4922 94.1655 16.3193 93.6818C16.3459 93.4565 16.4523 93.3372 16.592 93.3306C16.8314 93.3372 16.9311 93.3505 17.0242 93.3637Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 918,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M219.054 143.995C218.848 144.015 218.595 143.909 218.296 143.657C218.502 143.63 218.754 143.743 219.054 143.995Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 923,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M217.75 142.888C217.571 142.842 217.378 142.65 217.172 142.312C217.345 142.358 217.544 142.55 217.75 142.888Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 928,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M118.079 222.171C117.992 222.31 117.906 222.45 117.693 222.622C117.567 222.655 117.534 222.622 117.587 222.503C117.74 222.264 117.866 222.171 118.026 222.118C118.046 222.132 118.072 222.165 118.072 222.165L118.079 222.171Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 933,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M107.705 232.011C107.618 231.865 107.705 231.74 107.971 231.64C108.071 231.793 107.984 231.918 107.705 232.011Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 938,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M106.701 232.965C106.621 232.833 106.701 232.72 106.92 232.608C107.04 232.747 106.973 232.873 106.701 232.965Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 943,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M110.085 39.0352C109.986 39.0683 109.839 38.9954 109.673 38.79C109.819 38.6906 109.952 38.7768 110.085 39.0352Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 948,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M109.587 38.5382C109.48 38.5581 109.341 38.4653 109.174 38.2268C109.287 38.2003 109.414 38.3063 109.587 38.5382Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 953,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M16.2861 93.5095C16.1131 93.4433 15.9868 93.3107 15.8737 93.0457C15.887 92.9065 15.8737 92.9198 16.0134 92.8535C16.2528 92.9728 16.3459 93.1517 16.439 93.3306C16.439 93.3306 16.3326 93.4499 16.2794 93.5095H16.2861Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 958,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M147.911 42.3483C148.038 42.3483 148.104 42.4345 148.144 42.5339C148.144 42.5471 148.064 42.6067 147.931 42.6598C147.845 42.6796 147.838 42.4411 147.911 42.3417V42.3483Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 963,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M114.095 42.5339C114.002 42.567 113.843 42.4941 113.643 42.2953C113.743 42.2555 113.889 42.3417 114.095 42.5339Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 968,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M258.15 212.172C258.097 212.166 258.03 212.172 258.05 212.172C258.144 212.159 258.13 212.192 258.15 212.172Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 973,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M118.491 221.741C118.491 221.953 118.431 222.065 118.179 222.158C118.072 222.178 118.039 222.145 118.092 222.026C118.245 221.787 118.358 221.681 118.485 221.582C118.485 221.582 118.518 221.688 118.485 221.741H118.491Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 978,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M150.392 296.597C150.358 296.597 150.299 296.524 150.239 296.458C150.279 296.485 150.325 296.504 150.392 296.597Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 983,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M74.6339 14.3458C74.6139 14.4253 74.4543 14.4982 74.2482 14.4717C74.3014 14.3657 74.3945 14.3458 74.6339 14.3458Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 988,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M73.131 13.2459C73.0246 13.3187 72.8982 13.2459 72.7386 13.0206C72.8384 12.9543 72.9714 13.0272 73.131 13.2459Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 993,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.683 21.6546C89.5899 21.6943 89.4303 21.6214 89.2308 21.416C89.3306 21.3763 89.4769 21.4558 89.683 21.6546Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 998,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M244.703 19.3619C244.71 19.3155 244.856 19.2625 245.056 19.289C245.022 19.3619 244.929 19.3619 244.703 19.3619Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1003,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M31.7808 12.835C31.7409 12.9477 31.6544 12.9676 31.4549 12.9543C31.4682 12.8615 31.6078 12.8019 31.7808 12.835Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1008,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M5.85872 35.6624C5.89197 35.7552 5.65257 35.7552 5.53287 35.7552C5.54617 35.6956 5.68582 35.6293 5.85872 35.6624Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1013,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M5.49297 33.9065C5.60602 33.8402 5.72572 33.9264 5.85872 34.1517C5.73902 34.2378 5.61267 34.1517 5.49297 33.9065Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1018,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M34.2213 116.476C34.3477 116.443 34.5006 116.549 34.6868 116.807C34.5605 116.841 34.4075 116.728 34.2213 116.476Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1023,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M226.688 115.807C226.628 115.973 226.548 116.112 226.342 116.297C226.223 116.337 226.176 116.297 226.209 116.158C226.342 115.893 226.469 115.8 226.628 115.754C226.628 115.754 226.668 115.794 226.688 115.813V115.807Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1028,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.6298 245.582C89.5367 245.522 89.55 245.41 89.5766 245.356C89.6963 245.337 89.7828 245.363 90.0089 245.449C90.0222 245.608 89.8825 245.655 89.6298 245.582Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1033,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M247.037 28.6121C246.931 28.6983 246.798 28.632 246.645 28.4067C246.745 28.3338 246.871 28.4067 247.037 28.6121Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1038,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M107.592 36.557C107.492 36.5835 107.346 36.4841 107.179 36.2588C107.286 36.2323 107.419 36.3317 107.592 36.557Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1043,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M27.7508 240.016C27.8638 240.062 27.8173 240.234 27.7774 240.307C27.6377 240.354 27.5446 240.327 27.3318 240.221C27.3252 240.002 27.4648 239.949 27.7575 240.016H27.7508Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1048,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M236.583 240.347C236.543 240.446 236.457 240.473 236.231 240.453C236.244 240.36 236.384 240.321 236.583 240.347Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1053,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M168.679 24.3249C168.699 24.4177 168.6 24.5569 168.373 24.7159C168.314 24.5834 168.427 24.4641 168.679 24.3249Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1058,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M93.693 24.6032C93.5999 24.6364 93.4337 24.5569 93.2342 24.3382C93.3406 24.2984 93.4802 24.3978 93.693 24.6032Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1063,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M229.474 113.276C229.322 113.428 229.169 113.587 228.869 113.799C228.716 113.859 228.67 113.812 228.683 113.72C228.743 113.527 228.816 113.455 229.062 113.402C229.302 113.362 229.388 113.322 229.481 113.282L229.474 113.276Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1068,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M229.887 113.017C229.854 113.143 229.774 113.229 229.568 113.282C229.388 113.315 229.295 113.355 229.169 113.282C229.295 113.037 229.454 112.905 229.687 112.838C229.754 112.905 229.887 113.024 229.887 113.024V113.017Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1073,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M169.211 23.8346C169.238 23.9274 169.145 24.0599 168.932 24.2322C168.852 24.0996 168.945 23.9671 169.211 23.8346Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1078,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M230.279 112.434C230.279 112.639 230.186 112.772 229.98 112.951C229.887 113.024 229.754 112.898 229.747 112.732C229.84 112.441 229.953 112.335 230.093 112.255C230.093 112.255 230.226 112.374 230.286 112.441L230.279 112.434Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1083,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M96.2001 26.5779C96.107 26.611 95.9407 26.5381 95.7279 26.3261C95.8343 26.2797 95.974 26.3791 96.2001 26.5779Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1088,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M94.5575 25.2129C94.4378 25.2924 94.3048 25.2128 94.1519 24.9677C94.2716 24.8815 94.4112 24.9677 94.5575 25.2129Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1093,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M221.694 146.917C221.601 146.944 221.448 146.857 221.255 146.639C221.355 146.606 221.494 146.705 221.694 146.917Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1098,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M243.553 169.811C243.426 169.897 243.293 169.811 243.16 169.559C243.293 169.46 243.426 169.546 243.553 169.811Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1103,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M223.642 148.925C223.549 148.945 223.41 148.852 223.237 148.633C223.33 148.607 223.463 148.706 223.642 148.925Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M218.203 143.412C218.103 143.445 217.963 143.365 217.79 143.16C217.93 143.061 218.07 143.147 218.203 143.412Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1113,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M244.058 170.314C243.965 170.341 243.832 170.255 243.646 170.049C243.739 170.023 243.872 170.109 244.058 170.314Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1118,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M220.211 145.42C220.118 145.453 219.965 145.373 219.772 145.168C219.872 145.128 220.011 145.221 220.211 145.42Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1123,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M219.686 144.916C219.586 144.942 219.439 144.85 219.267 144.624C219.373 144.598 219.506 144.697 219.686 144.916Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1128,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M28.2828 157.963C28.3294 157.804 28.4225 157.671 28.6685 157.519C28.7749 157.459 28.8082 157.493 28.7683 157.612C28.6286 157.864 28.5023 157.963 28.3294 158.003C28.3161 157.99 28.2828 157.963 28.2828 157.963Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1133,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M35.1723 152.092C35.2122 152.185 35.1324 152.331 34.9395 152.516C34.8398 152.39 34.9196 152.251 35.1723 152.092Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M27.784 158.46C27.8306 158.301 27.9237 158.168 28.1698 158.016C28.2762 157.963 28.3094 157.99 28.2629 158.109C28.1166 158.354 27.9902 158.453 27.8239 158.5C27.8106 158.486 27.7774 158.46 27.7774 158.46H27.784Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1143,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M27.272 158.944C27.3318 158.785 27.4249 158.659 27.6776 158.513C27.784 158.46 27.8173 158.486 27.7707 158.606C27.6244 158.851 27.4981 158.95 27.3318 158.997C27.3119 158.977 27.272 158.944 27.272 158.944Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1148,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M36.09 151.098C36.2031 151.217 36.1432 151.343 35.8972 151.456C35.8174 151.343 35.8839 151.231 36.09 151.098Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1153,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M23.7674 162.35C23.8671 162.356 23.8738 162.482 23.8871 162.8C23.8006 163.006 23.7075 163.019 23.4748 163.006C23.4482 162.813 23.5546 162.641 23.7607 162.35H23.7674Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1158,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M26.7932 159.447C26.8331 159.275 26.9328 159.156 27.1656 159.003C27.272 158.95 27.3119 158.983 27.272 159.109C27.139 159.368 27.0126 159.467 26.8663 159.527C26.8663 159.527 26.8131 159.48 26.7932 159.454V159.447Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1163,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M250.01 179.763C249.903 179.816 249.777 179.724 249.624 179.478C249.737 179.412 249.864 179.512 250.01 179.763Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1168,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M213.674 138.495C213.581 138.522 213.441 138.435 213.255 138.23C213.348 138.204 213.488 138.29 213.674 138.495Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1173,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M47.3486 52.3009C47.056 52.175 46.7634 52.0558 46.3777 51.6118C46.6171 50.7835 46.8698 50.1872 47.2954 49.7763C48.1333 48.9746 49.0643 48.2722 50.2347 47.2981C48.4392 46.6819 47.2156 46.4301 46.1582 45.8735C40.5655 42.938 34.5405 41.5267 28.3493 40.6454C27.0525 40.4598 25.7491 40.3273 24.4391 40.2345C22.6701 40.1086 22.7433 41.0429 23.1755 42.2357C22.7965 42.2357 22.577 42.2357 22.2312 42.1164C22.0118 40.9634 22.0251 39.9032 21.8056 38.896C21.646 38.1539 21.1805 37.4714 20.848 36.5769C20.8281 36.1395 20.8214 35.8877 20.9079 35.5365C21.2803 35.351 21.5596 35.2649 21.8655 35.3643C23.5413 35.6161 25.1905 35.6823 27.0592 35.7552C28.6153 35.7552 29.952 35.7552 31.2886 35.7552C31.2886 35.6624 31.2886 35.5697 31.2886 35.4769C29.8057 35.2384 28.3161 35.0064 26.6602 34.7811C25.2836 34.7613 24.0866 34.7281 22.8763 34.5492C22.8763 34.198 22.8763 33.9992 23.0891 33.7938C27.4848 34.2444 31.6677 34.7016 36.0501 35.192C36.9878 35.3311 37.7326 35.3775 38.4375 35.5697C42.8731 36.7889 47.2954 38.0479 51.8108 39.3996C52.1832 39.7442 52.4692 39.9827 52.7751 40.3936C54.0319 42.7194 57.0511 42.8121 58.0619 45.509C58.6936 47.1855 61.2938 48.1662 61.8125 49.8293C62.544 52.2015 64.3528 52.9304 65.9489 54.1231C67.7843 55.4881 69.6862 56.767 71.4817 58.185C77.4136 62.8565 83.3455 67.5347 89.1976 72.2989C92.649 75.1085 95.861 78.2162 99.3788 80.9395C101.859 82.8545 104.18 86.0749 108.217 83.5238C109.959 85.1605 111.402 86.923 113.191 88.2085C114.421 89.0898 116.124 89.3085 117.766 89.8717C118.112 89.9314 118.318 89.938 118.524 89.9314C118.524 89.9181 118.504 89.9181 118.524 90.0573C118.704 90.2759 118.864 90.3554 119.023 90.4217C119.023 90.4084 119.003 90.4084 119.023 90.5476C119.203 90.7663 119.362 90.8458 119.522 90.9187C119.522 90.9054 119.502 90.912 119.522 91.0512C119.701 91.2699 119.861 91.3494 120.021 91.4156C120.021 91.409 120.001 91.4156 120.021 91.5548C120.194 91.7735 120.36 91.8463 120.519 91.9192C120.519 91.9126 120.506 91.9192 120.519 92.0584C120.692 92.277 120.859 92.3499 121.018 92.4162C121.018 92.4096 121.005 92.4162 121.018 92.5553C121.191 92.774 121.357 92.8469 121.517 92.9132C121.517 92.9065 121.504 92.9132 121.517 93.0523C121.69 93.271 121.856 93.3439 122.016 93.4101C122.016 93.4035 122.002 93.4101 122.016 93.5493C122.189 93.7679 122.355 93.8408 122.514 93.9071C122.514 93.9005 122.501 93.9071 122.514 94.0462C122.687 94.2649 122.847 94.3378 123.013 94.4041C123.013 94.3974 123 94.4041 123.013 94.5432C123.186 94.7619 123.346 94.8348 123.512 94.901C123.512 94.8944 123.499 94.901 123.512 95.0402C123.685 95.2589 123.844 95.3317 124.011 95.398C124.011 95.3914 123.997 95.398 123.984 95.5769C125.155 96.9485 126.338 98.1479 127.575 99.4996C129.823 101.574 132.011 103.489 134.239 105.51C134.485 105.834 134.691 106.046 135.023 106.358C135.741 106.987 136.34 107.517 136.919 108.24C138.914 110.387 140.929 112.341 142.944 114.289C142.944 114.276 142.924 114.289 142.977 114.442C143.668 114.998 144.307 115.396 144.945 115.774C144.945 115.76 144.912 115.76 144.892 115.926C145.058 116.158 145.251 116.224 145.444 116.271C145.444 116.257 145.417 116.257 145.397 116.416C145.57 116.648 145.757 116.715 145.943 116.768C145.943 116.754 145.916 116.754 145.903 116.913C146.076 117.139 146.255 117.212 146.441 117.265C146.441 117.251 146.415 117.251 146.355 117.39C146.348 117.616 146.395 117.702 146.508 117.94C149.181 120.472 151.795 122.851 154.408 125.216C154.408 125.209 154.395 125.209 154.435 125.329C154.621 125.541 154.767 125.627 154.914 125.706C154.914 125.693 154.894 125.7 154.947 125.832C155.14 126.117 155.273 126.256 155.446 126.468C155.539 126.621 155.619 126.674 155.825 126.8C156.084 127.032 156.237 127.151 156.437 127.383C156.57 127.621 156.689 127.727 156.929 127.926C161.63 132.412 166.245 136.759 170.927 141.245C171.452 141.311 171.911 141.238 172.51 141.218C173.042 141.722 173.441 142.173 173.833 142.809C173.986 144.068 173.74 145.486 174.345 146.142C177.424 149.495 180.703 152.669 183.941 155.876C185.331 157.261 186.834 158.533 188.197 159.944C190.738 162.581 193.212 165.278 195.805 168.094C198.518 171.129 201.152 174.025 203.759 176.894C204.557 176.298 205.142 175.854 205.873 175.476C206.399 175.668 206.784 175.794 207.183 175.913C207.197 175.913 207.217 175.9 207.183 176.039C207.163 176.278 207.177 176.371 207.117 176.609C207.729 177.868 208.347 179.034 209.099 180.101C211.273 183.182 213.501 186.231 215.729 189.471C218.169 192.963 219.32 197.383 224.301 199.072C224.154 197.999 224.214 197.011 223.875 196.19C223.203 194.566 222.173 193.089 221.528 191.459C220.384 188.556 219.326 185.614 218.442 182.626C218.256 181.99 218.974 181.095 219.393 180.426C221.395 183.302 223.283 186.065 225.178 189C227.014 192.373 228.829 195.567 230.645 198.754C230.645 198.754 230.632 198.754 230.645 198.907C230.984 199.463 231.31 199.854 231.636 200.245C231.636 200.245 231.629 200.245 231.622 200.411C231.622 200.802 231.622 201.027 231.636 201.444C232.141 203.658 232.64 205.672 232.979 207.759C231.35 208.64 230.731 207.613 230.093 206.593C229.381 205.46 228.643 204.353 227.912 203.227L227.433 203.479C227.885 205.778 228.331 208.077 228.783 210.377L227.945 210.88C227.193 210.31 226.183 209.893 225.73 209.144C224.494 207.097 223.549 204.877 222.365 202.796C222.073 202.273 221.321 202.014 220.337 201.325C220.484 202.71 220.563 203.465 220.696 204.738C218.927 202.067 219.626 197.714 214.698 198.675C215.609 200.994 216.513 203.293 217.418 205.599C217.311 205.632 217.205 205.665 217.099 205.698C212.457 197.886 207.822 190.074 203.313 182.48C202.049 182.659 201.398 182.758 200.726 182.778C200.66 182.685 200.613 182.666 200.573 182.639C200.633 182.705 200.693 182.778 200.766 183.023C201.77 185.237 202.754 187.271 203.566 189.292C201.783 187.47 200.001 185.78 198.618 183.812C197.468 182.175 196.404 181.022 194.276 181.851C194.276 181.851 194.276 181.851 194.256 181.685C194.003 181.36 193.777 181.188 193.597 181.016C193.65 181.009 193.557 181.062 193.617 180.883C193.391 179.77 193.105 178.836 192.793 177.789C191.955 177.928 191.256 178.04 190.578 178.147C190.591 178.14 190.565 178.113 190.578 177.954C190.412 177.736 190.232 177.676 190.126 177.636C190.199 177.656 190.053 177.636 190.073 177.471C189.833 177.166 189.574 177.013 189.308 176.874C189.301 176.874 189.308 176.861 189.301 176.669C188.377 172.985 187.785 172.455 184.64 172.362C184.094 171.878 183.689 171.441 183.316 170.798C184.121 168.505 183.808 166.869 182.299 164.954C180.949 163.231 177.77 162.091 179.147 158.851C179.206 158.718 178.967 158.374 178.787 158.241C176.726 156.757 176.207 153.457 172.909 153.344C172.53 153.331 172.191 152.185 171.978 151.555C172.217 151.536 172.31 151.522 172.543 151.595C173.208 152.066 173.733 152.457 174.851 153.291C174.644 152.006 174.738 151.337 174.452 151.005C172.862 149.177 171.233 147.368 169.504 145.665C164.244 140.49 158.984 135.308 153.61 130.252C152.274 128.993 150.611 127.727 148.895 127.303C146.189 126.634 143.675 126.038 141.713 123.805C140.264 122.155 138.488 120.763 136.726 119.431C135.914 118.815 134.531 118.862 133.853 118.172C130.9 115.164 128.101 112.003 125.274 108.869C122.461 105.748 119.788 102.488 116.862 99.4731C113.357 95.8618 109.553 92.6415 105.45 89.6265C102.079 87.1483 98.9 86.4062 94.9831 86.3134C80.865 72.3387 65.6496 60.1663 47.3619 52.281L47.3486 52.3009ZM204.803 178.14C204.896 178.279 205.029 178.372 205.261 178.577C205.321 178.597 205.381 178.617 205.441 178.637C205.381 178.537 205.321 178.438 205.155 178.12C205.062 177.974 204.929 177.888 204.696 177.696C204.643 177.676 204.583 177.65 204.53 177.63C204.59 177.729 204.643 177.822 204.796 178.14H204.803ZM53.8058 43.3489C53.8457 43.3754 53.8923 43.3953 53.9322 43.4218C53.8723 43.3489 53.8125 43.2826 53.5664 42.9513C53.081 42.7658 52.5955 42.5802 52.1167 42.3947C52.0702 42.5869 52.0236 42.7856 51.9837 42.9778C52.5756 43.0573 53.1608 43.1302 53.8058 43.3423V43.3489Z",
                fill: "#04588C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1178,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M155.898 204.724C157.607 206.381 159.316 208.031 161.331 209.687C161.637 209.687 161.876 209.701 161.876 209.701C161.876 209.701 161.876 209.687 161.876 209.807C161.876 209.926 161.883 210.165 161.883 210.165C163.705 212.219 165.341 214.498 167.409 216.274C169.943 218.447 172.836 220.217 175.595 222.138C177.271 223.304 179.526 223.861 179.925 226.366C179.965 226.631 180.576 226.995 180.922 226.989C183.097 226.949 183.356 228.519 183.369 230.66C178.043 227.731 172.709 224.809 167.123 221.741C167.203 222.317 167.263 222.794 167.343 223.437C166.345 223.788 165.321 224.146 164.317 224.106C163.346 224.066 162.196 223.868 161.464 223.298C157.773 220.462 154.189 217.487 150.585 214.531C150.292 214.293 150.159 213.855 149.933 213.339C150.771 213.604 151.622 214.034 152.486 214.478C151.941 212.172 149.853 210.642 147.612 210.489C146.781 210.436 145.87 209.747 145.225 209.111C143.855 207.753 142.664 206.215 141.341 204.797C138.947 202.226 136.533 199.682 134.099 197.144C131.685 194.633 129.417 191.942 126.757 189.709C124.297 187.642 121.184 186.337 118.764 184.236C114.461 180.492 110.491 176.364 106.322 172.455C104.612 170.851 102.657 169.499 100.982 167.856C98.654 165.57 96.4927 163.112 94.2383 160.746C91.2392 157.585 88.2466 154.411 85.1942 151.304C82.5209 148.574 79.6614 146.016 77.0811 143.206C74.9531 140.887 73.0977 138.316 71.1293 135.858C71.2889 135.593 71.4418 135.328 71.6014 135.063C72.4527 135.414 73.4834 135.566 74.1218 136.149C79.4619 141.04 84.7553 145.983 90.0022 150.986C91.3189 152.238 92.3497 152.397 93.6598 150.774C95.289 151.721 96.8252 152.642 98.0954 153.841C100.962 156.538 103.695 159.374 106.481 162.157C109.76 165.431 112.992 168.757 116.357 171.944C117.58 173.104 119.116 173.932 120.533 174.973C120.606 175.059 120.646 175.085 120.686 175.112C120.626 175.039 120.573 174.973 120.493 174.727C117.853 171.699 115.219 168.857 112.613 165.987C112.041 165.358 111.562 164.649 111.249 163.973C112.3 163.973 113.138 163.98 114.122 164.072C115.485 165.265 116.702 166.365 117.972 167.631C119.848 169.572 121.65 171.375 123.519 173.111C124.776 174.277 126.125 175.344 127.462 176.622C132.643 181.798 137.79 186.8 143.003 191.956C147.346 196.316 151.615 200.517 155.885 204.724H155.898ZM154.102 215.558L155.359 217.082C155.539 216.877 155.718 216.672 155.891 216.466C155.366 216.095 154.841 215.717 154.102 215.558Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1183,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M47.3353 52.4865C65.643 60.1862 80.8584 72.3586 95.0097 86.4923C96.0937 87.6188 97.0114 88.4935 97.8227 89.4145C97.6033 89.5669 97.5434 89.6994 97.3905 89.9049C95.7014 91.4421 94.1652 92.933 92.4761 94.4836C91.6382 95.2787 90.9598 96.0143 90.1485 96.8094C89.7096 97.207 89.3971 97.5515 88.9582 97.9491C88.5924 98.2804 88.3464 98.5587 87.9806 98.8768C87.7146 99.1286 87.575 99.3406 87.3954 99.5792C87.3555 99.6057 87.3023 99.6984 87.156 99.7448C85.7462 101.004 84.4827 102.203 83.126 103.27C76.1634 95.8884 69.2939 88.6525 62.3246 81.2709C61.7394 80.8865 61.2539 80.648 60.702 80.2438C60.0037 78.9848 59.4384 77.8318 58.7069 76.7915C56.9513 74.3067 55.1159 71.8682 53.347 69.231C52.9879 68.0515 52.5955 67.0576 52.2032 66.057C50.6204 61.9156 49.0244 57.7808 47.455 53.6394C47.3419 53.3413 47.3619 52.9901 47.3353 52.4798V52.4865Z",
                fill: "#F0FAFD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1188,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M52.0436 66.0968C52.5955 67.0642 52.9879 68.0581 53.3603 69.4298C53.7992 71.0598 54.258 72.3188 54.7235 73.5844C54.5905 73.6441 54.4575 73.6971 54.3245 73.7567C54.1317 73.5314 53.9322 73.2995 53.6728 72.9152C52.7219 72.5308 51.8308 72.3056 50.9463 72.0803C50.8931 72.5706 50.8465 73.0609 50.8133 73.7236C50.9795 74.6049 51.1325 75.3006 51.1524 76.003C50.933 76.003 50.8465 76.0096 50.667 75.8904C50.1483 75.8506 49.7227 75.9301 49.1375 76.0693C47.7143 75.4663 46.3045 74.9693 45.2139 74.088C43.9704 73.0808 42.9994 71.7357 41.9155 70.5364C41.6761 70.6954 41.4367 70.861 41.1973 71.0201C41.8157 72.5971 42.4342 74.1675 43.0593 75.7446C42.8797 75.9036 42.7068 76.056 42.5273 76.215C40.1798 74.2669 37.839 72.3254 35.4915 70.3773L34.8664 70.7948C35.0991 71.9477 35.3319 73.0941 35.6245 74.5651C32.8514 70.9869 30.3177 67.7136 27.784 64.4468C27.4914 64.6257 27.2055 64.8113 26.9129 64.9902C27.385 66.057 27.7708 67.1702 28.336 68.184C29.6195 70.4833 30.9827 72.7429 32.3261 75.1813C32.499 75.7446 32.6652 76.1355 32.8847 76.6524C33.0642 77.0102 33.1972 77.2421 33.3435 77.6596C35.4449 81.3835 37.2538 85.1273 39.6744 88.4206C43.1856 93.1915 47.0959 97.6774 50.9463 102.197C51.9837 103.416 53.4135 104.31 54.7501 105.503C56.6454 107.617 58.401 109.644 60.303 111.52C60.8017 112.01 61.746 112.05 62.5706 112.427C62.8433 112.633 63.0295 112.712 63.2223 112.785C63.229 112.785 63.2157 112.792 63.2356 112.931C63.4085 113.143 63.5615 113.216 63.7211 113.282C63.7278 113.276 63.7078 113.289 63.6746 113.461C63.6546 113.865 63.6746 114.104 63.7012 114.515C65.377 116.37 67.0461 118.053 68.722 119.736C68.722 119.736 68.722 119.736 68.7419 119.908C70.0719 121.134 71.382 122.195 72.7652 123.255C72.8384 123.261 72.9913 123.241 73.0844 123.348C73.3504 123.546 73.5167 123.639 73.6962 123.719C73.7029 123.719 73.6896 123.725 73.7228 123.851C73.9024 124.057 74.042 124.143 74.195 124.216C74.2016 124.209 74.1883 124.229 74.2548 124.368C74.6073 124.58 74.8932 124.653 75.1858 124.719C75.1991 124.719 75.1792 124.732 75.1393 124.885C75.2789 125.282 75.4519 125.521 75.7711 125.799C76.0105 125.799 76.1036 125.759 76.1967 125.713C76.1967 125.7 76.1701 125.7 76.1767 125.846C76.3563 126.071 76.5292 126.144 76.6954 126.203C76.6954 126.19 76.6622 126.19 76.6688 126.336C76.8484 126.561 77.0213 126.641 77.1942 126.7C77.1942 126.687 77.1609 126.681 77.141 126.859C77.3072 127.337 77.4934 127.641 77.6996 127.999C77.7661 128.138 77.8326 128.178 78.0321 128.324C78.983 129.205 79.821 129.947 80.6722 130.676C80.6722 130.663 80.6522 130.676 80.6722 130.829C81.1576 131.398 81.6231 131.816 82.1618 132.372C82.9532 133.141 83.6714 133.764 84.4494 134.506C84.7154 134.804 84.9216 134.99 85.1743 135.301C85.5201 135.686 85.8127 135.931 86.1452 136.295C86.2782 136.56 86.4112 136.653 86.6306 136.805C86.7769 137.057 86.9099 137.15 87.1227 137.309C87.2757 137.561 87.4153 137.647 87.6348 137.799C87.7811 138.051 87.9141 138.144 88.1203 138.303C88.2599 138.561 88.3929 138.661 88.6323 138.853C89.018 139.29 89.3306 139.588 89.703 139.973C89.9623 140.238 90.1618 140.423 90.481 140.735C91.4187 141.629 92.2433 142.398 93.1344 143.286C93.427 143.564 93.6531 143.717 93.9457 143.968C94.112 144.18 94.2383 144.267 94.4578 144.419C94.6639 144.618 94.7903 144.717 94.9831 144.969C96.24 146.095 97.437 147.069 98.5941 148.216C99.0729 149.004 99.5917 149.627 100.197 150.376C104.859 155.001 109.427 159.494 114.002 163.98C113.164 163.98 112.32 163.973 111.256 163.801C110.571 163.092 110.119 162.555 109.66 162.018C109.467 162.237 109.274 162.456 109.081 162.668L111.063 163.966C111.582 164.642 112.067 165.351 112.632 165.981C115.239 168.85 117.873 171.693 120.513 174.721C120.533 174.893 120.526 174.9 120.526 174.9C119.136 173.919 117.593 173.091 116.376 171.938C113.012 168.751 109.786 165.418 106.501 162.151C103.715 159.368 100.982 156.532 98.1153 153.835C96.8452 152.635 95.309 151.721 93.7595 150.608C93.0147 149.985 92.4096 149.422 91.8044 148.859C88.2666 145.539 84.762 142.193 81.1709 138.939C80.6589 138.475 79.6547 138.581 79.0362 138.184C78.3712 137.753 77.5333 137.104 77.3937 136.421C76.9082 134.089 75.2723 132.584 72.7054 132.425C72.3463 132.406 71.9473 132.127 71.668 131.856C69.2473 129.497 66.8666 127.111 64.446 124.752C61.1475 121.532 57.6296 118.504 54.5772 115.065C52.3029 112.507 50.5606 109.472 48.6853 106.576C46.8897 103.8 45.1873 101.15 41.7426 99.9105C40.3527 99.4135 39.435 97.525 38.3843 96.2064C38.105 95.8552 38.2579 95.1727 37.9853 94.8083C33.0509 88.2284 31.8007 79.8065 26.9328 73.1405C25.1972 70.7616 24.6452 67.5148 23.5546 64.6589C23.7607 64.5396 23.9669 64.4203 24.1731 64.3011C24.6984 64.5529 25.2304 64.8047 25.9686 65.1558C25.5563 63.115 25.1839 61.306 24.725 59.0332C25.5164 59.4506 25.9885 59.5368 26.1348 59.7952C28.4092 63.9499 32.6253 65.5733 36.6353 66.7461C40.2663 67.8063 44.3361 67.3823 48.2065 67.6672C49.2971 67.7467 50.3744 68.0184 51.4517 68.2039C51.5914 67.5413 51.7443 66.8323 52.0502 66.0901L52.0436 66.0968ZM84.097 138.979C84.0504 138.952 84.0039 138.926 83.964 138.899C84.0238 138.972 84.0837 139.052 84.2566 139.343C84.3563 139.482 84.4827 139.575 84.7553 139.84C84.8551 139.979 84.9881 140.072 85.2541 140.337C85.3538 140.476 85.4868 140.569 85.7528 140.834C85.8526 140.973 85.9856 141.066 86.2516 141.331C86.3513 141.47 86.4843 141.563 86.7503 141.828C86.8501 141.967 86.9764 142.06 87.1959 142.252C87.2424 142.279 87.289 142.299 87.3289 142.325C87.2691 142.252 87.2092 142.179 87.0429 141.881C86.9432 141.742 86.8102 141.649 86.5442 141.384C86.4444 141.245 86.3114 141.152 86.0454 140.887C85.9457 140.748 85.8127 140.655 85.5467 140.39C85.4469 140.251 85.3139 140.158 85.0479 139.893C84.9482 139.754 84.8152 139.661 84.5492 139.396C84.4494 139.257 84.3164 139.164 84.1036 138.972L84.097 138.979ZM82.7004 137.799C82.747 137.819 82.8002 137.846 82.8467 137.866C82.7869 137.786 82.7271 137.707 82.6073 137.475C82.5541 137.455 82.5076 137.428 82.4544 137.408C82.5142 137.495 82.5741 137.574 82.7004 137.799ZM80.5591 135.421C80.4594 135.281 80.3264 135.189 80.1335 134.804C79.3156 134.089 78.4976 133.373 77.6397 132.339C77.3205 132.114 77.0013 131.889 76.6289 131.524C76.5824 131.498 76.5358 131.478 76.4893 131.451C76.5491 131.531 76.609 131.604 76.7154 131.995C77.0279 132.22 77.3471 132.452 77.7062 133.015C78.5242 133.731 79.3421 134.446 80.2665 135.374C80.3663 135.513 80.4993 135.606 80.7121 135.792C80.7586 135.818 80.8052 135.838 80.8517 135.864C80.7919 135.792 80.7254 135.719 80.5658 135.421H80.5591ZM73.131 127.555C73.0844 127.535 73.0379 127.509 72.9913 127.489C73.0512 127.562 73.1177 127.635 73.2307 127.853C73.2773 127.88 73.3238 127.9 73.3704 127.926C73.3105 127.853 73.2507 127.774 73.131 127.562V127.555ZM66.1617 121.081C66.1151 121.055 66.0686 121.035 66.022 121.008C66.0819 121.088 66.1417 121.167 66.2548 121.386C66.3013 121.406 66.3545 121.433 66.4011 121.452C66.3412 121.373 66.2814 121.3 66.1617 121.075V121.081ZM64.16 119.113C64.1201 119.087 64.0736 119.06 64.0337 119.04C64.0935 119.107 64.1534 119.18 64.3329 119.451C64.5058 119.445 64.6787 119.438 64.8516 119.431C64.6388 119.372 64.4194 119.312 64.16 119.113ZM54.7967 109.446C54.8366 109.472 54.8831 109.499 54.923 109.525C54.8632 109.452 54.8033 109.386 54.6105 109.028C54.2514 108.73 53.8856 108.425 53.5265 108.127C53.4268 108.319 53.3204 108.505 53.2206 108.697C53.7327 108.902 54.2381 109.101 54.7967 109.446ZM70.7436 125.865C70.7901 125.885 70.8433 125.912 70.8899 125.932C70.83 125.852 70.7702 125.773 70.697 125.342C69.8857 124.467 69.0744 123.599 68.2631 122.725C68.0104 123.029 67.7577 123.328 67.505 123.632C68.5624 124.328 69.6197 125.031 70.7436 125.872V125.865ZM59.7643 114.647C59.751 114.475 59.7377 114.303 59.7244 114.13C59.6047 114.164 59.4784 114.203 59.3587 114.236C59.4185 114.362 59.4784 114.488 59.7643 114.647Z",
                fill: "#10304B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1193,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M23.3418 42.2423C22.7433 41.0429 22.6768 40.1086 24.4457 40.2345C25.7491 40.3273 27.0592 40.4598 28.356 40.6454C34.5472 41.5267 40.5722 42.938 46.1649 45.8735C47.2222 46.4301 48.4392 46.6819 50.2414 47.2981C49.071 48.2722 48.1333 48.9746 47.302 49.7763C46.8764 50.1872 46.6171 50.7835 46.2779 51.4859C40.4924 50.1872 34.7267 48.6432 28.9279 47.2252C27.4316 46.8608 25.8489 46.8542 23.947 46.6753C23.5014 46.6554 23.4149 46.6487 23.3351 46.4235C23.3418 44.8862 23.3418 43.5675 23.3418 42.2489V42.2423Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1198,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M167.376 223.788C170.063 225.233 172.782 226.83 175.469 228.486C179.911 231.229 184.32 234.039 188.769 236.776C191.157 238.24 193.564 239.691 196.051 240.983C198 241.997 200.074 242.766 202.601 243.859C201.384 244.654 200.586 245.178 199.582 245.847C199.004 245.794 198.625 245.595 198.246 245.39C197.767 244.866 197.381 244.111 196.783 243.866C195.971 243.534 195 243.594 193.903 243.316C192.972 242.395 192.354 241.454 191.483 240.917C189.122 239.453 186.701 238.068 184.214 236.822C181.807 235.616 179.286 234.629 176.819 233.542C176.573 233.25 176.334 232.959 175.875 232.462C174.551 231.687 173.441 231.123 172.33 230.567C170.834 229.791 169.311 229.063 167.868 228.201C167.602 228.042 167.429 227.081 167.582 226.962C169.038 225.816 167.682 224.934 167.363 223.781L167.376 223.788Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1203,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M10.0084 36.3317C12.4556 36.5769 11.0059 38.4786 11.3517 39.5918C11.631 40.493 10.9726 41.9441 13.1073 41.805C13.3467 43.1435 13.2869 44.25 13.3667 45.35C13.4465 46.4235 13.6726 47.4903 13.759 48.7559C13.7191 49.3655 13.7524 49.7763 13.6593 50.2468C13.6925 50.7835 13.8521 51.254 14.0117 51.7244C14.1647 53.9641 14.3176 56.1972 14.178 58.3573C12.8546 54.2557 11.8172 50.2269 10.7798 46.0325C10.7465 45.6349 10.7199 45.403 10.7332 44.9922C10.5138 43.6471 10.8928 42.0833 8.95766 41.9971C10.1813 41.8845 10.6401 41.2616 10.3475 40.0424C10.1613 39.2539 10.0815 38.4455 9.94187 37.2925C9.95517 36.7359 9.98178 36.5371 10.0084 36.3317Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1208,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M10.7864 46.2048C11.8238 50.2335 12.8546 54.2557 13.9984 58.4037C14.4107 59.9277 14.7166 61.3325 15.0292 62.7373C14.9028 62.7638 14.7765 62.7969 14.6501 62.8234C14.4107 62.5053 14.1713 62.1939 13.892 61.5644C12.5354 57.0851 11.2253 52.9172 9.89532 48.7493C9.78227 48.3848 9.57612 48.0535 9.40987 47.7023C9.25027 45.9596 9.09066 44.2169 8.95101 42.2357C10.8995 42.0766 10.5204 43.6404 10.6202 45.0253C10.5736 45.5687 10.6867 45.8867 10.7997 46.2048H10.7864Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1213,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M23.3218 46.6421C23.4083 46.6487 23.5014 46.6554 23.7208 46.6819C24.1398 48.6234 24.4524 50.5516 24.6984 52.4798C24.8115 53.3744 24.9445 54.3153 24.7649 55.1767C24.6585 55.6737 24.0002 56.164 23.4748 56.3893C23.2952 56.4688 22.5238 55.7797 22.4307 55.3556C21.8455 52.6322 21.3667 49.889 20.9744 46.9204C21.0874 46.6885 21.3268 46.6554 21.5064 46.662C21.9253 46.662 22.1647 46.6488 22.5571 46.6554C22.9162 46.662 23.1223 46.6554 23.3285 46.6421H23.3218Z",
                fill: "#10304B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1218,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M176.886 233.688C179.293 234.635 181.807 235.623 184.214 236.829C186.701 238.074 189.122 239.459 191.483 240.924C192.347 241.46 192.972 242.395 193.73 243.322C192.547 243.004 191.336 242.52 189.88 241.871C189.182 241.474 188.729 241.235 188.277 241.003C186.721 240.221 185.172 239.439 183.383 238.439C181.534 237.16 179.925 236.1 178.315 235.039C177.863 234.635 177.404 234.231 176.886 233.688Z",
                fill: "#10304B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1223,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M19.7108 95.0667C18.966 94.6758 18.2877 94.0794 17.4764 93.3174C17.3501 93.059 17.3501 92.9728 17.4099 92.7475C17.3634 92.456 17.2636 92.3036 17.0708 92.012C16.6252 91.5482 16.2728 91.2169 15.9203 90.8922C15.9203 90.8922 15.8937 90.9187 16.0334 90.7663C15.9203 90.3753 15.6742 90.1434 15.4282 89.9049C15.4282 89.9049 15.3949 89.9247 15.5013 89.7657C15.3816 89.3748 15.1555 89.1428 14.9294 88.9109C14.9294 88.9109 14.8962 88.9374 14.9361 88.7254C14.6302 88.235 14.2777 87.9501 13.9319 87.6652C13.8654 87.2013 13.7989 86.7441 13.5994 86.0418C12.961 85.187 12.449 84.5641 11.9435 83.9412C11.9435 83.9412 11.9103 83.9611 12.0101 83.7623C11.8837 83.5172 11.6509 83.4708 11.4248 83.431C11.4248 83.431 11.4182 83.4641 11.6443 83.3117C11.5578 82.9208 11.2519 82.6823 10.9394 82.4437C10.9394 82.4437 10.9194 82.4768 11.1588 82.3311C11.2386 81.7016 11.079 81.2112 10.9261 80.7275C11.5911 80.9926 12.5753 81.0721 12.8613 81.5558C15.2353 85.6243 17.4897 89.7723 19.7507 93.9071C19.8904 94.1589 19.784 94.5432 19.7241 95.0733L19.7108 95.0667Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1228,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M9.26357 47.8216C9.56282 48.0535 9.76897 48.3914 9.88867 48.7559C11.2187 52.9238 12.5288 57.0917 13.8322 61.4385C13.2603 61.6241 12.7017 61.6241 11.9369 61.6241C10.9726 57.8603 10.2012 54.1033 9.46307 50.3462C9.30347 49.551 9.24362 48.7426 9.27022 47.8282L9.26357 47.8216Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1233,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M198.059 245.423C198.625 245.595 199.004 245.794 199.542 246.026C199.702 246.059 199.662 246.105 199.768 246.271C200.999 247.053 202.129 247.669 203.24 248.451C202.761 249.047 202.355 249.73 201.823 249.842C200.833 250.055 199.768 249.935 198.731 249.962C198.239 249.789 197.747 249.624 197.195 249.286C197.135 249.12 197.275 248.935 197.275 248.935C197.501 248.577 197.72 248.212 197.946 247.855C197.348 247.49 196.749 247.119 195.626 246.43C196.709 245.96 197.288 245.708 198.059 245.423Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1238,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M14.1913 51.7244C13.8521 51.2606 13.6925 50.7835 13.8122 50.2468C14.1979 50.1739 14.2977 50.1739 14.5836 50.1474C14.9161 49.2661 15.0624 48.4113 15.2619 47.318C16.1464 47.1325 17.2503 46.9072 18.4872 46.6819C18.7067 46.6951 18.7931 46.7018 18.8862 46.715C17.9685 49.0408 17.0508 51.3666 16.1198 53.7189C15.5146 53.0232 14.9494 52.3738 14.1979 51.7244H14.1913Z",
                fill: "#10304B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1243,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M7.25524 64.639C8.45226 66.3751 9.52957 68.184 10.9394 70.0129C11.478 70.0394 11.6842 70.046 11.897 70.046C12.3027 71.8682 12.7017 73.6971 13.1073 75.5259L12.2761 75.7843C10.5803 72.4315 8.88451 69.0786 7.06904 65.5932C7.00919 65.2089 7.06904 64.9571 7.25524 64.6324V64.639Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1248,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M19.0525 46.7018C18.7865 46.7018 18.7 46.7018 18.4872 46.4963C18.3675 45.9331 18.3675 45.5554 18.3675 44.9524C18.2146 41.752 18.0683 38.79 18.1215 35.7751C19.0126 35.7221 19.7042 35.7088 20.3892 35.901C19.2054 39.552 19.099 43.0441 19.9236 46.5825C19.6909 46.6156 19.4648 46.6554 19.0591 46.6951L19.0525 46.7018Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1253,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M20.0766 46.609C19.099 43.0507 19.2054 39.5587 20.4956 35.8877C20.602 35.6624 20.8148 35.6426 20.8148 35.6426C20.8281 35.8944 20.8347 36.1395 20.848 36.8088C21.0076 40.3671 21.1672 43.5079 21.3202 46.6488C21.3202 46.6488 21.0808 46.6819 20.9677 46.7018C20.6419 46.6951 20.4357 46.662 20.07 46.609H20.0766Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1258,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M184.773 249.756C181.853 248.55 178.874 247.172 175.875 245.628C178.807 246.834 181.76 248.212 184.773 249.756Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1263,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M206.199 254.958C205.827 254.931 205.454 254.905 204.776 254.839C204.397 254.759 204.324 254.706 204.251 254.66C204.045 254.54 203.838 254.421 203.519 254.269C201.471 253.427 199.542 252.612 197.614 251.797C197.667 251.651 197.72 251.499 197.773 251.353C199.629 251.95 201.484 252.553 203.532 253.228C204.51 253.732 205.301 254.156 206.173 254.733C206.252 254.885 206.192 254.958 206.192 254.958H206.199Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1268,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M198.884 250.035C199.769 249.935 200.833 250.055 201.823 249.836C202.355 249.723 202.761 249.034 203.406 248.491C203.805 248.438 204.025 248.504 204.244 248.749C205.009 250.929 202.362 250.286 202.189 251.559C201.138 251.075 200.088 250.598 198.884 250.035Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1273,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M178.322 235.225C179.931 236.1 181.541 237.16 183.23 238.366C181.122 238.319 179 238.015 178.322 235.225Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1278,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M172.37 230.739C173.454 231.13 174.565 231.693 175.755 232.402C174.691 232.005 173.547 231.455 172.37 230.739Z",
                fill: "#10304B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1283,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M149.9 213.007C149.261 212.742 148.603 212.311 147.944 211.881C148.137 211.662 148.323 211.443 148.516 211.225C148.969 211.761 149.427 212.298 149.9 213.007Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1288,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M188.304 241.169C188.736 241.242 189.188 241.48 189.714 241.858C189.295 241.778 188.809 241.553 188.304 241.169Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1293,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M9.42317 74.8368C9.07736 74.3067 8.74486 73.5977 8.41236 72.7098C8.75151 73.2399 9.09066 73.9489 9.42317 74.8368Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1298,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M8.45226 72.3519C8.2461 72.1399 8.06655 71.7622 7.90695 71.2122C8.1131 71.4243 8.2993 71.802 8.45226 72.3519Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1303,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M7.94685 70.861C7.73405 70.6357 7.54784 70.2448 7.39489 69.6749C7.6077 69.8936 7.7939 70.2912 7.94685 70.861Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1308,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M197.062 249.2C196.616 249.14 196.237 248.994 195.3 248.623C196.304 248.623 196.716 248.623 197.202 248.776C197.281 248.928 197.135 249.114 197.062 249.2Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1313,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M12.2761 63.1282C11.9635 63.062 11.8837 62.9559 11.897 62.6842C12.2694 62.671 12.6219 62.7638 12.9677 62.8565C12.7881 62.9493 12.6086 63.0421 12.2694 63.1282H12.2761Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1318,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M10.5337 76.8644C10.3808 76.7849 10.1547 76.5662 9.91527 76.1753C10.0882 76.2415 10.2744 76.4801 10.5337 76.8644Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1323,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M9.91527 75.8572C9.75567 75.7777 9.59607 75.5458 9.42317 75.1615C9.57612 75.241 9.74902 75.4729 9.91527 75.8572Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1328,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M175.802 245.297C175.556 245.383 175.263 245.31 174.904 245.098C175.143 245.019 175.449 245.078 175.802 245.297Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1333,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M173.833 244.482C173.72 244.303 173.6 244.124 173.487 243.938C173.547 243.905 173.607 243.866 173.674 243.832C173.707 243.972 173.74 244.117 173.8 244.369C173.833 244.482 173.833 244.475 173.833 244.475V244.482Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1338,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M174.864 244.8C174.678 244.893 174.505 244.82 174.305 244.601C174.478 244.515 174.678 244.575 174.864 244.8Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1343,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M152.407 301.149C154.92 301.07 157.501 301.322 159.941 300.838C163.16 300.202 166.159 301.255 169.265 301.348C169.896 301.368 170.535 301.262 171.167 301.282C173.162 301.342 175.15 301.487 177.145 301.481C177.81 301.481 178.475 301.149 179.233 300.811C179.878 300.666 180.443 300.672 181.175 300.838C182.046 301.434 182.698 302.124 183.449 302.269C186.555 302.859 189.96 301.852 192.766 304.078C192.906 304.191 193.185 304.111 193.404 304.131C195.652 304.363 197.913 304.516 200.134 304.907C200.493 304.973 201.005 306.238 200.819 306.709C200.626 307.206 199.509 307.835 199.097 307.67C196.41 306.556 196.324 308.253 196.264 310.082C195.872 309.764 195.473 309.452 194.894 309.048C194.675 308.935 194.628 308.915 194.588 308.889C194.648 308.955 194.708 309.021 194.768 309.088C194.302 309.419 193.644 310.135 193.398 310.015C191.323 308.995 189.601 310.035 187.792 310.724C187.625 310.784 187.293 310.413 186.914 310.161C185.677 309.624 184.58 308.869 183.443 308.789C181.607 308.664 179.639 307.385 177.87 309.711C177.271 310.499 174.91 310.029 173.354 309.995C169.471 309.916 165.507 309.227 161.75 309.843C159.702 310.181 157.813 310.188 155.492 310.095C155.067 310.095 154.987 310.095 154.9 310.095C154.9 309.876 154.9 309.658 155.053 309.207C156.45 309.015 158.026 309.571 158.87 309.021C162.209 306.841 166.418 310.764 169.451 307.345C169.511 307.279 169.777 307.345 169.923 307.418C172.477 308.611 175.09 306.132 177.637 307.557C177.943 306.941 178.608 306.232 178.468 305.741C178.302 305.158 177.511 304.449 176.892 304.337C174.106 303.833 171.286 303.442 168.467 303.204C167.682 303.137 166.837 303.754 166.026 304.058C166.073 303.86 166.112 303.661 166.159 303.469C163.233 303.197 160.307 302.965 157.388 302.634C155.659 302.435 153.431 303.8 152.407 301.169V301.149Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1348,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M196.397 310.141C196.317 308.259 196.397 306.563 199.09 307.676C199.496 307.842 200.613 307.212 200.813 306.715C200.999 306.252 200.487 304.979 200.128 304.913C197.906 304.522 195.645 304.363 193.398 304.138C193.185 304.118 192.899 304.191 192.759 304.085C189.96 301.858 186.548 302.866 183.443 302.276C182.691 302.13 182.039 301.448 181.315 300.838C181.96 300.633 183.057 300.838 183.23 300.52C184.207 298.771 185.491 300.527 186.648 300.149C187.479 299.877 188.676 301.063 189.753 301.163C194.309 301.58 198.877 301.839 203.439 302.163C203.865 302.196 204.523 302.15 204.663 302.389C205.893 304.429 207.902 302.037 209.232 303.237C209.431 302.852 209.624 302.468 209.976 301.792C210.355 302.548 210.582 303.005 210.828 303.482C211.506 303.064 212.118 302.687 212.783 302.283C213.222 304.038 214.106 304.569 216.168 304.277C216.194 304.118 216.201 304.111 216.201 304.111C216.447 304.111 216.7 304.118 216.946 304.105C218.229 304.012 219.506 303.906 220.789 303.807C220.617 304.979 220.477 306.166 220.244 307.325C220.198 307.557 219.792 307.875 219.539 307.882C215.19 308.001 211.266 310.658 206.665 309.75C204.71 309.366 202.528 310.254 200.44 310.4C199.15 310.492 197.84 310.274 196.404 310.135L196.397 310.141ZM185.876 301.507C185.85 301.428 185.823 301.348 185.797 301.269C185.77 301.348 185.743 301.428 185.876 301.507Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1353,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M192.766 311.201C192.819 311.281 192.793 311.361 192.766 311.44C192.739 311.361 192.713 311.281 192.766 311.201Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1358,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M216.181 304.125C216.121 304.052 216.061 303.979 216.001 303.906C216.048 303.932 216.088 303.952 216.161 304.045C216.188 304.111 216.181 304.118 216.181 304.125Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1363,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M189.268 65.56C187.812 66.7726 186.335 67.9455 184.912 69.1978C177.597 75.6385 170.295 82.1058 162.894 88.6923C157.78 84.1003 152.759 79.3824 147.745 74.6512C146.441 73.4188 145.165 72.1598 144.028 70.7219C145.763 68.7274 147.346 66.9317 149.075 65.0432C150.797 63.221 152.373 61.4849 154.129 59.7223C155.153 59.1127 156.004 58.5362 156.862 58.1519C156.383 59.4308 155.898 60.5108 155.16 62.1475C156.443 61.2596 157.208 60.7295 158.558 59.7952C157.793 61.4385 157.368 62.3397 156.782 63.592C157.713 63.4661 158.259 63.5457 158.618 63.3204C160.553 62.1343 162.541 60.9879 164.317 59.5898C165.501 58.6621 166.365 57.3236 167.363 56.164C167.363 56.1574 167.376 56.1574 167.549 56.1574C168.26 55.8195 168.799 55.4882 169.444 55.0972C169.69 54.9448 169.79 54.8189 170.009 54.64C170.402 54.3153 170.641 54.0105 171.034 53.6262C173.062 52.2545 174.937 50.9624 176.939 49.7697C176.553 50.6377 176.187 51.5588 175.529 52.1618C171.319 55.9785 166.964 59.6362 162.834 63.5258C161.045 65.2155 159.669 67.3359 158.099 69.2641C158.378 69.5027 158.658 69.7478 158.937 69.9864C161.245 67.7136 163.552 65.4408 166.033 63.1415C166.618 62.7836 167.023 62.4523 167.522 62.0746C167.735 61.9554 167.815 61.8493 167.961 61.6373C168.174 61.412 168.267 61.2662 168.354 61.1138C168.34 61.1138 168.354 61.1337 168.526 61.1138C171.24 59.4308 173.78 57.761 176.32 56.2767C176.32 57.4363 176.32 58.417 176.32 58.6754C175.296 60.2922 174.558 61.4451 173.654 62.618C169.723 65.8317 165.966 69.0189 161.697 72.6501C165.62 72.6369 168.26 71.7423 170.295 69.39C170.728 68.893 171.226 68.4557 171.692 67.9852C172.942 66.7263 174.199 66.0173 175.25 67.8196C177.697 67.3624 179.3 63.8902 182.106 66.3618C179.399 68.6744 176.859 70.8478 174.152 73.0477C171.911 74.8036 169.836 76.5397 167.768 78.2758C167.928 78.4613 168.094 78.6535 168.254 78.839C171.24 77.9445 173.441 75.95 175.489 73.4585C178.621 71.1526 181.514 68.7738 184.64 66.766C185.91 65.951 187.705 65.9377 189.268 65.5667V65.56Z",
                fill: "#E8423E"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1368,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M180.842 100.858C184.726 96.9552 188.716 93.1517 192.46 89.1163C195.878 85.4321 199.024 81.5028 202.621 77.5933C204.357 76.4403 205.734 75.3404 207.177 74.3332C207.868 73.8495 208.846 73.061 209.404 73.2531C211.04 73.8097 211.885 73.2531 212.61 71.9146C213.441 70.3972 214.518 70.2183 216.101 71.0532C216.733 71.3845 218.289 71.1128 218.648 70.5894C220.297 68.1907 221.667 65.6064 223.15 62.9162C223.33 62.2005 223.503 61.6638 223.848 61.147C224.567 61.6572 225.119 62.1409 225.591 62.7836C223.23 67.2895 220.949 71.6363 218.542 76.0693C218.336 76.4337 218.242 76.7054 218.003 76.9638C217.631 76.6391 217.411 76.3277 217.265 75.9897C217.278 75.9765 217.232 75.9898 217.006 76.0295C216.008 77.262 215.19 78.4746 214.352 79.6607C211.599 83.5503 208.872 87.4664 206.046 91.303C205.508 92.0385 204.557 92.4692 203.792 93.0457C203.659 92.8867 203.526 92.7276 203.393 92.5686C205.428 89.0633 207.463 85.558 209.498 82.0528C209.232 81.8871 208.966 81.7148 208.7 81.5492C208.34 81.9269 207.955 82.2847 207.622 82.6889C204.929 85.9092 202.342 89.229 199.529 92.3367C195.991 96.2395 192.068 99.8177 188.696 103.853C187.206 105.636 184.54 106.875 184.653 109.81C184.347 109.717 184.174 109.651 184.001 109.591C184.001 109.591 183.881 109.618 183.895 109.492C183.755 109.293 183.589 109.22 183.429 109.147C183.429 109.147 183.409 109.207 183.396 109.068C183.23 108.843 183.07 108.757 182.911 108.664C182.911 108.664 182.891 108.723 182.871 108.584C182.678 108.346 182.512 108.246 182.345 108.147C181.534 107.312 180.729 106.47 179.938 105.337C180.65 104.165 181.448 103.35 182.006 102.402C182.711 101.203 181.973 100.832 180.856 100.858H180.842Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1373,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M134.451 74.0151C134.511 73.8561 134.618 73.7302 134.864 73.5778C137.643 75.9765 140.303 78.4415 142.997 80.8799C148.496 85.8628 154.023 90.8193 159.516 95.8088C160.048 96.2926 160.413 96.9552 160.726 97.7238C160.52 97.9359 160.433 97.9491 160.367 97.9955C160.307 98.0353 160.22 98.1611 160.234 98.1744C161.444 99.5527 162.654 100.931 163.891 102.475C164.23 102.872 164.556 103.111 164.876 103.35C164.869 103.35 164.876 103.336 164.889 103.502C165.228 103.886 165.554 104.112 165.873 104.343C165.873 104.343 165.873 104.337 165.933 104.456C166.152 104.661 166.319 104.748 166.611 104.913C167.256 105.768 167.768 106.537 168.354 107.451C168.154 107.842 167.915 108.207 167.595 108.313C166.372 108.704 165.115 109.002 163.299 109.492C167.622 113.382 169.604 118.451 174.585 120.783C174.664 121.287 174.777 121.989 174.864 122.718C174.844 122.738 174.797 122.784 174.644 122.784C173.667 122.413 172.716 122.208 172.058 121.645C167.595 117.861 163.186 114.005 158.764 110.175C159.289 109.459 158.518 109.989 158.265 109.803C155.918 108.101 153.55 106.398 151.396 104.463C149.268 102.548 147.432 100.321 145.371 98.3334C144.54 97.5383 143.449 97.0082 142.418 96.2594C142.259 96.0275 142.126 95.9347 141.966 95.7028C141.8 95.1727 141.72 94.7288 141.461 94.4703C137.909 90.9584 134.325 87.4929 130.787 83.9744C130.235 83.4244 129.909 82.6557 129.657 81.9997C133.746 85.5779 137.67 89.1428 141.966 93.0523C141.966 91.2169 141.966 89.8055 142.112 88.4736C143.156 89.6663 144.061 90.7795 144.792 91.906C144.4 91.9126 144.18 91.9126 143.928 91.8464C143.855 91.7602 143.815 91.7337 143.768 91.7138C143.828 91.7867 143.881 91.8596 143.948 92.1114C144.579 93.2776 145.211 94.2649 145.843 95.2589C146.029 95.1528 146.209 95.0468 146.395 94.9474C146.249 94.2715 146.109 93.5891 146.122 92.8867C146.428 92.6282 146.767 92.2638 146.701 92.1644C145.816 90.8193 144.919 89.4808 143.934 88.2019C142.465 86.2803 140.929 84.4051 139.545 82.4172C139.605 81.7082 139.539 81.0986 139.612 80.5552C140.15 80.7474 140.55 80.8733 141.002 81.1118C141.155 81.357 141.281 81.4498 141.474 81.569C141.547 81.6684 141.594 81.6883 141.64 81.7148C141.58 81.6353 141.52 81.5624 141.407 81.3769C141.254 81.1317 141.121 81.0389 140.895 80.8468C140.377 80.2902 139.924 79.8727 139.419 79.3559C139.279 79.1372 139.16 79.0511 138.947 78.8854C138.741 78.6667 138.608 78.5607 138.421 78.3619C138.275 78.1433 138.162 78.0571 137.949 77.8981C137.743 77.6794 137.61 77.5734 137.404 77.3282C136.559 76.4735 135.795 75.7512 134.957 74.9097C134.751 74.532 134.604 74.2802 134.465 74.0284L134.451 74.0151ZM143.21 84.2725C143.096 83.7093 142.977 83.1395 142.864 82.5762L142.059 82.9142C142.352 83.3184 142.644 83.7292 143.21 84.2725Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1378,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M163.871 102.303C162.654 100.931 161.437 99.5527 160.234 98.1744C160.22 98.1611 160.307 98.0419 160.367 97.9955C160.433 97.9491 160.52 97.9425 160.733 97.8961C160.872 97.8762 160.872 97.8762 160.919 97.9889C161.065 98.2473 161.198 98.3334 161.364 98.3798C161.364 98.3798 161.364 98.3798 161.424 98.5124C161.783 98.89 162.096 99.122 162.402 99.3605C166.691 103.237 170.987 107.107 175.27 110.996C183.961 118.881 192.64 126.773 201.491 134.698C201.657 134.731 201.69 134.712 201.69 134.844C201.87 135.195 202.049 135.421 202.222 135.646C209.192 142.67 216.148 149.7 223.137 156.711C224.819 158.4 226.602 159.997 228.484 161.568C228.623 161.501 228.63 161.508 228.63 161.68C229.461 162.727 230.292 163.609 231.124 164.483C231.124 164.483 231.11 164.483 231.15 164.602C231.33 164.815 231.476 164.901 231.622 164.98C231.622 164.98 231.609 164.98 231.649 165.099C231.835 165.311 231.982 165.398 232.121 165.477C232.121 165.471 232.101 165.471 232.081 165.643C232.573 166.537 233.092 167.253 233.611 167.962C233.611 167.962 233.604 167.962 233.637 168.088C233.817 168.3 233.963 168.379 234.11 168.459C234.11 168.459 234.096 168.452 234.096 168.605C234.262 168.996 234.435 169.228 234.608 169.453C234.608 169.446 234.595 169.44 234.642 169.566C234.828 169.778 234.967 169.87 235.107 169.95C235.107 169.943 235.094 169.943 235.147 170.063C235.34 170.301 235.479 170.42 235.626 170.699C235.792 171.381 235.952 171.898 235.918 172.395C234.362 172.223 232.992 172.07 231.496 171.924C231.283 171.924 231.197 171.924 231.11 171.752C228.996 168.671 226.961 165.709 224.733 162.9C223.589 161.462 222.099 160.295 220.69 158.891C220.457 158.685 220.311 158.592 220.158 158.506C220.158 158.506 220.171 158.506 220.164 158.347C219.998 157.93 219.832 157.678 219.606 157.3C219.287 156.962 219.021 156.737 218.708 156.346C215.509 153.086 212.37 149.985 209.192 146.818C209.085 146.672 209.005 146.606 208.819 146.453C208.58 146.221 208.44 146.102 208.227 145.883C208.061 145.665 207.941 145.565 207.755 145.34C206.884 144.485 206.053 143.789 205.222 143.1C205.222 143.1 205.222 143.1 205.195 142.968C205.022 142.762 204.876 142.683 204.716 142.603C204.716 142.603 204.716 142.603 204.696 142.464C204.523 142.252 204.37 142.179 204.217 142.106C204.217 142.106 204.217 142.106 204.197 141.974C204.025 141.762 203.872 141.682 203.719 141.609C203.719 141.609 203.725 141.609 203.732 141.437C203.399 140.828 203.067 140.384 202.661 139.84C202.369 139.535 202.136 139.33 201.803 139.012C201.544 138.807 201.384 138.707 201.218 138.621C201.218 138.628 201.232 138.621 201.178 138.495C200.992 138.23 200.859 138.098 200.68 137.892C200.56 137.733 200.467 137.673 200.261 137.514C200.021 137.256 199.868 137.117 199.649 136.865C199.177 136.381 198.778 136.004 198.266 135.52C197.847 135.314 197.541 135.228 197.235 135.142C197.235 135.142 197.241 135.142 197.215 135.01C197.042 134.804 196.889 134.718 196.736 134.645C196.736 134.645 196.736 134.645 196.716 134.513C196.543 134.307 196.397 134.228 196.244 134.148C196.244 134.148 196.244 134.148 196.224 134.016C196.051 133.81 195.905 133.731 195.745 133.651C195.745 133.651 195.745 133.651 195.725 133.512C195.552 133.307 195.406 133.227 195.253 133.154C195.253 133.154 195.253 133.148 195.233 133.015C195.06 132.81 194.914 132.73 194.754 132.657C194.754 132.657 194.754 132.651 194.754 132.485C194.422 132.101 194.089 131.882 193.75 131.663C193.75 131.663 193.75 131.657 193.757 131.485C192.932 130.597 192.094 129.888 191.256 129.179C191.256 129.179 191.256 129.172 191.25 129.013C190.917 128.629 190.591 128.41 190.259 128.191C190.259 128.191 190.259 128.185 190.226 128.059C190.053 127.853 189.906 127.774 189.753 127.694C189.753 127.694 189.753 127.694 189.727 127.562C189.547 127.356 189.408 127.27 189.261 127.197C189.261 127.197 189.261 127.197 189.235 127.065C189.055 126.859 188.916 126.773 188.763 126.7C188.763 126.7 188.763 126.7 188.729 126.574C188.55 126.369 188.404 126.283 188.257 126.203C188.257 126.203 188.264 126.203 188.224 126.084C188.044 125.879 187.898 125.793 187.758 125.713C187.758 125.713 187.765 125.713 187.712 125.554C187.193 125.183 186.734 124.971 186.209 124.606C185.69 123.897 185.238 123.334 184.733 122.605C183.556 121.373 182.432 120.299 181.295 119.239C181.281 119.252 181.301 119.226 181.248 119.093C180.896 118.716 180.603 118.477 180.29 118.239C180.277 118.239 180.304 118.239 180.251 118.126C180.064 117.921 179.925 117.828 179.785 117.748C179.785 117.762 179.805 117.748 179.752 117.636C179.566 117.43 179.426 117.338 179.286 117.251C179.286 117.265 179.306 117.251 179.253 117.132C179.067 116.894 178.934 116.781 178.748 116.582C178.621 116.383 178.515 116.304 178.309 116.151C178.089 115.946 177.943 115.853 177.79 115.767C177.79 115.78 177.803 115.76 177.73 115.608C176.533 114.561 175.416 113.667 174.212 112.62C172.171 110.744 170.202 109.022 168.234 107.299C167.722 106.53 167.21 105.761 166.485 104.801C166.119 104.516 165.973 104.423 165.826 104.33C165.826 104.33 165.826 104.343 165.767 104.204C165.421 103.82 165.122 103.575 164.829 103.336C164.829 103.336 164.816 103.35 164.762 103.21C164.417 102.819 164.117 102.561 163.825 102.309L163.871 102.303Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1383,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M142.91 51.6052C144.114 50.1805 145.331 48.7625 146.528 47.3312C147.16 46.5825 147.771 45.8205 148.41 44.8994C149.653 43.7796 150.877 42.8254 152.427 41.7917C153.544 41.4471 154.328 41.1821 155.838 40.6719C152.965 44.4025 150.558 47.5367 148.057 50.7769C148.603 50.863 149.181 50.9558 150.019 51.0883C149.208 52.1883 148.45 52.9768 148.018 53.9111C147.825 54.3352 148.27 55.0508 148.357 55.7863C145.291 59.3513 142.305 62.7638 139.319 66.1763C139.08 66.0239 138.847 65.8649 138.634 65.4209C139.738 63.5125 141.095 61.8626 137.584 60.7163C139.605 57.9995 141.454 55.5743 143.203 53.0762C143.402 52.7913 143.023 52.1021 142.917 51.6052H142.91Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1388,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M139.339 66.3552C142.298 62.7704 145.291 59.3579 148.496 55.7201C151.116 53.222 153.511 50.9492 155.978 48.5571C156.197 48.1993 156.35 47.9607 156.656 47.7288C157.002 47.7288 157.195 47.7156 157.461 47.8547C157.155 48.8089 156.962 49.783 156.383 50.3926C152.912 54.0503 148.456 56.926 147.173 62.2933C147.725 63.1812 148.337 64.1553 148.942 65.1293C147.359 66.9317 145.77 68.734 144.001 70.5496C142.338 69.2243 140.855 67.8726 139.346 66.3552L139.339 66.3552Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1393,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.265 126.435C201.092 126.197 200.919 125.958 200.567 125.541C200.181 125.296 199.975 125.236 199.769 125.17C199.769 125.17 199.795 125.196 199.815 125.031C199.655 124.785 199.483 124.713 199.303 124.64C199.303 124.64 199.29 124.686 199.316 124.52C199.163 124.282 198.99 124.209 198.811 124.136C198.811 124.136 198.804 124.182 198.824 124.023C198.665 123.791 198.485 123.719 198.312 123.646C198.312 123.646 198.286 123.679 198.292 123.54C198.119 123.321 197.94 123.241 197.767 123.162C197.594 122.87 197.421 122.585 197.135 122.254C196.424 121.592 195.838 120.969 195.047 120.134C194.681 119.829 194.508 119.736 194.342 119.643C194.342 119.643 194.355 119.703 194.375 119.564C194.402 119.431 194.395 119.186 194.568 119.206C195.772 119.849 196.803 120.465 197.96 121.167C201.205 118.066 204.477 114.939 207.922 111.818C208.806 112.143 209.518 112.467 210.149 112.944C208.301 115.144 206.532 117.192 204.756 119.239C204.896 119.385 205.029 119.531 205.168 119.677C205.853 119.206 206.538 118.729 207.223 118.444C206.126 120.174 205.188 121.863 203.898 123.215C202.721 124.447 201.863 125.528 202.568 127.211C202.236 127.144 202.05 127.111 201.857 127.071C201.857 127.071 201.79 127.091 201.81 126.952C201.644 126.68 201.458 126.555 201.265 126.429V126.435Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1398,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M142.791 51.6251C143.017 52.1088 143.396 52.7979 143.196 53.0828C141.447 55.5809 139.599 58.0061 137.577 60.7229C141.095 61.8758 139.738 63.5192 138.594 65.2884C137.038 64.0956 135.549 62.7505 133.999 61.2464C136.486 58.3441 139.027 55.6008 141.574 52.8642C141.846 52.5726 142.119 52.2877 142.412 51.8305C142.431 51.6648 142.671 51.6449 142.791 51.6317V51.6251Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1403,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M180.703 100.951C181.96 100.838 182.698 101.209 181.993 102.409C181.434 103.363 180.636 104.171 179.865 105.198C179.233 104.821 178.674 104.284 178.069 103.628C178.867 102.68 179.719 101.865 180.703 100.957V100.951Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1408,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M193.697 119.332C192.879 118.623 192.068 117.907 191.256 116.993C191.256 116.788 191.316 116.728 191.463 116.788C192.021 117.139 192.44 117.43 192.899 117.834C193.032 118.093 193.158 118.186 193.351 118.345C193.478 118.623 193.617 118.696 193.823 118.802C193.85 118.908 193.896 119.12 193.843 119.173C193.79 119.226 193.697 119.332 193.697 119.332Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1413,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M191.23 116.814C190.598 116.43 190 116.012 189.394 115.37C189.394 115.144 189.541 114.965 189.66 115.045C190.093 115.356 190.399 115.582 190.764 115.939C190.984 116.284 191.15 116.503 191.316 116.721C191.316 116.721 191.256 116.781 191.23 116.807V116.814Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1418,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M183.968 109.757C184.154 109.651 184.327 109.717 184.646 109.797C184.786 109.817 184.759 109.81 184.793 109.943C184.985 110.168 185.138 110.254 185.291 110.327C185.291 110.307 185.251 110.307 185.265 110.426C185.278 110.546 185.311 110.784 185.271 110.817C185.231 110.85 185.158 110.91 185.158 110.91C184.759 110.579 184.354 110.247 183.968 109.757Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1423,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M162.448 99.228C162.102 99.1286 161.79 98.89 161.431 98.519C161.743 98.6184 162.116 98.8569 162.448 99.228Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1428,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M187.752 113.819C187.466 113.567 187.18 113.315 186.901 112.865C186.901 112.666 187.047 112.52 187.167 112.6C187.552 112.958 187.812 113.242 187.991 113.594C187.911 113.667 187.745 113.812 187.745 113.812L187.752 113.819Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1433,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.841 112.739C186.482 112.567 186.189 112.328 185.903 111.877C185.91 111.672 186.076 111.506 186.196 111.586C186.561 111.95 186.807 112.235 187.054 112.527C187.054 112.527 186.914 112.666 186.847 112.739H186.841Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1438,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M185.83 111.752C185.584 111.612 185.418 111.4 185.205 111.049C185.158 110.917 185.238 110.857 185.384 110.85C185.531 110.85 185.763 110.87 185.783 110.99C185.91 111.228 185.996 111.367 186.069 111.506C186.069 111.506 185.91 111.672 185.83 111.752Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1443,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.369 119.789C194.495 119.736 194.661 119.829 194.894 120.054C194.774 120.107 194.595 120.021 194.369 119.789Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1448,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.382 119.186C194.382 119.186 194.389 119.425 194.389 119.544C194.222 119.617 194.049 119.571 193.79 119.425C193.697 119.325 193.79 119.219 193.97 119.186C194.149 119.153 194.382 119.186 194.382 119.186Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1453,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M183.443 109.293C183.582 109.22 183.742 109.293 183.948 109.492C183.815 109.558 183.642 109.499 183.443 109.293Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1458,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M182.93 108.81C183.063 108.75 183.223 108.836 183.416 109.061C183.29 109.114 183.123 109.035 182.93 108.81Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1463,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M182.379 108.299C182.505 108.246 182.671 108.346 182.891 108.584C182.771 108.631 182.598 108.538 182.379 108.299Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1468,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M161.331 98.2672C161.211 98.3401 161.072 98.2473 160.925 97.9955C161.012 97.969 161.145 98.0618 161.331 98.2672Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1473,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M188.251 114.316C188.098 114.25 187.978 114.15 187.818 113.918C187.758 113.812 187.918 113.667 188.098 113.66C188.39 113.753 188.49 113.865 188.49 114.077C188.41 114.157 188.257 114.316 188.257 114.316H188.251Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1478,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M189.315 115.23C189.088 115.25 188.969 115.151 188.882 114.839C188.902 114.654 189.069 114.495 189.162 114.561C189.374 114.72 189.468 114.839 189.541 114.965C189.541 114.965 189.388 115.144 189.315 115.23Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1483,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M188.822 114.733C188.596 114.747 188.47 114.647 188.31 114.422C188.251 114.323 188.404 114.164 188.576 114.15C188.876 114.243 188.982 114.356 189.062 114.495C189.062 114.495 188.902 114.654 188.816 114.733H188.822Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1488,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M156.071 204.744C151.629 200.523 147.353 196.316 143.17 191.889C143.921 191.816 144.752 191.75 145.225 192.135C147.273 193.784 149.161 195.64 151.223 197.263C151.974 197.853 153.058 198.032 153.983 198.396C154.069 198.184 154.156 197.979 154.242 197.767C153.77 196.972 153.298 196.17 152.786 195.302C154.894 194.792 160.626 199.225 161.923 202.2C162.588 201.703 163.226 201.226 164.024 200.815C166.106 202.286 167.974 203.77 169.969 205.069C172.204 206.527 174.545 207.819 176.832 209.19C176.832 209.19 176.832 209.19 176.852 209.356C177.684 210.078 178.508 210.622 179.326 211.172C179.326 211.172 179.333 211.172 179.413 211.304C179.772 211.51 180.051 211.596 180.324 211.675C180.324 211.675 180.324 211.669 180.397 211.795C180.756 212.007 181.042 212.086 181.315 212.172C181.315 212.172 181.315 212.166 181.361 212.278C181.507 212.53 181.647 212.623 181.807 212.669C181.807 212.669 181.807 212.669 181.893 212.789C182.252 213.001 182.531 213.08 182.811 213.166C182.811 213.166 182.811 213.16 182.857 213.272C183.004 213.531 183.143 213.617 183.31 213.663C183.31 213.663 183.31 213.663 183.389 213.789C183.748 213.995 184.028 214.081 184.307 214.16C184.307 214.16 184.307 214.16 184.354 214.273C184.5 214.531 184.64 214.617 184.806 214.657C184.806 214.657 184.806 214.657 184.886 214.776C185.245 214.982 185.524 215.068 185.797 215.154C185.797 215.154 185.797 215.154 185.876 215.28C186.236 215.492 186.515 215.572 186.794 215.651C186.794 215.651 186.794 215.644 186.827 215.731C186.994 215.77 187.12 215.731 187.413 215.737C189.142 216.406 190.711 217.023 192.274 217.632C204.769 223.887 217.557 229.222 231.755 230.129C232.573 230.182 233.385 230.381 234.256 230.679C232.76 230.911 231.197 230.978 229.514 230.911C228.663 230.706 227.932 230.64 227.207 230.567L227.187 231.057C227.998 231.057 228.816 231.057 229.76 231.19C230.804 231.746 231.716 232.164 232.4 232.581C223.164 232.256 214.578 230.09 206.279 226.671C204.457 225.922 202.595 225.272 200.646 224.444C200.114 224.239 199.682 224.159 199.183 223.941C198.824 223.728 198.538 223.649 198.246 223.583C198.246 223.596 198.266 223.589 198.192 223.457C197.827 223.238 197.534 223.159 197.248 223.086C197.248 223.099 197.275 223.092 197.202 222.96C196.836 222.748 196.55 222.675 196.217 222.476C196.038 222.264 195.898 222.178 195.692 221.979C195.439 221.866 195.253 221.866 195.067 221.866C195.306 222.098 195.539 222.324 195.898 222.576C196.018 222.595 196.257 222.602 196.31 222.708C196.463 222.953 196.596 223.046 196.683 223.251C195.958 223.45 195.167 223.755 194.681 223.497C191.782 221.959 188.902 220.362 186.109 218.646C183.097 216.791 182.578 216.797 180.417 219.826C181.853 220.19 183.123 220.786 184.374 220.76C185.81 220.733 186.801 220.448 186.561 222.536C186.488 223.152 187.639 224.113 188.423 224.59C189.98 225.531 191.675 226.24 193.311 227.042C193.524 227.042 193.744 227.048 194.143 227.234C195.007 227.804 195.685 228.195 196.384 228.658C196.404 228.731 196.59 228.764 196.59 228.764C196.59 228.764 196.703 228.585 196.723 228.572C196.743 228.559 196.776 228.513 196.776 228.513C198.399 229.367 199.968 230.341 201.657 231.044C205.907 232.82 210.209 234.476 214.598 236.305C213.268 236.232 211.685 236.351 210.409 235.782C201.81 231.952 193.192 228.155 184.773 223.96C181.368 222.264 178.482 219.561 175.31 217.381C173.474 216.122 171.459 215.114 169.67 213.796C167.502 212.199 165.534 210.343 163.386 208.72C162.575 208.104 161.504 207.825 160.553 207.388C160.44 207.594 160.327 207.799 160.214 208.011C158.89 206.918 157.567 205.824 156.071 204.718V204.744ZM193.218 220.965C193.165 220.939 193.118 220.919 193.065 220.892C193.132 220.972 193.192 221.051 193.384 221.343C193.571 221.33 193.75 221.316 193.936 221.303C193.717 221.244 193.491 221.184 193.218 220.965ZM187.333 217.838L187.506 217.897C187.446 217.805 187.386 217.718 187.187 217.414C186.994 217.427 186.801 217.434 186.601 217.447C186.821 217.526 187.034 217.612 187.326 217.838H187.333ZM188.743 218.467C188.689 218.441 188.636 218.421 188.583 218.394C188.65 218.48 188.709 218.567 188.969 218.924C189.933 219.474 190.897 220.018 191.862 220.568C191.975 220.296 192.094 220.018 192.207 219.746C191.07 219.375 189.933 219.004 188.743 218.474V218.467Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1493,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M223.848 241.851C217.857 242.083 212.311 240.135 206.784 238.24C203.818 237.226 200.966 235.894 198.073 234.668C197.135 234.271 196.257 233.734 195.539 232.787C204.557 236.703 213.813 239.645 223.629 241.487C223.789 241.705 223.848 241.845 223.848 241.845V241.851Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1498,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M221.182 247.311C219.506 246.576 216.912 247.497 216.653 244.581C218.07 244.78 219.513 244.853 220.843 245.264C221.182 245.37 221.182 246.556 221.182 247.311Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1503,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M225.671 243.501C226.688 243.501 227.506 243.501 228.311 243.501C228.218 245.363 226.083 245.562 221.508 243.826C223.097 243.693 224.281 243.594 225.664 243.495L225.671 243.501Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1508,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M213.687 249.717C213.248 249.948 212.809 250.18 212.078 250.286C209.591 249.597 207.389 249.034 205.195 248.471C205.195 248.471 205.222 248.458 205.261 248.325C205.109 247.954 204.916 247.722 204.723 247.49C206.818 247.974 208.919 248.451 211.253 248.888C211.572 248.809 211.659 248.789 211.818 248.941C212.324 249.127 212.763 249.16 213.328 249.319C213.528 249.538 213.607 249.624 213.68 249.717H213.687Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1513,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M213.88 249.717C213.614 249.63 213.534 249.538 213.262 249.16C212.63 248.842 212.191 248.815 211.752 248.789C211.666 248.796 211.579 248.815 211.426 248.842C210.655 248.405 209.93 248 209.265 247.51C209.092 247.384 209.119 246.987 209.132 246.596C209.212 246.476 209.225 246.47 209.225 246.47C211.499 246.291 213.355 247.132 215.037 248.875C215.197 248.961 215.21 248.974 215.21 248.974C215.21 249.08 215.21 249.186 215.21 249.452C214.831 249.65 214.452 249.683 213.887 249.723L213.88 249.717Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1518,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M224.055 241.871C223.848 241.851 223.782 241.712 223.742 241.652C227.027 241.54 230.352 241.493 233.91 241.48C234.149 241.692 234.163 241.864 234.203 242.163C230.911 242.163 227.592 242.023 224.061 241.871H224.055Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1523,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M204.729 247.358C204.916 247.729 205.102 247.961 205.248 248.345C204.995 248.517 204.776 248.537 204.404 248.57C204.025 248.511 203.805 248.444 203.419 248.332C202.123 247.669 200.992 247.053 199.782 246.297C200.753 246.092 201.81 246.026 203.18 246.026C203.898 246.384 204.311 246.669 204.716 246.96C204.716 247.046 204.723 247.139 204.716 247.358H204.729Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1528,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.995 242.998C232.081 243.236 231.968 243.448 231.775 243.76C231.15 243.998 230.598 244.151 230.033 244.237C230.006 244.237 229.893 243.707 229.82 243.422C230.472 243.269 231.13 243.117 231.995 242.991V242.998Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1533,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M204.723 246.768C204.317 246.668 203.905 246.377 203.366 246.006C203.479 245.516 203.719 245.105 203.958 244.694C204.211 245.323 204.463 245.953 204.723 246.768Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1538,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M209.205 246.476C208.779 246.397 208.36 246.317 207.935 246.238L208.121 245.701C208.467 245.847 208.813 245.999 209.185 246.304C209.212 246.47 209.205 246.476 209.198 246.476H209.205Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1543,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M235.998 242.289C236.563 242.13 237.135 242.083 237.714 242.037C237.74 242.169 237.774 242.302 237.8 242.434C237.328 242.6 236.863 242.772 236.218 242.905C236.065 242.713 236.051 242.56 235.998 242.289Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1548,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M215.183 248.955C215.33 248.703 215.489 248.451 215.642 248.206C215.742 248.299 215.848 248.385 215.948 248.477C215.789 248.63 215.636 248.782 215.336 248.955C215.197 248.974 215.183 248.961 215.183 248.955Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1553,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M161.87 209.581C161.876 209.707 161.637 209.694 161.511 209.687C161.471 209.475 161.55 209.263 161.637 209.051C161.71 209.184 161.79 209.323 161.87 209.581Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1558,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M161.969 210.131C161.89 210.178 161.883 209.933 161.876 209.813C161.93 209.827 161.989 209.952 161.969 210.131Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1563,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M91.6315 225.617C83.6115 230.182 75.7378 235.039 67.4917 239.161C64.4992 240.659 60.7352 240.804 57.4235 241.977C54.9696 242.845 52.4093 243.442 49.4833 244.276C50.0818 243.349 50.4076 242.845 50.933 242.149C59.4451 239.572 66.8134 235.265 73.9955 230.64C77.2274 228.559 80.1269 225.975 83.3588 223.596C85.0546 222.774 86.5176 221.813 88.1136 221.21C92.0638 219.713 94.5309 215.638 99.2924 215.366C101.819 215.22 101.859 214.684 102.026 217.818C101.161 218.679 100.376 219.402 99.4187 220.144C96.7122 221.979 94.1718 223.795 91.6382 225.617H91.6315Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1568,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M83.1792 223.616C80.1269 225.975 77.2274 228.559 73.9955 230.64C66.82 235.265 59.4451 239.572 50.9529 241.984C44.9945 243.634 39.3153 246.079 32.9046 244.031C31.834 243.958 30.9761 243.866 30.1182 243.766L30.0983 243.09C31.8206 242.878 33.543 242.666 35.691 242.448C39.0027 241.792 41.8955 241.149 44.7817 240.506C44.7817 240.506 44.7817 240.506 44.9612 240.506C45.6861 240.34 46.2247 240.175 46.7634 240.016C49.1109 239.042 51.3985 237.869 53.8258 237.127C60.968 234.953 67.4518 231.388 74.2615 227.724C77.1875 226.227 79.8276 224.895 82.6472 223.576C82.9398 223.596 83.0595 223.603 83.1792 223.609V223.616Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1573,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M93.1211 238.512C92.4362 239.042 91.7845 239.605 91.0662 240.089C88.2865 241.977 85.4935 243.839 82.6406 245.993C82.4677 246.397 82.3214 246.47 82.0554 246.523C81.816 246.609 81.7162 246.708 81.5367 246.953C80.998 247.238 80.5924 247.411 80.1069 247.457C79.7811 247.57 79.5284 247.815 79.2623 248.06C79.249 248.06 79.2224 248.06 79.1027 248.06C78.8301 248.133 78.7303 248.239 78.5641 248.484C78.1917 248.703 77.9323 248.829 77.6663 248.743C77.6597 247.603 77.6597 246.668 77.6597 245.297C76.19 246.218 75.1925 246.841 74.195 247.47C72.8317 247.921 71.4684 248.365 69.5931 248.981C70.2581 247.828 70.697 247.059 71.1559 246.125C77.7794 241.772 84.4029 237.63 90.9731 233.403C93.3805 231.852 95.6548 230.096 98.0289 228.479C98.3614 228.254 98.8801 228.294 99.3057 228.214C99.4254 228.413 99.5451 228.612 99.6648 228.811C97.8094 230.189 95.9607 231.561 94.1053 232.939L94.5908 233.681C96.3132 232.813 98.0355 231.938 99.8577 231.216C97.2974 233.628 94.6373 235.894 91.678 238.412C92.4827 238.465 92.7953 238.492 93.1145 238.512H93.1211Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1578,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M99.585 220.124C100.37 219.402 101.154 218.679 102.192 217.791C106.122 215.101 106.202 214.366 103.435 211.178C101.972 211.178 100.782 211.178 99.6648 211.033C100.696 210.025 101.653 209.164 102.604 208.309C102.85 208.157 103.096 208.004 103.475 207.792C104.932 208.031 106.554 207.951 107.525 208.707C109.726 210.41 110.218 212.464 107.279 214.445C107.864 214.491 108.629 214.803 109.015 214.551C111.861 212.682 113.297 215.386 115.186 216.44C115.545 216.638 115.445 217.659 115.432 218.527C115.173 218.852 115.08 218.977 114.96 219.17C114.94 219.183 114.993 219.17 115.146 219.103C115.386 218.951 115.485 218.818 115.532 218.666C118.877 217.778 119.283 218.123 118.498 221.409C118.352 221.694 118.232 221.8 118.066 222.026C117.859 222.198 117.733 222.291 117.567 222.509C116.011 221.074 114.151 221.191 111.987 222.86C111.462 223.265 110.903 223.616 110.205 223.881C111.096 221.906 112.14 220.044 113.138 218.268C109.361 216.652 106.235 215.916 104.047 219.633C102.99 220.429 101.939 221.224 100.709 221.926C100.217 221.27 99.8976 220.714 99.5784 220.15L99.585 220.124Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1583,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M104.247 219.627C106.248 215.903 109.367 216.632 113.145 218.249C112.147 220.024 111.103 221.886 110.059 223.934C110.059 224.119 110.052 224.113 109.939 224.166C109.693 224.318 109.6 224.451 109.553 224.61C109.553 224.61 109.547 224.61 109.367 224.61C108.829 224.61 108.47 224.616 108.11 224.623C107.386 223.636 106.654 222.655 105.743 221.648C105.557 221.628 105.55 221.621 105.55 221.621C105.178 220.959 104.799 220.303 104.233 219.627H104.247Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1588,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M93.2741 238.439C92.8086 238.492 92.4894 238.472 91.6847 238.419C94.644 235.901 97.304 233.635 100.051 231.223C100.283 231.024 100.403 230.944 100.702 230.693C101.314 230.242 101.72 229.911 102.125 229.586C103.668 228.466 105.211 227.353 106.913 226.339C107.08 226.684 107.086 226.916 107.093 227.148C102.538 230.885 97.9757 234.622 93.2741 238.439Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1593,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M99.4121 220.144C99.9042 220.687 100.223 221.25 100.569 221.979C98.5143 223.834 96.5193 225.643 94.3181 227.148C93.2674 227.87 91.6847 228.334 91.6249 225.809C94.1652 223.795 96.6989 221.979 99.4121 220.144Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1598,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M71.0894 245.144C70.185 245.522 69.3404 245.754 68.3496 246.032C68.2897 245.701 68.2166 245.27 68.1567 244.667C69.7261 244.144 71.2822 243.799 73.131 243.382C72.333 244.038 71.7411 244.522 71.0894 245.144Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1603,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M67.086 244.435C66.9863 245.184 66.7469 245.887 66.3545 246.529C66.2016 246.37 66.2016 246.278 66.1949 246.046C65.9622 245.456 65.7361 245.005 65.5033 244.555C65.9821 244.502 66.4609 244.442 67.086 244.429V244.435Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1608,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M107.226 227.068C107.086 226.916 107.08 226.684 107.066 226.273C107.366 225.696 107.665 225.292 108.044 224.756C108.483 224.623 108.842 224.616 109.381 224.616C109.42 224.868 109.287 225.113 109.095 225.498C108.483 226.087 107.924 226.538 107.226 227.068Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1613,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M39.9205 247.417C39.721 247.232 39.6943 247.086 39.6345 246.841C40.5323 246.483 41.45 246.238 42.3677 245.986C42.4408 246.218 42.5206 246.443 42.5938 246.675C41.7692 246.934 40.9379 247.199 39.9205 247.417Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1618,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.4975 245.986C62.1317 246.271 61.5133 246.536 60.8948 246.801C60.9081 246.529 60.9148 246.258 61.0677 245.953C61.5532 245.933 61.899 245.953 62.4975 245.993V245.986Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1623,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M45.8989 244.966C45.4999 245.217 45.1607 245.35 44.8216 245.482C44.7817 245.337 44.7351 245.184 44.6952 245.038C45.1142 244.972 45.5398 244.913 45.9055 244.966H45.8989Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1628,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.939 229.579C101.72 229.904 101.314 230.235 100.755 230.587C100.982 230.269 101.367 229.924 101.939 229.579Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1633,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M104.579 222.622C104.426 222.874 104.273 223.119 104.127 223.371C104.027 223.284 103.921 223.192 103.821 223.106C103.981 222.953 104.14 222.807 104.44 222.635C104.579 222.615 104.586 222.622 104.586 222.622H104.579Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1638,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.398 223.881C102.617 223.934 102.75 224.073 102.87 224.219C102.87 224.219 102.764 224.318 102.704 224.378C102.571 224.239 102.438 224.106 102.398 223.881Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1643,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M48.14 244.164C48.2663 244.17 48.3328 244.237 48.3993 244.303C48.2929 244.276 48.1932 244.25 48.14 244.164Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1648,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M104.573 222.615C104.626 222.456 104.719 222.324 104.958 222.171C105.071 222.118 105.078 222.125 105.078 222.125C105.025 222.284 104.925 222.41 104.686 222.562C104.579 222.615 104.573 222.615 104.573 222.615Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1653,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M105.071 222.118C105.125 221.959 105.218 221.827 105.457 221.674C105.563 221.621 105.57 221.628 105.577 221.628C105.524 221.787 105.43 221.919 105.191 222.072C105.085 222.125 105.078 222.125 105.071 222.118Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1658,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M152.24 301.149C153.424 303.78 155.652 302.422 157.388 302.614C160.307 302.945 163.233 303.177 166.159 303.449C166.112 303.648 166.073 303.846 166.026 304.038C166.844 303.734 167.682 303.117 168.467 303.184C171.286 303.416 174.106 303.813 176.892 304.317C177.511 304.429 178.302 305.132 178.468 305.722C178.608 306.212 177.943 306.921 177.637 307.537C175.09 306.112 172.477 308.584 169.923 307.398C169.783 307.332 169.511 307.259 169.451 307.325C166.418 310.744 162.209 306.822 158.87 309.002C158.026 309.552 156.457 309.002 155.053 309.028C152.925 309.452 150.97 310.009 148.995 310.095C146.255 310.221 143.496 310.009 140.742 309.909C139.273 309.856 137.803 309.638 136.34 309.677C135.023 309.717 133.713 310.155 132.397 310.161C130.84 310.168 129.278 309.797 127.728 309.823C127.123 309.83 126.531 310.466 125.906 310.36C125.101 310.261 124.29 310.102 123.485 310.082C121.51 310.035 119.522 310.161 117.554 310.035C115.179 309.889 112.825 309.479 110.458 309.339C109.56 309.286 108.616 309.889 107.718 309.836C105.796 309.717 103.894 309.359 101.6 309.094C100.842 309.094 100.463 309.094 100.09 309.094C99.8709 309.094 99.6515 309.094 99.1594 308.955C97.2974 308.909 95.7014 309.002 94.112 309.094C93.8925 309.094 93.6731 309.094 93.2674 308.929C91.9307 308.379 90.7803 307.994 89.6298 307.603C89.3838 307.736 89.1444 307.862 88.6124 307.961C88.2333 306.961 87.8077 305.841 88.1602 305.085C88.3796 304.615 89.7828 304.701 90.6606 304.549C92.5426 304.217 94.7969 304.655 95.6215 302.15C95.841 302.15 96.0605 302.143 96.4794 302.309C98.0089 303.727 98.7138 303.151 99.1128 301.653C99.3323 301.653 99.5451 301.66 99.9508 301.839C101.381 303.946 102.285 303.21 103.083 301.64C103.302 301.64 103.522 301.64 103.947 301.825C105.417 303.131 106.022 302.76 106.082 301.149C106.302 301.149 106.521 301.149 107 301.262C107.691 301.302 108.13 301.222 108.569 301.136C115.253 300.971 121.943 300.719 128.626 300.692C131.173 300.679 133.713 301.308 136.267 301.414C138.096 301.494 139.931 301.143 141.773 301.096C143.868 301.043 145.969 301.123 148.304 301.269C149.447 300.633 150.684 303.913 151.422 301.156C151.642 301.156 151.861 301.156 152.254 301.156L152.24 301.149Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1663,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.4287 302.117C94.7969 304.655 92.5426 304.211 90.6539 304.542C89.7761 304.694 88.373 304.615 88.1535 305.079C87.7944 305.834 88.22 306.954 88.4727 308.014C87.2557 308.485 85.8858 309.154 84.5093 309.18C82.4078 309.22 80.2998 308.737 78.185 308.611C74.3346 308.379 70.451 309.286 66.6338 307.709C65.3371 307.173 63.5415 307.703 62.0054 307.935C60.0702 308.226 58.4675 308.173 58.1749 305.37C61.2406 305.191 64.313 305.152 67.3387 304.761C68.3363 304.635 69.2074 303.588 70.165 302.793C71.4219 302.196 72.6588 301.772 74.0354 301.242C74.8733 302.773 75.9972 302.998 77.6929 302.614C79.1426 302.289 80.7254 302.567 82.4743 302.673C82.7403 302.793 82.7869 302.813 82.8268 302.839C82.7669 302.773 82.7071 302.7 82.6539 302.634C83.5849 302.362 84.5093 301.918 85.4536 301.865C86.8634 301.786 88.2799 302.024 89.703 302.057C91.5517 302.104 93.3938 302.084 95.4287 302.117ZM68.3363 305.523C68.3895 305.596 68.4493 305.675 68.5025 305.748C68.4892 305.642 68.4826 305.536 68.3363 305.523Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1668,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M94.245 309.234C95.7013 309.002 97.2974 308.909 98.9931 308.955C97.6099 310.658 95.9474 309.194 94.245 309.234Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1673,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.6298 307.782C90.7803 307.994 91.9308 308.379 93.1012 308.929C91.8643 309.002 90.3347 309.744 89.6298 307.782Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1678,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M100.157 309.233C100.463 309.094 100.842 309.094 101.4 309.094C101.134 309.187 100.682 309.28 100.157 309.233Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1683,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M50.8931 308.299C50.8332 308.372 50.7268 308.385 50.6204 308.399C50.6936 308.346 50.7734 308.293 50.8931 308.299Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1688,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M54.4509 302.992C54.5307 303.051 54.5373 303.157 54.5506 303.263C54.4974 303.19 54.4376 303.111 54.4509 302.992Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1693,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M154.947 310.168C154.987 310.088 155.073 310.088 155.286 310.088C155.273 310.141 155.133 310.201 154.947 310.168Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1698,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M56.7651 302.7C56.7651 302.7 56.8582 302.773 56.9181 302.839C56.8782 302.813 56.8383 302.793 56.7651 302.7Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1703,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M41.7958 306.609C41.3103 307.087 40.8182 307.941 40.3461 307.935C39.834 307.921 39.0493 307.179 38.8963 306.616C38.617 305.596 38.7234 304.476 39.1091 303.184C39.4616 304.078 39.7276 305.019 40.1931 305.841C40.4059 306.212 41.0244 306.358 41.6229 306.603C41.7891 306.603 41.7891 306.603 41.7891 306.603L41.7958 306.609Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1708,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.471 208.17C101.647 209.164 100.696 210.025 99.5118 211.112C94.5509 214.71 89.8094 218.076 85.0878 221.462C84.1768 222.112 83.3388 222.867 82.4743 223.569C79.8343 224.901 77.1875 226.227 74.3745 227.605C74.1883 227.247 74.1684 226.849 74.2482 226.121C76.0371 224.789 77.7993 223.887 79.4086 222.761C84.6689 219.103 89.8692 215.366 95.2691 211.655C97.4171 209.82 99.3922 207.991 101.62 205.93C98.8468 204.241 96.7255 202.949 94.8701 201.822C95.2092 200.132 95.4553 198.913 95.7812 197.323C93.9191 197.648 92.5492 197.959 91.1593 198.092C90.6473 198.138 89.683 197.84 89.6232 197.555C89.0845 195.05 86.7969 194.493 85.0878 193.294C85.806 192.612 86.5309 191.929 87.4486 191.386C88.2466 191.949 88.8318 192.413 89.4636 192.797C90.0022 193.122 90.9 193.208 91.1194 193.652C92.1436 195.752 93.8859 195.958 95.8743 195.792C97.6698 195.64 98.3414 196.349 97.6033 198.118C97.3838 198.642 97.2708 199.211 97.038 199.781C97.0181 199.794 97.0713 199.781 97.2974 199.781C98.4545 199.94 99.4254 200.079 100.416 200.219C100.184 200.815 99.9774 201.358 99.565 202.412C102.006 200.954 103.635 201.69 105.065 203.22C104.353 203.87 103.435 204.406 102.99 205.201C102.538 206.01 102.538 207.077 102.478 208.17H102.471Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1713,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.0912 199.748C97.2508 199.198 97.3705 198.635 97.59 198.111C98.3348 196.342 97.6565 195.64 95.861 195.786C93.8726 195.951 92.1303 195.739 91.1061 193.645C90.8867 193.201 89.9889 193.115 89.4503 192.791C88.8185 192.406 88.2333 191.942 87.5883 191.32C88.4594 190.226 89.3705 189.325 90.4411 188.371C92.8551 189.424 95.0629 190.683 97.4104 191.565C98.368 191.923 99.7446 191.134 100.749 191.445C104.134 192.486 104.154 192.817 101.514 195.64C101.141 195.958 100.982 196.11 100.822 196.263C100.928 196.349 101.028 196.442 101.134 196.528C101.287 196.276 101.44 196.024 101.587 195.779C103.648 195.779 104.714 196.095 104.785 196.727C105.883 197.555 106.701 197.966 107.213 198.608C107.977 199.569 108.263 200.649 106.993 201.577C106.401 202.008 105.903 202.577 105.211 203.147C103.628 201.683 101.999 200.954 99.5584 202.412C99.9641 201.358 100.177 200.808 100.41 200.219C99.4188 200.079 98.4412 199.94 97.2841 199.775C97.1045 199.748 97.0912 199.741 97.0912 199.741V199.748Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1718,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M124.49 215.459C124.257 215.644 124.024 215.651 123.625 215.658C121.723 215.737 119.994 215.81 118.332 215.883C117.52 214.273 116.583 212.398 115.645 210.536C114.076 211.125 112.752 211.629 111.469 212.113C111.076 209.74 110.89 207.6 110.285 205.579C110.099 204.956 108.762 204.678 107.765 204.241C108.47 203.426 109.248 202.299 110.298 201.895C111.11 201.584 112.905 201.902 113.158 202.445C113.876 204.022 114.082 205.844 114.361 207.594C114.415 207.925 113.863 208.356 113.77 209.456C114.674 209.376 115.618 209.436 116.483 209.197C118.212 208.713 120.785 209.462 121.045 210.953C121.224 211.993 120.593 213.173 120.307 214.332C121.61 214.849 123.845 211.748 124.496 215.459H124.49Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1723,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M13.3201 200.305C14.5437 197.535 14.8962 194.798 13.5529 191.889C13.2669 191.266 14.1115 190.127 14.424 189.04C14.4107 188.855 14.4041 188.841 14.5637 188.762C14.9494 188.073 15.1821 187.456 15.4082 186.84C15.4082 186.84 15.3949 186.84 15.5479 186.767C16.2661 185.753 16.8247 184.806 17.39 183.858C18.2212 183.03 19.1456 182.281 19.8572 181.36C22.6236 177.789 25.3169 174.171 28.356 170.467C28.8946 169.89 29.1141 169.42 29.3269 168.943C29.4665 168.697 29.5995 168.446 29.9786 168.075C30.7633 168.446 31.3152 168.949 31.7874 169.605C29.9387 172.541 27.9969 175.238 26.4407 178.133C24.9578 180.89 22.976 183.6 23.8405 187.35C25.0509 185.581 26.1348 184.004 27.2121 182.42C27.4116 182.533 27.6045 182.646 27.804 182.758C26.4939 185.276 25.1772 187.788 23.8671 190.306C24.1066 190.418 24.346 190.531 24.5787 190.644C25.1506 189.59 25.5031 187.9 26.341 187.602C29.6793 186.436 30.1448 183.196 32.0069 180.877C32.3859 181.208 32.5987 181.533 32.6652 181.93C31.129 185.111 29.7392 188.205 28.2828 191.326C28.2629 191.333 28.3028 191.32 28.4757 191.3C28.5954 191.3 28.8414 191.3 28.8481 191.3C28.8481 191.3 28.8614 191.313 28.8614 191.505C27.8572 194.387 26.853 197.078 25.6693 199.761C24.9046 198.668 24.3194 197.581 23.9337 196.866C23.0957 197.866 21.646 199.244 20.6618 200.894C19.7973 202.339 19.4648 204.095 18.7665 205.804C18.3941 206.348 18.1547 206.798 17.7424 207.163C15.9669 206.308 16.2728 205.056 16.6984 203.744C17.0974 202.511 17.4498 201.259 17.8289 200.02C17.5163 199.874 17.2104 199.728 16.8979 199.582C16.2395 200.643 15.5811 201.709 14.9228 202.77C14.5836 203.373 14.2711 204.002 13.8721 204.565C13.8122 204.651 13.3467 204.453 12.961 204.102C13.0142 202.644 13.1738 201.464 13.3334 200.291L13.3201 200.305ZM22.0849 189.179C22.2179 189.318 22.3509 189.458 22.4839 189.597C22.5438 189.544 22.6502 189.444 22.6502 189.438C22.5238 189.292 22.3908 189.153 22.0849 189.179Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1728,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M31.8539 169.453C31.3086 168.956 30.7566 168.452 30.0251 167.949C33.4965 163.549 37.1873 159.182 40.785 154.743C41.6495 153.676 42.2413 152.384 43.1191 151.111C43.1524 151.781 43.0194 152.523 42.8864 153.272C42.647 153.424 42.4076 153.576 42.1682 153.729C42.9994 154.312 43.8839 154.849 44.6354 155.525C44.8149 155.684 44.5489 156.34 44.2164 156.909C43.1258 157.711 42.2081 158.274 41.4965 159.036C38.2513 162.482 35.0592 165.981 31.8539 169.453Z",
                fill: "#E8423E"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1733,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M26.8331 159.686C27.0126 159.461 27.139 159.361 27.2919 159.123C27.4981 158.95 27.6244 158.858 27.784 158.619C27.9969 158.453 28.1232 158.354 28.2828 158.122C28.4956 157.963 28.6286 157.864 28.7816 157.625C28.9944 157.28 29.1473 157.049 29.3136 156.664C29.8855 156.353 30.4441 156.194 31.1756 156.021C29.3335 158.241 27.3119 160.474 25.1174 162.668C25.5629 161.707 26.1814 160.779 26.8264 159.692L26.8331 159.686Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1738,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M17.3966 183.679C16.8181 184.806 16.2528 185.747 15.5412 186.774C15.887 184.925 16.3792 182.997 16.8779 181.069C17.2237 181.161 17.5695 181.248 17.9153 181.34C17.7491 182.063 17.5828 182.785 17.3966 183.679Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1743,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M9.56282 188.782C9.78892 187.874 10.2012 186.94 10.7465 185.919C10.5071 186.807 10.1214 187.788 9.56282 188.782Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1748,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M15.2353 186.9C15.1688 187.456 14.9427 188.073 14.557 188.755C14.6235 188.205 14.843 187.582 15.2353 186.9Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1753,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M29.1806 169.022C29.1008 169.426 28.888 169.904 28.4956 170.394C28.5621 169.97 28.8015 169.532 29.1806 169.022Z",
                fill: "#E8423E"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1758,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M11.0325 185.826C10.966 185.555 11.0391 185.27 11.2519 184.912C11.3184 185.164 11.2519 185.488 11.0325 185.826Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1763,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M12.5022 182.792C12.4423 182.699 12.5022 182.533 12.6684 182.295C12.7216 182.387 12.6684 182.553 12.5022 182.792Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1768,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M84.1768 21.754C84.4428 21.86 84.7154 21.9726 85.1144 22.3106C85.3871 22.6286 85.5267 22.7081 85.6664 22.7943C85.6664 22.7943 85.6664 22.834 85.7395 22.9467C86.092 23.1521 86.3646 23.2382 86.6373 23.331C86.6373 23.331 86.6373 23.331 86.6971 23.4503C86.8567 23.7021 86.9964 23.7816 87.1693 23.8081C87.1693 23.8081 87.1427 23.8412 87.2025 23.9406C87.4087 24.1195 87.5483 24.1924 87.6946 24.2719C87.6946 24.2719 87.6814 24.2719 87.7478 24.4111C88.0937 24.6364 88.3663 24.7291 88.6456 24.8219C88.6456 24.8219 88.639 24.8285 88.7121 24.9478C89.0446 25.1598 89.304 25.2526 89.5567 25.352C89.816 25.4912 90.0754 25.6303 90.5542 25.9484C92.5492 27.3531 94.3314 28.579 96.107 29.7982C97.058 30.6928 97.9956 31.6138 98.9732 32.4818C102.218 35.3775 105.49 38.2467 108.742 41.1357C109.234 41.573 109.653 42.123 110.199 42.4808C112.765 44.1507 114.634 46.3241 115.445 49.6571C111.961 50.6642 109.846 47.3776 106.455 46.9204C108.769 49.3986 110.844 51.6184 112.872 54.0701C112.732 54.587 112.646 54.8653 112.4 55.084C111.342 54.3087 110.398 53.6328 109.547 52.8575C107.04 50.5914 104.652 48.1927 102.072 46.0193C96.6457 41.4538 91.1261 36.9877 85.6331 32.4951C82.0687 29.5795 78.4776 26.7038 74.8733 23.7816C73.6497 25.5508 72.6322 25.4315 71.7943 23.7816C71.1758 22.7545 70.4244 21.8268 69.6929 20.8793C69.7062 20.8594 69.7328 20.8197 69.8924 20.8064C69.8924 19.9317 69.7394 19.0703 69.5466 18.0035C72.7852 17.2349 74.9597 20.1371 77.8459 20.5811C77.939 20.051 78.0321 19.5275 78.1385 18.9312C79.2557 19.6468 80.1069 20.3227 81.0645 20.7666C82.0554 21.2172 83.1526 21.4359 84.1967 21.754H84.1768Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1773,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M144.945 91.8927C144.047 90.7795 143.143 89.6663 142.046 88.3742C141.76 88.0628 141.64 87.9766 141.427 87.8176C141.254 87.5791 141.121 87.4863 140.949 87.4399C140.949 87.4399 140.949 87.4266 140.929 87.2544C140.244 86.6978 139.585 86.3201 138.827 85.8894C138.608 85.7436 138.515 85.6243 138.455 85.3328C138.288 84.9418 138.129 84.7099 137.963 84.4647C137.963 84.4647 137.949 84.4515 137.896 84.3388C137.75 84.0936 137.623 84.0075 137.457 83.9611C137.457 83.9611 137.457 83.9479 137.437 83.7888C137.098 83.4111 136.786 83.1859 136.46 82.9672C136.46 82.9672 136.46 82.9672 136.407 82.8545C136.254 82.6094 136.121 82.5166 135.948 82.3112C135.781 81.9335 135.622 81.7016 135.382 81.3504C135.023 81.145 134.751 81.0588 134.478 80.9793C134.478 80.9793 134.465 80.9727 134.418 80.86C134.272 80.6149 134.145 80.5221 133.973 80.489C133.966 80.489 133.973 80.4757 133.966 80.3299C133.8 79.9522 133.633 79.7203 133.401 79.3426C132.024 77.8054 130.727 76.4072 129.617 75.2211C130.561 74.141 131.259 73.3459 131.991 72.511C132.024 72.4778 132.084 72.4116 132.084 72.4116C132.569 72.7827 133.062 73.1471 133.534 73.7368C133.52 73.9555 133.447 74.0549 133.288 74.1145C132.829 74.7043 132.157 75.5988 132.277 75.7181C134.598 78.0373 137.005 80.2637 139.392 82.51C140.902 84.4051 142.438 86.2803 143.908 88.2019C144.885 89.4808 145.783 90.8193 146.674 92.1644C146.741 92.2638 146.402 92.6216 146.089 92.8867C145.923 92.9132 145.923 92.9065 145.87 92.7939C145.723 92.5487 145.59 92.4626 145.424 92.4162C145.424 92.4162 145.424 92.403 145.371 92.2969C145.225 92.0518 145.092 91.9656 144.932 91.9192V91.906L144.945 91.8927Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1778,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M112.539 55.1436C112.626 54.8653 112.719 54.5804 112.932 54.2159C116.044 56.8465 119.037 59.5567 121.876 62.4391C121.324 62.6047 120.918 62.6047 120.513 62.5981C120.513 62.5981 120.513 62.5981 120.426 62.4722C120.054 62.2602 119.761 62.1807 119.376 62.0481C119.156 61.909 119.07 61.7897 119.003 61.4783C118.664 61.0741 118.338 60.8422 118.019 60.6036C118.019 60.6036 118.019 60.6102 118.006 60.4512C117.667 60.0669 117.341 59.8416 117.022 59.6097C117.022 59.6097 117.022 59.6097 116.975 59.5037C116.829 59.2452 116.689 59.1591 116.523 59.1127C116.523 59.1127 116.523 59.1127 116.476 59.0001C116.33 58.7416 116.19 58.6555 116.024 58.6157C116.024 58.6157 116.024 58.6157 115.977 58.5031C115.831 58.2447 115.698 58.1585 115.525 58.1188C115.525 58.1188 115.525 58.1188 115.479 58.0061C115.332 57.7477 115.199 57.6616 115.033 57.6218C115.033 57.6218 115.033 57.6218 114.973 57.5025C114.76 57.2971 114.608 57.211 114.368 57.0784C114.162 56.9459 114.082 56.8333 113.989 56.5749C113.81 56.3429 113.677 56.2369 113.537 56.1309C113.537 56.1309 113.53 56.1309 113.484 56.0116C113.337 55.7598 113.204 55.6671 113.038 55.6273C113.038 55.6273 113.038 55.6273 112.985 55.5147C112.839 55.2629 112.706 55.1701 112.539 55.1303V55.1436Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1783,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M120.519 62.5981C120.925 62.5981 121.331 62.5981 121.936 62.5981C122.548 62.9559 122.953 63.3204 123.446 63.9962C123.911 64.5595 124.297 64.8179 124.676 65.0697C125.068 65.4341 125.46 65.792 125.953 66.4148C126.205 66.8058 126.358 66.9317 126.511 67.0576C126.511 67.0576 126.498 67.0576 126.498 67.2166C126.85 67.9322 127.196 68.4888 127.356 69.0388C124.948 66.8919 122.734 64.7384 120.513 62.5915L120.519 62.5981Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1788,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M96.1469 29.6591C94.3181 28.5724 92.5426 27.3465 90.6872 25.9749C90.6207 25.5972 90.6207 25.3719 90.6406 24.9677C92.5027 26.3724 94.3514 27.9495 96.1469 29.6591Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1793,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M127.542 69.0521C127.196 68.4955 126.844 67.9455 126.498 67.2232C128.174 68.5684 129.85 70.0791 131.532 71.7887C131.539 71.9875 131.472 72.0471 131.339 72.0538C131.113 72.0604 131.02 72.067 130.82 72.0538C130.714 72.0339 130.495 72.0007 130.421 71.855C129.411 70.8213 128.48 69.94 127.542 69.0521Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1798,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M134.312 73.9952C134.598 74.2669 134.737 74.5187 134.784 74.8898C134.278 74.691 133.873 74.3729 133.467 74.0549C133.467 74.0549 133.547 73.9555 133.587 73.9025C133.813 73.8959 133.993 73.9356 134.318 74.0019L134.312 73.9952Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1803,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M124.569 64.9504C124.29 64.8245 123.911 64.5727 123.519 64.1221C123.831 64.2282 124.15 64.5263 124.569 64.9504Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1808,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M88.5924 23.172C88.4794 23.2581 88.3464 23.1852 88.2067 22.9334C88.3131 22.8738 88.4328 22.9533 88.5924 23.172Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1813,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M131.579 71.9477C131.751 71.9941 131.865 72.0935 132.037 72.3122C132.104 72.4049 132.037 72.4712 131.904 72.4513C131.632 72.3321 131.539 72.2062 131.485 72.0471C131.485 72.0471 131.552 71.9809 131.585 71.9477H131.579Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1818,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M126.458 66.9317C126.358 66.9383 126.205 66.8124 126.026 66.5341C126.139 66.5209 126.272 66.66 126.458 66.9317Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1823,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.2248 161.024C62.7967 160.574 63.3753 160.123 64.1999 159.726C66.2282 159.904 67.4385 160.587 68.0769 162.456C68.3762 163.33 69.4601 164.066 70.3512 164.589C72.18 165.663 72.5724 167.869 71.3487 169.592C70.2914 171.083 69.5732 172.806 68.6355 174.562C67.9439 175.516 67.3188 176.324 66.5474 177.199C66.155 177.464 65.909 177.663 65.5366 177.749C66.0154 176.232 66.6205 174.833 67.3653 173.329C68.3363 171.964 69.6596 170.758 67.4917 169.44C65.6031 168.293 65.1243 169.95 64.1068 170.97C63.5282 171.162 63.1026 171.275 62.6903 171.209C63.1558 170.135 63.608 169.241 64.2398 167.969C63.2955 168.326 62.6903 168.552 61.7394 168.91C61.8258 167.935 61.7527 167.2 61.9788 166.577C62.7701 164.371 61.8125 163.748 59.8308 163.827C60.6687 162.794 61.4468 161.912 62.2248 161.024Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1828,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.7087 174.416C69.5798 172.799 70.298 171.076 71.3554 169.585C72.579 167.863 72.1867 165.656 70.3579 164.583C69.4668 164.059 68.3828 163.324 68.0836 162.449C67.4452 160.58 66.2348 159.898 64.3329 159.633C65.4302 157.261 67.6114 157.685 69.2473 158.274C70.3579 158.672 70.983 160.395 71.4418 161.773C72.845 162.84 74.2548 163.9 75.6713 164.974C75.3122 165.921 74.9996 166.743 74.6139 167.783C74.594 167.988 74.6405 167.975 74.6871 167.962C75.5848 167.922 76.4826 167.876 77.5732 167.829C77.6065 168.525 77.6397 169.3 77.6796 170.281C76.9747 171.282 76.2632 172.077 75.239 172.899C72.9913 170.818 71.3953 171.215 69.5067 174.277C69.1343 174.356 68.9215 174.383 68.702 174.416H68.7087ZM75.3255 169.897C75.2723 169.91 75.2191 169.917 75.0329 169.996C75.0861 169.983 75.1393 169.976 75.3255 169.897Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1833,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.0918 160.951C61.4468 161.906 60.6687 162.787 59.7643 163.933C59.4917 164.304 59.352 164.41 59.0527 164.49C58.4808 164.125 58.0619 163.794 57.6496 163.463C57.6828 163.244 57.7094 163.025 57.9156 162.628C58.3013 162.151 58.5141 161.853 58.7202 161.548C58.7202 161.548 58.7535 161.515 58.7734 161.501C59.4717 161.163 60.15 160.839 60.9879 160.488C61.4202 160.607 61.6862 160.746 62.0918 160.951Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1838,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.217 118.259C206.532 118.729 205.847 119.206 205.162 119.677C205.022 119.531 204.889 119.385 204.749 119.239C206.525 117.192 208.294 115.144 210.289 112.871C215.735 107.054 221.315 101.766 225.584 95.3649C225.431 95.133 225.285 94.901 225.132 94.6625C223.809 95.239 222.492 95.8155 221.182 96.2197C223.496 92.456 225.99 88.9772 228.051 85.2599C230.931 80.0649 233.558 74.7308 236.144 69.3834C237.029 67.5612 237.474 65.5269 238.259 63.4794C239.297 61.6174 240.201 59.8681 241.312 58.1188C242.209 58.1188 242.894 58.1122 243.586 58.3043C243.134 60.2922 242.681 62.0813 242.229 63.8704C242.548 63.9565 242.861 64.0493 243.18 64.1354C244.41 60.3783 245.647 56.6212 246.878 52.8642C247.383 53.3876 247.543 53.8515 247.45 54.2623C246.578 57.9266 245.767 61.6042 244.736 65.2155C244.031 67.6805 244.51 69.5822 246.605 71.252C245.76 76.1156 245.867 81.0323 242.449 85.0213C242.768 85.1472 243.087 85.2798 243.406 85.4056C244.637 83.0931 245.867 80.7739 247.144 78.3421C247.277 78.0836 247.363 77.9445 247.456 77.8053C247.283 79.1505 247.117 80.489 246.931 81.8341C246.745 83.1991 246.612 84.5774 246.312 85.9225C246.126 86.7707 245.787 87.6321 245.328 88.3742C243.506 91.3096 241.617 94.192 239.636 97.3793C239.29 97.916 239.051 98.1678 238.658 98.4527C238.146 98.678 237.794 98.8702 237.182 99.2015C237.681 97.7503 238.113 96.5112 238.538 95.2721C238.392 95.2059 238.253 95.1396 238.106 95.0733C237.042 96.2395 235.972 97.4058 234.908 98.572C234.661 98.3666 234.409 98.1612 234.163 97.9557C235.154 96.0938 236.151 94.2384 237.142 92.3764C236.923 92.2307 236.703 92.0849 236.484 91.9325C234.442 94.4703 232.427 97.0347 230.339 99.5394C228.989 101.163 227.533 102.694 226.109 104.257C223.809 106.782 221.501 109.293 219.047 111.884C217.837 113.07 216.779 114.183 215.536 115.31C213.92 115.813 212.57 116.377 212.723 118.272C212.723 118.272 212.723 118.278 212.53 118.272C211.679 118.186 211.02 118.1 210.409 118.027C211.1 116.615 211.652 115.489 212.204 114.362C211.918 114.197 211.632 114.031 211.346 113.872C209.976 115.336 208.6 116.801 207.23 118.259H207.217ZM238.465 88.6724C238.412 88.9573 238.352 89.2422 238.299 89.5205C238.499 89.5205 238.705 89.5205 238.904 89.5272C238.858 89.2422 238.811 88.9573 238.465 88.6724Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1843,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M219.187 111.805C221.494 109.287 223.802 106.775 226.103 104.251C227.526 102.687 228.982 101.15 230.332 99.5328C232.42 97.0281 234.429 94.4637 236.477 91.9259C236.696 92.0716 236.916 92.2174 237.135 92.3698C236.144 94.2318 235.147 96.0871 234.156 97.9491C234.402 98.1545 234.655 98.3599 234.901 98.5654C235.965 97.3991 237.036 96.2329 238.1 95.0667C238.246 95.133 238.386 95.1992 238.532 95.2655C238.106 96.5046 237.674 97.7437 237.175 99.1948C237.787 98.8635 238.139 98.6714 238.578 98.6051C236.324 102.097 233.983 105.457 231.649 108.816C231.144 109.837 230.638 110.857 230.106 112.056C229.947 112.321 229.834 112.427 229.681 112.653C229.461 112.885 229.295 113.017 229.022 113.262C228.816 113.435 228.75 113.508 228.663 113.673C227.978 114.296 227.326 114.846 226.648 115.568C226.469 115.787 226.336 115.88 226.183 116.118C224.361 116.509 223.23 117.51 221.973 118.855C217.99 123.109 213.687 127.065 209.458 131.074C209.045 131.465 208.254 131.458 207.443 131.637C207.237 131.637 207.25 131.61 207.243 131.432C206.738 130.888 206.232 130.524 205.727 130.166C205.727 130.166 205.727 130.166 205.74 129.98C205.873 129.417 205.873 128.927 206.126 128.668C209.385 125.335 212.723 122.075 215.942 118.702C217.897 116.655 219.692 114.448 221.893 111.93C220.597 111.858 219.892 111.824 219.187 111.785V111.805Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1848,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M244.504 92.3433C247.197 87.2941 249.897 82.2449 252.59 77.1957C252.776 77.2951 252.956 77.3879 253.142 77.4873C251.034 82.7485 248.148 87.6056 244.836 92.403C244.643 92.4626 244.504 92.3433 244.504 92.3433Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1853,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.742 108.929C233.99 105.47 236.324 102.104 238.738 98.5852C239.044 98.1678 239.283 97.916 239.576 97.5449C239.736 97.6841 240.002 98.0684 239.915 98.1877C237.242 101.819 234.535 105.424 231.742 108.929Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1858,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M252.437 63.168C252.869 63.8041 253.302 64.4468 253.867 65.1028C253.229 66.7528 252.457 68.3895 251.652 69.9996C251.646 70.0195 251.107 69.7677 250.695 69.602C250.568 69.5557 250.575 69.5557 250.575 69.3503C251.2 67.157 251.819 65.1625 252.437 63.1746V63.168Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1863,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M250.569 69.549C250.549 69.9201 250.535 70.2978 250.542 70.8544C250.569 71.0399 250.569 71.0333 250.569 71.0333C250.389 71.4176 250.209 71.802 250.05 72.3586C250.07 72.5309 250.07 72.5242 250.07 72.5242C249.664 72.9814 249.265 73.432 248.72 73.9555C248.58 74.0218 248.567 74.0151 248.58 73.8296C249.252 72.2791 249.91 70.9141 250.569 69.549Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1868,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M244.71 92.5156C244.384 93.2511 243.985 93.9336 243.586 94.6161C243.4 94.4968 243.214 94.3709 243.027 94.2517C243.426 93.6752 243.825 93.1053 244.364 92.4361C244.504 92.3433 244.637 92.4626 244.71 92.5156Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1873,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M247.47 77.6463C247.357 77.9445 247.27 78.0903 246.997 78.2626C247.064 77.6993 247.31 77.0963 247.563 76.5L247.583 76.5132C247.549 76.8379 247.523 77.1626 247.463 77.6463H247.47Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1878,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.587 74.035C248.347 74.7904 248.095 75.5458 247.716 76.4072C247.583 76.5198 247.576 76.5066 247.576 76.3277C247.908 75.4398 248.234 74.7308 248.567 74.0218C248.567 74.0218 248.58 74.035 248.587 74.035Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1883,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M250.568 71.0466C250.801 71.1923 251.034 71.3381 251.273 71.4839C251.194 71.5767 251.114 71.6694 251.027 71.7622C250.894 71.6032 250.768 71.4508 250.602 71.1658C250.568 71.0399 250.568 71.0399 250.562 71.0466H250.568Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1888,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M250.07 72.5375C250.289 72.6104 250.509 72.6899 250.728 72.7628C250.662 72.8953 250.595 73.0278 250.529 73.167C250.389 73.0411 250.243 72.9085 250.09 72.6567C250.07 72.5375 250.07 72.5375 250.07 72.5375Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1893,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M173.275 24.7954C177.497 22.1847 181.714 19.5805 186.242 16.8969C186.774 16.6451 186.994 16.4596 187.213 16.2807C187.453 16.1415 187.692 16.0024 188.071 15.8301C189.268 15.8566 190.325 15.9096 191.556 15.9759C191.343 16.6054 191.183 17.0891 190.911 17.9107C192.912 17.1487 194.628 16.4927 196.35 15.8367C196.457 16.0686 196.563 16.2939 196.663 16.5258C195.413 17.1951 194.169 17.8909 192.906 18.5336C190.702 19.6556 190.399 21.2747 191.995 23.3906C192.979 22.9732 194.023 22.5359 195.167 21.9461C195.479 21.7738 195.685 21.7473 196.044 21.6744C196.829 21.6877 197.474 21.8666 198.093 21.7937C200.301 21.5154 202.508 21.2305 204.69 20.7931C206.126 20.5016 207.509 19.9251 208.926 19.5275C209.87 19.2625 210.834 19.0836 211.991 18.8649C212.191 18.8649 212.184 18.8583 212.184 18.8583C210.322 19.8522 208.513 20.9787 206.572 21.7937C205.015 22.4431 203.306 22.7148 201.398 23.225C206.226 26.6507 210.069 24.4508 215.955 22.3238C217.518 21.7606 219.08 21.1907 220.676 20.6142C220.065 22.1714 219.619 23.3111 219.18 24.6562C213.308 27.3001 207.429 29.7386 201.384 32.0379C201.877 30.9247 202.535 29.944 203.466 28.5525C200.148 30.05 197.155 31.4018 194.063 32.7999C194.01 31.965 193.976 31.4614 193.883 30.0765C189.368 33.0119 185.351 35.6227 181.168 38.2467C180.43 38.5912 179.858 38.9159 179.14 39.287C178.548 38.3394 178.109 37.3455 177.551 36.0733C181.328 33.2637 184.932 30.5934 188.53 27.9164C186.808 25.6038 185.045 25.2394 182.704 26.6839C179.925 28.4001 177.118 30.0898 174.325 31.7861C174.325 31.7861 174.325 31.7861 174.339 31.6138C174.132 30.8452 173.906 30.2355 173.687 29.6326C173.394 29.5994 173.102 29.5729 172.816 29.5398C173.906 28.6452 175.004 27.7441 176.26 26.717C175.23 26.0544 174.252 25.4249 173.275 24.7954ZM179.426 24.3448C178.967 24.4508 178.508 24.5635 178.056 24.6695C178.202 24.9147 178.355 25.1598 178.502 25.405C178.927 25.0737 179.346 24.749 179.433 24.3448H179.426ZM205.082 28.579C205.222 28.4465 205.355 28.3206 205.494 28.188C205.441 28.1284 205.341 28.0224 205.335 28.029C205.188 28.1483 205.055 28.2808 205.075 28.5856L205.082 28.579Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1898,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M216.939 19.342C217.245 19.4745 217.358 19.6137 217.577 19.8191C216.873 20.21 216.068 20.5877 215.23 20.8462C213.454 21.4028 211.659 21.9064 209.87 22.4298C209.79 22.1979 209.71 21.9726 209.631 21.7407C212.005 20.9389 214.379 20.1371 216.946 19.3354L216.939 19.342Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1903,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M214.133 17.7981C214.532 17.8047 214.811 17.9306 215.097 18.0499C214.864 18.2818 214.625 18.5203 214.392 18.7523C214.272 18.474 214.146 18.189 214.139 17.7915L214.133 17.7981Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1908,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M212.204 18.8651C212.251 18.8451 212.291 18.8318 212.264 18.8318C212.197 18.8585 212.204 18.8585 212.204 18.8651Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1913,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M163.871 200.749C163.233 201.226 162.595 201.703 161.923 202.2C160.626 199.218 154.894 194.792 152.786 195.302C153.298 196.17 153.77 196.965 154.242 197.767C154.156 197.979 154.069 198.184 153.983 198.396C153.052 198.032 151.968 197.86 151.223 197.263C149.161 195.633 147.273 193.784 145.225 192.135C144.752 191.75 143.921 191.816 143.096 191.744C137.796 186.807 132.649 181.798 127.655 176.609C128.566 176.861 129.437 177.172 130.056 177.756C132.33 179.909 134.458 182.222 136.772 184.335C137.604 185.097 138.801 185.469 139.825 186.012C139.931 185.806 140.037 185.594 140.137 185.389C138.488 183.666 136.387 182.189 135.296 180.168C133.846 177.491 132.496 174.933 130.202 172.793C125.361 168.28 120.819 163.45 116.051 158.864C112.054 155.014 107.824 151.396 103.848 147.533C100.709 144.485 97.8759 141.126 94.7304 138.091C93.0879 136.507 90.8601 135.527 89.2574 133.916C86.2649 130.915 83.5782 127.608 80.6589 124.527C79.8343 123.659 78.6572 123.109 77.5865 122.513C77.4535 122.44 76.988 122.963 76.5757 123.255C76.4427 123.354 76.3563 123.454 76.3696 123.467C76.456 123.566 76.5624 123.646 76.6622 123.732C76.6688 123.732 76.6622 123.732 76.6954 123.851C76.875 124.057 77.0146 124.143 77.1609 124.229C77.1609 124.229 77.1609 124.229 77.1942 124.355C77.3737 124.56 77.5134 124.646 77.6597 124.726C77.6597 124.726 77.6597 124.732 77.6929 124.852C77.8725 125.057 78.0121 125.143 78.1584 125.223C78.1584 125.223 78.1584 125.223 78.1917 125.349C78.3712 125.554 78.5109 125.64 78.6572 125.72C78.6572 125.713 78.6439 125.72 78.6439 125.872C78.8101 126.256 78.9764 126.488 79.1559 126.714C79.1559 126.714 79.1559 126.72 79.2291 126.853C79.5882 127.058 79.8675 127.138 80.1535 127.211C80.1535 127.211 80.1535 127.217 80.1867 127.343C80.3596 127.549 80.4993 127.628 80.6522 127.708C80.6589 127.708 80.6522 127.721 80.6389 127.867C80.7985 128.244 80.9714 128.476 81.151 128.702C81.151 128.702 81.151 128.708 81.1975 128.827C81.3438 129.086 81.4768 129.179 81.6564 129.205C81.6564 129.205 81.6564 129.212 81.7162 129.377C81.8958 130.093 82.0155 130.65 81.9689 131.166C81.4236 130.988 81.0313 130.842 80.6389 130.703C80.6389 130.703 80.6589 130.696 80.6522 130.53C79.7345 129.649 78.8234 128.927 77.9124 128.211C77.8193 128.205 77.7528 128.165 77.6929 127.84C77.5067 127.297 77.3272 127.005 77.1476 126.707C77.1476 126.707 77.1809 126.707 77.1144 126.614C76.9149 126.415 76.7819 126.316 76.6422 126.217C76.6422 126.217 76.6755 126.217 76.6156 126.117C76.4228 125.918 76.2831 125.819 76.1501 125.72C76.1501 125.72 76.1767 125.72 76.1302 125.607C75.944 125.382 75.811 125.262 75.6181 125.044C75.4519 124.825 75.3188 124.759 75.1592 124.752C75.1592 124.752 75.1792 124.732 75.0994 124.606C74.7336 124.401 74.4477 124.328 74.1684 124.255C74.1684 124.255 74.1817 124.235 74.1351 124.123C73.9489 123.924 73.8093 123.838 73.6696 123.752C73.6696 123.752 73.6829 123.738 73.6098 123.606C73.3438 123.407 73.1576 123.334 72.9714 123.255C72.9714 123.255 72.8184 123.281 72.6788 123.116C71.2556 121.883 69.9788 120.816 68.702 119.749C68.702 119.749 68.702 119.749 68.702 119.597C68.6954 119.246 68.6887 119.047 68.7685 118.789C68.8949 118.669 68.9813 118.577 68.968 118.557C68.8882 118.451 68.7885 118.365 68.6954 118.272C68.6954 118.272 68.6821 118.252 68.6422 118.139C68.5092 117.887 68.3762 117.801 68.1966 117.775C68.19 117.775 68.1833 117.755 68.1434 117.642C68.0038 117.391 67.8708 117.304 67.7045 117.271C67.7045 117.271 67.6912 117.258 67.6513 117.145C67.5183 116.887 67.3853 116.807 67.2057 116.774C67.1991 116.774 67.1924 116.754 67.1525 116.642C67.0195 116.39 66.8865 116.304 66.707 116.271C66.707 116.271 66.6937 116.257 66.6538 116.145C66.5141 115.886 66.3811 115.807 66.2082 115.774C66.2082 115.774 66.1949 115.76 66.155 115.648C66.0154 115.389 65.8824 115.31 65.7095 115.277C65.7095 115.277 65.6962 115.263 65.6563 115.151C65.5166 114.892 65.3836 114.813 65.2107 114.78C65.2107 114.78 65.1974 114.78 65.1243 114.647C64.7652 114.442 64.4859 114.362 64.2132 114.276C64.2199 114.276 64.2132 114.289 64.2132 114.137C64.0403 113.753 63.8674 113.527 63.7011 113.295C63.7011 113.295 63.7211 113.276 63.6679 113.17C63.5149 112.918 63.3819 112.832 63.209 112.799C63.209 112.799 63.2223 112.785 63.1359 112.653C62.8566 112.447 62.6637 112.374 62.4775 112.302C61.7394 112.056 60.7951 112.017 60.2963 111.526C58.3944 109.644 56.6388 107.623 54.9031 105.443C55.7809 105.556 56.6122 105.841 57.3836 106.225C58.3545 106.709 59.2855 107.279 60.2564 107.875C60.3229 107.968 60.3628 107.988 60.4027 108.014C60.3429 107.948 60.283 107.875 60.2897 107.663C60.4692 107.12 60.5889 106.729 60.7219 106.325C60.7286 106.318 60.7419 106.298 60.8682 106.351C61.7726 106.656 62.6438 106.775 63.3154 107.206C64.5125 107.975 65.5831 108.929 66.7336 109.87C66.8001 109.962 66.8466 109.989 66.8865 110.009C66.8267 109.936 66.7668 109.87 66.7868 109.678C66.7535 109.002 66.8267 108.273 66.5008 107.915C65.0977 106.364 63.5748 104.913 62.1051 103.449C63.781 101.468 64.9514 101.375 66.4809 103.177C68.0104 104.98 69.919 106.457 71.6945 108.048C72.0005 108.319 72.4394 108.445 72.9847 108.73C72.8716 107.736 72.7852 107.02 72.8783 106.331C74.441 107.716 75.8043 109.108 77.2341 110.433C78.2981 111.414 79.5217 112.222 80.5458 113.242C81.9822 114.68 83.2923 116.238 84.7221 117.901C86.9498 120.405 89.0646 122.791 91.3056 125.064C91.6249 125.388 92.516 125.156 93.2874 125.262C95.3156 126.965 97.1976 128.589 99.1527 130.358C101.174 132.531 103.123 134.552 105.011 136.713C104.672 137.11 104.386 137.375 103.974 137.64C103.761 137.64 103.675 137.64 103.555 137.581C103.489 137.488 103.442 137.468 103.402 137.442C103.462 137.508 103.522 137.581 103.602 137.819C104.12 138.363 104.612 138.74 105.105 139.131C105.105 139.144 105.091 139.118 105.144 139.231C105.331 139.436 105.464 139.529 105.59 139.628C105.577 139.635 105.59 139.615 105.643 139.728C105.829 139.933 105.962 140.026 106.089 140.112C106.075 140.112 106.102 140.099 106.109 140.278C107.113 141.331 108.104 142.212 109.095 143.1C109.095 143.114 109.081 143.094 109.135 143.206C109.321 143.412 109.454 143.505 109.58 143.604C109.567 143.604 109.58 143.584 109.633 143.697C109.819 143.902 109.952 143.995 110.079 144.094C110.066 144.094 110.085 144.074 110.125 144.167C110.312 144.194 110.451 144.134 110.77 144.101C113.723 146.778 116.523 149.409 119.283 152.086C123.532 156.207 127.755 160.362 132.064 164.649C145.61 177.722 158.618 191.154 173.408 202.896C175.815 205.824 179.486 207.136 181.321 210.589C182.006 211.867 184.161 212.364 185.763 213.339C186.182 213.544 186.488 213.623 186.801 213.696C186.807 213.683 186.788 213.696 186.814 213.835C186.994 214.048 187.14 214.127 187.3 214.2C187.3 214.187 187.286 214.207 187.359 214.352C188.217 214.902 188.995 215.3 189.78 215.697C189.787 215.697 189.78 215.697 189.853 215.83C190.212 216.042 190.492 216.115 190.784 216.181C190.791 216.168 190.784 216.194 190.851 216.334C191.203 216.546 191.489 216.618 191.768 216.698C191.762 216.705 191.749 216.731 191.749 216.731C191.895 216.956 192.048 217.182 192.247 217.533C190.731 217.049 189.168 216.433 187.326 215.75C187.047 215.678 186.821 215.664 186.821 215.664C186.821 215.664 186.821 215.678 186.734 215.552C186.375 215.34 186.103 215.253 185.83 215.167C185.83 215.167 185.823 215.174 185.743 215.048C185.391 214.836 185.112 214.757 184.832 214.67C184.832 214.67 184.832 214.677 184.786 214.564C184.64 214.306 184.5 214.22 184.334 214.18C184.334 214.18 184.334 214.187 184.247 214.067C183.888 213.855 183.615 213.769 183.343 213.683C183.343 213.683 183.336 213.69 183.29 213.577C183.137 213.325 183.004 213.232 182.837 213.186C182.837 213.186 182.837 213.199 182.751 213.08C182.392 212.868 182.119 212.782 181.847 212.689C181.847 212.689 181.84 212.696 181.793 212.583C181.64 212.331 181.507 212.239 181.348 212.192C181.348 212.192 181.348 212.205 181.261 212.079C180.902 211.867 180.623 211.781 180.35 211.695C180.35 211.695 180.35 211.708 180.27 211.576C179.918 211.364 179.639 211.284 179.359 211.205C179.359 211.205 179.346 211.205 179.333 211.033C178.502 210.31 177.684 209.76 176.866 209.21C176.866 209.21 176.859 209.224 176.786 209.065C173.773 206.368 170.834 203.823 167.808 201.126C166.478 199.649 165.707 197.681 163.406 197.793C163.406 197.793 163.406 197.793 163.353 197.681C163.2 197.436 163.073 197.343 162.907 197.296C162.907 197.296 162.907 197.296 162.834 197.144C159.529 193.851 156.822 190.054 152.44 188.358C152.247 188.563 152.054 188.768 151.868 188.98C153.052 190.1 154.235 191.22 155.545 192.34C155.758 192.34 155.845 192.34 155.925 192.34C155.925 192.333 155.911 192.34 155.925 192.512C157.427 193.897 158.917 195.11 160.407 196.316C160.407 196.316 160.393 196.316 160.447 196.428C160.633 196.634 160.766 196.727 160.905 196.813C160.905 196.813 160.892 196.813 160.899 196.992C161.903 198.376 162.9 199.576 163.905 200.775L163.871 200.749ZM96.5526 130.544C96.5127 130.517 96.4661 130.497 96.4262 130.471C96.4861 130.544 96.5459 130.61 96.7122 130.901C96.8119 131.034 96.9449 131.127 97.1444 131.524C98.7936 133.234 100.436 134.943 102.145 136.786C102.185 136.812 102.232 136.832 102.272 136.858C102.212 136.792 102.145 136.719 102.085 136.295C100.423 134.592 98.767 132.889 97.0048 130.968C96.905 130.829 96.7787 130.736 96.5592 130.55L96.5526 130.544ZM94.9964 128.476C94.8967 128.344 94.7703 128.244 94.4977 127.979C94.3979 127.847 94.2649 127.754 94.0521 127.562C94.0122 127.535 93.9657 127.515 93.9258 127.489C93.9856 127.555 94.0455 127.628 94.2117 127.913C94.3115 128.052 94.4445 128.145 94.7105 128.41C94.8102 128.549 94.9432 128.642 95.156 128.821C95.1959 128.847 95.2358 128.874 95.2824 128.894C95.2225 128.821 95.1627 128.755 94.9964 128.47V128.476ZM112.652 149.786C112.752 149.919 112.879 150.012 113.012 150.369C111.841 151.741 112.859 152.139 113.962 152.404C116.323 152.973 119.203 156.088 119.735 158.347C119.888 159.003 120.899 159.461 121.517 160.004C121.517 160.004 121.517 160.004 121.643 160.289C122.647 160.7 123.658 161.104 124.662 161.515C124.842 161.283 125.028 161.057 125.208 160.826C124.729 160.07 124.363 159.202 123.758 158.573C121.357 156.081 118.797 153.742 116.476 151.184C115.445 150.051 114.408 149.78 112.938 149.833C112.839 149.693 112.706 149.607 112.493 149.415C112.446 149.389 112.4 149.369 112.36 149.342C112.42 149.415 112.48 149.495 112.646 149.786H112.652ZM67.658 115.124C67.6114 115.098 67.5648 115.078 67.5249 115.051C67.5848 115.124 67.638 115.204 67.8109 115.495C67.9107 115.628 68.037 115.721 68.2565 115.919C68.303 115.939 68.3496 115.966 68.3961 115.986C68.3363 115.913 68.2764 115.833 68.1102 115.542C68.0104 115.403 67.8774 115.31 67.6646 115.124H67.658ZM111.169 148.282C111.349 148.275 111.522 148.269 111.701 148.256C111.489 148.189 111.276 148.123 111.036 147.792C110.917 147.613 110.79 147.441 110.671 147.262C110.578 147.335 110.491 147.407 110.398 147.48C110.611 147.679 110.83 147.878 111.169 148.275V148.282ZM74.2615 121.943C74.461 121.989 74.6671 122.036 74.8666 122.089C74.8134 121.956 74.7669 121.823 74.5873 121.459C74.3612 121.326 74.1285 121.194 73.9024 121.061C73.9755 121.287 74.0487 121.512 74.2615 121.943Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1918,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M185.637 213.206C184.154 212.351 181.993 211.854 181.308 210.575C179.466 207.123 175.802 205.811 173.567 202.876C174.206 202.577 174.751 202.432 175.336 202.359C175.429 202.445 175.489 202.465 175.542 202.485C175.489 202.392 175.436 202.299 175.356 202.041C172.383 199.178 169.437 196.488 166.392 193.659C162.854 189.994 159.449 186.449 155.991 182.944C153.165 180.081 150.272 177.272 147.592 174.429C148.323 173.926 148.869 173.429 149.447 173.005C149.52 173.097 149.567 173.124 149.614 173.144C149.554 173.071 149.494 172.998 149.447 172.753C149.614 172.037 149.767 171.487 149.919 170.944C149.919 170.944 149.919 170.944 150.072 171.017C151.156 171.991 152.081 172.912 153.058 173.76C153.165 173.853 153.617 173.548 153.91 173.429C153.91 173.429 153.91 173.429 154.076 173.455C156.111 175.138 157.973 176.795 159.881 178.61C164.503 183.136 169.045 187.536 173.687 191.836C174.924 192.983 176.44 193.818 177.856 194.865C177.923 194.957 177.963 194.984 178.009 195.01C177.95 194.937 177.89 194.871 177.863 194.56C177.916 194.169 177.936 194.01 178.122 193.937C181.035 196.117 183.742 198.277 186.548 200.291C189.208 202.2 191.975 203.956 194.522 205.798C193.75 205.672 193.152 205.533 192.553 205.394C192.473 205.566 192.4 205.738 192.32 205.904C193.458 206.566 194.595 207.222 195.739 207.885C195.818 207.753 195.892 207.62 195.971 207.481C195.559 206.924 195.153 206.368 194.914 205.791C196.138 206.427 197.182 207.077 198.059 207.759C197.561 207.872 197.228 207.951 196.304 208.183C198.246 209.151 199.622 209.833 201.145 210.589C201.205 209.86 201.232 209.535 201.438 209.197C204.178 210.575 206.731 211.96 209.285 213.352C210.103 213.796 210.914 214.24 211.699 214.849C209.478 214.551 207.084 214.505 205.142 213.551C199.616 210.827 194.269 207.739 188.869 204.764C187.153 203.817 185.497 202.756 183.768 201.637C183.615 201.391 183.489 201.299 183.276 201.166C183.097 201.14 182.957 201.199 182.631 201.259C181.753 200.868 181.102 200.378 180.364 200.106C179.552 199.801 178.661 199.695 177.81 199.51C177.73 199.748 177.644 199.987 177.564 200.232C180.477 202.862 183.396 205.493 186.309 208.13C186.781 208.972 187.047 210.184 187.765 210.608C195.659 215.194 203.978 218.852 212.517 222.098C220.124 224.994 227.971 226.412 236.011 227.154C236.543 227.201 237.022 227.857 237.528 228.228C236.942 228.519 236.371 229.043 235.772 229.063C229.428 229.301 223.223 228.122 217.291 226.121C209.345 223.437 201.597 220.177 193.757 217.168C193.225 216.963 192.666 216.831 191.928 216.698C191.735 216.725 191.749 216.698 191.689 216.559C191.343 216.34 191.057 216.267 190.778 216.194C190.778 216.194 190.784 216.168 190.711 216.042C190.345 215.843 190.059 215.77 189.773 215.691C189.773 215.691 189.787 215.691 189.767 215.512C188.922 214.962 188.104 214.578 187.28 214.193C187.28 214.193 187.3 214.173 187.253 214.067C187.067 213.875 186.927 213.782 186.788 213.696C186.788 213.696 186.807 213.676 186.708 213.551C186.289 213.352 185.97 213.279 185.65 213.213L185.637 213.206ZM177.87 204.406C177.923 204.426 177.976 204.446 178.029 204.466C177.976 204.38 177.923 204.287 177.75 203.989C177.644 203.856 177.517 203.764 177.238 203.499C177.132 203.373 176.999 203.28 176.779 203.088C176.733 203.068 176.679 203.048 176.633 203.021C176.693 203.101 176.759 203.18 176.925 203.479C177.025 203.618 177.152 203.711 177.418 203.989C177.511 204.128 177.644 204.221 177.876 204.413L177.87 204.406ZM191.616 204.777C191.17 204.439 190.718 204.095 190.272 203.757C190.179 203.896 190.093 204.029 190 204.168C190.472 204.433 190.944 204.705 191.616 204.777ZM178.994 204.97L179.08 205.016C179.08 205.016 179.067 204.917 178.994 204.97Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1923,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.475 208.163C183.376 205.486 180.463 202.856 177.544 200.225C177.624 199.987 177.71 199.748 177.79 199.503C178.648 199.695 179.532 199.801 180.344 200.099C181.082 200.371 181.74 200.861 182.611 201.252C182.798 201.252 182.791 201.252 182.844 201.358C182.997 201.61 183.13 201.703 183.296 201.749C183.296 201.749 183.296 201.749 183.336 201.829C183.516 201.862 183.649 201.802 183.788 201.749L183.795 201.743C185.477 202.75 187.127 203.81 188.842 204.758C194.242 207.739 199.589 210.821 205.115 213.544C207.057 214.505 209.451 214.544 211.845 214.849C212.583 214.849 213.122 215.022 213.674 215.373C214.306 216.102 214.838 216.877 215.556 217.149C217.69 217.944 219.898 218.567 222.086 219.209C223.782 219.706 225.504 220.124 227.42 220.588C229.474 220.793 231.35 220.846 233.172 221.197C234.834 221.515 236.437 222.158 238.073 222.774C238.086 223.053 238.08 223.212 238.066 223.371C237.448 225.259 236.131 224.789 234.595 224.696C225.006 224.139 215.842 221.754 207.05 218.096C201.83 215.923 196.902 213.067 191.822 210.555C190.126 209.714 188.37 208.992 186.462 208.163H186.475Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1928,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.048 228.566C246.971 228.718 245.887 228.87 244.264 229.102C245.741 230.434 249.105 229.043 247.729 232.435C247.064 232.661 246.512 232.76 245.854 232.873C245.714 232.21 245.588 231.6 245.408 230.739C244.923 233.416 242.967 232.813 241.232 232.8C241.398 231.938 241.731 231.269 242.063 230.6C241.777 230.096 241.564 229.255 241.179 229.169C240.534 229.016 239.769 229.341 238.632 229.54C238.632 227.572 238.632 225.802 238.785 223.662C241.132 223.218 243.327 223.145 245.541 223.278C245.155 224.027 244.869 224.809 244.331 225.067C243.233 225.59 241.997 225.829 240.819 226.18C240.839 226.326 240.853 226.478 240.873 226.624C242.555 226.757 244.244 226.889 246.346 227.048C246.539 226.306 246.878 224.981 247.356 223.642C247.669 223.622 247.842 223.609 248.021 223.596C248.068 224.285 248.115 224.974 248.168 226.068C248.135 227.174 248.095 227.87 248.061 228.559L248.048 228.566Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1933,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M200.753 224.59C202.595 225.286 204.457 225.935 206.279 226.684C214.578 230.103 223.163 232.263 232.553 232.72C234.469 232.893 236.011 232.926 237.548 232.965C237.561 233.211 237.568 233.456 237.581 233.886C234.263 233.893 230.944 233.721 227.207 233.469C220.417 231.64 214.046 229.891 207.496 228.102C205.634 227.366 203.951 226.664 202.176 225.869C201.83 225.69 201.571 225.617 201.232 225.425C201.012 225.087 200.866 224.855 200.733 224.623C200.733 224.616 200.753 224.596 200.753 224.596V224.59Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1938,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M237.574 232.767C236.005 232.932 234.469 232.893 232.78 232.727C231.716 232.177 230.804 231.759 229.767 231.203C229.641 231.064 229.647 231.057 229.647 231.057C231.21 230.991 232.766 230.925 234.469 230.719C235.998 230.653 237.973 229.851 237.574 232.76V232.767Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1943,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M245.514 223.072C243.32 223.145 241.119 223.218 238.778 223.424C238.532 223.536 238.439 223.516 238.213 223.424C238.1 223.198 238.106 223.039 238.14 222.562C240.992 222.238 243.799 222.238 246.532 222.35C246.14 222.668 245.827 222.867 245.514 223.059V223.072Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1948,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M241.844 230.593C241.731 231.262 241.398 231.932 241.032 232.767C240.301 232.932 239.596 232.932 238.778 232.932V230.593C239.749 230.593 240.686 230.593 241.837 230.593H241.844Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1953,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M236.304 236.789C236.55 236.51 236.942 236.259 237.494 236.014C237.255 236.279 236.849 236.55 236.304 236.789Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1958,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M236.125 172.408C235.972 171.891 235.812 171.375 235.599 170.559C235.393 170.155 235.253 170.043 235.107 169.93C235.107 169.93 235.12 169.93 235.08 169.811C234.894 169.605 234.748 169.519 234.602 169.433C234.602 169.433 234.622 169.433 234.622 169.287C234.449 168.91 234.282 168.671 234.11 168.439C234.11 168.439 234.123 168.439 234.083 168.32C233.897 168.114 233.757 168.028 233.611 167.942C233.611 167.942 233.624 167.942 233.624 167.77C233.119 166.882 232.62 166.166 232.115 165.444C232.115 165.444 232.134 165.444 232.081 165.338C231.895 165.139 231.755 165.046 231.616 164.954C231.616 164.954 231.629 164.954 231.589 164.834C231.41 164.629 231.263 164.543 231.117 164.457C231.117 164.457 231.13 164.457 231.124 164.284C230.292 163.237 229.461 162.363 228.63 161.488C228.63 161.488 228.623 161.482 228.617 161.482C228.504 161.071 228.39 160.653 228.204 160.097C228.563 159.812 229.235 159.421 229.408 159.58C233.757 163.476 238.419 167.087 241.232 172.408C241.465 172.852 242.243 173.011 242.941 173.25C244.085 174.621 245.056 176.053 246.06 177.855C247.144 181.327 248.201 184.428 249.252 187.549C247.31 185.608 245.461 183.752 243.533 181.745C241.006 178.524 238.558 175.463 236.111 172.402L236.125 172.408Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1963,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M220.557 150.873C219.612 150.19 218.828 149.508 218.036 148.825C218.349 148.567 218.661 148.302 218.974 148.044C219.553 148.991 220.131 149.932 220.55 150.873H220.557Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1968,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.823 127.264C202.036 127.118 202.222 127.158 202.568 127.211C202.721 127.23 202.695 127.23 202.754 127.376C203.286 128.079 203.765 128.635 204.224 129.205C204.211 129.218 204.184 129.251 204.184 129.251C203.393 128.648 202.595 128.046 201.83 127.264L201.823 127.264Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1973,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M202.349 135.56C202.056 135.421 201.883 135.202 201.704 134.831C201.956 134.95 202.209 135.215 202.349 135.56Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1978,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.291 126.594C201.451 126.561 201.637 126.687 201.817 126.992C201.644 127.032 201.484 126.893 201.291 126.594Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1983,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M199.842 125.315C199.968 125.236 200.181 125.302 200.447 125.528C200.314 125.614 200.114 125.534 199.842 125.315Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1988,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M197.8 123.281C197.933 123.228 198.113 123.308 198.299 123.533C198.159 123.593 198 123.5 197.8 123.281Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1993,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M199.33 124.766C199.476 124.706 199.655 124.779 199.822 125.011C199.662 125.077 199.509 124.984 199.33 124.766Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 1998,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M198.838 124.262C198.984 124.202 199.157 124.282 199.33 124.514C199.177 124.58 199.024 124.487 198.838 124.262Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2003,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M198.332 123.772C198.478 123.705 198.658 123.778 198.838 124.004C198.685 124.076 198.525 123.99 198.332 123.772Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2008,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M208.294 133.207C208.414 133.148 208.58 133.234 208.799 133.446C208.68 133.499 208.507 133.426 208.294 133.207Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2013,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.795 132.724C207.915 132.677 208.081 132.763 208.281 132.989C208.154 133.042 207.995 132.949 207.795 132.724Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2018,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.283 132.26C207.403 132.207 207.569 132.28 207.769 132.492C207.642 132.551 207.489 132.472 207.283 132.26Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2023,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.25 131.65C207.27 131.73 207.283 131.809 207.276 132.021C207.11 132.074 206.957 132.008 206.764 131.796C206.724 131.657 206.784 131.597 206.904 131.604C207.017 131.61 207.25 131.63 207.25 131.63C207.25 131.63 207.243 131.663 207.256 131.657L207.25 131.65Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2028,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M206.698 131.69C206.512 131.663 206.379 131.571 206.252 131.306C206.226 131.173 206.286 131.12 206.405 131.147C206.611 131.319 206.698 131.458 206.784 131.597C206.784 131.597 206.725 131.657 206.691 131.683L206.698 131.69Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2033,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M204.683 129.735C204.523 129.689 204.39 129.596 204.237 129.351C204.178 129.245 204.211 129.212 204.344 129.232C204.57 129.391 204.663 129.523 204.736 129.682C204.716 129.702 204.69 129.735 204.69 129.735H204.683Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2038,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M206.192 131.2C206.006 131.166 205.88 131.074 205.747 130.815C205.714 130.689 205.76 130.65 205.887 130.676C206.099 130.842 206.192 130.981 206.279 131.12C206.279 131.12 206.219 131.173 206.192 131.2Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2043,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.694 130.703C205.508 130.676 205.375 130.583 205.242 130.318C205.208 130.192 205.242 130.153 205.361 130.166C205.481 130.173 205.72 130.179 205.72 130.179C205.72 130.179 205.72 130.179 205.727 130.298C205.74 130.411 205.754 130.643 205.754 130.643C205.754 130.643 205.707 130.683 205.687 130.703H205.694Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2048,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.195 130.212C205.015 130.186 204.882 130.093 204.736 129.848C204.683 129.742 204.716 129.702 204.856 129.715C205.082 129.874 205.162 130.014 205.248 130.159C205.248 130.159 205.215 130.192 205.195 130.212Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2053,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M35.3053 236.51C34.5738 236.577 33.8356 236.636 32.9778 236.835C32.4657 236.968 32.0734 236.961 31.3884 236.835C30.9096 236.703 30.7234 236.703 30.5372 236.709C29.7458 236.802 28.9545 236.888 27.8439 236.835C24.08 236.325 24.1066 236.325 23.8339 232.74C23.7807 232.025 23.395 231.335 23.129 230.553H28.7483C28.7616 230.467 28.7749 230.375 28.7882 230.288C27.3252 229.811 25.8622 229.334 24.2861 228.817V226.697C23.5346 227.128 22.7366 227.83 21.8189 228.069C19.5512 228.658 19.8172 226.366 19.1389 225.292C18.9394 224.974 19.917 223.907 20.3626 223.178C21.7657 223.046 23.1689 222.92 24.9112 222.715C29.267 222.125 33.2837 221.601 37.2737 221.27C35.8307 222.039 34.4208 222.622 32.2862 223.503C33.6428 223.795 34.341 224.153 34.9528 224.046C37.1407 223.669 39.2887 223.059 41.4766 222.688C42.3078 222.549 43.2122 222.827 44.0768 222.913C43.3718 223.483 42.7401 224.259 41.9354 224.577C40.5788 225.12 38.2579 224.961 37.839 225.822C36.3361 228.93 33.5297 229.195 30.7766 229.805C30.8231 230.01 30.8697 230.216 30.9162 230.428C34.0418 229.97 37.1673 229.52 40.4924 229.063C44.4292 227.923 48.1732 226.763 51.9172 225.637C60.3163 223.099 68.2831 219.693 75.3654 214.405C76.4427 213.604 77.8525 213.239 79.2956 212.676C81.7561 211.768 84.0304 210.867 86.6439 209.833C86.8035 210.595 86.9698 211.404 87.1094 212.378C82.2881 215.903 77.4934 219.256 72.5125 222.635C69.0744 224.179 65.8491 225.769 62.5573 227.214C53.7327 231.084 44.8881 234.9 35.292 236.524L35.3053 236.51Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2058,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M17.8954 207.262C18.1414 206.812 18.3808 206.354 18.8596 205.944C19.8039 205.407 20.5155 204.83 21.8987 203.704C21.1273 206.898 20.4956 209.535 19.9503 211.801C20.8547 211.298 21.8322 210.754 22.8231 210.39C22.8231 210.946 22.8031 211.311 22.6302 211.781C21.8389 214.929 21.2071 217.984 20.5754 221.038C20.8015 221.091 21.0342 221.151 21.2603 221.204C21.8123 219.388 22.198 217.493 22.976 215.777C23.7075 214.16 24.8514 212.729 25.789 211.404C25.4632 212.941 25.1573 214.293 24.7649 215.823C24.3859 218.037 24.0999 220.064 23.814 222.098C20.9943 222.277 18.1813 222.456 15.2021 222.45C15.1489 221.714 15.2619 221.157 15.375 220.395C16.0733 216.546 16.7782 212.901 17.5828 209.118C17.7557 208.402 17.8222 207.832 17.8954 207.256V207.262Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2063,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M20.1431 223.145C19.917 223.894 18.9394 224.961 19.1389 225.279C19.8173 226.352 19.5513 228.645 21.8189 228.055C22.7366 227.817 23.5346 227.114 24.2861 226.684V228.804C25.8622 229.321 27.3252 229.798 28.7882 230.275C28.7749 230.361 28.7616 230.454 28.7483 230.54H23.129C23.3883 231.329 23.7741 232.018 23.8339 232.727C24.1066 236.312 24.08 236.312 27.671 236.795C24.6386 236.636 21.4532 236.365 18.0683 236.06C17.4299 234.648 16.991 233.27 16.4922 231.693C17.9486 231.627 19.1988 231.567 20.4557 231.508C20.4557 231.415 20.469 231.329 20.4756 231.236C19.4914 230.938 18.5005 230.64 17.6493 230.143C19.498 229.825 21.2204 229.705 22.9361 229.586C22.9361 229.281 22.9361 228.976 22.9295 228.672H15.4215C13.7058 228.294 11.9968 227.916 10.1746 227.36C10.9061 226.452 11.7507 225.73 12.1364 225.398C11.7839 225.04 11.1455 224.391 10.5071 223.742C11.1522 223.689 11.7972 223.629 12.6418 223.556C15.2021 223.397 17.5695 223.258 20.1498 223.139L20.1431 223.145Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2068,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M15.375 220.607C15.2619 221.164 15.1555 221.714 14.976 222.43C13.2403 222.913 12.6684 222.178 12.9278 220.581C13.094 219.547 13.2071 218.5 13.3201 217.036C13.7391 214.074 14.2378 211.536 14.5903 208.978C14.71 208.104 14.4905 207.189 14.4307 206.288C14.8164 205.944 15.2087 205.599 15.4614 205.38C15.2486 204.579 15.0558 203.856 14.8829 202.962C15.5612 201.716 16.2196 200.656 16.8779 199.589C17.1905 199.735 17.4964 199.881 17.8089 200.026C17.4365 201.272 17.0774 202.518 16.6784 203.75C16.2528 205.062 15.9469 206.315 17.7225 207.169C17.8222 207.832 17.7557 208.402 17.5429 208.972C17.2969 208.853 17.1971 208.74 17.0841 208.64C17.0641 208.621 16.9178 208.68 16.9112 208.72C16.2329 211.742 15.4747 214.757 14.9294 217.805C14.7698 218.686 15.2087 219.667 15.3683 220.607H15.375Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2073,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M23.9669 222.118C24.1066 220.071 24.3925 218.036 24.9312 215.83C25.4033 215.644 25.6228 215.638 25.8223 215.83C25.5097 216.943 24.9711 217.871 24.9844 218.792C24.991 219.746 25.5297 220.694 26.0484 221.641C27.804 221.316 29.3402 220.992 31.0825 220.654C33.2903 220.627 35.2986 220.607 37.307 220.707C37.307 220.826 37.307 221.071 37.307 221.071C33.2903 221.588 29.2737 222.112 25.0376 222.622C24.592 222.456 24.3526 222.291 23.9736 222.118H23.9669Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2078,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M13.1472 200.331C13.1539 201.471 12.9943 202.65 12.8214 204.029C12.4623 205.712 12.1098 207.183 11.764 208.66C11.3849 205.758 10.9992 202.869 13.1472 200.331Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2083,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M14.4307 206.487C14.4972 207.189 14.7166 208.11 14.5903 208.985C14.2312 211.543 13.7391 214.074 13.2802 216.824C13.0408 216.625 12.5687 216.181 12.6285 215.83C13.1738 212.775 13.8189 209.734 14.4307 206.487Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2088,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M7.91363 198.768C7.95384 198.754 7.98734 198.728 7.96054 198.734C7.90023 198.754 7.90693 198.768 7.91363 198.768Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2093,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M59.8508 251.075C55.475 252.294 51.0992 253.513 46.7368 254.627C47.0161 254.335 47.2754 254.15 47.5414 253.964C51.4118 252.917 55.2755 251.87 59.4185 250.87C59.6911 250.909 59.8508 251.075 59.8508 251.075Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2098,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M43.9637 257.893C43.4916 257.668 43.2056 257.43 42.8332 257.072C45.5132 256.436 48.273 255.925 51.0926 255.601C48.8183 256.489 46.4841 257.184 43.9571 257.893H43.9637Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2103,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M51.7044 250.392C53.8058 249.332 55.9073 248.265 58.002 247.205L58.4077 248.153C56.3262 248.935 54.2447 249.717 51.9571 250.472C51.7443 250.445 51.7044 250.399 51.7044 250.399V250.392Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.4842 248.928C62.6637 249.001 62.677 249.094 62.7036 249.339C61.8724 249.988 61.0212 250.485 60.0103 251.035C59.8441 251.082 59.6845 250.916 59.598 250.836C60.4493 250.154 61.3803 249.558 62.4842 248.928Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2113,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M59.3187 246.635C59.6978 246.874 59.9106 247.179 60.1301 247.477C59.8641 247.563 59.5981 247.643 59.3387 247.729C59.2788 247.384 59.219 247.04 59.3254 246.642L59.3187 246.635Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2118,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M51.7642 250.465C51.445 250.638 51.1059 250.79 50.7667 250.936C50.7335 250.823 50.7002 250.717 50.667 250.604C50.913 250.532 51.1657 250.459 51.5581 250.386C51.6977 250.386 51.7443 250.432 51.7642 250.459V250.465Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2123,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M151.402 300.997C150.684 303.913 149.441 300.633 148.483 301.275C148.583 300.759 148.742 300.354 148.915 299.791C149.148 299.632 149.368 299.639 149.8 299.731C150.146 299.765 150.285 299.705 150.425 299.652C150.425 299.652 150.671 299.652 150.797 299.652C151.077 300.049 151.236 300.44 151.402 300.99V300.997Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2128,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.917 301.62C102.278 303.204 101.374 303.939 100.104 301.832C100.975 301.64 101.866 301.62 102.917 301.62Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2133,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M98.9067 301.64C98.7072 303.144 97.9956 303.72 96.6324 302.296C97.304 301.958 98.0089 301.799 98.9067 301.64Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M105.942 301.096C106.016 302.753 105.41 303.124 104.107 301.825C104.652 301.448 105.231 301.249 105.942 301.096Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2143,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M108.47 301.01C108.124 301.216 107.691 301.295 107.159 301.255C107.505 301.05 107.938 300.971 108.47 301.01Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2148,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.6298 301.143C89.5101 300.971 89.3838 300.798 89.2641 300.626C89.3239 300.586 89.3838 300.54 89.4436 300.5C89.5035 300.633 89.5567 300.772 89.6232 301.024C89.6232 301.143 89.6298 301.143 89.6298 301.143Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2153,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.6298 301.143C89.6897 301.209 89.7495 301.282 89.8094 301.348C89.7695 301.322 89.7296 301.302 89.6631 301.209C89.6365 301.143 89.6365 301.143 89.6365 301.143L89.6298 301.143Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2158,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M219.971 6.95755C219.792 7.7262 219.426 8.50809 218.748 9.95924C217.045 10.4628 214.585 11.1851 211.938 11.9007C208.38 12.8682 205.022 13.8356 201.657 14.803C207.296 11.1917 213.421 8.79965 219.971 6.95093L219.971 6.95755Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2163,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M69.6596 20.9058C70.4044 21.8335 71.1492 22.7611 71.5882 23.775C71.0362 23.8081 70.7768 23.8081 70.5574 23.7087C69.5133 23.2581 68.5225 22.5491 67.4319 22.3636C66.0819 22.1316 64.6654 22.3238 63.2755 22.3371C63.2489 22.1648 63.229 21.9991 63.1625 21.522C62.5041 20.5745 61.879 19.9317 61.4335 19.3288C62.8632 19.1697 63.9738 21.7076 65.6895 19.448C64.0403 18.6661 62.6438 18.0035 61.2473 17.3409C58.9463 16.2807 56.6388 15.2139 54.3378 14.1537C54.4442 13.8754 54.5506 13.597 54.657 13.3187C56.2797 13.8621 57.8956 14.3988 59.5182 14.9422C59.6313 14.6705 59.7444 14.4055 59.8641 14.1338C57.4035 12.9411 54.9496 11.755 52.3162 10.5092C53.593 8.35569 55.2223 10.1249 56.7718 10.2707C57.3703 10.3237 57.9488 10.5291 58.6537 10.5225C61.0943 11.2315 63.4219 12.0796 65.9156 12.9742C66.2814 13.2657 66.5939 13.7561 66.6671 13.7229C70.1983 12.1592 72.5192 14.9886 75.1725 16.2144C78.2715 17.6457 81.0845 19.6866 84.1103 21.6016C83.146 21.4226 82.0487 21.204 81.0579 20.7534C80.0936 20.3161 79.2491 19.6336 78.1318 18.9179C78.0254 19.5143 77.9323 20.0444 77.8392 20.5679C74.9597 20.1239 72.7785 17.2216 69.5399 17.9902C69.7328 19.0571 69.8924 19.9185 69.8126 20.654C69.1808 20.4287 68.7818 20.3293 68.3895 20.2233C68.3895 20.4552 68.3762 20.6805 68.3695 20.9124C68.8084 20.9058 69.2407 20.8925 69.6796 20.8859L69.6596 20.9058ZM60.5158 14.5777C60.436 14.856 60.2431 15.3596 60.303 15.3928C62.5374 16.6252 64.7918 17.818 67.0461 19.0173C67.1858 18.739 67.3254 18.4541 67.4651 18.1758C65.2706 16.9698 63.0694 15.7705 60.5224 14.5844L60.5158 14.5777Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2168,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.2606 19.289C61.879 19.9317 62.5041 20.5679 63.1625 21.3895C60.968 20.6805 58.7269 19.7926 56.3994 18.792C54.2048 17.5662 52.0968 16.453 49.9887 15.3464C50.0352 15.1873 50.0818 15.0217 50.135 14.8627C52.263 15.6512 54.3844 16.4397 56.5124 17.2282C57.9621 17.7716 59.4052 18.3149 61.0544 18.9709C61.2539 19.077 61.2606 19.2956 61.2606 19.2956V19.289Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2173,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.4335 19.3288C61.2606 19.2956 61.2473 19.077 61.2539 18.9709C61.2872 18.4475 61.3138 18.0366 61.2938 17.4867C62.6438 18.0101 64.0403 18.6728 65.6895 19.4546C63.9738 21.7142 62.8632 19.1763 61.4335 19.3354L61.4335 19.3288Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2178,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.7194 156.518C61.7726 156.359 61.8724 156.234 62.1118 156.081C62.2248 156.028 62.2248 156.035 62.2248 156.035C62.1716 156.194 62.0785 156.32 61.8325 156.472C61.7194 156.525 61.7128 156.518 61.7128 156.518H61.7194Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2183,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.7267 156.525C61.6798 156.545 61.6329 156.558 61.653 156.545C61.72 156.518 61.7267 156.518 61.7267 156.525Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2188,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.2182 156.021C62.2714 155.862 62.3645 155.737 62.6039 155.578C62.7103 155.525 62.7169 155.525 62.7236 155.531C62.6704 155.69 62.5773 155.823 62.3379 155.975C62.2315 156.028 62.2248 156.028 62.2182 156.021Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2193,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M63.0627 22.3371C64.6588 22.3238 66.0819 22.1317 67.4319 22.3636C68.5158 22.5491 69.5133 23.2515 70.5574 23.7087C70.7768 23.8015 71.0362 23.8081 71.4618 23.8744C72.6056 25.4448 73.6231 25.564 74.8533 23.7948C78.4577 26.7104 82.0487 29.5928 85.6132 32.5083C91.1061 36.9943 96.6191 41.4604 102.052 46.0325C104.632 48.2059 107.026 50.6046 109.527 52.8708C110.378 53.6394 111.322 54.3153 112.38 55.0972C112.539 55.1568 112.546 55.1568 112.593 55.2695C112.739 55.5279 112.872 55.6141 113.045 55.6538C113.045 55.6538 113.045 55.6538 113.091 55.7665C113.231 56.0249 113.364 56.1177 113.537 56.1508C113.537 56.1508 113.537 56.1508 113.59 56.2767C113.77 56.5086 113.903 56.6212 114.036 56.7273C114.089 56.8598 114.169 56.9658 114.441 57.211C114.747 57.4628 114.887 57.5555 115.033 57.6483C115.033 57.6483 115.033 57.6483 115.086 57.761C115.233 58.0128 115.366 58.1055 115.532 58.1453C115.532 58.1453 115.532 58.1453 115.585 58.2513C115.731 58.5031 115.864 58.5959 116.031 58.6422C116.031 58.6422 116.031 58.6423 116.084 58.7483C116.23 59.0001 116.363 59.0928 116.529 59.1392C116.529 59.1392 116.529 59.1392 116.583 59.2452C116.736 59.497 116.862 59.5898 117.028 59.6362C117.028 59.6362 117.028 59.6362 117.088 59.7621C117.44 60.1398 117.733 60.3849 118.026 60.6301C118.026 60.6301 118.026 60.6235 118.086 60.756C118.438 61.147 118.731 61.4054 119.023 61.6638C119.076 61.8096 119.163 61.9222 119.475 62.1807C119.948 62.4391 120.234 62.5252 120.513 62.6114C122.727 64.7649 124.948 66.9118 127.349 69.0653C128.473 69.9532 129.404 70.8345 130.448 71.9544C130.674 72.1532 130.8 72.12 130.92 72.0869C131.013 72.0869 131.1 72.0736 131.333 72.067C131.525 72.2194 131.618 72.3453 131.858 72.4977C131.266 73.3525 130.568 74.1477 129.623 75.2277C130.734 76.4138 132.031 77.8053 133.414 79.495C133.66 80.0185 133.82 80.2504 133.979 80.4823C133.979 80.4823 133.973 80.4956 134.026 80.6016C134.179 80.8468 134.305 80.9329 134.471 80.9793C134.471 80.9793 134.471 80.9926 134.491 81.1383C134.83 81.3504 135.15 81.4166 135.475 81.4829C135.628 81.7148 135.788 81.9467 136.008 82.4371C136.167 82.8413 136.3 82.9341 136.466 82.9804C136.466 82.9804 136.466 82.9871 136.486 83.1461C136.825 83.5238 137.145 83.7425 137.471 83.9678C137.471 83.9678 137.471 83.981 137.517 84.0937C137.67 84.3388 137.796 84.4316 137.956 84.4713C137.956 84.4713 137.969 84.478 137.976 84.637C138.142 85.0279 138.308 85.2665 138.468 85.505C138.521 85.6508 138.614 85.7701 138.914 86.0616C139.712 86.658 140.337 87.0556 140.962 87.4532C140.962 87.4532 140.955 87.4598 141.015 87.5791C141.221 87.7778 141.361 87.864 141.507 87.9501C141.653 88.0031 141.773 88.0959 141.913 88.3212C141.966 89.832 141.966 91.25 141.966 93.0788C137.67 89.1694 133.753 85.6044 129.51 81.9467C127.136 80.0715 125.088 78.2824 123.027 76.3144C122.302 75.3338 121.617 74.5055 120.859 73.7435C117.394 70.2315 113.923 66.7329 110.431 63.2541C110.019 62.8433 109.494 62.5584 109.021 62.2138C108.888 62.3463 108.755 62.4788 108.622 62.6114C109.414 63.6119 110.212 64.6191 111.003 65.6197C110.278 65.739 109.839 65.5799 109.527 65.2884C106.687 62.6577 103.941 59.9145 101.015 57.3899C99.7246 56.2767 98.0821 55.5743 96.4462 54.6002C95.5683 54.2424 94.8435 53.9641 93.9524 53.6593C93.2275 52.9834 92.6689 52.3407 92.097 51.5389C91.7645 51.1546 91.4453 50.9293 91.0596 50.545C89.3638 48.8288 87.841 47.1391 86.0853 45.741C83.3987 43.594 80.6522 41.4869 77.7528 39.6514C74.1684 37.3853 70.3911 35.4106 66.5806 33.3035C66.4609 33.3035 66.2215 33.3035 66.0686 33.2174C64.5324 32.5216 63.1558 31.9054 61.6862 31.1433C60.968 30.6132 60.3429 30.2223 59.8308 29.6988C60.4825 29.6259 61.0877 29.5464 61.5532 29.7585C65.1442 31.415 68.7087 33.1246 72.2864 34.8143C72.9581 35.1323 73.6563 35.404 74.3413 35.6956L74.6605 35.1191C73.0113 34.0125 71.382 32.886 69.7128 31.806C66.022 29.4205 61.2473 28.4465 59.2456 23.8478C60.4493 23.3509 61.6596 22.8539 63.076 22.3569L63.0627 22.3371ZM76.6156 26.6839C76.5757 26.6574 76.5358 26.6375 76.4959 26.611C76.5558 26.6773 76.6156 26.7435 76.7287 26.9423C76.7686 26.9688 76.8085 26.9887 76.8484 27.0152C76.7885 26.9489 76.7287 26.8827 76.6223 26.6839H76.6156ZM76.077 36.451C76.077 36.6431 76.077 36.8353 76.077 37.0341C76.077 37.0341 76.2299 37.0341 76.3097 37.0341C76.3097 36.8419 76.3097 36.6497 76.0703 36.451H76.077Z",
                fill: "#23D1E8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2198,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M59.0461 23.828C61.234 28.4332 66.0087 29.4006 69.6995 31.7861C71.3687 32.8662 72.998 33.9926 74.6472 35.0992L74.328 35.6757C73.643 35.3841 72.9448 35.1125 72.2731 34.7944C68.6954 33.1113 65.1309 31.3951 61.5399 29.7386C61.0744 29.5265 60.4692 29.5994 59.6446 29.6524C53.5398 27.7109 47.7742 25.5309 41.8955 23.6756C38.9695 22.7545 35.8506 22.4365 32.765 21.7208C32.5455 21.363 32.3926 21.1377 32.4591 20.8859C33.6627 20.919 34.6935 20.7998 35.6245 21.0516C40.6786 22.4431 45.7193 23.8942 50.7468 25.3851C53.2472 26.1273 55.7144 26.9887 58.4609 27.8832C58.5673 27.0682 58.6471 26.4586 58.7069 25.6767C57.9289 24.6761 57.2107 23.3641 56.0602 25.3056C52.8416 24.1394 49.8091 22.9931 46.7767 21.6744C46.5971 21.204 46.4242 20.9058 46.2447 20.601C46.0984 21.0052 45.9454 21.4094 45.6395 21.8003C45.2472 21.4823 45.0144 21.1775 44.775 20.8727C44.6088 20.4221 44.4425 19.9715 44.2696 19.5077C46.125 19.5077 47.987 19.4812 49.8557 19.5342C50.2281 19.5474 50.5938 19.8655 50.9662 20.0378C53.5997 21.2967 56.2265 22.5624 59.0527 23.8213L59.0461 23.828Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2203,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M44.5622 20.8727C45.0078 21.1841 45.2405 21.4889 45.7991 21.8136C46.3378 21.8401 46.5572 21.8401 46.77 21.8467C49.8025 22.9931 52.8349 24.1394 56.1799 25.4448C57.2373 25.6899 57.9754 25.7761 58.7136 25.8622C58.6338 26.4718 58.554 27.0748 58.4476 27.8899C55.7078 26.9953 53.2406 26.1339 50.7335 25.3918C45.706 23.9009 40.6653 22.4497 35.6112 21.0582C34.6868 20.8064 33.6561 20.919 32.2596 20.866C30.5039 20.5148 29.1606 20.1637 27.8173 19.8125C27.8173 19.8125 27.7774 19.5938 27.7575 19.4811C32.5987 18.2354 37.2604 19.2691 41.9155 20.601C42.6869 20.8197 43.5314 20.7733 44.5556 20.8594L44.5622 20.8727Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2208,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M37.7126 16.7048C35.4516 16.6716 33.1041 16.4927 30.7566 16.3138C30.7566 16.2144 30.7699 16.1216 30.7766 16.0223C32.2263 15.9229 33.676 15.8235 35.2787 15.5783C36.1632 15.8036 36.8947 16.1879 37.7126 16.7048Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2213,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M34.9063 17.9439C35.4981 17.8445 36.2097 17.8776 37.0742 17.9306C36.4957 17.9969 35.7575 18.03 34.9063 17.9439Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2218,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M42.2879 18.9908C42.3411 19.0703 42.3145 19.1498 42.2879 19.2294C42.2613 19.1498 42.2347 19.0703 42.2879 18.9908Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2223,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M77.6796 248.968C77.939 248.842 78.1983 248.716 78.6904 248.491C79.0961 248.352 79.2025 248.239 79.2291 248.06C79.2291 248.06 79.2557 248.067 79.402 248.06C79.7611 247.901 79.9739 247.749 80.1867 247.59C80.5924 247.411 80.998 247.238 81.6497 246.96C82.0554 246.794 82.1418 246.675 82.1551 246.503C82.3214 246.47 82.461 246.397 82.6406 246.172C83.8908 245.668 85.0745 245.264 86.4511 244.919C84.6223 246.357 82.6073 247.729 80.619 249.279C80.6456 249.458 80.6522 249.432 80.4993 249.385C80.1069 249.544 79.8742 249.75 79.6414 249.955C79.6414 249.955 79.6481 249.922 79.5018 249.895C79.1161 250.061 78.8833 250.253 78.6439 250.445C78.6439 250.445 78.6439 250.412 78.5375 250.439C78.338 250.598 78.2582 250.744 78.1717 250.883C76.6289 251.347 75.106 251.877 73.5433 252.248C72.8251 252.42 72.0404 252.294 71.2756 252.129C73.0312 251.214 74.8001 250.479 76.8284 249.604C77.2873 249.292 77.4801 249.12 77.6796 248.941V248.968Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2228,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M77.673 248.756C77.4868 249.14 77.2939 249.319 76.9614 249.505C75.9506 248.941 75.0728 248.365 74.195 247.636C75.1992 246.854 76.1967 246.231 77.6663 245.31C77.6663 246.688 77.6663 247.616 77.673 248.756Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2233,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M67.3786 252.082C67.3853 251.936 67.4651 251.863 67.5449 251.784C67.5117 251.903 67.4784 252.029 67.3786 252.082Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2238,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M10.2877 223.715C11.1389 224.398 11.7773 225.047 12.1298 225.405C11.744 225.736 10.8995 226.465 10.0017 227.353C6.83629 227.982 8.41236 225.246 7.02914 223.821C8.42566 223.762 9.25027 223.722 10.2943 223.722L10.2877 223.715Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2243,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M15.4149 228.864C17.922 228.678 20.4224 228.678 22.9295 228.678C22.9295 228.983 22.9295 229.288 22.9361 229.593C21.2204 229.712 19.498 229.825 17.5629 229.984C17.1905 230.01 17.0309 229.997 16.6718 229.864C16.1132 229.646 15.754 229.54 15.3949 229.434C15.3949 229.308 15.3949 229.182 15.4082 228.87L15.4149 228.864Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2248,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M15.1821 229.427C15.7607 229.533 16.1198 229.646 16.5587 229.871C15.5013 230.368 14.3642 230.746 13.0076 231.163C12.7948 231.203 12.7682 231.176 12.8014 231.037C12.7482 230.759 12.6551 230.626 12.5687 230.494C12.5022 230.6 12.4357 230.706 12.3758 230.812C11.6177 229.884 11.4381 229.149 13.0142 229.149C13.6659 229.149 14.311 229.321 15.1821 229.42V229.427Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2253,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M12.4024 230.905C12.4357 230.713 12.5022 230.606 12.5687 230.494C12.6551 230.626 12.7482 230.759 12.7948 231.017C12.6219 231.137 12.5155 231.084 12.4024 230.898V230.905Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2258,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M211.732 15.7241C211.878 15.3729 212.171 15.0416 212.464 14.7103C212.583 14.8759 212.703 15.0416 212.823 15.2072C212.51 15.3861 212.198 15.565 211.739 15.7241H211.732Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2263,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M173.128 24.8749C174.252 25.4315 175.236 26.061 176.26 26.7236C175.004 27.7507 173.913 28.6519 172.816 29.5464C173.108 29.5795 173.401 29.6061 173.687 29.6392C173.913 30.2422 174.132 30.8518 174.166 31.6204C173.494 31.9054 173.015 32.0313 172.543 32.1505C172.889 32.6011 173.248 32.7336 173.461 32.621C173.8 32.4355 174.046 32.0776 174.332 31.7927C177.125 30.0898 179.925 28.4067 182.711 26.6905C185.052 25.246 186.814 25.6104 188.537 27.923C184.939 30.5934 181.334 33.2704 177.557 36.0799C178.116 37.3455 178.561 38.3394 179.173 39.4328C180.011 39.1015 180.683 38.6641 181.348 38.2334C185.364 35.6227 189.374 33.0119 193.896 30.0765C193.99 31.4614 194.023 31.965 194.076 32.7999C197.168 31.4018 200.161 30.05 203.479 28.5525C202.548 29.944 201.89 30.9247 201.232 32.0909C200.66 32.5415 200.088 32.7999 199.21 33.1842C196.53 34.4565 194.163 35.6094 191.782 36.6431C191.782 36.4311 191.775 36.3449 191.842 36.2389C191.862 36.2257 191.815 36.2389 191.582 36.2588C190.525 36.9214 189.654 37.584 188.563 38.2467C185.231 37.8491 183.409 40.0888 181.128 41.7917C179.925 42.3284 178.881 42.7857 177.83 43.0374C177.823 42.3019 177.823 41.7718 177.963 41.2219C178.262 41.0496 178.422 40.8972 178.581 40.7448C178.475 40.652 178.375 40.5659 178.269 40.4731C178.116 40.7249 177.963 40.9767 177.617 41.2219C175.223 42.6929 173.029 44.1705 170.661 45.6813C169.956 46.0458 169.411 46.3771 168.706 46.6222C167.788 45.0584 168.639 41.4803 170.216 40.1882C172.949 37.9551 175.788 35.848 178.535 33.6282C179.26 33.0451 179.818 32.2632 180.65 31.3488C176.992 30.9313 175.336 35.2251 171.891 34.2245C168.054 37.5575 164.211 40.8905 160.287 44.3428C159.762 44.7205 159.329 44.9789 158.89 45.0452C160.473 41.805 160.866 37.8624 165.68 36.8883C162.807 35.6161 162.767 34.4035 164.703 32.8662C165.288 32.4023 165.514 31.4813 165.9 30.7656C167.356 29.3874 168.819 28.0158 170.309 26.4652C171.22 25.8423 172.098 25.3984 173.122 24.8749H173.128ZM191.469 33.8601C191.828 33.7607 192.181 33.6547 192.54 33.5553C192.473 33.3631 192.4 33.171 192.334 32.9788C192.041 33.171 191.749 33.3698 191.469 33.8601Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2268,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M226.927 26.2532C227.127 26.5977 227.12 26.9489 227.1 27.479C226.888 27.6977 226.688 27.7441 226.163 27.7905C225.438 27.9694 225.039 28.1416 224.64 28.3206C223.915 28.5856 223.183 28.8573 222.106 29.1886C217.557 30.7391 213.361 32.2234 209.138 33.5354C208.573 33.2902 208.021 33.0981 207.503 33.1643C206.565 33.2836 205.654 33.5619 204.729 33.7673C204.729 33.7673 204.729 33.7673 204.643 33.6216C204.39 33.3234 204.224 33.1776 204.051 33.0252C208.321 30.5205 212.696 28.4001 217.817 28.1748C219.819 28.0886 221.787 27.3796 224.055 26.8495C224.48 26.6905 224.587 26.5977 224.673 26.4718C225.358 26.4056 226.043 26.3327 226.927 26.2532Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2273,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M204.729 33.774C205.654 33.5619 206.572 33.2902 207.503 33.171C208.021 33.1047 208.573 33.2969 208.979 33.5818C208.241 34.2444 207.642 34.695 206.891 35.1456C206.392 35.2914 206.046 35.4438 205.574 35.6293C205.368 35.6823 205.281 35.7022 205.009 35.7221C202.788 36.716 200.746 37.7099 198.538 38.7304C195.832 40.0755 193.305 41.4008 190.751 42.567C190.246 41.9044 189.767 41.3941 189.428 40.7779C190.645 40.102 191.742 39.5785 192.779 38.9491C194.967 37.6238 197.122 36.2389 199.29 34.8805C199.29 34.8805 199.496 34.8209 199.782 34.801C200.467 34.5559 200.866 34.3306 201.258 34.1053C202.076 33.7673 202.894 33.4294 203.878 33.0583C204.211 33.1776 204.384 33.33 204.563 33.6481C204.63 33.8005 204.676 33.7872 204.723 33.7673L204.729 33.774Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2278,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M199.283 34.6818C197.122 36.2455 194.967 37.6238 192.779 38.9557C191.742 39.5852 190.645 40.1086 189.308 40.7713C189.042 40.864 188.796 40.8773 188.803 40.6918C189.135 39.7508 189.454 39.0021 189.773 38.2467C189.773 38.2467 189.773 38.2467 189.953 38.2467C190.505 37.9154 190.884 37.584 191.323 37.1467C191.489 36.9082 191.622 36.8154 191.782 36.769C194.156 35.6161 196.523 34.4631 199.077 33.2902C199.263 33.6746 199.263 34.0788 199.276 34.6884L199.283 34.6818Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2283,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.152 34.0125C200.866 34.3306 200.467 34.5625 199.882 34.7745C200.141 34.483 200.593 34.198 201.152 34.0125Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2288,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M224.553 26.4718C224.587 26.5977 224.474 26.6905 224.228 26.77C224.181 26.6375 224.287 26.5315 224.553 26.4718Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2293,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M66.6937 33.2836C70.3845 35.3841 74.1617 37.3588 77.7461 39.6249C80.6456 41.4604 83.392 43.5675 86.0787 45.7144C87.8343 47.1126 89.3572 48.8023 91.0529 50.6444C91.1194 51.0088 91.1194 51.095 90.9665 51.1877C90.5874 51.3468 90.3547 51.4992 90.0022 51.6516C89.8825 51.6516 89.6431 51.6516 89.6365 51.6516C89.6365 51.6516 89.6365 51.6449 89.55 51.519C89.1909 51.3136 88.9183 51.2341 88.639 51.1546C88.639 51.1546 88.639 51.1546 88.5924 51.0353C88.4461 50.7835 88.3131 50.6974 88.1402 50.6576C88.1402 50.6576 88.1402 50.651 88.087 50.5317C87.8941 50.3263 87.7545 50.2402 87.5084 50.1408C87.402 50.1342 87.1959 50.1209 87.1626 49.9552C85.3073 48.5836 83.4918 47.3776 81.6564 46.0391C81.5167 45.7277 81.397 45.5554 81.2707 45.3831C81.1776 45.456 81.0911 45.5289 80.998 45.6018C81.2108 45.8006 81.4303 45.9994 81.55 46.3241C78.338 44.5814 75.259 42.6465 72.0936 40.864C69.1941 39.2274 66.2082 37.7563 63.1691 36.0666C57.8491 33.542 52.6354 31.1235 47.3885 28.7844C43.0792 26.8694 38.6902 25.246 33.7558 25.8158C33.6893 25.743 33.5231 25.6303 33.5231 25.6303C33.277 25.4845 33.031 25.3454 32.7916 25.0207C32.7982 24.8418 32.9246 24.6828 32.9246 24.6828C33.4632 24.5105 34.0019 24.3382 34.76 24.0334C42.9861 26.3989 50.9862 28.9235 59.0128 31.3554C59.8441 31.6072 60.835 31.309 61.7527 31.2626C63.1359 31.8788 64.5125 32.4951 66.0885 33.277C66.4144 33.383 66.5474 33.33 66.6737 33.277L66.6937 33.2836Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2298,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M35.8506 35.1655C31.6743 34.7083 27.4914 34.2444 22.9228 33.7607C22.2512 32.7933 21.9918 31.8457 21.6726 30.918C21.5396 30.5404 21.2803 30.2024 21.0808 29.8512C20.8081 30.1096 20.5089 30.3482 20.2828 30.6397C20.0168 30.9909 19.8172 31.3951 19.5845 31.7728L19.119 31.5078C19.1921 30.6397 19.2719 29.7717 19.3451 28.9037C20.4889 28.5061 21.6394 28.1085 23.2354 27.7441C26.3942 27.6182 29.1074 27.4591 31.8273 27.4989C34.341 29.6657 36.8481 31.6403 39.415 33.6679C37.6661 33.3764 35.8839 33.0782 34.1083 32.78C34.075 32.9854 34.0351 33.1975 34.0019 33.4029L35.8506 35.1655Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2303,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.6795 31.1301C60.8483 31.3156 59.8574 31.6138 59.0261 31.362C50.9995 28.9302 42.9994 26.4122 34.7799 23.9472C31.1889 23.9737 27.8106 23.9737 24.4258 23.9737C24.3925 23.8213 24.3593 23.6623 24.3194 23.5099C24.6186 23.384 24.9179 23.2515 25.2238 23.1256C24.4923 22.887 23.7541 22.6485 23.0159 22.41C23.0492 22.2575 23.0758 22.1118 23.109 21.9594C23.7341 21.8931 24.3526 21.8202 25.39 21.7672C28.1432 21.8003 30.4773 21.8268 32.8182 21.8533C35.8506 22.4431 38.9628 22.7611 41.8889 23.6888C47.7609 25.5442 53.5332 27.7242 59.5249 29.7982C60.3296 30.2157 60.9547 30.6066 61.6729 31.1367L61.6795 31.1301Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2308,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M19.1855 28.8772C19.2653 29.7717 19.1855 30.6397 19.1123 31.5078L19.5778 31.7728C19.804 31.3951 20.0101 30.9909 20.2761 30.6397C20.5022 30.3482 20.8081 30.1096 21.0741 29.8512C21.2736 30.2024 21.5396 30.5404 21.666 30.918C21.9852 31.8457 22.2445 32.7933 22.6967 33.7673C22.8696 34.0059 22.8696 34.2047 22.6834 34.5757C22.2445 34.7944 21.9852 34.8342 21.513 34.8673C20.1897 34.7944 19.0857 34.7348 17.6427 34.6552C17.922 32.5348 18.1614 30.7259 18.4074 28.9169C18.6136 28.897 18.8197 28.8772 19.1855 28.8772Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2313,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M18.3343 28.7513C18.168 30.7259 17.9286 32.5348 17.6493 34.6619C19.0924 34.7414 20.1963 34.801 21.5463 34.9468C21.7857 35.0329 21.8455 35.1853 21.8455 35.1853C21.5662 35.2649 21.2936 35.351 20.9145 35.5365C20.8148 35.6426 20.602 35.6624 20.5022 35.6823C19.7042 35.7088 19.0192 35.7221 17.9951 35.7685C17.5762 35.8082 17.4831 35.8082 17.2104 35.7685C16.7649 35.7154 16.5122 35.7088 16.2528 35.6956C16.2528 35.6956 16.2994 35.5034 16.4457 35.3112C16.306 34.2378 15.5146 33.0716 15.8206 32.5282C16.9976 30.4608 15.7274 30.3879 14.2977 30.2554C14.2977 30.2554 14.3176 30.05 14.311 29.944C14.823 29.6259 15.3484 29.4139 15.8804 29.0163C16.6851 28.7513 17.4764 28.6717 18.3409 28.7579L18.3343 28.7513Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2318,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M31.814 27.3001C29.1008 27.4591 26.3875 27.6116 23.4349 27.7308C26.5338 27.1676 29.5596 25.0737 33.3302 25.6568C33.5297 25.6369 33.696 25.7496 33.7691 25.9682C33.9819 26.5514 34.1282 26.9092 34.1282 27.3465C33.2571 27.3796 32.5389 27.3465 31.814 27.3001Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2323,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M32.765 21.7274C30.4906 21.8268 28.1498 21.8003 25.5895 21.7274C26.0085 21.2172 26.6469 20.7534 27.2321 20.1239C27.2919 19.9317 27.3983 19.9052 27.671 19.8456C29.1739 20.1637 30.5172 20.5082 32.0468 20.8859C32.3859 21.1377 32.5455 21.3696 32.765 21.7208L32.765 21.7274Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2328,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M32.745 24.9279C31.548 24.9345 30.4042 24.8617 29.267 24.7888C29.267 24.6695 29.267 24.5502 29.267 24.4243C30.3909 24.4243 31.5081 24.4243 32.7849 24.5569C32.9379 24.6894 32.8115 24.8484 32.7517 24.9279H32.745Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2333,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.6704 171.388C63.096 171.275 63.5216 171.162 64.2598 171.017C65.4501 171.799 66.3412 172.614 67.2257 173.429C66.6205 174.833 66.0154 176.232 65.5565 177.881C65.7028 178.219 65.7028 178.306 65.5565 178.471C62.4177 182.195 59.3719 185.813 56.4725 189.537C55.9272 190.233 55.9605 191.373 55.5548 192.333C54.8366 193.831 54.2979 195.302 53.7526 196.78C53.7526 196.78 53.7526 196.78 53.7526 196.972C53.2871 198.602 52.8216 200.04 52.3561 201.484C52.3561 201.484 52.3495 201.643 52.1101 201.723C51.3519 202.803 50.8266 203.81 50.3079 204.817C49.317 207.488 48.3262 210.158 47.0959 213.001C45.8523 213.928 44.8415 214.677 43.8839 215.393C43.8374 215.194 43.711 214.657 43.5314 213.915C42.8332 215.094 42.3012 215.989 41.7226 216.97C41.3702 216.493 41.1374 216.175 40.9047 215.856C40.3527 216.3 39.8274 216.731 39.302 217.162C39.302 217.162 39.302 217.162 39.302 216.95C40.1998 212.517 41.0975 208.296 42.0086 204.002C40.9911 203.764 39.9271 203.518 38.8631 203.273C39.0493 203.459 39.2355 203.644 39.4217 203.83C38.6436 204.34 37.7924 205.361 37.1008 205.261C35.4848 205.042 35.3651 206.063 34.9329 207.024C34.075 208.932 33.164 210.814 32.2862 212.504C32.6386 210.774 32.9711 209.25 33.3834 207.567C34.3809 205.354 35.292 203.306 36.3693 201.193C37.6395 199.145 38.5971 197.051 39.8939 195.196C41.3502 193.122 43.1191 191.266 44.7617 189.325C44.7684 189.332 44.7883 189.345 44.7617 189.53C44.2497 191.744 43.7642 193.771 43.1723 195.858C43.0792 196.09 43.0859 196.263 43.0925 196.428C43.1524 196.216 43.2189 196.011 43.4117 195.699C48.9579 187.821 54.3711 180.048 59.8242 172.203C58.6471 171.129 57.1774 169.791 55.7144 168.452C55.8474 168.22 55.9738 167.988 56.2331 167.485C56.8383 166.955 57.3104 166.696 57.9754 166.458C60.9015 166.657 60.0303 168.83 60.283 170.347C61.101 170.712 61.879 171.056 62.6571 171.408L62.6704 171.388ZM44.5423 207.501C44.6221 207.07 44.7019 206.646 45.1275 206.156C47.6744 201.378 50.2214 196.607 53.0344 191.611C53.2805 190.849 53.5199 190.094 54.0984 189.285C57.3503 185.223 60.6754 181.214 63.7943 177.053C64.2731 176.417 63.8209 175.092 63.8009 174.091C62.7435 174.177 61.2539 173.853 60.7153 174.429C58.7468 176.51 56.9114 178.769 55.3819 181.188C53.6396 183.938 52.2697 186.926 50.3943 189.875C47.2954 194.904 45.4201 200.351 44.5223 206.427C44.4425 206.851 44.3561 207.282 44.1433 207.766C44.1898 207.753 44.2364 207.733 44.5356 207.507L44.5423 207.501Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2338,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M32.8049 181.857C32.5921 181.539 32.3726 181.221 31.9736 180.731C31.2022 180.333 30.617 180.108 29.7857 179.783C32.5455 175.37 35.1922 170.937 38.0385 166.643C39.8008 163.993 41.8756 161.548 43.9105 158.95C44.1366 158.798 44.2231 158.679 44.2763 158.52L44.2896 158.506C44.4292 158.427 44.5689 158.334 44.7152 158.268C45.8257 157.758 46.9429 157.247 48.0602 156.737C48.5057 158.009 48.9579 159.282 49.47 160.739C49.5232 160.726 49.9687 160.627 50.5872 160.514C50.7601 160.501 50.7601 160.494 50.7601 160.494C50.6204 161.177 50.4741 161.859 50.248 162.953C51.2987 162.78 52.0901 162.654 53.0677 162.509C53.2539 162.489 53.2539 162.489 53.2539 162.489C52.8748 163.609 52.5024 164.728 52.1433 166.087C49.8623 168.89 47.455 171.361 45.2937 174.032C42.5672 177.404 40.0535 180.936 37.2538 184.402C36.2297 185.608 35.3984 186.807 34.5605 188.013C34.2612 187.748 33.9686 187.483 33.6694 187.211L32.8049 181.857ZM34.9794 177.351C34.9196 177.365 34.8664 177.371 34.6602 177.444C34.7134 177.431 34.7733 177.418 34.9794 177.351ZM38.5838 172.527C38.4907 172.667 38.3909 172.799 38.2978 172.918C38.2978 172.918 38.3178 172.918 38.0917 173.031C37.9919 173.17 37.8988 173.303 37.7991 173.415C37.7991 173.415 37.8257 173.415 37.573 173.561C37.4865 173.727 37.3934 173.899 37.2072 174.264C37.0809 174.442 36.9612 174.628 36.6686 174.953C36.6287 175.012 36.5489 175.105 36.5622 175.132C36.6353 175.251 36.7351 175.35 36.6819 175.768C36.6021 176.384 36.5156 177 36.4358 177.616L37.0476 177.749C41.0709 172.6 45.0942 167.458 49.1175 162.31C48.8848 162.118 48.652 161.932 48.4126 161.74C47.8208 162.283 47.169 162.767 46.6503 163.37C44.3561 166.04 42.095 168.744 39.6678 171.275C39.548 171.494 39.4217 171.719 39.2953 171.918C39.2953 171.918 39.3153 171.918 39.0825 172.024C38.9894 172.163 38.8897 172.296 38.7966 172.415C38.7966 172.415 38.8165 172.415 38.5838 172.521V172.527ZM33.6295 179.763C33.8024 179.412 33.9819 179.068 34.1548 178.716C34.0019 178.657 33.8489 178.59 33.696 178.531C33.5563 178.968 33.4167 179.399 33.1307 179.916C33.2039 179.916 33.2837 179.916 33.6295 179.757V179.763Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2343,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M25.8356 215.638C25.6161 215.638 25.4033 215.651 25.0176 215.651C25.1573 214.299 25.4632 212.948 25.8289 211.218C27.3784 206.149 28.8747 201.464 30.4906 196.72C30.8497 196.541 31.0825 196.408 31.4682 196.342C32.1133 196.183 32.8182 196.104 33.0642 195.726C35.1856 192.453 37.2205 189.126 39.415 185.714C43.9305 179.863 48.3129 174.111 52.7019 168.36C53.0743 168.87 53.4534 169.38 54.0319 170.029C54.2447 170.261 54.2447 170.361 54.0984 170.526C53.1541 171.54 52.263 172.415 51.578 173.429C49.2439 176.874 46.9762 180.373 44.5157 183.878C43.6578 184.899 42.893 185.84 42.2879 186.88C40.9446 189.173 39.6877 191.518 38.351 193.672C36.3294 192.791 35.0991 194.136 34.3344 195.434C32.0268 199.35 31.1889 203.929 28.3161 207.706C26.74 209.78 26.6136 212.954 25.8356 215.631V215.638Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2348,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M38.3976 193.837C39.6877 191.518 40.9512 189.173 42.2945 186.88C42.8997 185.846 43.6644 184.899 44.6753 183.964C45.7127 184.269 46.4309 184.521 47.2555 184.859C47.4949 184.554 47.6213 184.163 47.7476 183.587C47.9338 182.964 48.0336 182.46 48.3129 182.083C50.3012 179.386 52.3761 176.748 54.3046 174.012C55.0693 172.925 56.5324 171.6 54.2514 170.453C54.2514 170.354 54.2447 170.261 54.2181 170.016C54.6171 169.44 55.0361 169.002 55.588 168.505C57.1907 169.778 58.6604 171.116 59.8375 172.19C54.3777 180.035 48.9712 187.814 43.4184 195.686C43.2854 195.786 43.2787 195.786 43.2787 195.786C43.7642 193.758 44.2563 191.73 44.9147 189.438C45.706 188.099 46.3245 187.026 46.9429 185.952C46.6636 185.826 46.3843 185.694 46.0984 185.568C45.6528 186.814 45.2006 188.066 44.7551 189.312C43.1191 191.26 41.3502 193.115 39.8939 195.196C38.5904 197.051 37.6395 199.145 36.3959 200.994C36.9678 198.522 37.6794 196.183 38.3909 193.844L38.3976 193.837Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2353,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M43.8107 159.003C41.8756 161.541 39.8008 163.986 38.0385 166.637C35.1856 170.931 32.5389 175.364 29.7857 179.777C30.617 180.101 31.2022 180.327 31.814 180.711C30.1382 183.202 29.666 186.443 26.3343 187.609C25.4964 187.9 25.144 189.597 24.5721 190.65C24.3327 190.538 24.0933 190.425 23.8605 190.312C25.1706 187.794 26.4873 185.283 27.7973 182.765C27.5978 182.652 27.405 182.54 27.2055 182.427C26.1282 184.004 25.0442 185.581 23.8339 187.357C22.9694 183.607 24.9578 180.89 26.4341 178.14C27.9902 175.244 29.932 172.547 31.7808 169.612C35.0659 165.981 38.2513 162.482 41.5032 159.036C42.2147 158.281 43.1324 157.711 44.13 157.035C44.3029 157.393 44.2962 157.764 44.2962 158.321C44.2962 158.506 44.2962 158.513 44.1832 158.566C43.9438 158.718 43.8573 158.844 43.8174 158.997L43.8107 159.003Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2358,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M52.7485 168.201C48.3195 174.111 43.9305 179.863 39.2022 185.72C38.2845 185.833 37.7126 185.833 37.1806 185.661C37.2937 185.124 37.3668 184.76 37.44 184.402C40.0468 180.936 42.5672 177.404 45.2871 174.032C47.4483 171.361 49.8557 168.89 52.2497 166.193C55.4151 166.06 52.5224 167.405 52.7485 168.207V168.201Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2363,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M57.8025 166.418C57.3237 166.683 56.8516 166.942 56.2797 167.339C56.007 166.862 55.5215 166.127 55.7144 165.676C56.0403 164.901 56.7917 164.304 57.5099 163.549C58.0619 163.801 58.4742 164.132 58.9929 164.629C58.667 165.331 58.2348 165.875 57.8092 166.418H57.8025Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2368,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M58.5673 161.548C58.5141 161.846 58.3013 162.144 57.9422 162.462C57.9954 162.171 58.2015 161.859 58.5673 161.548Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2373,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M56.6454 160.547C56.9779 160.461 57.224 160.481 57.6629 160.507C57.4235 160.56 56.9912 160.607 56.6454 160.547Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2378,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M53.2539 162.489C53.3008 162.469 53.3477 162.456 53.3209 162.462C53.2539 162.489 53.2539 162.489 53.2539 162.489Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2383,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M50.7601 160.501C50.807 160.488 50.8539 160.468 50.8271 160.474C50.7534 160.494 50.7534 160.501 50.7601 160.501Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2388,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.311 225.537C201.571 225.61 201.83 225.69 202.182 226.054C203.798 227.764 205.301 229.248 207.669 228.142C214.04 229.891 220.417 231.64 226.974 233.476C226.276 233.853 225.405 234.317 224.5 234.39C223.596 234.463 222.651 234.152 221.727 234.012C221.701 234.238 221.674 234.463 221.647 234.688C225.697 235.073 229.747 235.457 233.79 235.835C233.797 236.066 233.804 236.292 233.81 236.524C231.629 236.524 229.435 236.65 227.26 236.497C220.477 236.027 213.893 234.602 207.622 231.958C203.373 230.163 199.217 228.142 195 226.253C194.382 225.975 193.431 225.034 193.285 226.889C191.655 226.26 189.96 225.544 188.404 224.61C187.619 224.133 186.468 223.178 186.541 222.556C186.781 220.468 185.797 220.753 184.354 220.78C183.103 220.806 181.833 220.21 180.397 219.845C182.558 216.817 183.077 216.811 186.089 218.666C188.882 220.389 191.762 221.979 194.661 223.516C195.147 223.775 195.938 223.47 196.796 223.265C197.089 223.112 197.175 223.112 197.261 223.112C197.261 223.112 197.235 223.112 197.321 223.225C197.687 223.424 197.973 223.516 198.252 223.609C198.252 223.609 198.232 223.609 198.239 223.715C198.239 223.815 198.252 224.04 198.259 224.225C199.276 224.782 200.287 225.16 201.298 225.537H201.311Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2393,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M196.357 228.605C195.679 228.214 195 227.823 194.296 227.254C195.047 227.466 195.832 227.857 196.69 228.38C196.769 228.519 196.736 228.566 196.63 228.585C196.523 228.605 196.35 228.605 196.35 228.605H196.357Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2398,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.58 73.8362C248.234 74.7308 247.902 75.4398 247.563 76.3211C247.31 77.0963 247.064 77.6993 246.944 78.3818C245.847 80.7805 244.617 83.0931 243.393 85.4123C243.074 85.2864 242.755 85.1539 242.435 85.028C245.86 81.0456 245.747 76.1223 246.691 71.2387C246.805 71.0201 247.004 70.9869 247.11 71.093C247.968 69.496 248.72 67.7931 249.558 65.9179C250.655 62.5849 251.719 59.4374 252.67 56.2568C253.175 54.5539 253.468 52.7913 253.88 51.0618C254.233 49.5908 254.625 48.1264 254.997 46.662C255.037 46.4765 255.071 46.2909 255.124 45.9663C255.317 45.8138 255.503 45.8006 255.829 45.8072C255.968 46.3108 255.968 46.8012 255.875 47.5897C255.829 48.3583 255.882 48.8354 255.935 49.3059C255.902 49.6703 255.869 50.0414 255.789 50.5914C255.357 52.4666 254.964 54.1497 254.399 56.1442C253.694 58.3176 253.162 60.1795 252.63 62.0481C252.583 62.2999 252.544 62.5451 252.464 62.9824C251.812 65.1625 251.194 67.1504 250.568 69.3503C249.91 70.9207 249.252 72.2857 248.573 73.8362H248.58Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2403,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M252.816 62.0481C253.162 60.1862 253.694 58.3176 254.346 56.3363C255.643 57.7941 254.811 61.1205 252.816 62.0481Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2408,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M44.5622 240.506C41.8889 241.155 39.0027 241.798 35.8972 242.448C35.5846 242.216 35.4848 241.984 35.3252 241.646C38.2912 241.195 41.317 240.851 44.5689 240.513L44.5622 240.506Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2413,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M21.0941 244.966C20.8081 245.171 20.3692 245.35 19.9303 245.529C19.8837 245.363 19.8372 245.191 19.7973 245.025C20.1764 244.999 20.5621 244.966 21.1007 244.966H21.0941Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2418,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M53.7526 156.525C53.7057 156.545 53.6594 156.558 53.6795 156.545C53.7465 156.518 53.7526 156.518 53.7526 156.525Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2423,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M47.2754 153.04C47.3223 153.02 47.3693 153.007 47.3492 153.02C47.2821 153.047 47.2754 153.046 47.2754 153.04Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2428,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M59.2389 159.017C59.1924 159.182 59.0926 159.308 58.8466 159.454C58.7335 159.5 58.7136 159.487 58.7136 159.487C58.7668 159.328 58.8532 159.195 59.0926 159.036C59.199 158.977 59.2256 159.003 59.2323 159.017H59.2389Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2433,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M58.7409 159.514C58.694 159.534 58.6337 159.54 58.6471 159.52C58.7141 159.487 58.7342 159.507 58.7409 159.514Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2438,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M72.7054 222.602C77.5001 219.242 82.2948 215.89 87.269 212.278C89.3971 210.648 91.3123 209.217 93.3273 207.931C93.8327 207.607 95.063 207.488 95.2359 207.746C95.6615 208.395 95.8011 209.316 95.7945 210.131C95.7945 210.642 95.3356 211.152 95.0762 211.662C89.8559 215.366 84.6556 219.11 79.3953 222.768C77.786 223.887 76.0238 224.789 74.2216 225.928C70.4377 227.744 66.7668 229.42 62.9031 230.931C63.7078 229.705 64.7053 228.645 65.8026 227.452C68.17 225.749 70.431 224.179 72.6987 222.609L72.7054 222.602Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2443,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.145 231.521C54.6105 233.873 47.0759 236.226 39.4483 238.412C41.4965 237.345 43.6511 236.451 45.7925 235.55C45.7858 235.55 45.7792 235.563 45.9654 235.57C46.6969 235.404 47.2422 235.232 47.7808 235.053C47.7808 235.053 47.7808 235.066 47.9737 235.066C49.1308 234.847 50.1084 234.701 51.0327 234.383C54.2181 233.303 57.3703 232.137 60.5623 231.097C60.9946 230.958 61.6064 231.369 62.1384 231.521H62.145Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2448,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.2647 231.494C61.613 231.362 61.0012 230.951 60.569 231.097C57.3769 232.137 54.2248 233.303 51.0394 234.383C50.115 234.695 49.1308 234.847 48.0735 234.914C53.8856 232.369 59.7975 229.977 65.7095 227.585C64.712 228.645 63.7144 229.705 62.7169 230.951C62.6504 231.296 62.5374 231.402 62.2581 231.494L62.2647 231.494Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2453,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M45.7991 235.55C43.6511 236.444 41.4965 237.345 39.2288 238.399C39.1091 238.551 39.0293 238.551 38.8431 238.551C38.5705 238.571 38.4707 238.584 38.3776 238.598C38.0983 238.525 37.8057 238.339 37.553 238.392C36.6353 238.565 35.7309 238.81 34.6403 239.042C34.6403 238.439 34.8198 237.822 35.3851 237.133C39.1091 236.557 42.4608 236.053 45.8058 235.556L45.7991 235.55Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2458,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M46.5705 240.009C46.2247 240.181 45.6861 240.347 44.9679 240.506C44.7883 240.413 44.7883 240.327 44.7883 240.109C45.3203 239.983 45.8457 239.989 46.5705 240.009Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2463,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M38.4308 238.671C38.4707 238.578 38.5638 238.565 38.8032 238.538C38.7899 238.598 38.637 238.671 38.4308 238.671Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2468,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.9357 242.262C90.6273 241.686 91.3189 241.109 92.0172 240.526L92.3165 240.864C91.964 241.255 91.6115 241.652 91.0396 242.229C90.6406 242.487 90.4544 242.56 90.1884 242.54C90.0488 242.388 89.9956 242.322 89.9357 242.255V242.262Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2473,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M90.1419 243.024C89.5833 243.382 89.0247 243.707 88.3065 244.011C88.6323 243.448 89.1178 242.898 89.7695 242.302C89.9889 242.322 90.0488 242.381 90.1685 242.633C90.235 242.819 90.2017 242.998 90.2017 242.998C90.2017 242.998 90.1419 242.991 90.1352 243.017L90.1419 243.024Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2478,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.9673 243.912C87.7479 244.349 87.3621 244.694 86.8102 245.019C87.0296 244.608 87.4154 244.21 87.9673 243.912Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2483,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.8676 239.221C95.8942 238.995 96.0072 238.856 96.1203 238.717C96.2067 238.81 96.2999 238.903 96.3863 238.989C96.24 239.095 96.1004 239.201 95.8676 239.221Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2488,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M90.3613 242.978C90.2084 243.004 90.2416 242.819 90.2549 242.732C90.4544 242.567 90.6406 242.494 90.9598 242.355C90.9 242.514 90.7071 242.733 90.3613 242.978Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2493,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M187.074 16.3138C186.994 16.4662 186.774 16.6451 186.402 16.824C186.475 16.665 186.708 16.506 187.074 16.3138Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2498,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M78.2781 250.896C78.2582 250.764 78.338 250.618 78.5508 250.459C78.7104 250.525 78.7503 250.611 78.6904 250.81C78.5973 250.916 78.3845 250.889 78.2781 250.896Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2503,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M211.885 255.72C212.37 255.713 212.763 255.813 213.281 255.985C213.361 256.144 213.315 256.23 213.022 256.402C212.384 256.349 211.991 256.204 211.599 256.064C211.659 255.985 211.725 255.912 211.885 255.727V255.72Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2508,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M247.357 209.747C247.357 209.747 247.39 209.986 247.476 210.264C247.702 210.854 247.842 211.165 247.982 211.483C248.028 212.265 248.081 213.047 248.201 214.014C248.361 215.22 248.447 216.247 248.54 217.659C248.607 218.58 248.667 219.103 248.726 219.633C248.726 219.859 248.72 220.091 248.507 220.495C248.088 220.68 247.875 220.687 247.516 220.614C247.091 220.091 246.811 219.647 246.525 218.997C246.033 215.929 245.548 213.067 245.242 210.178C245.475 208.68 245.528 207.203 245.588 205.539C245.627 205.109 245.661 204.857 245.854 204.724C246.459 206.474 246.904 208.11 247.35 209.747H247.357Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2513,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.545 219.196C246.824 219.64 247.104 220.084 247.603 220.72C248.075 220.985 248.334 221.058 248.587 221.131C248.58 221.502 248.573 221.866 248.401 222.503C248.221 223.066 248.208 223.364 248.194 223.656C248.194 223.656 248.088 223.656 248.048 223.629C247.829 223.609 247.649 223.622 247.31 223.477C246.964 222.96 246.785 222.602 246.612 222.238C243.805 222.238 240.999 222.238 238.139 222.443C236.457 222.145 234.854 221.509 233.185 221.184C231.37 220.833 229.494 220.78 227.506 220.422C227.805 220.084 228.244 219.746 228.663 219.766C233.797 220.018 238.924 220.389 244.065 220.541C244.876 220.568 245.714 219.66 246.545 219.189V219.196Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2518,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M251.573 231.09C250.974 231.031 250.362 230.958 249.618 230.872C250.389 229.966 251.047 229.975 251.593 230.898C251.593 231.084 251.566 231.077 251.573 231.09Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2523,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.228 228.539C248.088 227.87 248.121 227.174 248.194 226.273C249.498 226.796 249.451 227.618 248.228 228.539Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2528,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M250.416 221.628C250.416 222.138 250.316 222.536 250.223 222.927C250.017 222.841 249.81 222.754 249.611 222.668C249.85 222.284 250.083 221.893 250.416 221.628Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2533,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.334 223.622C248.208 223.364 248.221 223.066 248.367 222.682C248.487 222.927 248.48 223.251 248.334 223.622Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2538,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.833 219.501C248.673 219.097 248.613 218.573 248.58 217.844C248.713 218.222 248.82 218.799 248.833 219.501Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2543,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.667 221.091C248.334 221.058 248.075 220.985 247.742 220.8C247.882 220.68 248.095 220.674 248.467 220.654C248.693 220.727 248.773 220.806 248.826 220.899C248.839 220.926 248.773 220.998 248.667 221.091Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2548,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M243.626 181.91C245.475 183.766 247.33 185.621 249.272 187.562C248.214 184.448 247.164 181.34 246.12 178.034C250.316 183.805 253.588 190.246 255.716 197.548C255.942 198.84 256.314 199.775 256.68 200.702C256.68 200.702 256.7 200.662 256.713 200.656C256.56 201.332 256.507 202.226 255.297 201.345C254.851 200.868 254.578 200.404 254.186 199.722C254.027 199.357 253.933 199.244 253.8 199.165C253.8 199.165 253.714 198.94 253.628 198.668C252.796 196.998 252.058 195.607 251.313 194.209L250.582 194.586L251.978 198.403C252.384 199.96 252.783 201.524 253.195 203.26C253.122 203.638 253.042 203.843 252.77 204.314C252.477 204.565 252.384 204.526 252.204 204.241C251.918 203.77 251.726 203.525 251.533 203.28C251.267 202.697 250.994 202.114 250.628 201.199C249.711 199.013 248.886 197.157 248.088 195.163C248.061 194.878 248.008 194.732 247.962 194.586C247.875 194.646 247.782 194.712 247.696 194.772C247.829 194.937 247.968 195.103 248.088 195.428C247.915 195.812 247.762 196.051 247.43 196.269C246.691 194.971 246.14 193.692 245.681 192.254C245.987 191.551 246.492 190.909 246.359 190.458C245.907 188.894 245.235 187.39 244.65 185.667C244.317 184.282 243.978 183.096 243.646 181.91H243.626ZM247.33 193.639L247.376 193.533C247.376 193.533 247.277 193.553 247.33 193.639Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2553,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M256.726 200.51C256.301 199.768 255.935 198.834 255.576 197.701C255.988 198.436 256.387 199.377 256.726 200.51Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2558,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M115.738 222.966C115.825 223.033 115.838 223.152 115.851 223.265C115.791 223.178 115.725 223.099 115.738 222.966Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2563,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M114.175 224.928C114.049 224.921 113.982 224.855 113.916 224.789C114.022 224.815 114.129 224.842 114.175 224.928Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2568,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M110.059 226.598C110.106 226.578 110.146 226.564 110.126 226.571C110.059 226.598 110.059 226.598 110.059 226.598Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2573,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M109.673 224.557C109.613 224.451 109.7 224.318 109.952 224.166C110.012 224.272 109.919 224.404 109.673 224.557Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2578,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M214.119 52.6985C208.188 55.6737 202.256 58.6555 196.324 61.6373C195.885 61.856 195.466 62.1144 194.874 62.2005C194.555 61.3656 194.395 60.6898 194.249 59.9145C194.256 59.8151 194.282 59.6097 194.395 59.5567C194.655 59.4175 194.741 59.285 194.947 59.0928C198.844 56.9592 202.562 54.8454 206.452 52.6919C215.463 48.4511 224.726 45.4825 234.269 43.488C238.352 42.6332 242.575 42.4278 246.731 41.9309C248.181 42.1893 249.637 42.4477 251.287 42.938C251.001 44.1639 250.509 45.1578 249.85 46.1319C248.786 44.482 247.516 44.4952 245.874 45.2175C244.51 45.297 243.34 45.4295 241.957 45.5687C241.185 45.6349 240.62 45.7012 239.869 45.7476C238.412 45.9795 237.142 46.2247 235.679 46.4698C232.188 47.3511 228.896 48.239 225.391 49.1402C221.501 50.3329 217.81 51.519 214.126 52.6985H214.119Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2583,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.605 41.8315C242.562 42.4278 238.346 42.6332 234.262 43.488C224.713 45.4825 215.449 48.4511 206.339 52.6256C205.92 52.5063 205.813 52.3804 205.893 52.1419C207.935 51.1016 209.823 50.154 211.858 49.1601C212.158 48.9812 212.304 48.8487 212.483 48.7493C212.51 48.7824 212.597 48.7493 212.743 48.7294C212.982 48.683 213.075 48.6565 213.355 48.6366C215.922 47.6692 218.309 46.7018 220.683 45.7211C220.67 45.7078 220.683 45.741 220.876 45.7608C221.933 45.5886 222.791 45.3898 223.842 45.1777C224.427 44.8795 224.786 44.4356 225.225 44.3494C230.844 43.276 236.477 42.2622 242.302 41.2417C243.034 41.2417 243.573 41.2152 244.264 41.1954C244.643 41.1954 244.863 41.1821 245.248 41.1954C245.647 41.2351 245.88 41.255 246.106 41.2749C246.233 41.4273 246.366 41.5863 246.605 41.8315Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2588,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M253.222 42.8188C253.381 43.3621 253.541 43.9055 253.647 44.7006C253.581 45.4361 253.554 45.9265 253.395 46.4831C253.169 46.7349 253.076 46.9138 252.863 47.2319C252.238 49.4251 251.732 51.4859 251.147 53.487C251.014 53.3611 250.981 53.2816 250.914 53.2352C250.868 53.2021 250.741 53.2021 250.735 53.2087C249.81 56.82 248.913 60.4446 247.948 64.0493C247.842 64.4468 247.343 64.745 247.024 65.083C246.698 64.2149 246.844 63.6053 246.944 62.9957C247.496 59.6097 247.948 56.2104 248.607 52.8509C248.919 51.254 249.618 49.7299 250.256 48.2921C250.455 48.8818 250.542 49.3523 250.635 49.8293C250.761 49.8625 250.894 49.889 251.021 49.9221C251.752 47.5565 252.49 45.1976 253.222 42.832V42.8188Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2593,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M253.528 46.4168C253.554 45.9265 253.574 45.4428 253.654 44.8663C254.053 45.3301 254.399 45.8735 254.871 46.5427C254.625 48.1264 254.233 49.5908 253.88 51.0618C253.468 52.7913 253.175 54.5539 252.67 56.2568C251.726 59.4374 250.655 62.5849 249.465 65.8516C249.179 65.8516 249.079 65.7257 249.012 65.3878C249.757 61.306 250.495 57.4296 251.227 53.5533C251.732 51.4925 252.238 49.4318 252.963 47.3246C253.302 46.9933 253.415 46.7084 253.528 46.4235V46.4168Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2598,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.319 41.2616C245.88 41.2484 245.647 41.2285 245.328 41.0496C245.694 40.2478 246.146 39.6183 246.572 39.0219C246.193 38.3726 245.88 37.8358 245.561 37.2991C246.572 37.531 247.576 37.9485 248.587 37.9419C249.598 37.9419 250.608 37.5244 251.812 37.2991C252.065 38.5382 252.125 39.7641 252.191 41.255C250.588 41.255 248.554 41.255 246.319 41.2682V41.2616Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2603,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M253.002 42.7856C252.484 45.1843 251.752 47.5499 251.014 49.9155C250.888 49.8824 250.755 49.8558 250.628 49.8227C250.542 49.3523 250.455 48.8752 250.256 48.0866C250.103 47.2319 250.056 46.6951 250.01 46.1584C250.495 45.1578 250.987 44.1639 251.466 42.9712C251.899 42.7724 252.337 42.7658 252.996 42.7923L253.002 42.7856Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2608,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M165.727 30.7855C165.514 31.4813 165.294 32.4023 164.709 32.8662C162.774 34.4035 162.814 35.6161 165.687 36.8883C160.866 37.8623 160.473 41.805 158.817 45.191C158.292 46.2512 157.84 46.9734 157.388 47.7023C157.188 47.7089 156.995 47.7156 156.496 47.7222C156.097 48.0403 156.004 48.3517 155.911 48.6698C153.511 50.9426 151.117 53.2153 148.57 55.561C148.264 55.0574 147.811 54.3352 148.011 53.9111C148.443 52.9768 149.201 52.1883 150.013 51.0883C149.181 50.9558 148.596 50.863 148.051 50.7769C150.551 47.53 152.965 44.3958 155.831 40.6719C154.328 41.1821 153.537 41.4471 152.566 41.7188C153.876 40.1882 155.366 38.6641 156.882 36.9678C159.788 34.801 162.661 32.8065 165.72 30.7855H165.727Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2613,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M245.342 37.2792C245.88 37.8292 246.193 38.3726 246.572 39.0153C246.146 39.6117 245.694 40.2412 245.155 41.0231C244.856 41.1755 244.637 41.1821 244.145 41.0695C243.273 41.0429 242.688 41.1291 242.096 41.2152C236.47 42.2489 230.838 43.2694 225.218 44.3362C224.786 44.4157 224.42 44.8663 223.729 45.0319C222.512 45.1843 221.601 45.456 220.683 45.7211C220.683 45.7211 220.67 45.6946 220.464 45.6946C217.518 45.847 214.705 45.7807 212.67 48.2921C212.636 48.5372 212.616 48.6366 212.603 48.7294C212.603 48.7294 212.517 48.7691 212.311 48.7161C211.985 48.6565 211.865 48.6432 211.685 48.5306C211.513 48.2987 211.38 48.2125 211.22 47.9806C213.049 46.5162 214.878 45.2374 217.338 43.5145C214.226 44.3428 211.672 45.0253 209.119 45.7012C209.059 45.4229 208.992 45.138 208.932 44.8597C211.054 44.038 213.235 43.3356 215.27 42.3351C215.922 42.017 216.208 40.9369 216.819 40.1418C217.531 39.943 218.083 39.8105 218.801 39.6713C219.207 39.3599 219.453 39.0551 219.858 38.7436C220.237 38.7304 220.45 38.7238 220.769 38.8364C221.634 38.7768 222.618 38.8364 223.124 38.3659C225.73 35.9606 229.082 36.8817 232.055 36.1859C232.487 36.3648 232.919 36.6829 233.358 36.7028C237.275 36.9148 241.192 37.0738 245.335 37.266L245.342 37.2792Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2618,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.7 35.5962C206.046 35.4438 206.399 35.298 207.044 35.2914C207.975 35.51 208.693 35.8082 209.232 35.6161C213.567 34.0589 217.863 32.409 222.179 30.7855C222.725 30.6331 223.27 30.4741 224.075 30.4145C224.62 30.2819 224.906 30.05 225.192 29.8181C228.869 29.2946 232.547 28.7711 236.391 28.3934C236.537 28.8772 236.517 29.2019 236.497 29.5332C236.637 29.5332 236.783 29.5332 236.923 29.5332C236.976 29.1091 237.036 28.6784 237.089 28.2543C237.175 28.2543 237.262 28.241 237.481 28.2212C239.29 30.4873 238.253 32.939 238.08 35.51C237.867 35.6889 237.647 35.6956 237.215 35.4968C234.927 33.9197 231.875 35.901 230.126 33.3234C230.08 33.2571 229.8 33.3101 229.647 33.3631C223.17 35.4968 216.693 37.6304 210.036 39.784C207.542 40.8177 205.242 41.8447 202.927 42.8519C200.706 43.8193 198.478 44.7536 196.284 45.5355C199.795 43.4814 203.28 41.6194 206.738 39.7111C208.254 38.8695 209.717 37.9286 211.2 37.0341C211.074 36.8419 210.947 36.6564 210.821 36.4642C210.588 36.4907 210.349 36.4775 210.129 36.5437C206.784 37.5244 203.446 38.5515 200.074 39.4526C199.715 39.552 199.177 38.9623 198.718 38.6973C200.753 37.7033 202.788 36.7094 205.075 35.8016C205.448 35.7883 205.574 35.6889 205.7 35.5895V35.5962ZM234.262 32.6674C233.631 32.7933 232.999 32.9192 232.367 33.0517C235.573 33.0959 237.24 32.7049 237.368 31.8789C236.484 32.0909 235.553 32.3096 234.262 32.674V32.6674Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2623,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M210.209 39.7773C216.686 37.6371 223.164 35.5034 229.641 33.3698C229.794 33.3167 230.073 33.2637 230.12 33.33C231.868 35.9076 234.921 33.9264 237.042 35.4902C235.546 35.8414 234.016 36.007 232.274 36.1793C229.089 36.8883 225.737 35.9672 223.13 38.3726C222.625 38.8364 221.641 38.7834 220.823 38.7039C220.47 38.2599 220.104 37.8756 219.878 37.9419C217.438 38.6973 215.037 39.6051 212.577 40.2677C211.885 40.4532 211.001 39.9562 210.209 39.7773Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2628,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M242.755 35.7883C242.914 35.1257 243.26 34.4763 243.779 33.5023C243.692 33.4095 242.848 32.8927 242.721 32.2367C242.635 31.7861 243.446 30.9445 244.038 30.6662C244.331 30.5271 245.408 31.1963 245.488 31.6138C245.701 32.8198 245.581 34.0854 245.601 35.5498C244.716 35.7817 243.832 35.795 242.755 35.7883Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2633,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M239.509 30.9048C240.281 30.7855 240.966 30.7922 241.85 30.812C241.684 31.8457 241.312 32.8728 240.82 34.2245C240.853 34.2775 241.232 34.8342 241.604 35.5763C240.919 35.7552 240.241 35.7552 239.356 35.7287C239.243 34.145 239.33 32.5879 239.503 30.9048L239.509 30.9048Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2638,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.565 35.7685C246.612 33.9595 246.672 32.1572 246.918 30.3018C247.556 31.097 248.228 31.9054 248.381 32.8065C248.554 33.8336 249.378 35.2847 247.17 35.7817C246.758 35.7817 246.672 35.7817 246.585 35.7817C246.585 35.7817 246.578 35.7751 246.572 35.7685H246.565Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2643,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.625 35.8612C246.665 35.7817 246.751 35.7817 246.971 35.795C246.958 35.8546 246.811 35.8944 246.625 35.8612Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2648,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M86.5641 23.1985C86.3646 23.2382 86.092 23.1455 85.7462 22.9268C85.9523 22.887 86.2183 22.9798 86.5641 23.1985Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2653,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M88.5658 24.6894C88.3596 24.7225 88.087 24.6297 87.7478 24.3978C87.954 24.3581 88.2266 24.4641 88.5658 24.6894Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2658,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.4902 25.2195C89.2907 25.2526 89.038 25.1598 88.7055 24.9412C88.8983 24.908 89.1643 25.0008 89.4902 25.2195Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2663,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M85.6198 22.6816C85.5267 22.7148 85.3871 22.6286 85.2009 22.4298C85.294 22.3967 85.4336 22.4828 85.6198 22.6816Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2668,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.6414 24.146C87.5417 24.1858 87.4021 24.1063 87.2092 23.9141C87.309 23.8744 87.4486 23.9539 87.6414 24.146Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2673,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.1095 23.6888C86.9897 23.7816 86.8501 23.7021 86.6905 23.4503C86.8102 23.3641 86.9499 23.4503 87.1095 23.6888Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2678,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M211.413 256.038C211.991 256.204 212.384 256.349 212.936 256.522C213.567 256.787 214.046 257.025 214.525 257.257C214.472 257.43 214.412 257.595 214.359 257.767C212.863 257.264 211.36 256.76 209.784 256.091C209.704 255.925 209.724 255.892 209.724 255.892C210.222 255.932 210.728 255.972 211.413 256.031V256.038Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2683,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M209.684 255.939C209.119 255.912 208.567 255.872 208.015 255.833C208.021 255.72 208.035 255.607 208.041 255.495C208.52 255.548 208.999 255.601 209.597 255.773C209.717 255.892 209.697 255.919 209.684 255.939Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2688,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M206.286 254.845C206.545 254.945 206.771 255.084 207.004 255.216C206.784 255.216 206.572 255.21 206.272 255.077C206.192 254.951 206.252 254.878 206.286 254.839V254.845Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2693,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M204.264 254.772C204.324 254.706 204.397 254.753 204.59 254.859C204.563 254.905 204.417 254.898 204.264 254.772Z",
                fill: "#10273C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2698,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M58.288 9.95924C58.3811 9.94599 58.5274 10.052 58.7136 10.2906C58.6138 10.3104 58.4808 10.1978 58.288 9.95924Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2703,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M16.0466 35.7154C16.4989 35.7088 16.7582 35.7154 17.1905 35.9937C17.7025 39.234 18.035 42.2092 18.3675 45.1843C18.3675 45.5554 18.3675 45.9265 18.3542 46.4831C17.2437 46.9005 16.1398 47.1258 15.2553 47.3114C15.0624 48.4047 14.9095 49.2595 14.5637 49.9619C14.1913 49.392 14.0117 48.9746 13.8322 48.5571C13.6726 47.4903 13.4465 46.4235 13.3667 45.3434C13.2869 44.2434 13.3467 43.1368 13.3068 41.8381C13.3401 40.44 13.5861 39.2141 13.4465 38.028C13.2204 36.06 14.1514 35.563 16.0466 35.7088V35.7154Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2708,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M14.1514 30.4012C15.7208 30.3813 16.991 30.4542 15.8139 32.5216C15.5013 33.0649 16.2927 34.2312 16.439 35.2052C15.6011 35.2516 14.9028 35.2052 13.7856 35.1257C13.8588 33.6149 13.9386 32.0843 14.1514 30.3946V30.4012Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2713,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.088 299.646C101.135 299.626 101.182 299.612 101.162 299.619C101.095 299.646 101.088 299.646 101.088 299.646Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2718,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M11.9036 69.8737C11.6908 70.046 11.4847 70.0394 11.1189 70.046C10.6468 69.0189 10.3276 67.9786 9.98178 66.766C12.0832 66.7064 11.0458 68.7936 11.9036 69.8737Z",
                fill: "#10273C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2723,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M8.74486 62.7306C8.41236 62.2801 8.23945 61.7367 8.19955 61.0277C8.51876 61.4518 8.71161 62.0481 8.74486 62.7306Z",
                fill: "#10273C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2728,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.155 248.617C207.396 249.034 209.591 249.597 211.912 250.273C209.883 249.935 207.735 249.485 205.401 249.034C205.182 248.941 205.148 248.849 205.155 248.61V248.617Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2733,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M222.173 30.6C217.863 32.4156 213.561 34.0589 209.225 35.6161C208.686 35.8082 207.968 35.51 207.183 35.2914C207.636 34.695 208.234 34.2444 208.999 33.7475C213.355 32.2234 217.551 30.7391 221.947 29.2549C222.153 29.6392 222.159 30.0235 222.166 30.5934L222.173 30.6Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2738,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M224.746 28.4465C225.039 28.1483 225.444 27.9694 226.016 27.817C225.744 28.082 225.298 28.3272 224.746 28.4465Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2743,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M236.976 28.2609C237.022 28.6916 236.969 29.1157 236.909 29.5398C236.77 29.5398 236.623 29.5398 236.484 29.5398C236.504 29.2085 236.517 28.8772 236.603 28.4067C236.67 28.2609 236.876 28.2609 236.976 28.2609Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2748,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M225.032 29.8181C224.899 30.0566 224.613 30.2819 224.241 30.4012C224.394 30.1295 224.64 29.9705 225.032 29.8181Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2753,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M3.84375 55.1966C4.1962 55.793 4.36245 56.3827 4.48881 57.1248C4.40236 57.5887 4.3558 57.9067 4.30925 58.2182C4.0898 58.2248 3.877 58.2314 3.65755 58.2447C3.65755 57.2309 3.65755 56.2104 3.84375 55.1966Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2758,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M5.67252 61.094C6.03828 61.4849 6.22448 61.9024 6.41733 62.459C5.96512 62.6114 5.49962 62.6246 5.04076 62.6379C5.19371 62.1343 5.34002 61.6307 5.67252 61.094Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2763,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M4.57526 60.4247C4.43561 60.4247 4.36245 60.3452 4.28265 60.2789C4.40236 60.3054 4.52206 60.3319 4.57526 60.4247Z",
                fill: "#3D4E5B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2768,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M78.8101 250.518C78.8833 250.273 79.1227 250.081 79.5217 249.915C79.4485 250.154 79.2091 250.366 78.8101 250.518Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2773,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M79.8076 249.975C79.8808 249.763 80.1202 249.558 80.5192 249.398C80.4461 249.624 80.2066 249.803 79.8076 249.975Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2778,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.055 195.308C248.879 197.164 249.697 199.019 250.535 201.067C250.289 201.557 249.777 201.882 249.804 202.153C249.95 203.565 250.236 204.963 250.329 206.487C250.01 206.434 249.824 206.255 249.538 205.917C248.813 202.604 248.201 199.443 247.589 196.283C247.742 196.051 247.902 195.812 248.061 195.434C248.068 195.289 248.055 195.302 248.055 195.302V195.308Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2783,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M249.651 206.076C249.83 206.255 250.01 206.434 250.289 206.699C250.775 209.436 251.167 212.086 251.586 214.955C251.606 215.704 251.606 216.241 251.646 217.129C251.706 217.685 251.726 217.891 251.746 218.096C251.546 218.123 251.167 218.182 251.167 218.162C250.741 216.234 250.416 214.279 249.91 212.371C249.664 211.45 249.072 210.615 248.434 209.581C248.234 209.416 248.095 209.27 248.234 209.257C248.407 209.065 248.434 208.892 248.514 208.707C248.56 208.7 248.647 208.72 248.833 208.68C249.232 207.792 249.445 206.938 249.651 206.083V206.076Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2788,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M251.533 203.459C251.712 203.525 251.905 203.77 252.158 204.161C251.998 204.088 251.772 203.856 251.533 203.459Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2793,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M252.045 198.29C251.506 197.131 251.041 195.858 250.575 194.586L251.307 194.209C252.051 195.607 252.79 196.998 253.541 198.575C253.076 198.562 252.597 198.37 252.045 198.284V198.29Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2798,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M253.654 199.225C253.927 199.251 254.02 199.364 254.08 199.622C253.814 199.768 253.534 199.808 253.255 199.841C253.342 199.655 253.435 199.463 253.661 199.225L253.654 199.225Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2803,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.088 209.263C248.088 209.263 248.221 209.409 248.268 209.495C248.155 209.615 247.995 209.648 247.596 209.707C246.911 208.104 246.465 206.467 245.86 204.552C245.681 203.472 245.667 202.664 245.787 201.882C246.113 201.921 246.306 201.935 246.459 202.134C247.164 204.446 247.902 206.573 248.633 208.707C248.633 208.707 248.54 208.687 248.407 208.766C248.168 208.965 248.108 209.104 248.081 209.263H248.088Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2808,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.002 211.291C247.849 211.158 247.709 210.847 247.556 210.357C247.702 210.489 247.862 210.801 248.002 211.291Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2813,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M256.015 49.1601C255.882 48.8288 255.829 48.3517 255.889 47.7686C256.035 48.1132 256.068 48.5637 256.015 49.1601Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2818,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M30.6436 236.795C30.7234 236.696 30.9029 236.696 31.1955 236.782C31.1157 236.882 30.9362 236.888 30.6436 236.795Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2823,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M150.292 299.652C150.279 299.705 150.146 299.765 149.959 299.738C149.999 299.659 150.079 299.652 150.292 299.652Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2828,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M84.9282 248.06C84.8484 248.239 84.6157 248.352 84.2499 248.458C84.3364 248.299 84.5558 248.146 84.9282 248.06Z",
                fill: "#F8DCE2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2833,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M45.7925 235.543C42.4541 236.047 39.1025 236.544 35.5314 237.041C35.3053 236.948 35.3053 236.862 35.3119 236.643C44.908 234.894 53.7526 231.07 62.5773 227.201C65.8691 225.756 69.0944 224.166 72.5325 222.622C70.451 224.172 68.1833 225.743 65.8225 227.446C59.8109 229.977 53.8923 232.369 47.8873 234.907C47.7875 235.053 47.7875 235.039 47.6079 235.039C46.8831 235.212 46.3378 235.384 45.7925 235.556C45.7925 235.556 45.7925 235.536 45.8058 235.543H45.7925Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2838,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M213.667 215.181C213.129 215.015 212.597 214.849 211.885 214.684C210.894 214.233 210.083 213.789 209.271 213.345C206.718 211.954 204.158 210.569 201.311 209.084C200.646 208.839 200.274 208.687 199.828 208.415C199.582 208.276 199.403 208.263 199.123 208.137C198.751 207.925 198.478 207.819 198.212 207.713C197.168 207.063 196.118 206.414 194.894 205.751C194.721 205.738 194.675 205.765 194.675 205.765C191.955 203.942 189.188 202.187 186.528 200.278C183.722 198.264 181.015 196.104 178.043 193.791C175.722 191.73 173.574 189.948 171.546 188.033C168.639 185.29 165.826 182.447 163.073 179.604C163.333 179.478 163.406 179.353 163.552 179.107C163.778 178.836 163.845 178.637 163.898 178.418C163.885 178.398 163.878 178.445 164.064 178.465C164.383 178.299 164.516 178.1 164.743 177.968C164.975 177.875 165.108 177.729 165.381 177.477C165.707 177.232 165.9 177.1 166.245 176.954C166.718 176.589 167.024 176.232 167.376 175.754C167.516 175.496 167.649 175.417 168.008 175.403C168.959 174.621 169.723 173.833 170.674 173.011C171.978 172.236 173.122 171.514 174.232 170.745C175.795 169.658 177.338 168.532 179.04 167.492C180.55 168.717 181.913 169.877 183.27 171.03C183.675 171.467 184.074 171.905 184.686 172.541C186.362 174.124 187.825 175.503 189.288 176.881C189.288 176.881 189.281 176.901 189.335 177.02C189.607 177.312 189.82 177.477 190.033 177.65C190.033 177.65 190.179 177.676 190.159 177.762C190.239 177.994 190.379 178.087 190.545 178.127C190.545 178.127 190.571 178.153 190.638 178.292C191.649 179.313 192.593 180.194 193.537 181.075C193.537 181.075 193.624 181.022 193.624 181.161C193.837 181.486 194.043 181.672 194.256 181.857C194.256 181.857 194.256 181.857 194.309 182.016C198.957 188.112 204.018 193.758 207.975 200.093C210.794 204.605 212.131 210.045 214.006 215.088C213.887 215.101 213.661 215.174 213.661 215.174L213.667 215.181Z",
                fill: "#F0FAFD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2843,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.15 175.933C206.764 175.807 206.379 175.688 205.787 175.337C202.648 172.229 199.722 169.34 196.716 166.305C193.564 162.919 190.512 159.653 187.399 156.452C182.897 151.82 178.349 147.235 173.82 142.63C173.428 142.179 173.029 141.729 172.364 141.159C171.851 140.867 171.605 140.695 171.339 140.357C167.941 136.819 164.623 133.38 161.151 130.106C159.974 128.993 158.997 127.184 156.822 127.8C156.676 127.734 156.556 127.635 156.43 127.23C156.39 126.853 156.39 126.747 156.45 126.502C156.596 124.196 154.894 123.546 153.397 122.738C153.404 122.738 153.384 122.738 153.338 122.625C153.198 122.367 153.058 122.281 152.899 122.241C152.899 122.234 152.885 122.241 152.839 122.128C152.699 121.87 152.56 121.784 152.4 121.744C152.4 121.737 152.387 121.744 152.34 121.631C152.2 121.373 152.067 121.287 151.895 121.247C151.895 121.24 151.881 121.254 151.861 121.075C151.323 120.684 150.811 120.478 150.166 120.193C149.66 119.703 149.281 119.292 148.909 118.689C148.423 117.682 148.064 116.741 147.432 116.059C141.68 109.85 135.881 103.681 130.096 97.4985C129.816 97.2003 129.597 96.7365 129.258 96.6172C125.946 95.4842 123.911 92.8072 121.497 90.541C120.273 89.3946 118.531 88.7916 116.975 87.8308C116.829 87.579 116.696 87.4863 116.463 87.3206C116.237 87.1152 116.077 87.0357 115.831 86.9098C115.632 86.7839 115.559 86.6779 115.472 86.4062C115.273 86.1677 115.12 86.055 114.854 85.949C114.741 85.949 114.521 85.949 114.528 85.949C114.528 85.949 114.528 85.9556 114.481 85.843C114.328 85.5912 114.195 85.4984 114.036 85.452C114.036 85.452 114.036 85.4586 113.989 85.346C113.803 85.1406 113.67 85.0478 113.537 84.9551C113.537 84.9551 113.537 84.9617 113.537 84.849C113.537 84.7298 113.537 84.4978 113.537 84.3057C113.031 83.7358 112.533 83.3515 111.908 82.9672C111.788 82.9672 111.542 82.9672 111.549 82.9672C111.549 82.9672 111.549 82.9672 111.502 82.8545C111.322 82.6491 111.183 82.563 111.05 82.4702C111.05 82.4702 111.05 82.4702 110.997 82.3576C110.85 82.0991 110.717 82.013 110.551 81.9732C110.551 81.9732 110.551 81.9732 110.551 81.8606C110.551 81.7413 110.551 81.5028 110.498 81.3835C110.312 81.1715 110.179 81.0787 109.919 80.9793C109.8 80.9793 109.553 80.9793 109.553 80.9793C109.553 80.9793 109.553 80.9793 109.507 80.8667C109.361 80.6082 109.228 80.5155 109.055 80.4823C109.055 80.4823 109.055 80.4823 109.002 80.3763C108.849 80.1245 108.716 80.0318 108.556 79.9854C108.556 79.9854 108.556 79.992 108.509 79.8794C108.323 79.6739 108.19 79.5812 108.057 79.4884C108.057 79.4884 108.057 79.495 108.011 79.3824C107.824 79.177 107.691 79.0842 107.558 78.9914C107.558 78.9914 107.558 79.0047 107.512 78.892C107.359 78.6402 107.226 78.5475 107.066 78.4945C107.066 78.4945 107.066 78.5077 107.02 78.3885C106.834 78.183 106.701 78.0903 106.568 77.9975C106.568 77.9975 106.568 77.9975 106.521 77.8915C106.375 77.6331 106.235 77.5403 106.075 77.5005C106.075 77.5005 106.075 77.5072 106.009 77.3614C105.317 76.8114 104.692 76.4138 104.08 76.0096C104.087 76.0096 104.08 76.0229 104.067 75.8639C103.728 75.4729 103.402 75.2476 103.083 75.0157C103.09 75.0157 103.09 75.0289 103.05 74.9097C102.863 74.6976 102.724 74.6115 102.591 74.5187C102.597 74.5187 102.591 74.532 102.551 74.4127C102.365 74.2007 102.225 74.1145 102.092 74.0218C102.099 74.0218 102.092 74.035 102.052 73.9157C101.873 73.7103 101.74 73.6242 101.6 73.5314C101.6 73.5248 101.58 73.5182 101.54 73.4055C101.407 73.1471 101.274 73.0676 101.101 73.0411C101.101 73.0344 101.081 73.0212 101.041 72.9085C100.908 72.6501 100.775 72.5706 100.602 72.5375C100.602 72.5309 100.583 72.5242 100.543 72.4116C100.41 72.1532 100.277 72.0736 100.104 72.0405C100.104 72.0339 100.084 72.0273 100.051 71.9146C99.9175 71.6628 99.7912 71.5833 99.5252 71.57C99.4254 71.57 99.2325 71.5568 99.0729 71.5502C98.8069 71.5502 98.7005 71.5502 98.6008 71.5502C98.6008 71.5502 98.5875 71.5502 98.5476 71.4309C98.4079 71.1725 98.2683 71.0863 98.102 71.0466C98.102 71.0399 98.0954 71.0466 98.0355 70.9207C97.8161 70.7153 97.6498 70.6357 97.3373 70.5496C96.9915 70.5496 96.792 70.5496 96.5925 70.5496C96.5925 70.543 96.5991 70.5496 96.5526 70.437C96.3664 70.2315 96.2334 70.1388 96.1004 70.046C96.107 70.046 96.1004 70.0593 96.0538 69.94C95.8743 69.7346 95.7346 69.6418 95.6016 69.5557C95.6016 69.5557 95.5949 69.5557 95.6016 69.3768C95.2824 67.1967 94.0255 66.448 92.1103 66.5739C92.1103 66.5672 92.1103 66.5739 92.0704 66.4612C91.8842 66.2558 91.7512 66.163 91.6182 66.0703C91.6249 66.0703 91.6182 66.0835 91.565 65.9709C91.3788 65.7655 91.2458 65.6727 91.1194 65.5799C91.1327 65.5799 91.1194 65.5932 91.0463 65.4408C90.0222 64.5595 89.0646 63.8306 88.1136 63.0951C88.1203 63.0885 88.1269 63.1083 88.0737 62.9957C87.8875 62.7903 87.7545 62.6909 87.6282 62.5981C87.6414 62.5981 87.6281 62.618 87.5816 62.5252C87.3821 62.4987 87.2358 62.5584 86.9099 62.5981C85.3738 61.5843 84.0039 60.6036 82.6938 59.4705C82.6273 58.9139 82.6206 58.3904 82.3546 58.1055C80.8251 56.4225 79.2357 54.7924 77.8193 53.0762C78.5508 53.1292 79.2224 53.0961 79.6946 53.3943C83.1925 55.6008 86.6506 57.867 90.1219 60.1133C90.1219 60.1133 90.1153 60.1133 90.1818 60.2524C90.7005 60.8024 91.1527 61.2132 91.6847 61.7698C93.6598 63.7047 95.5019 65.56 97.4769 67.263C101.44 70.6755 105.47 74.0151 109.494 77.3614C109.933 77.7258 110.77 78.3156 110.95 78.1764C111.449 77.7921 111.695 77.0897 112.047 76.5132C112.047 76.5132 112.054 76.5066 112.18 76.5132C112.307 76.5132 112.553 76.5132 112.579 76.5861C112.646 76.6789 112.692 76.6988 112.732 76.7253C112.672 76.659 112.613 76.5861 112.553 76.3542C112.553 75.9699 112.553 75.7512 112.553 75.5259C112.553 75.5259 112.559 75.5127 112.719 75.4928C113.364 75.0289 113.849 74.585 114.295 74.1675C112.267 71.961 110.458 69.9864 108.822 68.0051C109.866 68.4955 110.731 68.9991 111.615 69.6749C112.094 70.0924 112.566 70.3309 113.178 70.649C115.725 73.3127 118.132 75.897 120.613 78.6005C120.965 78.8192 121.244 78.9119 121.524 79.0047C121.524 79.0047 121.524 79.0179 121.53 79.1969C122.042 79.9125 122.548 80.4426 123.04 80.9793C123.027 80.9859 123.046 80.9594 123.04 81.1516C123.884 81.8805 124.729 82.4238 125.72 83.0401C128.247 85.505 130.628 87.8971 133.042 90.4217C133.221 90.6801 133.361 90.7994 133.494 90.9187C133.48 90.9187 133.494 90.9054 133.547 91.0247C133.733 91.2301 133.866 91.3229 133.999 91.4156C133.986 91.4156 133.999 91.4024 134.046 91.515C134.232 91.7205 134.365 91.8132 134.498 91.9126C134.485 91.9126 134.498 91.8994 134.544 92.012C134.731 92.2174 134.864 92.3102 134.99 92.4096C134.977 92.4096 134.99 92.3963 135.037 92.509C135.223 92.7144 135.356 92.8072 135.482 92.9065C135.469 92.9065 135.482 92.8933 135.529 93.0059C135.715 93.2114 135.848 93.3041 135.974 93.4035C135.968 93.4101 135.974 93.3903 136.027 93.5162C136.22 93.7481 136.36 93.8541 136.559 94.0396C136.706 94.2252 136.806 94.3047 136.985 94.4902C137.191 94.7023 137.338 94.795 137.471 94.8944C137.464 94.8944 137.471 94.8812 137.524 95.0004C137.71 95.2059 137.843 95.2986 137.969 95.398C137.956 95.398 137.969 95.3848 138.016 95.4974C138.202 95.7028 138.335 95.7956 138.468 95.895C138.455 95.895 138.468 95.8817 138.515 95.9944C138.701 96.1998 138.834 96.2926 138.96 96.3853C138.947 96.3853 138.96 96.3721 139.007 96.4847C139.173 96.7034 139.306 96.8028 139.412 97.0811C139.273 97.7305 138.907 98.3401 139.08 98.6581C140.151 100.686 141.028 102.939 142.551 104.582C146.628 108.988 151.063 113.064 155.193 117.424C156.097 118.378 156.343 119.955 156.809 121.287C156.782 121.466 156.836 121.598 156.935 121.817C157.115 121.843 157.255 121.79 157.527 121.797C158.072 122.314 158.478 122.771 158.797 123.275C158.771 123.454 158.824 123.586 158.977 123.864C160.653 125.634 162.142 127.363 163.831 128.88C167.728 132.379 171.712 135.785 175.702 139.178C176.088 139.509 176.773 139.489 177.318 139.635C177.318 139.635 177.318 139.635 177.371 139.747C177.524 139.993 177.65 140.085 177.817 140.311C180.975 143.902 184.081 147.354 187.293 150.714C191.084 154.676 194.96 158.559 198.691 162.568C201.79 166.08 204.995 169.506 208.261 173.038C208.42 173.283 208.547 173.376 208.72 173.588C209.138 174.462 209.544 175.178 209.897 175.788C208.846 175.847 207.995 175.894 207.143 175.94L207.15 175.933ZM113.989 77.865L113.863 77.7921C113.923 77.865 113.982 77.9312 114.095 78.1367C114.135 78.1632 114.182 78.183 114.222 78.2095C114.162 78.1366 114.102 78.0704 113.989 77.865Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2848,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M183.303 170.825C181.913 169.877 180.55 168.717 179.007 167.333C178.342 166.736 177.857 166.372 177.338 165.842C175.097 163.476 172.922 161.256 170.674 159.103C162.807 151.569 154.92 144.055 147.007 136.56C146.388 135.977 145.524 135.652 144.653 135.102C143.176 133.684 141.826 132.366 140.463 131.06C136.972 127.734 133.48 124.414 129.949 120.936C128.486 119.08 127.176 117.258 125.6 115.707C117.527 107.743 109.394 99.831 101.248 91.9325C100.25 90.965 99.0331 90.2163 97.9225 89.3681C97.0114 88.4935 96.0937 87.6188 95.1428 86.5851C98.8867 86.4194 102.059 87.1682 105.437 89.6398C109.547 92.6547 113.351 95.8751 116.849 99.4864C119.775 102.501 122.448 105.761 125.261 108.882C128.087 112.017 130.887 115.171 133.84 118.186C134.518 118.875 135.901 118.828 136.712 119.445C138.475 120.777 140.25 122.168 141.7 123.818C143.662 126.051 146.176 126.647 148.882 127.317C150.604 127.741 152.26 129.006 153.597 130.265C158.97 135.321 164.23 140.496 169.491 145.678C171.22 147.381 172.842 149.19 174.438 151.019C174.731 151.35 174.631 152.019 174.837 153.305C173.72 152.476 173.195 152.086 172.497 151.443C169.045 148.143 165.76 145.095 162.482 142.047C162.209 142.358 161.936 142.67 161.664 142.981C165.048 145.85 168.433 148.719 171.818 151.582C172.177 152.198 172.516 153.344 172.889 153.358C176.187 153.47 176.706 156.77 178.768 158.255C178.947 158.387 179.18 158.732 179.127 158.864C177.75 162.104 180.929 163.244 182.279 164.967C183.782 166.889 184.094 168.519 183.296 170.811L183.303 170.825Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2853,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M214.139 215.081C212.144 210.059 210.808 204.618 207.988 200.106C204.031 193.771 198.971 188.126 194.329 182.03C196.404 181.042 197.468 182.202 198.618 183.832C200.001 185.8 201.783 187.483 203.566 189.484C203.978 190.027 204.211 190.379 204.45 190.723L205.035 190.153C204.603 189.875 204.164 189.597 203.732 189.318C202.748 187.284 201.764 185.25 200.759 183.037C201.391 182.765 202.036 182.672 203.306 182.493C207.815 190.087 212.457 197.899 217.092 205.712C217.198 205.679 217.305 205.645 217.411 205.612C216.507 203.313 215.602 201.007 214.691 198.688C219.619 197.727 218.921 202.081 220.69 204.751C220.557 203.479 220.477 202.723 220.331 201.338C221.308 202.027 222.06 202.293 222.359 202.809C223.543 204.89 224.494 207.11 225.724 209.157C226.176 209.906 227.18 210.324 227.938 210.893L228.776 210.39C228.324 208.091 227.878 205.791 227.426 203.492L227.905 203.24C228.637 204.36 229.375 205.473 230.086 206.606C230.731 207.633 231.343 208.654 233.099 207.878C233.464 208.342 233.544 208.773 233.704 209.376C234.415 211.437 235.213 213.285 235.632 215.214C235.905 216.479 235.632 217.864 235.38 219.189C232.72 218.898 230.279 218.693 227.865 218.295C223.636 217.599 219.426 216.811 215.217 215.996C214.818 215.916 214.498 215.393 214.146 215.075L214.139 215.081Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2858,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M208.72 173.415C208.56 173.362 208.427 173.27 208.267 172.846C206 168.34 202.621 165.205 198.811 162.469C194.967 158.553 191.09 154.67 187.3 150.701C184.088 147.341 180.982 143.889 177.77 140.185C177.617 139.754 177.484 139.668 177.324 139.622C177.324 139.622 177.324 139.622 177.258 139.476C176.267 137.879 175.582 136.163 174.359 135.023C171.26 132.121 167.861 129.53 164.703 126.681C163.851 125.912 163.406 124.686 162.781 123.672C163.745 124.209 164.796 124.633 165.66 125.309C166.937 126.309 167.955 127.867 170.056 126.753C171.24 127.714 172.284 128.582 173.348 129.517C173.368 129.576 173.567 129.695 173.694 129.835C174.152 130.053 174.492 130.126 174.831 130.199C174.831 130.186 174.817 130.199 174.751 130.378C176.4 132.419 178.116 134.287 179.898 136.302C181.627 138.144 183.236 139.9 184.965 141.517C186.668 143.114 188.497 144.585 190.279 146.102C190.285 146.102 190.279 146.102 190.299 146.228C190.478 146.44 190.625 146.519 190.778 146.592C190.778 146.586 190.771 146.599 190.778 146.771C191.117 147.242 191.443 147.54 191.788 147.984C192.374 148.607 192.939 149.09 193.611 149.687C193.903 149.899 194.089 149.992 194.269 150.071C194.269 150.058 194.249 150.071 194.276 150.197C194.455 150.416 194.608 150.495 194.761 150.568C194.761 150.555 194.741 150.561 194.768 150.694C194.947 150.913 195.1 150.992 195.253 151.065C195.253 151.052 195.233 151.058 195.26 151.191C195.439 151.41 195.592 151.489 195.752 151.562C195.752 151.549 195.732 151.555 195.759 151.688C195.938 151.907 196.091 151.986 196.244 152.059C196.244 152.046 196.224 152.059 196.251 152.185C196.43 152.397 196.583 152.483 196.743 152.556C196.743 152.549 196.729 152.556 196.756 152.682C196.936 152.894 197.089 152.98 197.241 153.053C197.241 153.046 197.228 153.053 197.255 153.179C197.434 153.391 197.587 153.477 197.74 153.55C197.74 153.543 197.727 153.55 197.754 153.676C197.933 153.888 198.086 153.974 198.239 154.047C198.239 154.034 198.226 154.047 198.266 154.199C198.784 154.749 199.256 155.147 199.729 155.538C199.729 155.531 199.715 155.538 199.782 155.684C200.141 155.902 200.434 155.975 200.726 156.035C200.726 156.022 200.706 156.035 200.66 156.187C200.813 156.578 201.019 156.81 201.225 157.029C201.225 157.015 201.205 157.029 201.265 157.181C201.79 157.572 202.249 157.804 202.721 158.029C202.721 158.016 202.701 158.023 202.708 158.162C202.887 158.38 203.047 158.46 203.213 158.52C203.213 158.506 203.187 158.513 203.147 158.659C203.12 158.911 203.14 159.01 203.233 159.255C207.376 163.609 211.446 167.81 215.496 172.03C216.56 173.137 217.571 174.303 218.621 175.622C218.808 176.503 218.987 177.206 219.014 177.888C218.668 177.848 218.475 177.815 218.249 177.65C218.063 177.278 217.91 177.047 217.724 176.675C217.405 176.437 217.132 176.331 216.853 176.232C217.072 176.497 217.291 176.755 217.557 177.153C217.764 177.504 217.93 177.729 218.129 178.113C218.528 178.962 218.888 179.644 219.253 180.32C218.954 181.095 218.236 181.996 218.422 182.632C219.306 185.621 220.364 188.57 221.508 191.465C222.153 193.095 223.177 194.573 223.855 196.196C224.194 197.018 224.141 198.005 224.281 199.079C219.3 197.389 218.149 192.976 215.862 189.458C216.394 188.119 216.786 186.973 217.318 185.813C217.617 185.647 217.777 185.495 217.937 185.349C217.837 185.263 217.73 185.17 217.631 185.084C217.484 185.336 217.331 185.588 217.019 185.747C216.354 184.216 216.061 182.659 215.303 181.367C214.033 179.193 212.537 177.139 210.994 175.132C210.435 174.403 209.484 173.972 208.713 173.402L208.72 173.415ZM170.295 128.536C170.249 128.516 170.202 128.489 170.156 128.47C170.216 128.549 170.269 128.629 170.388 128.847C170.442 128.867 170.488 128.894 170.541 128.914C170.482 128.834 170.422 128.748 170.302 128.529L170.295 128.536ZM202.282 160.773C202.382 160.918 202.522 161.004 202.774 161.263C202.867 161.409 203 161.501 203.18 161.912C205.807 164.463 208.44 167.008 211.18 169.837C211.486 170.062 211.798 170.294 212.191 170.805C212.47 170.891 212.749 170.984 213.029 171.07C212.776 170.831 212.523 170.593 212.211 170.056C211.912 169.811 211.612 169.566 211.227 168.996C208.58 166.471 205.933 163.947 203.18 161.203C203.08 161.057 202.941 160.978 202.681 160.719C202.581 160.574 202.449 160.488 202.182 160.229C202.083 160.097 201.95 159.997 201.684 159.726C201.577 159.593 201.444 159.507 201.165 159.209C200.979 159.07 200.786 158.93 200.6 158.791C200.533 158.904 200.473 159.01 200.407 159.123C200.673 159.255 200.946 159.388 201.291 159.759C201.378 159.911 201.504 160.01 201.783 160.276C201.883 160.421 202.023 160.507 202.282 160.759V160.773ZM199.29 157.665C199.336 157.691 199.383 157.718 199.429 157.744C199.363 157.671 199.303 157.592 199.19 157.373C199.143 157.347 199.097 157.327 199.057 157.3C199.123 157.367 199.19 157.44 199.296 157.665H199.29ZM215.702 174.688C215.809 174.668 215.915 174.655 216.021 174.635C215.941 174.535 215.862 174.429 215.662 174.118C215.562 173.992 215.436 173.892 215.217 173.495C214.738 172.952 214.259 172.415 213.774 171.871C213.587 172.07 213.401 172.269 213.215 172.461C213.847 172.978 214.472 173.488 215.223 174.217C215.31 174.363 215.429 174.462 215.709 174.688H215.702Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2863,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M82.6406 59.6163C84.0039 60.6036 85.3738 61.5843 87.0496 62.6114C87.4486 62.6379 87.5351 62.6246 87.6282 62.6114C87.6282 62.6114 87.6415 62.5915 87.6614 62.724C87.8277 62.9361 87.9806 63.0222 88.1269 63.1083C88.1269 63.1083 88.1269 63.0818 88.1269 63.2674C89.1244 64.1619 90.1153 64.8775 91.1128 65.5932C91.1128 65.5932 91.1261 65.5799 91.146 65.7124C91.3123 65.9245 91.4652 66.004 91.6115 66.0901C91.6115 66.0901 91.6182 66.0703 91.6382 66.2094C91.8044 66.4281 91.9574 66.5076 92.1037 66.5871C92.1037 66.5871 92.1037 66.5739 92.1103 66.7528C93.2741 67.813 94.4312 68.6943 95.5816 69.5689C95.5816 69.5689 95.5949 69.5689 95.6149 69.6948C95.7878 69.9069 95.9341 69.9864 96.0871 70.0659C96.0871 70.0659 96.1003 70.046 96.1203 70.1852C96.2866 70.4038 96.4395 70.4833 96.5858 70.5629C96.5858 70.5629 96.5858 70.5496 96.5991 70.7285C98.2683 72.4248 99.9175 73.9356 101.587 75.6319C102.205 76.5662 102.797 77.3415 103.429 78.0836C104.965 79.886 106.528 81.6684 108.077 83.4575C104.194 86.0881 101.866 82.8678 99.3922 80.9528C95.8743 78.236 92.6623 75.1217 89.2109 72.3122C83.3521 67.5479 77.4203 62.8764 71.495 58.1983C69.6995 56.7803 67.7976 55.5014 65.9622 54.1364C64.3595 52.9437 62.5573 52.2148 61.8258 49.8426C61.3138 48.1794 58.7069 47.1987 58.0752 45.5223C57.0577 42.8188 54.0452 42.726 52.9746 40.4201C56.6986 41.9176 60.2431 43.6007 63.8209 45.2108C64.845 45.6681 65.9622 45.9066 67.1259 46.3572C67.3986 46.6951 67.5781 46.9204 67.6845 47.2915C67.8708 48.0469 68.0237 48.7426 68.4227 49.2264C68.9015 49.8028 69.5931 50.2004 70.0719 50.6775C69.8126 50.7636 69.6796 50.8365 69.5466 50.9094C69.7527 51.0022 69.9655 51.095 70.2581 51.307C70.6239 51.5124 70.9032 51.5919 71.2091 51.8437C75.0395 54.5472 78.8434 57.0851 82.6472 59.6163H82.6406Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2868,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M233.631 209.197C233.551 208.766 233.471 208.342 233.265 207.806C232.64 205.685 232.134 203.671 231.742 201.385C231.775 200.828 231.696 200.543 231.622 200.258C231.622 200.258 231.636 200.258 231.622 200.099C231.283 199.549 230.957 199.158 230.625 198.767C230.625 198.767 230.638 198.767 230.638 198.575C229.016 195.037 227.386 191.691 225.724 188.165C223.981 185.276 222.272 182.566 220.756 179.876C222.013 180.565 223.084 181.234 224.261 181.99C224.627 182.361 224.879 182.639 225.132 183.103C226.389 185.29 227.612 187.324 228.916 189.305C229.933 190.842 231.05 192.32 232.121 194.01C233.099 196.707 234.023 199.238 235.087 201.716C235.346 202.312 236.071 202.703 236.577 203.194C237.115 202.399 237.787 201.656 238.146 200.788C238.479 199.993 238.472 199.066 238.765 198.29C239.795 199.51 240.68 200.636 241.578 201.756C241.578 201.756 241.591 201.756 241.591 201.921C241.591 202.306 241.591 202.524 241.471 202.843C241.378 203.286 241.418 203.638 241.451 203.982C241.664 203.571 241.877 203.154 242.09 202.577C242.09 202.193 242.09 201.974 242.263 201.782C243.094 202.617 243.745 203.426 244.404 204.234C244.603 204.102 244.796 203.969 244.996 203.843C244.883 203.227 244.77 202.611 244.657 201.988L245.647 201.868C245.667 202.677 245.687 203.479 245.701 204.446C245.667 204.857 245.634 205.102 245.428 205.559C245.022 206.089 244.79 206.414 244.397 206.739C244.031 206.739 243.825 206.739 243.586 206.593C243.346 206.295 243.14 206.136 242.928 205.977C242.981 206.222 243.034 206.467 243.1 206.865C243.273 207.242 243.44 207.474 243.593 207.706C243.593 207.706 243.593 207.693 243.593 207.898C243.579 208.634 243.573 209.171 243.413 209.681C242.848 209.409 242.449 209.164 242.043 208.919C241.538 209.701 241.085 210.41 240.42 211.443C239.922 210.449 239.616 209.833 239.283 209.164C239.13 209.939 238.977 210.675 238.831 211.404C238.645 211.437 238.459 211.47 238.272 211.503C237.368 209.157 236.464 206.818 235.566 204.492C233.977 205.93 233.77 206.229 234.608 207.647C235.453 209.084 234.715 209.177 233.617 209.204L233.631 209.197ZM242.967 204.645C242.888 204.671 242.808 204.698 242.728 204.724C242.808 204.751 242.888 204.777 242.967 204.645Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2873,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M31.8273 27.4923C32.5322 27.3333 33.2571 27.373 34.2679 27.4061C34.8198 27.5387 35.0858 27.6844 35.3851 28.0158C35.9171 28.4001 36.4092 28.6187 36.9146 28.791C43.2056 30.9379 49.4899 33.0848 55.6745 35.3576C53.7393 35.086 51.9172 34.6884 50.0951 34.2842C50.0286 34.5293 49.9687 34.7745 49.9022 35.0197C51.3586 35.8148 52.815 36.6166 54.2514 37.3985C53.1408 38.2334 52.4359 38.7569 51.731 39.287C47.302 38.0413 42.8797 36.7889 38.4441 35.5697C37.7392 35.3775 36.9878 35.3311 36.0568 35.192C35.2388 34.5824 34.6203 33.9926 34.0019 33.4029C34.0351 33.1975 34.075 32.9854 34.1083 32.78C35.8839 33.0782 37.6661 33.3764 39.415 33.6679C36.8481 31.6403 34.341 29.6723 31.8273 27.4989L31.8273 27.4923Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2878,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M51.8175 39.3996C52.4359 38.7635 53.1408 38.2334 54.2514 37.3985C52.815 36.61 51.3586 35.8148 49.9022 35.0197C49.9687 34.7745 50.0286 34.5293 50.0951 34.2842C51.9172 34.6818 53.746 35.086 55.8142 35.3709C56.293 35.404 56.5257 35.5498 56.7851 35.7883C56.958 35.8413 57.1043 35.795 57.4301 35.7751C58.3545 35.9407 59.0926 36.0865 60.0104 36.2323C61.2007 36.5769 62.2049 36.9148 63.3154 37.3919C64.313 38.081 65.2307 38.6111 66.1085 39.2008C68.3097 40.6918 70.4842 42.2092 72.4926 43.7133C71.6081 43.541 70.9032 43.3754 70.1717 43.1435C70.1052 43.0507 70.0586 43.0308 70.0187 43.0043C70.0786 43.0706 70.1384 43.1435 70.1052 43.329C69.3604 43.2826 68.7153 43.1103 68.0636 42.9447C67.6712 43.9121 66.4609 44.8398 67.9173 45.8934L67.0328 46.2313C65.9555 45.8934 64.8317 45.6614 63.8142 45.1976C60.2365 43.5874 56.692 41.9044 52.948 40.2279C52.4758 39.9761 52.1899 39.7376 51.8175 39.393V39.3996ZM61.1076 39.5322L60.5889 39.552C60.8017 39.6117 61.0145 39.6779 61.3803 40.0424C62.3445 40.599 63.3088 41.1556 64.2731 41.7122C64.3928 41.4405 64.5191 41.1688 64.6388 40.9038C63.5016 40.5128 62.3645 40.1219 61.1076 39.5322Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2883,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M117.028 87.9435C118.538 88.7917 120.273 89.3946 121.497 90.541C123.911 92.8072 125.946 95.4908 129.258 96.6172C129.597 96.7365 129.816 97.1937 130.096 97.4985C135.881 103.681 141.68 109.843 147.432 116.059C148.064 116.741 148.43 117.682 148.782 118.603C148.151 118.384 147.652 118.066 147.047 117.636C146.761 117.437 146.581 117.344 146.395 117.258C146.395 117.258 146.428 117.258 146.395 117.139C146.209 116.933 146.056 116.847 145.903 116.761C145.903 116.761 145.929 116.761 145.903 116.642C145.717 116.436 145.564 116.35 145.411 116.264C145.411 116.264 145.437 116.264 145.411 116.145C145.225 115.939 145.072 115.853 144.919 115.767C144.919 115.767 144.952 115.767 144.892 115.621C144.2 115.078 143.562 114.68 142.924 114.289C142.924 114.289 142.95 114.289 142.983 114.124C140.995 111.997 138.967 110.029 136.945 108.061C136.347 107.531 135.748 107.001 135.003 106.258C134.638 105.834 134.425 105.629 134.205 105.417C132.017 103.502 129.823 101.587 127.682 99.4135C126.485 97.9094 125.241 96.6636 123.997 95.4179C123.997 95.4179 124.017 95.4113 123.978 95.292C123.791 95.0866 123.645 95.0071 123.499 94.9209C123.499 94.9209 123.519 94.9143 123.472 94.8017C123.286 94.6029 123.146 94.5101 123 94.424C123 94.424 123.02 94.424 122.973 94.3047C122.787 94.1059 122.641 94.0131 122.501 93.927C122.501 93.927 122.521 93.927 122.475 93.8077C122.288 93.6089 122.149 93.5162 122.002 93.43C122.002 93.43 122.022 93.43 121.976 93.3107C121.79 93.112 121.65 93.0192 121.504 92.9331C121.504 92.9331 121.524 92.933 121.477 92.8138C121.291 92.615 121.151 92.5222 121.005 92.4361C121.005 92.4361 121.025 92.4361 120.978 92.3168C120.792 92.118 120.652 92.0253 120.506 91.9391C120.506 91.9391 120.526 91.9391 120.48 91.8198C120.293 91.6211 120.154 91.5283 120.007 91.4355C120.007 91.4355 120.027 91.4355 119.974 91.3229C119.781 91.1241 119.648 91.0313 119.509 90.9319C119.509 90.9319 119.529 90.9319 119.475 90.8259C119.283 90.6271 119.143 90.5277 119.01 90.435C119.01 90.435 119.037 90.435 118.977 90.3289C118.784 90.1301 118.644 90.0308 118.511 89.938C118.511 89.938 118.538 89.938 118.478 89.8121C118.119 89.4344 117.826 89.1892 117.534 88.9441C117.534 88.9441 117.547 88.9573 117.487 88.8513C117.294 88.6393 117.161 88.5398 117.035 88.4471C117.035 88.4471 117.048 88.4603 117.035 88.3411C117.022 88.2218 116.995 87.9899 117.002 87.9766C117.008 87.97 117.028 87.9567 117.028 87.9567V87.9435Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2888,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M173.82 142.822C178.349 147.235 182.891 151.827 187.399 156.452C190.512 159.653 193.564 162.919 196.576 166.319C196.244 166.975 195.971 167.465 195.705 167.962C193.205 165.292 190.724 162.588 188.184 159.957C186.821 158.546 185.318 157.274 183.928 155.889C180.696 152.682 177.411 149.508 174.332 146.155C173.733 145.499 173.973 144.081 173.82 142.822Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2893,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M217.178 185.84C216.786 186.986 216.394 188.126 215.848 189.292C213.488 186.25 211.26 183.202 209.085 180.121C208.334 179.054 207.715 177.888 207.19 176.569C207.39 176.311 207.476 176.225 207.463 176.205C207.389 176.099 207.29 176.013 207.197 175.92C207.197 175.92 207.177 175.933 207.163 175.933C208.001 175.887 208.853 175.841 209.91 175.788C209.557 175.178 209.152 174.462 208.733 173.588C209.491 173.992 210.442 174.423 211.007 175.151C212.543 177.153 214.046 179.207 215.316 181.387C216.068 182.679 216.367 184.236 217.025 185.767C217.192 185.853 217.185 185.853 217.185 185.853L217.178 185.84Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2898,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M108.223 83.5238C106.528 81.6552 104.965 79.8793 103.429 78.077C102.797 77.3415 102.212 76.5596 101.567 75.4265C101.547 74.638 101.567 74.2338 101.693 73.8959C101.899 73.9953 101.992 74.0151 102.079 74.0416C102.079 74.0416 102.079 74.0284 102.125 74.141C102.305 74.3531 102.438 74.4458 102.578 74.5386C102.578 74.5386 102.578 74.5253 102.624 74.6446C102.804 74.8567 102.943 74.9494 103.076 75.0422C103.076 75.0422 103.076 75.0223 103.136 75.1615C103.489 75.5458 103.781 75.791 104.074 76.0428C104.074 76.0428 104.074 76.0229 104.147 76.1753C104.832 76.7253 105.45 77.1295 106.069 77.527C106.069 77.527 106.069 77.5138 106.095 77.6463C106.268 77.8584 106.415 77.9379 106.561 78.024C106.561 78.024 106.561 78.0174 106.594 78.1433C106.767 78.3553 106.913 78.4415 107.066 78.521C107.066 78.521 107.066 78.5077 107.1 78.6336C107.273 78.8457 107.419 78.9318 107.565 79.0179C107.565 79.0179 107.565 79.0047 107.598 79.1306C107.771 79.3426 107.918 79.4288 108.064 79.5149C108.064 79.5149 108.064 79.5017 108.097 79.6342C108.27 79.8462 108.416 79.9324 108.563 80.0119C108.563 80.0119 108.563 79.9986 108.596 80.1311C108.769 80.3432 108.915 80.4227 109.061 80.5088C109.061 80.5088 109.061 80.5022 109.095 80.6281C109.268 80.8401 109.414 80.9197 109.56 81.0058C109.56 81.0058 109.56 80.9992 109.593 81.1317C109.773 81.3438 109.919 81.4233 110.066 81.5028C110.066 81.5028 110.059 81.4961 110.085 81.622C110.258 81.8341 110.405 81.9202 110.551 82.0064C110.551 82.0064 110.558 81.9997 110.591 82.1256C110.764 82.3311 110.91 82.4172 111.05 82.5033C111.05 82.5033 111.05 82.5033 111.083 82.6292C111.256 82.8413 111.402 82.9208 111.549 83.0069C111.549 83.0069 111.549 83.0003 111.582 83.1328C111.761 83.3449 111.908 83.4244 112.054 83.4973C112.054 83.4973 112.047 83.4907 112.081 83.6166C112.26 83.8286 112.406 83.9147 112.553 83.9942C112.553 83.9942 112.546 83.9876 112.579 84.1135C112.759 84.3256 112.905 84.4117 113.051 84.4912C113.051 84.4912 113.045 84.4846 113.078 84.6105C113.258 84.8225 113.397 84.9087 113.544 84.9948C113.544 84.9948 113.55 84.9882 113.583 85.1075C113.756 85.3195 113.903 85.4056 114.049 85.4918C114.049 85.4918 114.049 85.4785 114.082 85.6044C114.262 85.8165 114.401 85.9026 114.548 85.9887C114.548 85.9887 114.548 85.9755 114.561 86.1478C115.066 86.7044 115.559 87.0887 116.051 87.473C116.051 87.473 116.037 87.4598 116.057 87.6254C116.403 88.0164 116.729 88.2483 117.048 88.4736C117.048 88.4736 117.041 88.4603 117.088 88.573C117.274 88.7784 117.414 88.8778 117.547 88.9706C117.547 88.9706 117.54 88.9639 117.534 89.1097C117.567 89.4543 117.6 89.6531 117.633 89.8518C116.137 89.335 114.435 89.1163 113.204 88.235C111.415 86.9495 109.966 85.187 108.23 83.5503L108.223 83.5238Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2903,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M156.915 127.939C158.997 127.191 159.974 129 161.151 130.113C164.623 133.386 167.941 136.825 171.286 140.49C171.12 140.894 170.98 141.006 170.841 141.119C166.225 136.772 161.617 132.419 156.915 127.939Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2908,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M195.792 168.108C195.978 167.472 196.244 166.981 196.656 166.471C199.729 169.34 202.661 172.229 205.66 175.264C205.135 175.86 204.55 176.304 203.752 176.907C201.138 174.038 198.512 171.143 195.798 168.108H195.792Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2913,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M171.965 151.575C168.433 148.719 165.048 145.85 161.664 142.981C161.936 142.67 162.209 142.358 162.482 142.047C165.767 145.095 169.052 148.143 172.364 151.363C172.297 151.542 172.204 151.549 171.965 151.575Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2918,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M220.57 179.849C222.272 182.56 223.975 185.276 225.591 188.205C225.385 188.563 225.272 188.702 225.152 188.835C223.27 186.072 221.388 183.308 219.38 180.433C218.901 179.637 218.535 178.955 218.183 178.074C218.196 177.868 218.289 177.789 218.289 177.789C218.482 177.815 218.681 177.848 219.027 177.881C219.173 177.881 219.16 177.881 219.213 178.007C219.4 178.246 219.526 178.372 219.672 178.637C219.985 179.134 220.277 179.492 220.57 179.843V179.849Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2923,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M225.172 189.014C225.272 188.702 225.385 188.563 225.637 188.384C227.393 191.691 229.022 195.037 230.638 198.582C228.816 195.58 227.001 192.386 225.172 189.014Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2928,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M147.16 117.748C147.658 118.066 148.157 118.384 148.782 118.795C149.288 119.299 149.667 119.71 150.265 120.333C150.95 120.783 151.416 121.022 151.881 121.26C151.881 121.26 151.888 121.247 151.915 121.38C152.087 121.592 152.234 121.671 152.38 121.751C152.38 121.751 152.4 121.737 152.42 121.876C152.586 122.089 152.732 122.168 152.879 122.248C152.879 122.248 152.899 122.234 152.919 122.373C153.085 122.585 153.231 122.665 153.378 122.745C153.378 122.745 153.397 122.745 153.384 122.917C153.71 123.811 154.049 124.52 154.388 125.236C151.782 122.857 149.168 120.478 146.674 117.934C146.907 117.762 147.027 117.755 147.153 117.755L147.16 117.748Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2933,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M21.5064 46.6554C21.1672 43.5079 21.0143 40.3671 20.8613 36.9943C21.1872 37.4714 21.6527 38.1539 21.8123 38.896C22.0317 39.9032 22.0184 40.9634 22.2379 42.3351C22.3842 43.9916 22.3975 45.3102 22.4108 46.6289C22.1714 46.6421 21.932 46.6487 21.513 46.6554H21.5064Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2938,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M136.912 108.246C138.96 110.022 140.982 111.99 142.97 114.13C140.915 112.348 138.9 110.393 136.912 108.246Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2943,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M189.281 176.689C187.825 175.496 186.362 174.118 184.832 172.587C187.765 172.474 188.357 173.011 189.281 176.689Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2948,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M123.978 95.5835C125.234 96.6504 126.471 97.8961 127.615 99.2479C126.332 98.1545 125.148 96.9618 123.978 95.5835Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2953,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M154.402 125.223C154.056 124.52 153.717 123.805 153.384 122.923C154.9 123.553 156.596 124.196 156.284 126.521C155.938 126.687 155.825 126.694 155.712 126.707C155.612 126.687 155.532 126.634 155.406 126.323C155.193 125.965 155.04 125.839 154.887 125.706C154.887 125.706 154.907 125.706 154.867 125.587C154.681 125.382 154.535 125.296 154.388 125.209C154.388 125.209 154.408 125.209 154.402 125.216V125.223Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2958,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M193.604 180.903C192.606 180.201 191.662 179.319 190.631 178.306C191.243 178.06 191.941 177.948 192.779 177.809C193.098 178.856 193.378 179.79 193.604 180.903Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2963,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M21.8655 35.3643C21.8389 35.1853 21.7857 35.0329 21.7591 34.9534C21.9918 34.8342 22.2445 34.7944 22.6901 34.7215C24.08 34.7281 25.2836 34.7613 26.6602 34.9402C26.8331 35.3046 26.8331 35.5233 26.8331 35.742C25.1839 35.6757 23.5346 35.6028 21.8655 35.3576L21.8655 35.3643Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2968,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M22.5571 46.6487C22.3908 45.3102 22.3775 43.9982 22.3642 42.4543C22.5837 42.2357 22.7965 42.229 23.1755 42.2357C23.3351 43.5609 23.3351 44.8795 23.3285 46.4168C23.1157 46.6421 22.9095 46.6554 22.5504 46.6421L22.5571 46.6487Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2973,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M27.0592 35.7552C26.8331 35.5365 26.8397 35.3179 26.8331 34.9335C28.3161 35.0064 29.799 35.245 31.2886 35.4769C31.2886 35.5697 31.2886 35.6624 31.2886 35.7552C29.952 35.7552 28.6153 35.7552 27.0592 35.7552Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2978,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M142.977 114.448C143.555 114.687 144.194 115.078 144.885 115.635C144.307 115.396 143.668 115.005 142.977 114.448Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2983,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M53.7526 43.2164C53.1608 43.1368 52.5756 43.0639 51.9837 42.9844C52.0303 42.7856 52.0768 42.5935 52.1167 42.4013C52.6022 42.5869 53.0876 42.7724 53.6595 43.0838C53.7526 43.2164 53.7526 43.2164 53.7526 43.2164Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2988,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M170.914 141.258C170.98 141.006 171.12 140.894 171.313 140.655C171.612 140.695 171.851 140.867 172.23 141.106C171.905 141.252 171.446 141.325 170.92 141.258H170.914Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2993,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M230.638 198.926C230.951 199.158 231.277 199.549 231.616 200.106C231.303 199.874 230.977 199.483 230.638 198.926Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 2998,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M134.232 105.51C134.418 105.609 134.631 105.821 134.87 106.146C134.684 106.046 134.471 105.834 134.232 105.51Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3003,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M117.773 89.8717C117.593 89.6265 117.56 89.4278 117.52 89.0766C117.813 89.176 118.112 89.4278 118.465 89.8121C118.318 89.938 118.119 89.9314 117.766 89.8717L117.773 89.8717Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3008,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.242 181.705C194.056 181.678 193.843 181.493 193.584 181.175C193.763 181.208 193.99 181.38 194.242 181.705Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3013,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.622 200.424C231.702 200.543 231.775 200.828 231.742 201.186C231.629 201.04 231.622 200.815 231.622 200.424Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3018,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M190.053 177.491C189.82 177.484 189.607 177.312 189.341 177.02C189.554 177.04 189.813 177.186 190.053 177.491Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3023,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M120.021 91.5614C120.147 91.5084 120.287 91.6012 120.473 91.8132C120.353 91.8596 120.194 91.7801 120.021 91.5614Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3028,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M119.03 90.5609C119.15 90.5145 119.283 90.6139 119.475 90.8259C119.369 90.859 119.209 90.7795 119.03 90.5609Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3033,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M119.522 91.0578C119.642 91.0114 119.781 91.1042 119.967 91.3162C119.854 91.356 119.695 91.2765 119.522 91.0578Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3038,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M121.012 92.5554C121.138 92.5023 121.284 92.5885 121.47 92.8005C121.351 92.8469 121.191 92.774 121.012 92.5554Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3043,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M121.51 93.059C121.637 93.0059 121.783 93.0921 121.969 93.3041C121.849 93.3505 121.69 93.2776 121.51 93.059Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3048,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M120.519 92.0584C120.646 92.0054 120.785 92.0981 120.972 92.3036C120.852 92.3499 120.692 92.2704 120.519 92.0584Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3053,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M53.7526 43.2097C53.8125 43.276 53.8723 43.3489 53.9322 43.4218C53.8923 43.3953 53.8457 43.3754 53.7792 43.2826C53.7526 43.2164 53.7526 43.2097 53.7526 43.2097Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3058,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M155.811 126.813C155.818 126.694 155.938 126.687 156.217 126.661C156.39 126.753 156.39 126.859 156.383 127.124C156.224 127.164 156.071 127.045 155.811 126.813Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3063,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M154.934 125.846C155.033 125.839 155.186 125.972 155.366 126.256C155.26 126.27 155.12 126.124 154.934 125.846Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3068,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M154.422 125.342C154.528 125.302 154.674 125.388 154.861 125.6C154.754 125.64 154.608 125.554 154.422 125.342Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3073,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M118.531 90.0639C118.651 90.0175 118.784 90.1169 118.977 90.3289C118.87 90.3621 118.711 90.2826 118.531 90.0639Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3078,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M145.391 116.423C145.557 116.35 145.71 116.436 145.903 116.655C145.75 116.721 145.564 116.655 145.391 116.423Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3083,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M122.009 93.5493C122.142 93.4963 122.282 93.5824 122.468 93.7945C122.348 93.8408 122.189 93.768 122.009 93.5493Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3088,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M144.885 115.933C145.058 115.853 145.211 115.939 145.397 116.158C145.244 116.224 145.052 116.158 144.885 115.933Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3093,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M147.053 117.636C147.04 117.755 146.914 117.755 146.614 117.781C146.388 117.715 146.342 117.622 146.348 117.397C146.588 117.344 146.767 117.437 147.053 117.636Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3098,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M145.896 116.92C146.056 116.847 146.209 116.933 146.395 117.152C146.249 117.212 146.069 117.145 145.896 116.92Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3103,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M123.007 94.5432C123.133 94.4902 123.279 94.5764 123.459 94.7884C123.339 94.8348 123.18 94.7553 123.007 94.5432Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M123.505 95.0468C123.638 94.9872 123.791 95.0733 123.971 95.2854C123.845 95.3384 123.678 95.2655 123.505 95.0468Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3113,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M122.508 94.0529C122.641 93.9999 122.78 94.086 122.967 94.2981C122.847 94.3444 122.687 94.2715 122.508 94.0529Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3118,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.17 176.059C207.283 176.013 207.383 176.099 207.463 176.205C207.476 176.225 207.389 176.311 207.263 176.43C207.163 176.397 207.157 176.298 207.177 176.059H207.17Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3123,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.261 178.345C205.321 178.445 205.381 178.544 205.441 178.643C205.381 178.624 205.321 178.604 205.242 178.484C205.222 178.385 205.261 178.345 205.261 178.345Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3128,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M200.713 182.792C200.713 182.792 200.62 182.719 200.56 182.652C200.6 182.679 200.646 182.699 200.713 182.792Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3133,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M190.558 177.974C190.379 178.087 190.246 178.001 190.093 177.749C190.219 177.703 190.392 177.762 190.558 177.974Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M204.703 177.921C204.643 177.822 204.59 177.729 204.53 177.63C204.583 177.65 204.643 177.676 204.716 177.795C204.729 177.888 204.703 177.921 204.703 177.921Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3143,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.208 178.405C205.029 178.378 204.896 178.286 204.756 178.034C204.71 177.921 204.736 177.895 204.756 177.875C204.942 177.895 205.075 177.981 205.222 178.239C205.275 178.352 205.235 178.392 205.222 178.405H205.208Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3148,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M76.6688 123.215C76.9814 122.97 77.4469 122.44 77.5799 122.513C78.6505 123.109 79.8276 123.659 80.6522 124.527C83.5716 127.608 86.2582 130.915 89.2508 133.916C90.8534 135.527 93.0879 136.507 94.7238 138.091C97.8693 141.126 100.702 144.485 103.841 147.533C107.824 151.396 112.047 155.014 116.044 158.864C120.812 163.456 125.361 168.28 130.195 172.793C132.49 174.933 133.84 177.491 135.289 180.168C136.387 182.189 138.481 183.666 140.131 185.389C140.024 185.594 139.918 185.806 139.818 186.012C138.787 185.462 137.597 185.091 136.766 184.335C134.451 182.222 132.323 179.909 130.049 177.756C129.431 177.172 128.559 176.861 127.615 176.444C126.119 175.35 124.769 174.283 123.512 173.117C121.643 171.381 119.841 169.579 118.112 167.564C117.866 166.683 117.627 165.941 117.148 165.424C115.153 163.297 113.085 161.236 110.997 159.017C110.804 158.758 110.657 158.632 110.524 158.513C110.538 158.513 110.531 158.546 110.524 158.4C110.199 158.168 109.879 158.082 109.454 157.956C109.241 157.691 109.141 157.479 109.015 157.102C108.835 156.81 108.682 156.671 108.543 156.532C108.556 156.532 108.543 156.552 108.503 156.426C108.317 156.214 108.17 156.121 108.044 156.035C108.057 156.035 108.044 156.055 108.011 155.929C107.824 155.717 107.678 155.624 107.545 155.538C107.558 155.538 107.552 155.558 107.512 155.432C107.326 155.22 107.186 155.134 107.046 155.041C107.053 155.041 107.046 155.054 107.013 154.928C106.834 154.716 106.687 154.637 106.548 154.544C106.554 154.544 106.548 154.557 106.514 154.425C106.335 154.213 106.189 154.133 106.049 154.047C106.056 154.047 106.049 154.06 106.042 153.894C105.703 153.504 105.377 153.285 105.051 153.053C105.058 153.046 105.051 153.066 105.025 152.934C104.845 152.722 104.699 152.642 104.559 152.556C104.566 152.556 104.559 152.569 104.493 152.417C104.22 152.198 104.014 152.132 103.748 152.046C103.688 152.033 103.568 151.827 103.555 151.661C103.382 151.357 103.223 151.217 103.07 151.072C103.076 151.072 103.07 151.085 103.036 150.952C102.857 150.74 102.711 150.661 102.571 150.575C102.578 150.575 102.571 150.588 102.544 150.455C102.365 150.243 102.218 150.164 102.079 150.078C102.085 150.078 102.079 150.091 102.046 149.958C101.866 149.746 101.72 149.66 101.58 149.574C101.587 149.574 101.58 149.587 101.547 149.462C101.361 149.249 101.214 149.163 101.081 149.077C101.095 149.077 101.081 149.097 101.095 148.912C100.23 145.704 98.6739 144.326 96.5526 144.472C96.4129 143.452 96.4861 142.332 95.9541 141.795C92.7022 138.488 89.3705 135.255 85.9457 132.127C84.6822 130.974 83.0861 130.179 81.6431 129.218C81.6431 129.218 81.6497 129.205 81.6032 129.092C81.4569 128.834 81.3172 128.748 81.1443 128.715C81.1443 128.715 81.1443 128.702 81.1443 128.556C80.9714 128.178 80.8118 127.953 80.6456 127.721C80.6456 127.721 80.6522 127.708 80.599 127.595C80.4527 127.343 80.3197 127.257 80.1468 127.224C80.1468 127.224 80.1468 127.211 80.067 127.085C79.7079 126.879 79.422 126.8 79.1426 126.727C79.1426 126.727 79.1559 126.714 79.1426 126.568C78.9697 126.19 78.8035 125.958 78.6372 125.726C78.6372 125.726 78.6505 125.72 78.5973 125.614C78.4444 125.369 78.3114 125.276 78.1451 125.236C78.1451 125.236 78.1584 125.223 78.0986 125.117C77.9456 124.865 77.8126 124.779 77.6464 124.739C77.6464 124.739 77.653 124.726 77.5998 124.62C77.4469 124.368 77.3139 124.282 77.1476 124.242C77.1476 124.242 77.1609 124.229 77.1011 124.123C76.9481 123.878 76.8151 123.785 76.6489 123.738C76.6489 123.738 76.6622 123.738 76.6622 123.613C76.6622 123.401 76.6622 123.314 76.6622 123.228L76.6688 123.215Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3153,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M103.575 151.814C103.575 151.814 103.695 152.019 103.848 152.165C104.194 152.39 104.38 152.476 104.566 152.563C104.566 152.563 104.573 152.543 104.586 152.689C104.752 152.907 104.905 152.987 105.065 153.066C105.065 153.066 105.065 153.046 105.065 153.219C105.397 153.61 105.723 153.841 106.056 154.067C106.056 154.067 106.069 154.054 106.082 154.186C106.248 154.398 106.401 154.484 106.554 154.564C106.554 154.564 106.561 154.55 106.581 154.683C106.754 154.902 106.9 154.981 107.053 155.061C107.053 155.061 107.06 155.041 107.086 155.173C107.259 155.392 107.406 155.478 107.558 155.558C107.558 155.558 107.558 155.531 107.592 155.664C107.765 155.882 107.911 155.969 108.057 156.055C108.057 156.055 108.057 156.035 108.084 156.161C108.257 156.379 108.403 156.465 108.549 156.552C108.549 156.552 108.549 156.532 108.583 156.678C108.755 156.969 108.902 157.115 109.048 157.254C109.148 157.473 109.248 157.685 109.58 158.023C110.059 158.274 110.298 158.407 110.544 158.546C110.544 158.546 110.551 158.52 110.591 158.646C110.77 158.904 110.91 159.03 111.05 159.156C113.091 161.236 115.16 163.297 117.155 165.424C117.64 165.941 117.873 166.683 118.072 167.399C116.702 166.372 115.485 165.272 114.122 164.086C109.407 159.507 104.832 155.014 100.17 150.21C99.9175 149.462 99.7513 149.024 99.7446 148.534C100.29 148.686 100.676 148.892 101.061 149.097C101.061 149.097 101.075 149.077 101.101 149.203C101.274 149.415 101.42 149.501 101.567 149.594C101.567 149.594 101.567 149.574 101.593 149.707C101.766 149.925 101.913 150.005 102.059 150.091C102.059 150.091 102.065 150.071 102.085 150.21C102.252 150.429 102.405 150.508 102.558 150.588C102.558 150.588 102.571 150.575 102.584 150.707C102.75 150.926 102.903 151.005 103.056 151.085C103.056 151.085 103.07 151.072 103.09 151.231C103.263 151.536 103.409 151.681 103.562 151.834L103.575 151.814Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3158,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M154.209 215.452C154.841 215.717 155.366 216.095 155.891 216.466C155.712 216.672 155.532 216.877 155.359 217.082C154.94 216.572 154.521 216.069 154.215 215.452H154.209Z",
                fill: "#10273C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3163,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M120.519 174.906C120.579 174.973 120.639 175.045 120.699 175.118C120.659 175.092 120.613 175.072 120.546 174.979C120.519 174.913 120.519 174.906 120.526 174.906H120.519Z",
                fill: "#10304B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3168,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.2624 211.655C95.3356 211.152 95.8011 210.642 95.8011 210.131C95.8011 209.316 95.6681 208.395 95.2425 207.746C95.0696 207.481 93.8393 207.607 93.3339 207.932C91.3189 209.217 89.4037 210.648 87.3023 212.113C86.9897 211.39 86.8235 210.582 86.6639 209.813C84.0504 210.854 81.7761 211.755 79.3621 212.497C82.7071 209.634 86.1851 206.931 89.8426 204.214C90.5675 203.711 91.1261 203.22 91.8111 202.617C88.1535 199.953 85.3605 202.524 82.2349 203.214C82.9731 202.299 83.7113 201.385 84.4361 200.49C83.4453 199.172 82.5342 197.966 81.6431 196.627C81.663 196.329 81.6697 196.157 81.6763 195.991C81.7428 195.925 81.8093 195.858 82.1086 195.713C82.4677 195.567 82.5475 195.454 82.5674 195.309C83.3056 194.659 84.0371 194.016 84.9349 193.327C86.7969 194.48 89.0845 195.037 89.6298 197.542C89.6897 197.833 90.6539 198.125 91.166 198.078C92.5559 197.946 93.9258 197.634 95.7878 197.31C95.4686 198.893 95.2225 200.119 94.8767 201.809C96.7321 202.935 98.8535 204.234 101.627 205.917C99.3988 207.978 97.4237 209.807 95.2757 211.642L95.2624 211.655Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3173,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M39.302 217.149C39.8273 216.718 40.3527 216.294 40.9047 215.843C41.1374 216.161 41.3702 216.473 41.7226 216.956C42.3012 215.976 42.8332 215.081 43.5314 213.902C43.711 214.644 43.8373 215.181 43.8839 215.379C44.8415 214.664 45.8457 213.915 47.056 213.166C47.2887 213.392 47.3286 213.617 47.189 214.114C46.7567 215.108 46.4974 215.823 46.1183 216.572C45.9122 216.612 45.8324 216.632 45.6063 216.665C45.2405 216.831 45.0078 216.976 44.6686 217.155C44.5556 217.182 44.3295 217.215 44.1765 217.202C43.7775 217.334 43.5314 217.473 43.2787 217.626C43.2721 217.632 43.2521 217.632 43.0526 217.639C41.5231 217.977 40.1798 218.315 38.7035 218.653C38.1382 219.302 37.7193 219.945 37.2937 220.581C35.2853 220.601 33.277 220.621 31.0559 220.429C31.1689 218.361 31.4881 216.512 31.9204 214.591C31.9669 214.24 31.9004 213.961 31.8339 213.537C31.9802 213.16 32.1199 212.921 32.2596 212.689C33.1507 210.794 34.0684 208.919 34.9196 207.01C35.3518 206.05 35.4715 205.029 37.0875 205.248C37.7858 205.341 38.6303 204.327 39.4084 203.817C39.2222 203.631 39.036 203.445 38.8498 203.26C39.9138 203.505 40.9778 203.757 41.9953 203.989C41.0842 208.283 40.1865 212.504 39.2222 216.963C39.2022 217.188 39.2421 217.168 39.282 217.149H39.302ZM36.9412 206.626C36.9944 206.699 37.0476 206.779 37.1075 206.851C37.0942 206.745 37.0875 206.639 36.9412 206.626Z",
                fill: "#E8423E"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3178,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M46.2447 216.552C46.504 215.83 46.7567 215.108 47.1424 214.286C48.2929 214.048 49.3968 214.127 50.3145 213.743C60.9813 209.296 71.1692 203.976 80.5126 196.839C80.7054 196.826 80.7586 196.886 80.7054 197.038C80.1402 197.866 79.6348 198.549 78.9764 199.297C76.4161 202.67 72.1202 203.545 69.5466 206.997C67.8109 209.323 64.1135 210.191 61.1874 211.576C60.15 211.662 59.1924 211.814 58.2946 212.133C54.2647 213.577 50.2613 215.068 46.2447 216.546V216.552Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3183,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M55.7211 192.307C55.9538 191.373 55.9272 190.233 56.4659 189.537C59.3653 185.813 62.411 182.202 65.5698 178.63C65.9156 178.942 66.1018 179.174 66.2814 179.565C66.2614 179.949 66.2415 180.168 66.042 180.406C65.1509 181.917 64.446 183.414 63.7411 184.905C63.7411 184.905 63.7277 184.866 63.628 184.925C63.4152 185.223 63.2955 185.455 63.1824 185.694C63.0827 185.859 62.9896 186.025 62.5906 186.29C60.1035 188.358 57.9089 190.332 55.7211 192.307Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3188,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M55.5481 192.333C57.9089 190.332 60.1035 188.358 62.4576 186.35C59.2921 191.293 55.9605 196.276 52.4891 201.365C52.815 200.033 53.2805 198.595 53.8191 196.939C53.8391 196.74 53.7925 196.753 53.746 196.773C54.2913 195.302 54.8366 193.831 55.5481 192.333Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3193,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M69.6729 174.23C71.4019 171.215 72.998 170.818 75.0994 172.965C73.377 174.959 71.4817 176.914 69.4136 178.703C69.3803 177.106 69.5266 175.668 69.6729 174.23Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3198,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M69.5133 174.277C69.52 175.668 69.3737 177.106 69.2407 178.736C69.254 178.928 69.234 178.928 69.1542 178.948C69.0744 178.968 68.9547 179.147 68.9547 179.147L69.0877 179.339C68.4094 180.134 67.7311 180.93 66.7801 181.698C66.4144 181.248 66.3213 180.817 66.2282 180.386C66.2415 180.168 66.2548 179.949 66.421 179.425C66.6139 178.458 66.6538 177.795 66.6937 177.126C67.3188 176.318 67.9439 175.509 68.6355 174.555C68.9215 174.383 69.1343 174.35 69.5067 174.27L69.5133 174.277Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3203,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M66.042 180.406C66.3213 180.824 66.4144 181.254 66.6405 181.778C65.8757 182.858 64.9713 183.838 63.9073 184.866C64.446 183.408 65.1509 181.917 66.042 180.406Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3208,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M50.4608 204.738C50.8332 203.803 51.3519 202.796 52.0502 201.769C51.6844 202.717 51.1524 203.691 50.4608 204.738Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3213,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M81.53 196.011C81.6564 196.17 81.6497 196.342 81.4835 196.64C81.1377 196.813 80.9515 196.852 80.7653 196.886C80.7653 196.886 80.7054 196.826 80.6788 196.793C80.8983 196.514 81.151 196.269 81.53 196.011Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3218,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M63.3154 185.647C63.3021 185.455 63.4152 185.223 63.6479 184.919C63.6613 185.104 63.5482 185.349 63.3154 185.647Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3223,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M82.4477 195.322C82.5342 195.468 82.4544 195.574 82.2216 195.66C82.1152 195.507 82.1884 195.388 82.4477 195.322Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3228,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M69.1476 179.24C69.0944 179.339 68.9614 179.147 68.9614 179.147C68.9614 179.147 69.0811 178.968 69.1609 178.935C69.2407 178.902 69.2074 179.134 69.1476 179.233V179.24Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3233,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.8227 89.4212C99.033 90.2229 100.25 90.965 101.248 91.9325C109.394 99.8243 117.527 107.736 125.6 115.707C127.176 117.258 128.486 119.08 129.816 121.048C128.699 122.261 127.722 123.248 126.651 124.129C124.809 125.653 122.913 127.118 121.018 128.436C120.473 126.985 119.954 125.713 119.396 124.348C118.99 124.593 118.511 124.878 117.966 125.024C118.052 124.262 118.411 123.606 118.305 123.043C117.926 121.022 117.64 118.895 116.736 117.099C116.47 116.575 114.268 117.019 112.805 117.019C112.885 116.728 113.111 115.979 113.304 115.23C113.756 113.494 112.067 110.592 110.292 109.24C108.27 107.696 107.226 109.035 105.896 110.261C105.776 110.267 105.53 110.281 105.497 110.108C105.444 109.591 105.417 109.247 105.444 108.763C105.524 108.531 105.557 108.438 105.73 108.26C106.933 107.146 108.024 106.139 109.035 105.066C110.77 103.224 110.192 101.077 107.705 100.407C106.428 100.063 105.058 100.036 103.735 99.8641C103.384 96.6217 102.331 94.2207 100.576 92.6614C99.5451 91.7403 98.5409 90.7928 97.5301 89.8585C97.5301 89.6995 97.5833 89.5669 97.8028 89.4212H97.8227Z",
                fill: "#371E2D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3238,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.4177 81.4166C69.2872 88.6525 76.1568 95.895 83.146 103.396C83.3654 103.886 83.4652 104.112 83.3987 104.317C82.3546 103.661 81.4702 103.018 80.313 102.177C79.7012 103.157 79.1825 103.999 78.6572 104.834C78.6572 104.834 78.6572 104.834 78.5308 104.92C78.3047 105.96 78.205 106.908 77.9589 107.789C76.2698 106.258 74.7336 104.794 73.1775 103.164C72.1734 101.945 71.1958 100.898 70.2049 99.6719C69.5333 98.625 68.8683 97.7503 68.1301 96.7365C67.4451 96.0209 66.8333 95.451 66.2016 94.7288C66.441 93.3969 67.219 92.0054 66.84 91.0711C65.9688 88.8844 64.4593 86.9628 63.3819 84.849C62.8566 83.8087 62.7236 82.5696 62.411 81.4166H62.4177Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3243,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M70.2182 99.8508C71.2024 100.898 72.18 101.951 73.0113 103.157C71.801 103.157 70.7436 103.005 69.5266 102.846C69.1476 102.846 68.9281 102.846 68.7087 102.846C68.7087 102.846 68.702 102.846 68.6688 102.72C68.4959 102.515 68.3562 102.435 68.2099 102.349C68.2099 102.349 68.2033 102.342 68.1634 102.216C67.9905 102.018 67.8508 101.931 67.7112 101.852C67.7112 101.852 67.7045 101.845 67.6713 101.719C67.4984 101.521 67.3587 101.435 67.2191 101.355C67.2191 101.355 67.2057 101.342 67.1725 101.222C66.9996 101.024 66.8599 100.938 66.7203 100.858C66.7203 100.858 66.7136 100.851 66.7136 100.673C66.0619 99.228 65.4036 97.9624 64.8583 96.7696C65.0511 96.8558 65.1309 96.8757 65.2506 96.9949C65.3969 97.0811 65.4967 97.0612 65.6031 97.0479C65.4834 96.9817 65.3703 96.9221 65.2307 96.7166C65.0511 96.5046 64.8915 96.4317 64.7253 96.3787C64.7253 96.392 64.7452 96.3787 64.7519 96.2462C64.6322 95.9811 64.4992 95.8618 64.3396 95.5703C63.3686 94.3312 62.4243 93.2644 61.4135 92.0385C60.6488 91.2301 59.9505 90.5741 59.2456 89.9247C59.2389 89.9247 59.2522 89.9247 59.2456 89.7723C59.0727 89.5537 58.9064 89.4874 58.7402 89.4278C58.7402 89.441 58.7535 89.4278 58.8067 89.2687C58.4808 88.8911 58.1084 88.6657 57.6097 88.4471C57.3902 88.4471 57.3038 88.4471 57.2306 88.4471C57.2439 88.4405 57.2373 88.467 57.1841 88.3543C56.9912 88.1423 56.8582 88.0495 56.7319 87.9634C56.7385 87.97 56.7186 87.9899 56.7319 87.8242C56.6055 86.2008 56.0004 85.1472 54.677 84.3057C53.7593 83.7226 53.5066 82.563 54.258 81.4895C54.258 81.4895 54.258 81.4895 54.4309 81.4564C55.342 79.6739 54.3578 77.9644 51.731 76.4006C51.5781 76.1488 51.445 76.0494 51.2721 76.0096L51.2788 76.003C51.1259 75.3006 50.9795 74.6049 50.9995 73.7236C52.0236 73.3856 52.8815 73.2266 53.7393 73.0676C53.9322 73.2929 54.1317 73.5248 54.3245 73.7501C54.4575 73.6904 54.5905 73.6374 54.7235 73.5778C54.2647 72.3188 53.7992 71.0532 53.327 69.6087C55.1159 71.8749 56.9513 74.3067 58.7069 76.7981C59.4384 77.8318 60.0037 78.9848 60.6754 80.4094C60.1567 80.5486 59.4118 80.5354 59.0926 80.1643C56.9713 77.6529 57.0045 77.6264 55.229 78.0306C57.3437 81.1251 59.352 84.1533 62.7236 86.1146C62.7369 86.499 62.7435 86.7176 62.6305 87.0026C62.1849 87.7381 61.4135 88.7121 61.6197 89.0103C63.0361 91.0446 64.6654 92.9397 66.2215 94.8812C66.8334 95.451 67.4518 96.0209 68.1368 96.9154C68.8749 98.1081 69.5466 98.9762 70.2182 99.8508ZM56.2065 82.6889C56.0536 82.5299 55.9073 82.3708 55.7543 82.2118C55.6679 82.3178 55.5748 82.4172 55.4883 82.5232C55.741 82.669 55.9937 82.8214 56.2531 83.3051C56.4459 83.6099 56.6321 83.9147 56.825 84.2195C56.9247 84.1069 57.1309 83.9081 57.1176 83.8949C56.8383 83.5768 56.539 83.2786 56.2132 82.6889H56.2065Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3248,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.3905 89.9115C98.5675 90.7994 99.5717 91.7469 100.596 92.668C102.347 94.2318 103.4 96.6327 103.755 99.8707C105.085 100.036 106.448 100.07 107.725 100.414C110.205 101.083 110.79 103.23 109.055 105.072C108.044 106.146 106.947 107.153 105.736 108.048C106.042 103.628 103.03 102.667 99.4586 102.197C100.064 101.262 100.43 100.679 100.702 100.262C98.7404 97.0811 96.7122 94.2914 92.6357 94.4372C94.1652 92.9463 95.7014 91.4554 97.3905 89.9115Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3253,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M88.107 98.8437C88.353 98.5654 88.5924 98.2937 88.9914 98.0816C89.1643 98.234 89.1776 98.3202 89.1643 98.5919C89.417 99.3009 89.5633 100.103 89.9889 100.301C91.8443 101.15 92.5559 102.521 92.8684 104.502C93.1411 106.232 94.0521 107.869 94.7238 109.664C95.6748 108.949 96.373 108.425 97.3439 107.696C98.501 109.671 99.5584 111.48 100.536 113.435C99.472 114.488 98.4944 115.403 97.3506 116.297C96.8718 116.218 96.5526 116.158 96.1802 115.933C94.6839 114.422 93.2342 113.064 91.7579 111.705C91.7246 111.699 91.7113 111.632 91.6847 111.473C91.1327 110.824 90.6074 110.34 90.0953 109.837C90.102 109.823 90.0754 109.837 90.0488 109.717C89.9424 109.459 89.816 109.386 89.6165 109.36C89.5833 109.34 89.5633 109.267 89.55 109.101C89.3439 108.419 89.151 107.902 89.0646 107.239C89.8892 106.265 90.6074 105.43 91.0796 104.887C89.8027 103.403 88.6789 102.104 87.555 100.613C87.4686 100.182 87.3821 99.9436 87.3023 99.6984C87.3023 99.6984 87.3555 99.6123 87.5483 99.6057C87.8609 99.3473 87.9873 99.0888 88.107 98.837V98.8437Z",
                fill: "#E8423E"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3258,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M92.4761 94.4902C96.7055 94.2914 98.7404 97.0745 100.702 100.262C100.43 100.679 100.057 101.262 99.4586 102.197C103.036 102.674 106.049 103.628 105.59 108.127C105.57 108.438 105.537 108.531 105.297 108.737C103.874 107.557 102.797 106.093 101.4 105.052C100.662 104.496 99.0596 105.019 98.4146 104.43C97.7163 103.793 97.7496 102.402 97.3306 101.395C96.9449 100.467 96.3863 99.6189 95.7014 98.3533C94.2184 97.916 92.25 97.3395 90.2815 96.763C90.9598 96.0275 91.6448 95.2854 92.4761 94.4902Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3263,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M90.1552 96.816C92.25 97.3395 94.2184 97.916 95.708 98.3533C96.3996 99.6189 96.9582 100.474 97.3373 101.395C97.7562 102.402 97.7163 103.793 98.4212 104.43C99.0663 105.019 100.669 104.496 101.407 105.052C102.804 106.099 103.881 107.564 105.258 108.876C105.444 109.247 105.47 109.591 105.53 110.115C105.563 110.294 105.563 110.287 105.377 110.254C104.479 110.572 103.761 110.923 102.923 111.268C102.717 111.248 102.631 111.235 102.558 111.036C101.607 109.406 100.735 107.882 99.6116 106.576C99.3855 106.311 98.1885 106.967 97.4171 107.054C97.1045 107.087 96.5858 106.828 96.4329 106.557C95.728 105.298 94.9366 104.045 94.511 102.687C93.7994 100.427 91.698 98.5985 89.1976 98.4063C89.1843 98.3202 89.1643 98.234 89.1244 98.022C89.4037 97.5515 89.7163 97.2136 90.1618 96.8094L90.1552 96.816Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3268,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M66.2082 94.7288C64.6654 92.9397 63.0428 91.0446 61.6197 89.0103C61.4135 88.7121 62.1849 87.7381 62.7302 86.9297C62.8765 86.5056 62.7967 86.2273 62.7169 85.949C59.3453 84.1533 57.337 81.1185 55.2223 78.024C56.9979 77.6198 56.9646 77.6463 59.086 80.1576C59.4052 80.5353 60.15 80.5486 60.7286 80.5685C61.2473 80.648 61.7327 80.8932 62.3179 81.2775C62.7302 82.5696 62.8566 83.8087 63.3886 84.849C64.4659 86.9694 65.9755 88.891 66.8466 91.0711C67.219 92.0054 66.441 93.3903 66.2082 94.7288Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3273,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.156 99.7514C87.3821 99.9436 87.4686 100.182 87.4087 100.692C86.3912 101.547 85.5068 102.13 84.2832 102.939C86.3114 104.867 87.6348 106.126 88.9582 107.385C89.151 107.902 89.3439 108.419 89.3904 109.101C88.2732 108.597 87.3023 107.935 86.2582 107.146C86.0055 106.941 85.826 106.861 85.6531 106.795C85.6531 106.815 85.6863 106.808 85.6531 106.676C85.4669 106.457 85.3139 106.371 85.161 106.298C85.161 106.318 85.1942 106.311 85.161 106.179C84.9748 105.96 84.8218 105.874 84.6689 105.801C84.6689 105.821 84.7021 105.814 84.6689 105.682C84.4827 105.463 84.3297 105.377 84.1768 105.304C84.1768 105.324 84.21 105.317 84.1768 105.185C83.9906 104.933 83.8443 104.821 83.698 104.608C83.698 104.509 83.5982 104.337 83.5982 104.337C83.4984 104.112 83.3987 103.886 83.2723 103.542C84.5093 102.216 85.7728 101.01 87.1826 99.7514H87.156Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3278,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.9806 98.8834C87.9806 99.0955 87.8609 99.3539 87.5882 99.5858C87.575 99.3473 87.7146 99.1352 87.9806 98.8834Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3283,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M72.7054 106.311C72.7852 107.027 72.8716 107.736 72.9847 108.73C72.4394 108.445 72.0005 108.326 71.6945 108.048C69.9256 106.457 68.0104 104.98 66.4809 103.177C64.9514 101.375 63.7743 101.468 62.1051 103.449C63.5681 104.92 65.091 106.364 66.5008 107.915C66.8267 108.279 66.7535 109.002 66.7868 109.678C66.7136 109.797 66.707 109.803 66.707 109.803C65.5831 108.929 64.5125 107.975 63.3154 107.206C62.6438 106.775 61.7726 106.656 60.8084 106.245C60.5224 105.96 60.3961 105.867 60.2099 105.748C60.1367 105.655 60.0902 105.636 60.0503 105.609C60.1101 105.682 60.17 105.755 60.283 105.934C60.436 106.179 60.5623 106.272 60.7153 106.331C60.5956 106.729 60.4759 107.12 60.2963 107.663C60.2365 107.809 60.2365 107.809 60.2365 107.809C59.2855 107.279 58.3611 106.709 57.3902 106.225C56.6122 105.841 55.7876 105.556 54.8233 105.291C53.4135 104.31 51.9837 103.416 50.9463 102.197C47.0959 97.6774 43.1856 93.1915 39.6744 88.4206C37.2538 85.1273 35.4449 81.3769 33.5364 77.6596C34.7467 78.1367 35.9238 78.6469 36.775 79.4818C37.8656 80.5486 38.6303 81.9335 39.6478 83.0798C40.5323 84.087 41.583 84.9551 42.5339 85.9092C43.2189 86.5984 43.9371 87.2676 44.5024 88.0495C46.0252 90.1434 49.4035 89.1296 50.5872 91.7337C51.0992 91.2235 52.1433 90.5476 52.0436 90.2362C51.2921 87.8971 52.7751 87.9302 54.2846 87.9104C54.2713 87.917 54.2647 87.8971 54.3245 88.0164C54.544 88.2284 54.6969 88.3212 54.9895 88.4935C58.1483 92.0518 61.1276 95.557 64.1999 98.9894C64.8782 99.7448 65.8624 100.229 66.7136 100.838C66.7136 100.838 66.7136 100.838 66.7668 100.964C66.9065 101.229 67.0395 101.315 67.2124 101.335C67.2124 101.335 67.2124 101.342 67.2589 101.461C67.3986 101.726 67.5316 101.812 67.7112 101.832C67.7112 101.832 67.7112 101.832 67.7577 101.958C67.8974 102.223 68.0304 102.309 68.2099 102.329C68.2099 102.329 68.2099 102.329 68.2565 102.455C68.3961 102.72 68.5358 102.806 68.7087 102.826C68.7087 102.826 68.7087 102.826 68.7619 102.972C69.1143 103.35 69.4202 103.581 69.7195 103.827C69.7128 103.827 69.7195 103.813 69.766 103.933C69.9522 104.138 70.0852 104.231 70.2182 104.324C70.2116 104.324 70.2182 104.31 70.2781 104.463C71.1359 105.185 71.9273 105.748 72.7187 106.311C72.712 106.311 72.7253 106.298 72.7253 106.298L72.7054 106.311Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3288,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M54.2846 87.9236C52.7684 87.9501 51.2854 87.917 52.0369 90.2561C52.1367 90.5675 51.0926 91.2434 50.5805 91.7536C49.3968 89.1495 46.0119 90.1633 44.4957 88.0694C43.9305 87.2875 43.2122 86.6182 42.5273 85.9291C41.5763 84.9749 40.5256 84.1069 39.6411 83.0997C38.6303 81.9467 37.8589 80.5619 36.7683 79.5017C35.9171 78.6667 34.74 78.1565 33.5098 77.5005C33.1839 77.262 33.0576 77.0234 33.0044 76.5596C33.0842 75.8241 33.0842 75.3205 33.0908 74.8103C32.8315 74.8832 32.5655 74.9561 32.3061 75.0289C30.9761 72.7561 29.6062 70.5032 28.3294 68.1973C27.7641 67.1835 27.3717 66.0703 26.9062 65.0034C27.1988 64.8245 27.4848 64.639 27.7774 64.4601C30.3111 67.7335 32.8448 71.0002 35.6178 74.5784C35.3252 73.1073 35.0925 71.961 34.8597 70.808L35.4848 70.3906C37.8323 72.3387 40.1732 74.2802 42.5206 76.2283C42.7002 76.0693 42.8731 75.9169 43.0526 75.7578C42.4342 74.1808 41.8157 72.6104 41.1906 71.0333C41.43 70.8743 41.6694 70.7086 41.9088 70.5496C42.9994 71.749 43.9637 73.1007 45.2073 74.1013C46.2979 74.9826 47.7077 75.4795 49.317 76.0825C50.0219 76.0163 50.3877 76.0229 50.7534 76.0229C50.8399 76.0229 50.9263 76.0229 51.1458 76.0163C51.2788 76.0163 51.2655 76.0163 51.3187 76.1289C51.4783 76.3741 51.6113 76.4735 51.7775 76.5199C54.3511 77.971 55.3287 79.6806 54.4043 81.2974C53.8923 80.6811 53.5598 80.1974 52.8948 79.23C52.8349 80.8534 52.416 82.013 54.2514 81.4962C53.4999 82.5696 53.7526 83.7358 54.6703 84.3123C55.9937 85.1538 56.5989 86.2074 56.5523 87.8043C55.6479 87.3074 54.9164 86.6713 53.7992 85.6972C54.0319 86.7706 54.1583 87.3538 54.278 87.9302L54.2846 87.9236ZM52.6753 84.2195C52.5423 84.1334 52.4027 84.0406 52.2364 83.7822C52.1766 83.8087 52.1167 83.8352 52.0569 83.8683C52.1234 83.9015 52.1899 83.9412 52.3495 84.2063C52.4426 84.3587 52.5756 84.4448 52.8017 84.6436C52.8549 84.6701 52.9081 84.6966 52.9679 84.7231C52.9014 84.637 52.8349 84.5442 52.6886 84.2262L52.6753 84.2195ZM51.3586 79.0511C51.2987 79.0975 51.2123 79.1306 51.1857 79.1902C51.1657 79.2432 51.199 79.3625 51.2389 79.3758C51.4916 79.4619 51.7576 79.5282 52.017 79.6011C51.8839 79.4089 51.7443 79.2234 51.3586 79.0444V79.0511ZM50.6071 77.5535C50.4874 77.6662 50.3611 77.7722 50.2414 77.8849C50.5007 77.971 50.7601 78.0571 51.0128 78.1433C50.9596 77.9644 50.9064 77.7855 50.6071 77.5535ZM51.578 82.7419L51.4783 82.6889C51.4783 82.6889 51.4916 82.8082 51.578 82.7419Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3293,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.095 148.905C100.689 148.885 100.303 148.68 99.7579 148.521C99.5983 148.574 99.585 148.56 99.6116 148.408C99.4586 148.196 99.2858 148.143 99.0995 148.083C99.0995 148.083 99.0863 148.07 99.0995 147.911C98.9399 147.865 98.7537 147.977 98.5875 148.077C98.6008 148.07 98.6207 148.05 98.6207 148.05C97.4237 147.076 96.2267 146.102 95.023 144.916C95.0097 144.704 95.1095 144.591 95.2292 144.598C95.3489 144.604 95.5949 144.598 95.6016 144.598C95.6083 144.598 95.6016 144.604 95.6548 144.75C95.9341 144.797 96.1469 144.697 96.393 144.611C96.4196 144.631 96.4794 144.624 96.4794 144.624C98.6673 144.313 100.223 145.685 101.088 148.892L101.095 148.905ZM97.1378 145.638C97.0114 145.651 96.8917 145.658 96.7654 145.671C96.8385 145.844 96.9117 146.023 97.1644 146.407C97.2974 146.394 97.4304 146.374 97.5567 146.36C97.4703 146.195 97.3772 146.029 97.1311 145.645L97.1378 145.638Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3298,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.6821 118.848C68.6821 119.047 68.6954 119.246 68.702 119.597C67.0328 118.066 65.3637 116.383 63.8209 114.508C64.0337 114.309 64.1268 114.303 64.2132 114.296C64.2132 114.296 64.2199 114.283 64.2997 114.409C64.6521 114.614 64.9248 114.7 65.2041 114.786C65.2041 114.786 65.2174 114.786 65.2506 114.912C65.3836 115.184 65.5233 115.27 65.6962 115.283C65.6962 115.283 65.7028 115.29 65.7427 115.416C65.8757 115.688 66.0154 115.767 66.1949 115.78C66.1949 115.78 66.2016 115.787 66.2415 115.913C66.3745 116.185 66.5141 116.264 66.6937 116.277C66.6937 116.277 66.7003 116.291 66.7402 116.41C66.8732 116.682 67.0129 116.761 67.1924 116.774C67.1924 116.774 67.1925 116.788 67.239 116.913C67.372 117.185 67.5117 117.271 67.6912 117.278C67.6912 117.278 67.6979 117.284 67.7378 117.41C67.8708 117.689 68.0104 117.768 68.19 117.775C68.19 117.775 68.1966 117.788 68.2365 117.907C68.3695 118.186 68.5092 118.265 68.6887 118.265C68.6887 118.265 68.6887 118.278 68.6821 118.424C68.6754 118.669 68.6821 118.762 68.6887 118.862L68.6821 118.848Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3303,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M53.6662 72.9085C52.8748 73.2266 52.0236 73.3856 50.9729 73.5447C50.8332 73.0543 50.8864 72.5706 50.933 72.0803C51.8175 72.3056 52.7086 72.5308 53.6595 72.9152L53.6662 72.9085Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3308,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.7153 119.915C69.9788 120.81 71.2556 121.876 72.599 123.102C71.3554 122.201 70.0387 121.148 68.7153 119.915Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3313,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M70.6837 125.72C69.6264 125.024 68.569 124.322 67.505 123.626C67.7577 123.321 68.0104 123.023 68.2631 122.718C69.0744 123.593 69.8857 124.461 70.697 125.521C70.697 125.706 70.6837 125.72 70.6837 125.72Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3318,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M78.0188 128.337C78.8234 128.914 79.7345 129.629 80.6456 130.524C79.8076 129.96 78.9631 129.218 78.0188 128.337Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3323,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M80.1535 135.155C79.3355 134.44 78.5175 133.724 77.6796 132.836C77.6663 132.664 77.673 132.651 77.673 132.651C78.4909 133.366 79.3089 134.082 80.1402 134.97C80.1535 135.142 80.1535 135.149 80.1535 135.149V135.155Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3328,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M90.348 140.615C90.1485 140.43 89.9424 140.251 89.7096 139.774C89.6564 139.204 89.6365 138.926 89.7894 138.628C90.5076 139.284 91.0463 139.959 91.3788 140.629C90.9 140.622 90.6207 140.615 90.348 140.615Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3333,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M111.036 163.807C110.391 163.542 109.733 163.112 109.075 162.681C109.268 162.462 109.46 162.244 109.653 162.031C110.105 162.568 110.564 163.105 111.036 163.814V163.807Z",
                fill: "#102C43"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3338,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M90.4677 140.748C90.6273 140.622 90.9 140.622 91.3855 140.629C91.5983 140.629 91.6115 140.642 91.6315 140.775C91.8044 140.987 91.9574 141.059 92.117 141.126C92.117 141.126 92.1103 141.126 92.1436 141.278C92.3298 141.583 92.4761 141.729 92.649 141.927C92.6756 141.974 92.8618 142.106 92.9549 142.232C93.1344 142.544 93.2209 142.729 93.2475 142.981C93.181 143.047 93.0546 143.173 93.0546 143.173C92.23 142.405 91.412 141.643 90.4744 140.741L90.4677 140.748Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3343,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M84.3696 134.4C83.6514 133.777 82.9332 133.154 82.1618 132.366C82.1152 132.2 82.1485 132.167 82.3214 132.16C82.8733 132.399 83.259 132.637 83.7113 132.969C84.0039 133.254 84.2366 133.453 84.5359 133.757C84.629 133.956 84.6556 134.036 84.6024 134.188C84.5226 134.254 84.3696 134.393 84.3696 134.393V134.4Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3348,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M32.3128 75.188C32.5655 74.9494 32.8248 74.8765 33.0842 74.797C33.0842 75.3006 33.0775 75.8042 32.9445 76.4204C32.6519 76.1355 32.4857 75.7446 32.3128 75.188Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3353,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M54.7501 109.306C54.2381 109.101 53.7327 108.902 53.2206 108.697C53.3204 108.505 53.4268 108.319 53.5265 108.127C53.8856 108.425 54.2514 108.73 54.677 109.167C54.7435 109.307 54.7501 109.306 54.7501 109.306Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3358,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M80.6522 130.842C81.0246 130.829 81.417 130.968 81.9689 131.147C82.1352 131.18 82.1352 131.193 82.1219 131.359C82.1219 131.736 82.1285 131.955 82.1418 132.174C82.1418 132.174 82.1019 132.207 82.082 132.227C81.5965 131.829 81.131 131.418 80.6456 130.848L80.6522 130.842Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3363,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M99.5983 148.574C99.7712 149.011 99.9374 149.448 100.104 150.071C99.585 149.634 99.0663 149.011 98.5875 148.222C98.6274 148.05 98.6074 148.07 98.7205 148.097C98.92 148.103 99.0064 148.083 99.0862 148.063C99.0862 148.063 99.0995 148.07 99.1062 148.216C99.2724 148.428 99.432 148.494 99.585 148.56C99.585 148.56 99.5916 148.567 99.5983 148.574Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3368,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M76.6755 131.67C76.9947 131.895 77.3139 132.121 77.653 132.498C77.673 132.657 77.6663 132.664 77.6597 132.671C77.3405 132.445 77.0213 132.22 76.6888 131.829C76.6688 131.67 76.6755 131.663 76.6755 131.663V131.67Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3373,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.6099 138.647C89.6298 138.926 89.6564 139.204 89.6498 139.688C89.3106 139.602 88.9981 139.303 88.6789 138.787C88.6722 138.568 88.7986 138.422 88.9249 138.482C89.2375 138.575 89.4237 138.608 89.6099 138.634V138.647Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3378,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M50.6603 75.8904C50.3877 76.0096 50.0219 76.0096 49.47 76.003C49.716 75.9235 50.1416 75.844 50.6603 75.8904Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3383,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M59.6512 114.634C59.4783 114.495 59.4185 114.362 59.3587 114.236C59.4784 114.203 59.6047 114.164 59.7244 114.13C59.7377 114.303 59.751 114.475 59.6512 114.634Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3388,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M86.092 136.196C85.7994 135.951 85.5068 135.699 85.1676 135.314C85.1211 135.175 85.1344 135.162 85.3006 135.136C85.7395 135.414 86.0188 135.712 86.2449 136.057C86.1917 136.103 86.092 136.196 86.092 136.196Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3393,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M64.2132 119.252C64.426 119.312 64.6455 119.372 64.8583 119.431C64.6854 119.438 64.5125 119.445 64.2797 119.352C64.2199 119.252 64.2132 119.252 64.2132 119.252Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3398,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M77.121 126.873C77.3205 126.992 77.5001 127.29 77.673 127.767C77.4801 127.648 77.2873 127.35 77.121 126.873Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3403,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M85.1144 135.175C84.9016 135.003 84.7021 134.824 84.4295 134.519C84.363 134.4 84.5159 134.261 84.7287 134.281C85.008 134.586 85.0679 134.871 85.1344 135.162C85.1344 135.162 85.1211 135.175 85.1144 135.182V135.175Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3408,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M74.2349 124.381C74.4477 124.315 74.7336 124.394 75.0861 124.6C74.8733 124.66 74.5873 124.593 74.2349 124.381Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3413,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M75.1193 124.891C75.3122 124.746 75.4518 124.812 75.5981 125.196C75.6314 125.561 75.6181 125.667 75.5981 125.773C75.4252 125.528 75.2523 125.289 75.1127 124.891H75.1193Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3418,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M64.2066 114.144C64.1201 114.303 64.0337 114.303 63.8075 114.329C63.6546 114.117 63.6413 113.885 63.6613 113.474C63.8674 113.534 64.0337 113.759 64.2066 114.144Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3423,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M93.8659 143.882C93.6398 143.723 93.4137 143.571 93.1145 143.292C93.048 143.173 93.1743 143.041 93.3605 143.034C93.7462 143.206 93.9391 143.385 94.0654 143.644C93.9923 143.717 93.8659 143.882 93.8659 143.882Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3428,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M66.2149 121.227L66.4011 121.459C66.3545 121.439 66.3013 121.413 66.2348 121.313C66.2082 121.234 66.2215 121.227 66.2215 121.227H66.2149Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3433,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M64.2199 119.246C64.16 119.173 64.1002 119.107 64.0403 119.034C64.0802 119.06 64.1268 119.087 64.1933 119.18C64.2199 119.246 64.2199 119.246 64.2199 119.246Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3438,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M66.2016 121.24C66.1351 121.167 66.0752 121.088 66.022 121.008C66.0686 121.035 66.1151 121.055 66.1883 121.148C66.2149 121.22 66.2082 121.234 66.2016 121.234V121.24Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3443,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M76.6555 126.349C76.7819 126.296 76.9215 126.402 77.1144 126.614C77.0013 126.654 76.8351 126.574 76.6555 126.349Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3448,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M76.1568 125.852C76.2831 125.806 76.4228 125.905 76.6156 126.117C76.5026 126.157 76.3363 126.078 76.1568 125.852Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3453,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M70.697 125.706C70.7635 125.779 70.8234 125.859 70.8899 125.932C70.8433 125.912 70.7901 125.885 70.7103 125.793C70.6771 125.72 70.6904 125.706 70.697 125.7V125.706Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3458,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M73.1908 127.694C73.2507 127.767 73.3105 127.847 73.3704 127.92C73.3238 127.893 73.2773 127.873 73.2108 127.774C73.1908 127.701 73.1908 127.694 73.1908 127.694Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3463,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M73.1842 127.701C73.1177 127.628 73.0578 127.555 72.998 127.482C73.0445 127.502 73.0911 127.529 73.1642 127.621C73.1908 127.694 73.1908 127.694 73.1842 127.701Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3468,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M73.6962 123.864C73.8026 123.825 73.9423 123.917 74.1218 124.123C74.0221 124.156 73.8758 124.076 73.6962 123.864Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3473,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M73.0645 123.361C73.1576 123.321 73.3438 123.394 73.5965 123.606C73.4967 123.652 73.3305 123.566 73.0645 123.361Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3478,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M75.7511 125.806C75.6181 125.667 75.6314 125.561 75.658 125.289C75.8043 125.243 75.944 125.362 76.1302 125.607C76.0836 125.766 75.9905 125.806 75.7578 125.806H75.7511Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3483,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M54.7435 109.313C54.8033 109.386 54.8632 109.452 54.923 109.525C54.8831 109.499 54.8366 109.472 54.7701 109.379C54.7435 109.306 54.7435 109.313 54.7435 109.313Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3488,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M63.2223 112.944C63.3753 112.838 63.5149 112.931 63.6546 113.189C63.5482 113.229 63.3952 113.156 63.2223 112.944Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3493,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.5573 112.441C62.6571 112.388 62.8499 112.461 63.1226 112.673C63.0162 112.726 62.83 112.646 62.5573 112.441Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3498,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M94.3713 144.326C94.2184 144.28 94.092 144.194 93.9258 143.975C93.8593 143.882 93.9856 143.717 94.1718 143.697C94.491 143.776 94.5841 143.915 94.5575 144.141C94.491 144.2 94.3713 144.326 94.3713 144.326Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3503,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M94.9632 144.764C94.7837 144.724 94.6507 144.624 94.4445 144.426C94.3713 144.326 94.4977 144.2 94.6772 144.154C94.8568 144.108 95.0962 144.108 95.1028 144.101C95.1028 144.101 95.0962 144.101 95.0962 144.227C95.0962 144.353 95.1095 144.591 95.1095 144.591C95.1095 144.591 95.0098 144.704 94.9632 144.764Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3508,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M80.6589 135.646C80.7187 135.719 80.7852 135.792 80.8451 135.864C80.7985 135.838 80.752 135.818 80.6788 135.719C80.6522 135.646 80.6589 135.639 80.6589 135.639V135.646Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3513,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M80.6589 135.652C80.4926 135.606 80.3663 135.513 80.2133 135.268C80.1601 135.155 80.1668 135.155 80.1668 135.149C80.333 135.195 80.466 135.281 80.6123 135.533C80.6655 135.646 80.6589 135.646 80.6589 135.652Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3518,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M76.6688 131.677C76.609 131.604 76.5491 131.524 76.4826 131.451C76.5292 131.478 76.5757 131.498 76.6489 131.597C76.6755 131.67 76.6688 131.677 76.6688 131.677Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3523,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M85.6398 140.615C85.806 140.662 85.939 140.755 86.0853 141C85.9723 141.059 85.8459 140.967 85.693 140.722C85.6398 140.609 85.6398 140.609 85.6398 140.609V140.615Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3528,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M85.6398 140.622C85.4802 140.576 85.3472 140.483 85.1942 140.238C85.141 140.125 85.141 140.125 85.141 140.125C85.3073 140.172 85.4403 140.264 85.5866 140.509C85.6398 140.622 85.6398 140.622 85.6398 140.622Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3533,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M85.141 140.125C84.9814 140.079 84.8484 139.986 84.6955 139.741C84.6423 139.628 84.6423 139.628 84.6423 139.628C84.8085 139.675 84.9415 139.767 85.0878 140.012C85.141 140.125 85.141 140.125 85.141 140.125Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3538,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.136 142.106C87.1959 142.179 87.2557 142.252 87.3222 142.325C87.2757 142.299 87.2291 142.279 87.1626 142.179C87.136 142.106 87.1427 142.106 87.1427 142.106H87.136Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3543,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.136 142.113C86.9698 142.067 86.8434 141.974 86.6905 141.722C86.6373 141.609 86.6373 141.609 86.6373 141.609C86.8035 141.656 86.9365 141.742 87.0828 141.994C87.136 142.106 87.1294 142.106 87.1294 142.106L87.136 142.113Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3548,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M86.1917 141.225C86.3048 141.159 86.4378 141.252 86.5907 141.503C86.6439 141.616 86.6439 141.616 86.6439 141.616C86.4843 141.57 86.3513 141.477 86.1984 141.232L86.1917 141.225Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3553,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.5683 137.7C87.3954 137.667 87.2624 137.581 87.1759 137.256C87.1892 137.077 87.3222 136.945 87.4153 137.017C87.6281 137.203 87.7212 137.329 87.7345 137.528C87.6813 137.581 87.5683 137.693 87.5683 137.693V137.7Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3558,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M82.6339 137.654L82.4544 137.402C82.5076 137.422 82.5541 137.448 82.6273 137.554C82.6472 137.634 82.6273 137.654 82.6273 137.654H82.6339Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3563,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.1227 137.15C86.89 137.17 86.757 137.077 86.6772 136.766C86.6905 136.593 86.8168 136.467 86.9099 136.534C87.1227 136.706 87.2291 136.825 87.3222 136.951C87.3222 136.951 87.1892 137.084 87.1227 137.15Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3568,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M86.6306 136.646C86.3979 136.666 86.2649 136.573 86.1319 136.308C86.092 136.196 86.1917 136.096 86.3447 136.11C86.624 136.216 86.7304 136.328 86.8168 136.461C86.8168 136.461 86.6905 136.587 86.6306 136.646Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3573,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M84.6423 139.628C84.4827 139.582 84.3497 139.489 84.1967 139.237C84.1435 139.125 84.1435 139.125 84.1435 139.125C84.3098 139.171 84.4428 139.264 84.5891 139.509C84.6423 139.622 84.6423 139.622 84.6356 139.622L84.6423 139.628Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3578,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M84.1435 139.131C84.0837 139.058 84.0238 138.979 83.964 138.906C84.0105 138.932 84.0571 138.959 84.1236 139.058C84.1502 139.131 84.1435 139.131 84.1435 139.131Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3583,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M88.6057 138.647C88.373 138.674 88.24 138.575 88.1602 138.257C88.1735 138.084 88.2932 137.958 88.3863 138.025C88.5991 138.19 88.7055 138.303 88.7986 138.422C88.7986 138.422 88.6722 138.575 88.6057 138.647Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3588,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M88.1203 138.144C87.8941 138.164 87.7611 138.071 87.6215 137.813C87.575 137.7 87.6814 137.587 87.8343 137.601C88.1136 137.713 88.2134 137.826 88.2998 137.965C88.2998 137.965 88.1801 138.084 88.1203 138.144Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3593,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M82.6605 137.627C82.727 137.7 82.7869 137.779 82.8467 137.859C82.8002 137.839 82.747 137.813 82.6672 137.72C82.6339 137.647 82.6472 137.634 82.6605 137.627Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3598,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M10.7798 46.0391C10.6734 45.8934 10.5603 45.5753 10.5736 45.2175C10.7266 45.4096 10.7532 45.6349 10.7798 46.0391Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3603,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M13.759 48.7559C14.0117 48.9746 14.1913 49.392 14.3841 49.9884C14.2977 50.1673 14.1979 50.1739 13.9386 50.1805C13.7524 49.7763 13.7191 49.3655 13.759 48.7559Z",
                fill: "#10273C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3608,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M17.4033 92.7541C17.257 92.7276 17.1639 92.5752 17.1173 92.2837C17.257 92.3102 17.3567 92.4626 17.4033 92.7541Z",
                fill: "#B5D6E4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3613,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M18.3675 44.9524C18.035 42.2092 17.7025 39.234 17.3833 36.0335C17.4831 35.8082 17.5695 35.8082 17.789 35.8148C18.0683 38.79 18.2212 41.7586 18.3742 44.9524H18.3675Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3618,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.761 309.088C194.701 309.021 194.641 308.955 194.581 308.889C194.621 308.915 194.661 308.935 194.728 309.028C194.754 309.094 194.754 309.094 194.761 309.088Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3623,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M185.797 301.514C185.743 301.434 185.77 301.355 185.797 301.275C185.823 301.355 185.85 301.434 185.797 301.514Z",
                fill: "#E3F0F4"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3628,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M214.073 52.9039C217.804 51.519 221.488 50.3329 225.564 49.1733C227.28 49.7167 227.459 50.5185 226.661 51.6781C226.256 52.2612 225.897 52.9238 225.697 53.6063C224.986 56.1044 224.347 58.6224 223.682 61.1271C223.509 61.6704 223.336 62.2072 222.951 62.9493C220.942 63.3005 219.127 63.3137 217.365 63.6451C215.968 63.9101 214.425 64.2746 213.348 65.1095C211.812 66.2889 210.695 67.9985 209.285 69.3569C208.713 69.9069 207.835 70.1454 207.097 70.5297C209.411 64.7251 211.725 58.9205 214.079 52.9105L214.073 52.9039Z",
                fill: "#371E2D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3633,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.229 60.0139C194.389 60.6898 194.548 61.3656 194.701 62.2072C193.005 63.4396 191.31 64.5131 189.441 65.5733C187.705 65.9377 185.91 65.9444 184.64 66.7594C181.507 68.7671 178.621 71.146 175.356 73.3923C174.824 73.2796 174.578 73.1471 174.325 73.0079C176.866 70.8345 179.406 68.6611 182.113 66.3486C179.306 63.877 177.697 67.3491 175.256 67.8063C174.212 66.004 172.949 66.713 171.699 67.972C171.233 68.4425 170.734 68.8798 170.302 69.3768C168.267 71.7225 165.627 72.6236 161.703 72.6369C165.973 69.0123 169.73 65.8185 173.667 62.618C173.853 62.6114 173.873 62.6312 173.833 62.7836C173.607 63.4927 173.421 64.0559 173.235 64.6125C173.74 64.5661 174.279 64.6125 174.738 64.4535C175.855 64.0559 177.025 63.6981 178.023 63.0818C180.65 61.4717 183.196 59.729 186.109 57.8206C186.196 58.9802 186.242 59.5434 186.216 60.1265C186.196 60.1398 186.242 60.1265 186.468 60.0868C187.685 59.5832 188.736 59.0995 189.78 58.6091C189.78 58.6091 189.78 58.6091 189.753 58.7748C189.122 59.5103 188.517 60.0735 187.579 60.9482C188.483 61.2199 189.095 61.3988 189.687 61.6771C189.674 61.7698 189.654 61.962 189.561 62.0283C189.487 62.2138 189.514 62.3397 189.534 62.459C189.66 62.3794 189.78 62.2999 190.066 62.1873C190.571 61.803 190.924 61.4518 191.276 61.1006C191.276 61.1006 191.29 61.1006 191.463 61.1403C192.015 60.8223 192.394 60.4711 192.773 60.1066C192.773 60.1066 192.786 60.1066 192.959 60.1597C193.504 60.1398 193.863 60.0735 194.229 60.0006V60.0139ZM187.978 63.1017C187.832 63.1878 187.732 63.3137 187.32 63.5125C186.974 63.8703 186.621 64.2215 186.142 64.6257C186.189 64.6125 186.242 64.6059 186.608 64.586C187.02 64.2746 187.433 63.9697 188.071 63.5655C188.231 63.486 188.33 63.3668 188.556 63.0818C188.543 62.9758 188.523 62.8632 188.51 62.7571C188.404 62.8433 188.304 62.9294 187.965 63.1083L187.978 63.1017Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3638,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M206.957 70.6159C207.828 70.1388 208.706 69.9069 209.278 69.3503C210.688 67.9852 211.805 66.2823 213.341 65.1028C214.425 64.2679 215.961 63.9035 217.358 63.6384C219.12 63.3071 220.936 63.2939 222.937 63.115C221.667 65.6064 220.297 68.1907 218.648 70.5894C218.289 71.1128 216.726 71.3845 216.101 71.0532C214.518 70.2249 213.441 70.4038 212.61 71.9146C211.878 73.2465 211.034 73.8097 209.404 73.2531C208.846 73.061 207.868 73.8561 207.177 74.3332C205.734 75.3404 204.357 76.4403 202.761 77.5138C203.985 75.2476 205.408 72.9748 206.957 70.6092V70.6159Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3643,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M160.38 44.2235C164.217 40.8905 168.061 37.5575 171.898 34.2245C175.343 35.2251 177.005 30.9313 180.656 31.3488C179.818 32.2632 179.26 33.0451 178.541 33.6282C175.795 35.8413 172.955 37.9485 170.222 40.1882C168.646 41.4737 167.802 45.0584 168.639 46.768C167.602 48.0535 166.478 49.1005 165.208 50.2269C163.931 51.254 162.741 52.1419 161.67 53.1557C160.028 54.7129 158.458 56.3496 156.856 57.9531C156.004 58.5296 155.153 59.1127 154.056 59.5434C153.697 59.0067 153.371 58.4965 153.511 58.2513C155.459 54.7924 157.248 51.2076 159.569 48.0005C160.919 46.1319 163.16 44.906 164.962 43.3555C166.279 42.2224 167.542 41.0231 168.826 39.8568C168.639 39.6647 168.453 39.4659 168.274 39.2737C166.598 40.5526 164.969 41.911 163.22 43.0838C162.395 43.6404 161.338 43.8657 160.387 44.2368L160.38 44.2235ZM169.703 39.0153C169.843 38.8828 169.983 38.7503 170.122 38.6177C170.069 38.5581 169.969 38.4521 169.963 38.4521C169.817 38.578 169.677 38.7105 169.703 39.0087V39.0153Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3648,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M165.348 50.1408C166.472 49.0938 167.589 48.0403 168.792 46.8475C169.418 46.3704 169.963 46.0391 170.741 45.8403C171.905 49.0077 173.162 47.0463 174.445 46.1319C174.684 45.9795 174.784 45.8536 174.837 45.7012C174.837 45.7012 174.837 45.7012 174.977 45.6416C175.522 45.2904 175.935 44.9988 176.447 44.6609C176.686 44.5085 176.779 44.3826 176.992 44.197C177.378 43.8591 177.604 43.5477 177.83 43.2296H177.843C178.887 42.7724 179.938 42.3152 181.261 41.8646C181.627 42.1562 181.707 42.4345 181.647 42.7856C178.635 44.9326 175.782 46.9999 172.922 49.074C173.022 49.286 173.128 49.4914 173.228 49.7034C174.585 49.3523 175.935 49.0011 177.251 48.7824C177.085 49.1601 176.959 49.4119 176.826 49.6571C174.95 50.9492 173.068 52.2413 170.874 53.6196C170.329 54.0171 170.096 54.3352 169.856 54.6533C169.797 54.8123 169.697 54.9382 169.278 55.0906C168.46 55.4815 167.921 55.8195 167.383 56.1574C167.383 56.1574 167.363 56.1574 167.19 56.1707C165.135 57.3568 163.253 58.5296 161.371 59.6958C161.211 59.497 161.045 59.2982 160.885 59.1061C162.222 57.6351 163.559 56.1574 165.062 54.6533C165.76 54.1629 166.292 53.6991 166.824 53.2352C166.611 53.0497 166.398 52.8575 166.186 52.672C165.733 53.3148 165.281 53.9641 164.643 54.6135C163.512 55.0575 162.561 55.4882 161.617 55.9189C162.521 54.4346 163.665 53.3081 164.663 52.0624C165.062 51.5588 165.128 50.7902 165.348 50.1408ZM167.549 52.2546C167.742 52.2546 167.941 52.2545 168.134 52.2479C168.134 52.2479 168.134 52.0955 168.134 52.016C167.941 52.016 167.742 52.016 167.542 52.2546H167.549Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3653,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M176.939 49.7565C176.945 49.4119 177.072 49.1601 177.251 48.789C177.298 48.6631 177.298 48.6499 177.471 48.6432C178.209 48.0071 178.781 47.3843 179.532 46.7283C181.773 45.5952 183.881 44.5615 185.876 43.3489C186.954 42.6929 187.832 41.7056 188.803 40.8707C188.803 40.8707 189.049 40.8574 189.168 40.8707C189.773 41.3875 190.259 41.8977 190.671 42.7061C187.672 45.0584 184.739 47.1126 181.66 49.2396C177.936 52.1949 174.325 55.0309 170.821 57.9995C169.83 58.841 169.178 60.0735 168.367 61.1271C168.367 61.1271 168.354 61.1072 168.24 61.1668C168.041 61.3855 167.948 61.5445 167.855 61.7036C167.815 61.8427 167.742 61.9487 167.356 62.0746C166.684 62.4656 166.272 62.8102 165.86 63.1481C163.552 65.4209 161.245 67.6937 158.937 69.9731C158.658 69.7346 158.378 69.4894 158.099 69.2509C159.662 67.3226 161.045 65.2022 162.834 63.5125C166.97 59.6163 171.319 55.9586 175.529 52.1485C176.187 51.5522 176.553 50.6311 176.939 49.7565Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3658,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M160.294 44.3428C161.331 43.8459 162.388 43.6272 163.213 43.064C164.962 41.8845 166.591 40.5327 168.267 39.2539C168.453 39.446 168.639 39.6448 168.819 39.837C167.536 41.0098 166.272 42.2025 164.955 43.3356C163.153 44.8928 160.912 46.112 159.562 47.9806C157.248 51.1877 155.459 54.7725 153.504 58.2314C153.364 58.4766 153.69 58.9934 153.876 59.5567C152.373 61.4717 150.797 63.2077 149.075 65.0233C148.323 64.1354 147.712 63.1613 147.16 62.2734C148.45 56.8995 152.899 54.0304 156.37 50.3727C156.949 49.7631 157.141 48.789 157.447 47.8348C157.833 46.9602 158.285 46.2313 158.811 45.3633C159.323 44.9657 159.755 44.7073 160.28 44.3296L160.294 44.3428Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3663,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M164.902 54.6798C163.565 56.1508 162.229 57.6284 160.885 59.0995C161.045 59.2982 161.211 59.497 161.371 59.6892C163.253 58.5163 165.135 57.3501 167.196 56.1707C166.365 57.317 165.501 58.6489 164.317 59.5765C162.535 60.9747 160.553 62.121 158.618 63.3071C158.259 63.5258 157.713 63.4529 156.782 63.5788C157.368 62.3264 157.787 61.4253 158.558 59.782C157.208 60.7163 156.443 61.2464 155.16 62.1343C155.898 60.4976 156.383 59.4175 156.862 58.1387C158.458 56.3429 160.021 54.6996 161.67 53.1491C162.741 52.1353 163.925 51.2474 165.208 50.2203C165.135 50.7901 165.068 51.5588 164.663 52.0624C163.665 53.3081 162.521 54.4346 161.617 55.9189C162.568 55.4882 163.512 55.0508 164.663 54.6267C164.862 54.64 164.902 54.6731 164.902 54.6731V54.6798Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3668,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M173.84 62.5981C174.565 61.4319 175.296 60.2789 176.32 58.6621C176.32 58.4103 176.32 57.423 176.413 56.1309C177.95 54.6002 179.386 53.381 180.836 52.0425C180.842 51.8371 180.836 51.7509 180.822 51.6648C180.809 51.6648 180.816 51.6847 180.962 51.6847C181.354 51.5124 181.587 51.3468 181.813 51.1745C181.8 51.1745 181.813 51.1943 181.98 51.1877C182.352 51.1678 182.558 51.148 182.897 51.2275C182.073 52.5196 181.122 53.7057 179.659 55.5478C181.72 55.1171 183.11 54.8255 184.507 54.534C182.232 56.8929 179.871 58.6157 177.484 60.2988C176.314 61.1205 175.077 61.856 173.873 62.6312C173.873 62.6312 173.853 62.6114 173.84 62.5981Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3673,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M180.829 52.1684C179.393 53.3876 177.956 54.6002 176.427 55.952C173.793 57.7543 171.253 59.4175 168.54 61.1006C169.178 60.0669 169.83 58.8344 170.821 57.9929C174.319 55.0243 177.936 52.1949 181.727 49.3523C181.906 49.995 181.867 50.5914 181.827 51.1877C181.827 51.1877 181.807 51.1678 181.667 51.1745C181.288 51.3468 181.055 51.5124 180.816 51.6781C180.816 51.6781 180.816 51.6516 180.736 51.6979C180.63 51.7973 180.556 51.8835 180.57 51.8967C180.643 51.9961 180.736 52.0756 180.829 52.1618V52.1684Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3678,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M174.159 73.0344C174.578 73.1471 174.831 73.2796 175.21 73.4651C173.441 75.9367 171.246 77.9312 168.254 78.8258C168.094 78.6402 167.928 78.4481 167.768 78.2625C169.836 76.5265 171.911 74.7904 174.152 73.0344H174.159Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3683,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M167.556 56.1508C167.921 55.8128 168.46 55.4815 169.171 55.1436C168.806 55.4815 168.267 55.8128 167.556 56.1508Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3688,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M166.039 63.1282C166.272 62.8102 166.684 62.4722 167.263 62.1144C167.03 62.4325 166.624 62.7704 166.039 63.1282Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3693,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M170.016 54.6334C170.096 54.3418 170.329 54.0238 170.728 53.7057C170.654 54.0039 170.415 54.3087 170.016 54.6334Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3698,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M167.968 61.6241C167.948 61.5445 168.034 61.3855 168.247 61.1668C168.274 61.253 168.174 61.4054 167.968 61.6241Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3703,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M189.162 114.554C188.982 114.356 188.882 114.236 188.656 114.071C188.483 113.872 188.384 113.753 188.171 113.587C187.812 113.242 187.552 112.958 187.167 112.6C186.801 112.235 186.555 111.944 186.189 111.579C185.996 111.361 185.91 111.228 185.73 110.864C185.517 110.519 185.384 110.413 185.245 110.307C185.245 110.307 185.285 110.307 185.231 110.208C185.039 110.009 184.892 109.91 184.753 109.81C184.753 109.81 184.786 109.81 184.779 109.83C184.527 106.868 187.193 105.636 188.683 103.853C192.054 99.8177 195.971 96.2395 199.516 92.3367C202.335 89.229 204.916 85.9092 207.609 82.6889C207.941 82.2913 208.327 81.9269 208.686 81.5492C208.952 81.7148 209.218 81.8871 209.484 82.0528C207.449 85.558 205.414 89.0633 203.38 92.5686C203.513 92.7276 203.646 92.8867 203.779 93.0457C204.543 92.4758 205.494 92.0385 206.033 91.303C208.859 87.4664 211.586 83.5569 214.339 79.6607C215.183 78.468 215.995 77.2554 216.999 76.0295C217.172 76.003 217.185 76.0163 217.185 76.0163C217.405 76.3211 217.617 76.6325 217.937 77.1228C215.529 81.3438 213.215 85.5117 210.455 89.3681C207.749 93.1517 204.603 96.6172 201.631 100.202C200.606 101.435 200.899 103.416 202.202 104.006C201.291 105.225 200.46 106.338 199.483 107.299C196.583 110.168 193.631 112.977 190.698 115.807C190.392 115.575 190.079 115.35 189.654 115.038C189.454 114.826 189.361 114.707 189.148 114.548L189.162 114.554Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3708,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M223.848 61.147C224.347 58.6157 224.986 56.0978 225.697 53.5997C225.89 52.9172 226.256 52.2612 226.661 51.6714C227.466 50.5118 227.28 49.7101 225.777 49.1535C228.883 48.2324 232.174 47.3445 235.839 46.5957C235.812 49.5113 235.726 52.3937 234.854 55.0111C234.575 55.8526 233.105 58.4567 231.044 56.4423C229.747 57.8736 230.691 60.5572 227.991 60.9349V55.7068C227.872 55.6803 227.752 55.6538 227.632 55.6273C226.981 57.9597 226.336 60.2856 225.684 62.618C225.132 62.1343 224.58 61.6439 223.868 61.1337L223.848 61.147Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3713,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M202.229 103.84C200.912 103.422 200.62 101.448 201.644 100.209C204.616 96.6239 207.762 93.1583 210.468 89.3748C213.228 85.5183 215.536 81.3438 218.103 77.1427C218.249 76.6988 218.336 76.4271 218.681 76.1289C219.692 75.5855 220.444 75.0687 221.208 74.744C218.834 79.4089 216.779 84.1069 213.98 88.3079C210.382 93.6951 206.179 98.678 202.236 103.84H202.229Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3718,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M221.195 74.5519C220.444 75.0687 219.686 75.5855 218.794 76.0428C220.942 71.6297 223.223 67.2829 225.584 62.777C225.664 62.6246 225.664 62.618 225.797 62.7439C224.866 65.9377 223.795 69.0057 222.618 71.9809C222.066 72.7694 221.627 73.6507 221.182 74.5386L221.195 74.5585V74.5519Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3723,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M217.178 76.0098C217.225 75.9898 217.279 75.9764 217.266 75.9964C217.199 76.0231 217.185 76.0164 217.178 76.0098Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3728,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M168.347 107.438C170.242 109.015 172.204 110.738 174.319 112.765C175.589 113.958 176.713 114.853 177.837 115.747C177.837 115.747 177.823 115.767 177.883 115.88C178.096 116.079 178.255 116.165 178.415 116.251C178.548 116.291 178.654 116.37 178.821 116.701C179.047 117.033 179.193 117.139 179.333 117.245C179.333 117.245 179.313 117.258 179.366 117.364C179.559 117.563 179.699 117.656 179.832 117.748C179.832 117.748 179.812 117.762 179.865 117.861C180.058 118.06 180.191 118.146 180.33 118.239C180.33 118.239 180.31 118.239 180.33 118.398C180.676 118.782 181.002 119.001 181.328 119.226C181.328 119.226 181.308 119.246 181.308 119.378C181.308 119.703 181.308 119.895 181.341 120.233C181.521 120.498 181.667 120.618 181.813 120.737C181.813 120.737 181.813 120.724 181.853 120.849C182.039 121.061 182.179 121.148 182.312 121.234C182.312 121.234 182.312 121.227 182.352 121.346C182.531 121.558 182.678 121.645 182.811 121.731C182.811 121.731 182.811 121.724 182.851 121.843C183.037 122.055 183.177 122.142 183.31 122.228C183.303 122.228 183.303 122.214 183.349 122.334C183.536 122.546 183.675 122.638 183.808 122.725C183.802 122.725 183.808 122.711 183.802 122.897C184.64 123.791 185.484 124.507 186.428 125.262C186.655 125.395 186.748 125.514 186.628 125.693C183.875 127.032 187.18 127.993 186.641 129.311C186.202 129.271 185.75 129.225 185.238 129.073C185.085 128.827 184.952 128.735 184.766 128.615C184.699 128.523 184.66 128.496 184.62 128.476C184.679 128.542 184.733 128.609 184.852 128.788C185.005 129.026 185.138 129.126 185.231 129.331C184.134 130.133 183.103 130.782 181.946 131.511C185.737 135.308 189.474 138.866 192.959 142.656C194.202 144.008 194.841 145.923 195.612 147.507C194.901 146.818 194.329 146.201 193.737 145.42C193.238 145.022 192.759 144.79 192.207 144.419C190 142.418 187.872 140.562 185.644 138.581C184.999 138.131 184.447 137.813 183.868 137.329C183.31 136.52 182.771 135.871 182.166 135.069C179.393 132.386 176.719 129.815 173.973 127.323C171.659 125.223 169.271 123.215 166.831 121.028C166.452 120.598 166.152 120.299 165.793 119.908C165.521 119.624 165.308 119.431 164.975 119.107C164.191 118.563 163.532 118.146 162.867 117.735C162.867 117.742 162.88 117.735 162.88 117.563C161.524 115.992 160.207 114.548 158.784 113.209C155.865 110.466 152.892 107.782 149.906 104.933C147.891 102.806 145.916 100.832 143.914 98.6913C143.396 97.8232 142.89 97.1208 142.405 96.3986C142.425 96.3787 142.451 96.3456 142.451 96.3456C143.422 96.9949 144.52 97.5184 145.344 98.3136C147.406 100.301 149.241 102.528 151.369 104.443C153.524 106.378 155.891 108.087 158.239 109.784C158.491 109.969 159.263 109.439 158.737 110.155C163.16 113.985 167.562 117.841 172.031 121.625C172.689 122.181 173.647 122.393 174.678 122.864C174.99 123.096 175.117 123.188 175.343 123.381C175.868 123.924 176.314 124.328 176.846 124.878C177.863 125.759 178.807 126.495 179.772 127.396C180.45 128.118 181.095 128.668 181.78 129.291C181.873 129.377 181.926 129.397 181.98 129.417C181.926 129.324 181.873 129.232 181.747 128.993C181.055 128.277 180.443 127.714 179.812 126.972C179.413 125.262 178.867 123.95 176.859 124.494C176.945 123.891 177.032 123.454 177.138 122.87C176.42 122.99 175.881 123.082 175.283 123.063C175.13 122.824 175.004 122.731 174.851 122.678C174.738 121.969 174.625 121.267 174.545 120.763C169.564 118.431 167.582 113.362 163.26 109.472C165.075 108.982 166.325 108.684 167.555 108.293C167.875 108.193 168.114 107.822 168.314 107.431L168.347 107.438Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3733,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M123.02 76.4735C125.075 78.2626 127.123 80.045 129.324 81.907C129.903 82.6491 130.229 83.4244 130.774 83.9677C134.312 87.4929 137.896 90.9584 141.447 94.4637C141.707 94.7221 141.786 95.1595 141.939 95.7028C141.939 95.895 141.913 95.9215 141.733 95.9215C141.321 95.9612 141.088 95.9944 140.709 95.9811C140.363 95.8817 140.164 95.8353 139.944 95.6167C135.954 91.2831 131.978 87.1218 127.948 82.8479C127.795 82.6027 127.662 82.51 127.495 82.4636C127.495 82.4636 127.495 82.4636 127.442 82.3509C127.289 82.1058 127.163 82.013 126.997 81.9666C126.997 81.9666 126.997 81.9666 126.943 81.854C126.791 81.6088 126.664 81.516 126.498 81.4697C126.498 81.4697 126.498 81.4697 126.445 81.357C126.292 81.1118 126.159 81.0191 125.939 80.86C125.786 80.6215 125.653 80.5287 125.441 80.3697C125.288 80.1245 125.155 80.0318 124.995 79.9854C124.995 79.9854 124.995 79.9854 124.909 79.8595C124.556 79.6474 124.277 79.5613 123.997 79.4818C123.997 79.4818 123.997 79.4818 123.984 79.3095C123.652 78.2493 123.326 77.3548 123.007 76.4668L123.02 76.4735Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3738,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M133.301 74.1079C133.866 74.3663 134.272 74.6844 134.844 75.0157C135.775 75.7446 136.546 76.4602 137.437 77.4409C137.71 77.7987 137.856 77.8981 138.003 77.9909C138.142 78.0439 138.262 78.13 138.455 78.4746C138.701 78.7926 138.854 78.892 139 78.9848C139.14 79.0378 139.259 79.124 139.399 79.5215C139.446 80.0185 139.452 80.2504 139.459 80.4757C139.525 81.0853 139.592 81.6949 139.532 82.404C137.012 80.2504 134.604 78.024 132.283 75.7048C132.17 75.5922 132.835 74.6976 133.294 74.1013L133.301 74.1079Z",
                fill: "#23D1E8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3743,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M143.941 91.906C144.167 91.906 144.387 91.906 144.779 91.906C144.945 91.8994 144.939 91.906 144.992 92.0253C145.145 92.2771 145.271 92.3632 145.437 92.403C145.437 92.403 145.437 92.4162 145.491 92.5222C145.643 92.7674 145.77 92.8602 145.936 92.8999C145.936 92.8999 145.936 92.9066 145.943 92.8999C146.096 93.5758 146.235 94.2517 146.382 94.9342C146.195 95.0402 146.016 95.1462 145.83 95.2456C145.198 94.2583 144.566 93.271 143.941 92.0981C143.941 91.9126 143.941 91.906 143.941 91.906Z",
                fill: "#23D1E8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3748,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M143.077 84.1997C142.651 83.7226 142.358 83.3184 142.066 82.9075L142.87 82.5696C142.983 83.1328 143.103 83.7027 143.083 84.193L143.077 84.1997Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3753,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M139.605 80.5486C139.459 80.2504 139.452 80.0185 139.459 79.6209C139.918 79.8661 140.37 80.2836 140.889 80.8468C140.955 80.9859 140.949 80.9992 140.949 80.9992C140.55 80.8733 140.15 80.7474 139.612 80.5552L139.605 80.5486Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3758,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M164.889 103.495C165.168 103.575 165.461 103.82 165.813 104.198C165.547 104.105 165.221 103.886 164.889 103.495Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3763,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M163.891 102.468C164.171 102.554 164.463 102.813 164.822 103.204C164.556 103.104 164.237 102.872 163.891 102.468Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3768,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M143.934 91.9192C143.875 91.853 143.815 91.7801 143.755 91.7072C143.795 91.7271 143.841 91.7536 143.914 91.8397C143.941 91.906 143.941 91.9126 143.934 91.9126V91.9192Z",
                fill: "#23D1E8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3773,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M165.933 104.449C166.019 104.423 166.166 104.516 166.398 104.715C166.319 104.741 166.159 104.655 165.933 104.449Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3778,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M141.953 95.8884C142.119 95.9281 142.252 96.0143 142.412 96.2528C142.471 96.3588 142.438 96.3919 142.318 96.3522C142.066 96.213 141.973 96.0805 141.919 95.9281C141.919 95.9281 141.939 95.9016 141.953 95.8884Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3783,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M138.94 78.8788C138.86 78.892 138.714 78.7993 138.515 78.574C138.601 78.5541 138.734 78.6601 138.94 78.8788Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3788,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M137.943 77.8849C137.863 77.8981 137.717 77.8053 137.524 77.58C137.61 77.5602 137.743 77.6662 137.943 77.8849Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3793,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M141.454 81.4697L141.627 81.7016C141.58 81.6751 141.534 81.6552 141.467 81.5492C141.447 81.4763 141.454 81.4697 141.454 81.4697Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3798,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M141.441 81.4829C141.274 81.4431 141.141 81.3504 140.988 81.0986C140.935 80.9859 140.942 80.9793 140.949 80.9793C141.108 81.0257 141.241 81.1251 141.394 81.3636C141.447 81.4697 141.441 81.4763 141.441 81.4829Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3803,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M185.291 129.192C185.743 129.232 186.196 129.278 186.635 129.318C187.173 128.006 183.868 127.045 186.788 125.72C187.346 125.7 187.566 125.7 187.792 125.7C187.792 125.7 187.785 125.713 187.825 125.826C188.005 126.031 188.151 126.111 188.29 126.197C188.29 126.197 188.277 126.197 188.317 126.323C188.497 126.521 188.643 126.608 188.783 126.694C188.783 126.694 188.776 126.7 188.816 126.82C188.995 127.018 189.142 127.105 189.281 127.191C189.281 127.191 189.275 127.197 189.315 127.317C189.494 127.515 189.64 127.602 189.78 127.688C189.78 127.688 189.773 127.694 189.813 127.814C189.993 128.012 190.139 128.099 190.279 128.178C190.279 128.178 190.279 128.191 190.279 128.35C190.618 128.728 190.944 128.953 191.27 129.172C191.27 129.172 191.263 129.185 191.27 129.351C192.108 130.232 192.932 130.941 193.763 131.657C193.763 131.657 193.757 131.67 193.803 131.809C194.156 132.18 194.455 132.419 194.761 132.651C194.761 132.651 194.754 132.664 194.801 132.777C194.987 132.975 195.12 133.062 195.26 133.148C195.26 133.148 195.26 133.161 195.3 133.274C195.486 133.472 195.619 133.559 195.758 133.645C195.758 133.645 195.752 133.658 195.798 133.771C195.985 133.969 196.118 134.056 196.257 134.142C196.257 134.142 196.251 134.155 196.297 134.268C196.443 134.526 196.583 134.612 196.756 134.645C196.756 134.645 196.749 134.659 196.796 134.765C196.982 134.963 197.122 135.049 197.255 135.142C197.255 135.142 197.241 135.149 197.335 135.288C197.747 135.493 198.073 135.566 198.392 135.639C198.791 136.01 199.19 136.381 199.702 137.031C200.001 137.415 200.181 137.528 200.36 137.64C200.473 137.673 200.567 137.733 200.713 138.045C200.932 138.389 201.085 138.508 201.238 138.628C201.238 138.628 201.225 138.628 201.285 138.767C201.537 138.972 201.724 139.052 201.91 139.125C202.143 139.33 202.369 139.542 202.655 140.026C203.047 140.741 203.386 141.172 203.732 141.603C203.732 141.603 203.719 141.609 203.772 141.722C203.958 141.921 204.091 142.007 204.231 142.1C204.231 142.1 204.224 142.106 204.271 142.219C204.457 142.418 204.59 142.504 204.729 142.59C204.729 142.59 204.723 142.603 204.769 142.716C204.956 142.915 205.095 143.001 205.228 143.087C205.228 143.087 205.228 143.094 205.228 143.259C205.88 144.161 206.518 144.903 207.197 145.791C207.549 146.162 207.862 146.38 208.36 146.599C208.666 146.586 208.793 146.572 208.912 146.566C209.012 146.606 209.092 146.672 209.192 147.01C210.548 148.852 211.865 150.442 213.188 152.211C213.853 153.563 214.518 154.736 215.177 155.902C214.459 156.446 213.847 156.909 213.368 157.267C217.877 162.754 222.259 168.088 226.641 173.588C226.641 173.979 226.635 174.204 226.455 174.409C225.677 173.733 225.045 173.097 224.454 172.428C221.687 169.287 218.934 166.133 216.101 162.833C213.554 160.017 211.114 157.32 208.567 154.729C208.227 154.385 207.343 154.584 206.685 154.464C206.611 154.372 206.572 154.352 206.532 154.325C206.591 154.391 206.658 154.464 206.731 154.703C209.391 157.744 212.031 160.607 214.698 163.648C216.015 165.371 217.311 166.928 218.602 168.479C217.571 168.611 216.806 168.452 216.314 168.002C212.557 164.589 208.866 161.104 205.122 157.671C204.596 157.194 203.925 156.876 203.22 156.34C201.152 154.001 199.177 151.807 197.155 149.455C196.65 148.726 196.197 148.156 195.745 147.58C194.834 145.923 194.196 144.008 192.952 142.656C189.468 138.866 185.73 135.315 181.94 131.511C183.097 130.782 184.134 130.133 185.225 129.331C185.285 129.179 185.285 129.179 185.285 129.179L185.291 129.192ZM201.291 152.682C201.331 152.708 201.371 152.728 201.418 152.755C201.358 152.689 201.298 152.622 201.185 152.417C201.145 152.39 201.105 152.364 201.065 152.344C201.125 152.41 201.185 152.483 201.298 152.682H201.291Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3808,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M203.326 156.492C203.931 156.883 204.603 157.201 205.128 157.678C208.866 161.11 212.563 164.589 216.321 168.008C216.819 168.459 217.584 168.618 218.608 168.485C217.311 166.928 216.021 165.378 214.864 163.642C215.396 163.304 215.789 163.145 216.188 162.986C218.947 166.133 221.701 169.287 224.467 172.428C225.059 173.097 225.684 173.733 226.469 174.403C226.641 174.416 226.635 174.423 226.628 174.582C226.642 174.959 226.661 175.178 226.735 175.542C227.834 176.872 228.683 177.15 229.282 176.377C230.02 175.814 230.592 175.277 231.203 174.701C231.696 175.105 232.168 175.489 232.666 176.053C233.724 177.491 234.755 178.763 235.792 180.028C236.025 179.876 236.251 179.724 236.484 179.571C234.868 177.02 233.252 174.462 231.642 171.911C233.012 172.064 234.382 172.216 235.938 172.388C238.578 175.47 241.026 178.531 243.546 181.751C243.958 183.09 244.297 184.276 244.45 185.674C243.486 186.277 242.701 186.674 242.023 187.019C241.411 186.125 240.833 185.276 240.254 184.428C240.135 184.514 240.015 184.6 239.902 184.68C240.507 186.853 241.112 189.033 241.717 191.207C239.662 189.12 239.496 185.634 235.872 185.415C235.799 186.038 235.692 186.926 235.46 187.721C234.442 186.363 233.551 185.104 232.633 183.666C231.802 181.996 231.031 180.479 230.159 179.028C230.046 178.842 229.448 178.942 228.909 178.882C228.138 178.59 227.533 178.325 226.356 177.809C227.3 180.042 227.991 181.685 228.663 183.341C228.637 183.361 228.59 183.401 228.424 183.361C227.247 182.951 226.542 180.247 225.145 182.917C224.893 182.639 224.64 182.354 224.201 181.824C223.649 181.029 223.343 180.433 222.898 179.949C221.501 178.418 220.051 176.934 218.622 175.436C217.584 174.297 216.58 173.137 215.516 172.024C211.466 167.803 207.396 163.602 203.346 159.182C203.393 158.917 203.486 158.831 203.473 158.811C203.399 158.699 203.3 158.606 203.207 158.506C203.207 158.506 203.233 158.5 203.18 158.394C202.987 158.195 202.848 158.102 202.715 158.009C202.715 158.009 202.741 158.009 202.688 157.883C202.502 157.499 202.369 157.234 202.335 156.856C202.734 156.651 203.034 156.571 203.333 156.485L203.326 156.492ZM231.689 179.512C231.729 179.538 231.769 179.558 231.809 179.584C231.749 179.518 231.689 179.452 231.616 179.147C231.563 179.015 231.503 178.875 231.45 178.743C231.39 178.783 231.33 178.829 231.27 178.869C231.39 179.041 231.516 179.213 231.689 179.512ZM219.439 170.122L219.393 170.215C219.393 170.215 219.493 170.202 219.439 170.122Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3813,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M226.648 173.422C222.266 168.088 217.89 162.76 213.381 157.274C213.86 156.916 214.465 156.452 215.19 155.909C214.525 154.743 213.867 153.576 213.348 152.298C215.257 153.629 217.019 155.074 218.781 156.518C219.04 156.744 219.3 156.969 219.626 157.473C219.852 158.003 220.025 158.255 220.191 158.513C220.191 158.513 220.178 158.513 220.244 158.639C220.47 158.844 220.63 158.924 220.796 159.01C222.126 160.302 223.616 161.462 224.76 162.906C226.987 165.716 229.022 168.678 231.137 171.759C231.137 171.938 231.137 171.938 230.971 171.924C230.572 171.805 230.292 171.765 230.133 171.6C228.078 169.479 226.063 167.319 223.988 165.225C223.629 164.861 223.024 164.735 222.532 164.496C222.312 164.735 222.086 164.98 221.867 165.219C223.962 167.79 226.056 170.361 228.404 173.236C227.453 173.342 227.06 173.389 226.661 173.435L226.648 173.422Z",
                fill: "#23D1E8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3818,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M218.728 156.346C217.025 155.067 215.263 153.623 213.348 152.105C211.878 150.442 210.555 148.859 209.238 147.083C212.384 149.992 215.523 153.086 218.721 156.353L218.728 156.346Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3823,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.516 171.924C233.258 174.476 234.874 177.027 236.484 179.578C236.251 179.73 236.025 179.883 235.792 180.035C234.761 178.769 233.724 177.497 232.66 175.874C232.128 174.323 231.629 173.124 231.13 171.924C231.217 171.924 231.297 171.924 231.509 171.924H231.516Z",
                fill: "#23D1E8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3828,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.322 125.223C185.477 124.514 184.64 123.798 183.968 122.917C184.36 122.751 184.586 122.758 184.812 122.764C185.265 123.328 185.717 123.897 186.236 124.726C186.302 124.984 186.322 125.229 186.322 125.229V125.223Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3833,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M184.759 122.605C184.586 122.758 184.36 122.751 183.968 122.731C183.802 122.718 183.802 122.731 183.755 122.619C183.576 122.407 183.436 122.314 183.296 122.221C183.296 122.221 183.296 122.234 183.256 122.115C183.077 121.903 182.937 121.817 182.798 121.724C182.798 121.724 182.798 121.737 182.758 121.618C182.578 121.413 182.438 121.32 182.299 121.227C182.299 121.227 182.299 121.24 182.259 121.121C182.079 120.909 181.94 120.823 181.8 120.73C181.8 120.73 181.8 120.743 181.753 120.611C181.574 120.352 181.434 120.22 181.301 120.094C181.301 119.902 181.301 119.71 181.315 119.372C182.452 120.299 183.576 121.373 184.753 122.605H184.759Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3838,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.17 145.645C206.532 144.903 205.887 144.167 205.242 143.259C206.066 143.789 206.891 144.485 207.742 145.36C207.762 145.545 207.715 145.592 207.576 145.598C207.35 145.618 207.257 145.632 207.17 145.645Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3843,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M177.77 115.601C176.719 114.859 175.595 113.965 174.398 112.918C175.449 113.66 176.573 114.561 177.77 115.601Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3848,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M228.637 161.674C229.468 162.376 230.299 163.251 231.13 164.304C230.299 163.602 229.468 162.721 228.637 161.674Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3853,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M193.777 131.491C192.946 130.948 192.114 130.239 191.283 129.351C192.114 129.894 192.946 130.603 193.777 131.491Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3858,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M232.095 165.636C232.62 166.18 233.125 166.895 233.624 167.79C233.105 167.246 232.587 166.531 232.095 165.636Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3863,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M203.745 141.437C203.399 141.172 203.06 140.741 202.728 140.125C203.074 140.384 203.413 140.828 203.745 141.437Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3868,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M191.276 129.013C190.957 128.953 190.631 128.735 190.299 128.35C190.618 128.41 190.944 128.629 191.276 129.013Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3873,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.422 125.269C186.322 125.223 186.295 124.984 186.302 124.865C186.761 124.964 187.226 125.176 187.745 125.547C187.579 125.7 187.353 125.706 186.967 125.687C186.748 125.521 186.661 125.402 186.428 125.269H186.422Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3878,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M181.275 119.093C181.002 119.007 180.676 118.782 180.344 118.398C180.63 118.477 180.929 118.716 181.275 119.093Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3883,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.774 132.492C194.468 132.419 194.162 132.187 193.817 131.809C194.109 131.889 194.442 132.107 194.774 132.492Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3888,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M234.116 168.598C234.289 168.678 234.462 168.916 234.628 169.301C234.455 169.221 234.282 168.982 234.116 168.598Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3893,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M220.184 158.347C220.018 158.248 219.852 157.996 219.686 157.579C219.852 157.671 220.018 157.93 220.184 158.347Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3898,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M198.286 135.52C198.079 135.566 197.76 135.493 197.348 135.281C197.561 135.228 197.867 135.314 198.286 135.52Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3903,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M180.284 118.126C180.191 118.153 180.058 118.06 179.871 117.854C179.965 117.828 180.098 117.921 180.284 118.126Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3908,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M189.255 127.065C189.148 127.105 189.002 127.018 188.829 126.813C188.936 126.773 189.082 126.853 189.255 127.065Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3913,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M188.756 126.568C188.65 126.608 188.503 126.521 188.324 126.316C188.43 126.276 188.576 126.362 188.756 126.568Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3918,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M188.257 126.078C188.151 126.117 188.011 126.031 187.832 125.819C187.938 125.779 188.078 125.865 188.257 126.078Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3923,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M189.753 127.562C189.647 127.602 189.501 127.522 189.321 127.31C189.428 127.27 189.574 127.35 189.753 127.562Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3928,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M178.349 116.145C178.262 116.171 178.109 116.085 177.89 115.873C177.983 115.84 178.129 115.939 178.349 116.145Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3933,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M179.785 117.629C179.699 117.656 179.559 117.563 179.373 117.351C179.459 117.324 179.599 117.417 179.785 117.629Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3938,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M179.286 117.125C179.193 117.139 179.053 117.033 178.867 116.794C178.96 116.774 179.1 116.887 179.286 117.125Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3943,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M233.651 168.081C233.757 168.042 233.903 168.128 234.083 168.333C233.977 168.373 233.83 168.287 233.651 168.081Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3948,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M208.833 146.46C208.799 146.579 208.68 146.592 208.38 146.473C208.207 146.261 208.207 146.175 208.234 146.062C208.261 146.036 208.307 145.983 208.307 145.983C208.454 146.102 208.593 146.228 208.833 146.46Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3953,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M234.655 169.559C234.755 169.526 234.901 169.612 235.087 169.824C234.987 169.857 234.848 169.764 234.655 169.559Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3958,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M235.167 170.056C235.253 170.043 235.4 170.155 235.586 170.4C235.493 170.414 235.36 170.301 235.167 170.056Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3963,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.164 164.602C231.277 164.563 231.416 164.649 231.602 164.861C231.496 164.901 231.35 164.815 231.164 164.602Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3968,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.662 165.093C231.762 165.06 231.895 165.152 232.088 165.365C231.995 165.391 231.848 165.305 231.662 165.093Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3973,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.208 142.961C205.095 143.001 204.956 142.915 204.776 142.716C204.882 142.676 205.029 142.756 205.208 142.961Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3978,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.789 145.526C207.955 145.572 208.074 145.671 208.241 145.89C208.307 145.989 208.254 146.042 208.121 146.016C207.848 145.89 207.755 145.757 207.709 145.598C207.709 145.598 207.762 145.552 207.782 145.532L207.789 145.526Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3983,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M220.71 158.891C220.623 158.917 220.464 158.831 220.237 158.626C220.324 158.592 220.477 158.685 220.71 158.891Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3988,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M195.745 133.519C195.632 133.565 195.493 133.479 195.313 133.274C195.419 133.234 195.572 133.307 195.745 133.519Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3993,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M195.246 133.022C195.127 133.068 194.994 132.982 194.814 132.783C194.927 132.744 195.074 132.816 195.246 133.022Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 3998,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M197.235 135.016C197.128 135.056 196.989 134.97 196.809 134.765C196.916 134.731 197.062 134.811 197.235 135.016Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4003,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M196.736 134.519C196.59 134.619 196.45 134.533 196.31 134.268C196.417 134.228 196.563 134.307 196.736 134.519Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4008,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M196.237 134.016C196.124 134.056 195.985 133.969 195.805 133.771C195.911 133.731 196.058 133.81 196.237 134.016Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4013,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M190.252 128.059C190.139 128.099 190 128.019 189.82 127.814C189.933 127.774 190.079 127.853 190.252 128.059Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4018,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M204.71 142.464C204.596 142.511 204.457 142.418 204.277 142.219C204.384 142.179 204.537 142.259 204.71 142.464Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4023,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M204.211 141.974C204.104 142.014 203.965 141.927 203.785 141.722C203.892 141.689 204.038 141.768 204.211 141.974Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4028,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.823 139.019C201.737 139.052 201.551 138.972 201.305 138.76C201.404 138.72 201.564 138.82 201.823 139.019Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4033,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.198 138.495C201.099 138.508 200.952 138.382 200.773 138.111C200.879 138.098 201.012 138.23 201.198 138.495Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4038,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M200.281 137.521C200.187 137.534 200.008 137.422 199.782 137.15C199.888 137.123 200.041 137.263 200.281 137.521Z",
                fill: "#60E9F2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4043,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M155.978 48.5505C156.004 48.3583 156.097 48.0403 156.35 47.7222C156.35 47.9541 156.197 48.1927 155.978 48.5505Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4048,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.555 119.206C194.382 119.186 194.136 119.16 194.016 119.14C193.896 119.12 193.85 118.908 193.777 118.696C193.611 118.351 193.484 118.265 193.325 118.225C193.158 118.179 193.032 118.086 192.965 117.689C200.088 109.625 207.29 101.912 214.226 93.9601C216.74 91.0843 218.608 87.6519 220.869 84.425C221.075 84.2726 221.142 84.1533 221.275 83.9412C221.514 83.7888 221.607 83.6629 221.727 83.3515C223.43 80.4757 225.052 77.7523 226.781 74.9627C226.974 74.7639 227.06 74.6247 227.147 74.3729C227.154 74.2603 227.174 74.0416 227.353 74.0218C228.231 73.8362 228.929 73.6772 229.627 73.7037C229.634 74.7639 229.634 75.6386 229.621 76.6722C229.295 77.0566 228.996 77.2819 228.603 77.5469C228.477 77.6397 228.397 77.7192 228.41 77.7391C228.477 77.8385 228.563 77.9246 228.643 78.2162C228.131 79.7667 227.825 81.251 227.06 82.4437C225.385 85.0412 223.456 87.4664 221.681 90.0043C221.434 90.3554 221.541 90.9386 221.395 91.3891C221.062 92.4427 220.823 93.5559 220.284 94.4968C219.553 95.7757 218.488 96.869 217.77 98.1545C217.557 98.5389 218.03 99.3075 218.169 100.07C216.686 101.998 215.283 103.813 213.747 105.51C211.799 107.663 209.744 109.724 207.735 111.824C204.463 114.952 201.192 118.073 197.946 121.174C196.783 120.472 195.758 119.855 194.555 119.213V119.206Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4053,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.915 111.818C209.75 109.717 211.799 107.657 213.747 105.503C215.283 103.807 216.686 101.991 218.169 100.056C218.189 99.8774 218.203 99.8774 218.369 99.8575C219.413 98.8503 220.284 97.863 221.162 96.7564C221.162 96.6371 221.175 96.392 221.175 96.392C222.498 95.8155 223.815 95.239 225.139 94.6625C225.292 94.8944 225.438 95.1263 225.591 95.3649C221.321 101.766 215.742 107.054 210.369 112.719C209.511 112.467 208.799 112.143 207.915 111.818Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4058,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.217 118.444C208.593 116.794 209.963 115.33 211.34 113.865C211.626 114.031 211.912 114.197 212.198 114.356C211.646 115.482 211.094 116.609 210.402 118.02C211.014 118.1 211.672 118.179 212.51 118.437C209.358 121.486 206.033 124.355 202.701 127.224C202.701 127.224 202.728 127.224 202.721 127.237C201.863 125.534 202.721 124.454 203.898 123.222C205.188 121.87 206.133 120.18 207.223 118.451L207.217 118.444Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4063,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M220.776 84.4713C218.615 87.6519 216.74 91.0777 214.226 93.9601C207.29 101.905 200.088 109.625 192.926 117.569C192.44 117.424 192.021 117.132 191.463 116.781C191.157 116.503 190.99 116.284 190.764 115.939C193.644 112.977 196.596 110.168 199.496 107.305C200.473 106.338 201.305 105.225 202.216 104.012C206.173 98.6846 210.375 93.6951 213.98 88.3079C216.786 84.1069 218.834 79.4089 221.208 74.744C221.195 74.5519 221.182 74.5386 221.341 74.4723C221.913 73.6308 222.326 72.8555 222.731 72.0803C223.795 69.0123 224.866 65.9377 225.804 62.7505C226.322 60.2988 226.974 57.973 227.619 55.6406C227.739 55.6671 227.858 55.6936 227.978 55.7201V60.9482C230.678 60.5639 229.734 57.8869 231.031 56.4556C233.092 58.47 234.562 55.8659 234.841 55.0243C235.712 52.407 235.799 49.5245 236.025 46.6156C237.122 46.2313 238.392 45.9795 239.855 45.9596C239.722 48.3186 239.39 50.4522 239.031 52.7714C238.213 55.508 237.415 58.0658 236.53 60.6566C236.397 60.7428 236.317 60.8223 236.331 60.8488C236.391 60.9614 236.477 61.0542 236.557 61.3126C236.424 61.856 236.284 62.2403 235.972 62.618C235.553 62.6047 235.32 62.6047 235.087 62.3927C235.453 60.0205 235.812 57.8604 236.164 55.6936C236.045 55.6737 235.918 55.6538 235.799 55.6273C235.566 56.1309 235.333 56.6345 234.927 57.1712C233.398 58.6489 232.068 60.1199 230.671 61.5247C230.113 62.0879 229.122 62.3728 228.816 63.0222C227.08 66.7196 225.491 70.49 223.848 74.2338C222.558 77.1626 221.222 80.0715 220.018 83.0334C219.885 83.3581 220.503 83.9942 220.769 84.4846L220.776 84.4713Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4068,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M193.351 118.345C193.484 118.265 193.611 118.345 193.75 118.59C193.617 118.696 193.478 118.623 193.351 118.345Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4073,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M185.265 110.426C185.391 110.413 185.524 110.519 185.717 110.744C185.77 110.864 185.537 110.837 185.424 110.811C185.311 110.784 185.285 110.546 185.265 110.426Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4078,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M184.793 109.943C184.899 109.909 185.039 110.009 185.238 110.228C185.138 110.261 184.985 110.168 184.793 109.943Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4083,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M164.024 200.822C162.867 199.549 161.87 198.35 161.032 197.031C161.757 197.031 162.315 197.157 162.874 197.276C162.874 197.276 162.874 197.276 162.927 197.389C163.08 197.634 163.213 197.727 163.373 197.773C163.373 197.773 163.373 197.773 163.386 197.946C164.616 199.549 165.288 201.749 167.861 201.265C170.807 203.81 173.747 206.348 176.766 209.045C174.545 207.832 172.204 206.54 169.969 205.082C167.974 203.783 166.106 202.299 164.024 200.828V200.822Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4088,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M188.796 218.626C189.933 218.997 191.07 219.368 192.207 219.739C192.094 220.011 191.975 220.289 191.862 220.561C190.897 220.011 189.933 219.468 188.876 218.779C188.783 218.639 188.796 218.626 188.796 218.626Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4093,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M176.846 209.363C177.65 209.74 178.468 210.29 179.306 211.006C178.502 210.628 177.684 210.085 176.846 209.363Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4098,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M229.634 231.07C228.816 231.07 228.005 231.07 227.187 231.07L227.207 230.58C227.938 230.653 228.663 230.719 229.514 230.925C229.641 231.057 229.634 231.064 229.627 231.064L229.634 231.07Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4103,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M195.778 222.575C195.539 222.344 195.306 222.118 195.067 221.886C195.253 221.886 195.439 221.886 195.699 222.118C195.765 222.344 195.785 222.575 195.785 222.575H195.778Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M199.256 224.1C199.689 224.179 200.114 224.259 200.646 224.464C200.753 224.596 200.739 224.61 200.567 224.63C200.008 224.471 199.629 224.292 199.243 224.113L199.25 224.1H199.256Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4113,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M185.876 215.28C186.076 215.24 186.349 215.326 186.714 215.532C186.522 215.572 186.236 215.492 185.876 215.28Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4118,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M187.26 217.685C187.04 217.606 186.827 217.52 186.608 217.44C186.801 217.427 186.994 217.42 187.24 217.526C187.293 217.646 187.26 217.685 187.26 217.685Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4123,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M184.879 214.783C185.078 214.737 185.358 214.823 185.717 215.028C185.517 215.075 185.238 214.995 184.879 214.783Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4128,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M183.389 213.789C183.589 213.749 183.861 213.835 184.221 214.041C184.028 214.081 183.742 214.001 183.389 213.789Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4133,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M181.893 212.795C182.086 212.755 182.359 212.848 182.724 213.054C182.531 213.087 182.252 213.007 181.893 212.795Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M180.39 211.801C180.59 211.761 180.869 211.848 181.228 212.053C181.035 212.093 180.749 212.007 180.39 211.801Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4143,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M179.406 211.311C179.605 211.265 179.885 211.344 180.244 211.556C180.044 211.602 179.765 211.523 179.406 211.311Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4148,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M197.202 222.98C197.188 223.112 197.102 223.112 196.882 223.119C196.59 223.066 196.463 222.973 196.31 222.728C196.257 222.615 196.257 222.622 196.257 222.622C196.55 222.695 196.842 222.774 197.202 222.98Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4153,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M198.192 223.477C197.986 223.523 197.7 223.43 197.328 223.218C197.527 223.178 197.82 223.258 198.192 223.477Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4158,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M198.266 224.04C198.266 224.04 198.259 223.815 198.252 223.702C198.538 223.669 198.824 223.742 199.183 223.96C199.25 224.1 199.243 224.106 199.077 224.106C198.691 224.086 198.478 224.06 198.259 224.04H198.266Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4163,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M193.271 221.118C193.491 221.177 193.717 221.237 193.936 221.303C193.75 221.317 193.571 221.33 193.325 221.237C193.265 221.131 193.271 221.124 193.271 221.124V221.118Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4168,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M195.898 222.595C195.778 222.575 195.765 222.344 195.765 222.231C195.905 222.204 196.044 222.291 196.224 222.503C196.257 222.622 196.264 222.622 196.264 222.622C196.264 222.622 196.025 222.622 195.905 222.595H195.898Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4173,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M196.377 228.678C196.357 228.605 196.523 228.605 196.61 228.605C196.696 228.605 196.583 228.784 196.583 228.784C196.583 228.784 196.397 228.751 196.377 228.678Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4178,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M182.851 213.279C182.964 213.213 183.103 213.305 183.256 213.551C183.137 213.623 182.997 213.537 182.851 213.279Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4183,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M184.354 214.273C184.473 214.2 184.613 214.286 184.759 214.544C184.633 214.624 184.5 214.531 184.354 214.273Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4188,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M181.361 212.285C181.474 212.219 181.607 212.311 181.76 212.557C181.64 212.629 181.507 212.537 181.361 212.285Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4193,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M193.265 221.131C193.198 221.051 193.132 220.972 193.072 220.892C193.125 220.919 193.172 220.939 193.251 221.045C193.278 221.124 193.271 221.131 193.271 221.131H193.265Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4198,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.827 215.737C186.794 215.651 187.02 215.664 187.133 215.678C187.12 215.737 186.987 215.784 186.827 215.737Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4203,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M187.306 217.632C187.386 217.705 187.446 217.798 187.506 217.891C187.446 217.871 187.393 217.851 187.293 217.758C187.253 217.685 187.293 217.652 187.306 217.632Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4208,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M188.776 218.646C188.703 218.567 188.643 218.48 188.576 218.394C188.63 218.421 188.683 218.441 188.769 218.547C188.796 218.626 188.783 218.639 188.776 218.646Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4213,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M211.818 248.948C212.184 248.815 212.623 248.842 213.135 249.034C212.769 249.167 212.331 249.133 211.818 248.948Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4218,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M82.6472 223.583C83.3389 222.867 84.1768 222.112 85.0878 221.462C89.8094 218.076 94.5509 214.71 99.4321 211.258C100.775 211.178 101.966 211.178 103.429 211.178C106.195 214.366 106.115 215.101 102.265 217.646C101.853 214.677 101.806 215.214 99.2791 215.36C94.5176 215.631 92.0505 219.706 88.1003 221.204C86.5043 221.813 85.0413 222.768 83.3455 223.589C83.0529 223.603 82.9332 223.596 82.6406 223.576L82.6472 223.583Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4223,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M80.1136 247.464C79.9739 247.749 79.7611 247.901 79.4153 248.06C79.535 247.821 79.7877 247.576 80.1136 247.464Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4228,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M82.062 246.529C82.1485 246.682 82.062 246.794 81.7894 246.861C81.7229 246.715 81.8226 246.615 82.062 246.529Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4233,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M79.116 248.067C79.2025 248.232 79.1027 248.345 78.8101 248.398C78.7436 248.246 78.85 248.14 79.116 248.067Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4238,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M115.047 219.143C115 219.156 114.947 219.17 114.967 219.163C115.04 219.136 115.047 219.143 115.047 219.143Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4243,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M115.539 218.646C115.492 218.805 115.392 218.938 115.153 219.09C115.046 219.143 115.04 219.136 115.033 219.136C115.08 218.971 115.173 218.845 115.419 218.693C115.525 218.639 115.539 218.646 115.539 218.646Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4248,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.4028 305.476C68.4826 305.536 68.4892 305.642 68.5025 305.748C68.4493 305.675 68.3895 305.596 68.4028 305.476Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4253,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M82.6539 302.627C82.7137 302.693 82.7736 302.766 82.8334 302.833C82.7935 302.806 82.747 302.786 82.6805 302.693C82.6539 302.627 82.6539 302.627 82.6539 302.627Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4258,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.1052 199.761C97.0583 199.781 97.0046 199.795 97.0247 199.781C97.0918 199.755 97.0985 199.761 97.1052 199.761Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4263,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.587 195.786C101.44 196.037 101.287 196.289 101.134 196.541C101.028 196.455 100.928 196.362 100.822 196.276C100.982 196.124 101.141 195.971 101.44 195.799C101.58 195.779 101.587 195.786 101.587 195.786Z",
                fill: "#371E2D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4268,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M37.2538 184.395C37.3668 184.753 37.2937 185.117 37.0277 185.687C34.9927 189.358 33.1507 192.817 31.3152 196.276C31.0825 196.402 30.8497 196.534 30.3111 196.74C28.735 199.198 27.5047 201.61 26.1681 203.956C25.6959 204.784 24.9578 205.467 24.3393 206.01C24.8381 203.797 25.3302 201.782 25.8289 199.775C26.8331 197.084 27.8372 194.394 28.9079 191.485C28.9279 191.28 28.8747 191.293 28.8281 191.306C28.8281 191.306 28.5821 191.306 28.4624 191.306C28.3427 191.306 28.3427 191.306 28.3427 191.306C29.7325 188.212 31.1224 185.111 32.6586 181.937C33.0975 183.64 33.3834 185.422 33.676 187.211C33.9753 187.476 34.2679 187.741 34.5671 188.013C35.3984 186.807 36.2363 185.608 37.2604 184.402L37.2538 184.395Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4273,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M25.6494 199.768C25.3368 201.789 24.8381 203.797 24.346 206.016C24.346 206.222 24.346 206.215 24.213 206.308C23.8405 206.997 23.6078 207.594 23.4149 208.329C23.4349 208.872 23.4083 209.283 23.262 209.747C23.0359 209.939 22.9228 210.078 22.8164 210.218C21.8322 210.761 20.8547 211.311 19.9502 211.808C20.4956 209.542 21.1273 206.904 21.8987 203.711C20.5155 204.83 19.8039 205.414 18.986 205.864C19.4448 204.115 19.784 202.359 20.6485 200.914C21.6327 199.264 23.0824 197.886 23.9203 196.886C24.3061 197.601 24.8913 198.688 25.656 199.781L25.6494 199.768Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4278,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M22.1714 189.093C22.3908 189.146 22.5238 189.285 22.6502 189.431C22.6502 189.431 22.5438 189.537 22.4839 189.59C22.3509 189.451 22.2179 189.312 22.1714 189.086V189.093Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4283,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M28.3427 191.306C28.2957 191.326 28.2561 191.34 28.2762 191.333C28.3432 191.306 28.3427 191.306 28.3427 191.306Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4288,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M140.935 87.2477C140.337 87.0291 139.712 86.6315 139.007 86.0815C139.592 86.3134 140.25 86.6911 140.935 87.2477Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4293,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M137.451 83.7888C137.151 83.7226 136.832 83.5039 136.493 83.1196C136.792 83.1792 137.111 83.4045 137.451 83.7888Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4298,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M135.396 81.3438C135.156 81.3968 134.837 81.3305 134.505 81.1185C134.771 81.0588 135.037 81.145 135.396 81.3438Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4303,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M133.973 80.3233C133.82 80.2372 133.66 80.0119 133.487 79.6342C133.64 79.7137 133.8 79.9456 133.973 80.3233Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4308,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M138.468 85.3261C138.315 85.24 138.149 85.0014 137.983 84.6171C138.142 84.7033 138.302 84.9418 138.468 85.3261Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4313,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M145.883 92.7873C145.77 92.8535 145.637 92.7674 145.491 92.5156C145.604 92.4493 145.73 92.5421 145.883 92.7873Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4318,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M145.391 92.2903C145.278 92.3566 145.145 92.2704 145.005 92.0252C145.118 91.959 145.244 92.0518 145.391 92.2903Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4323,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M137.916 84.3322C137.803 84.4051 137.67 84.3123 137.53 84.0671C137.643 84.0009 137.77 84.087 137.916 84.3322Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4328,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M136.42 82.8479C136.307 82.9142 136.174 82.8214 136.027 82.563C136.134 82.51 136.267 82.6027 136.42 82.8479Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4333,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M134.425 80.8534C134.312 80.9197 134.179 80.8335 134.032 80.5884C134.145 80.5221 134.278 80.6082 134.425 80.8534Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4338,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M141.434 87.811C141.354 87.8308 141.215 87.7447 141.015 87.5459C141.128 87.4797 141.261 87.5658 141.434 87.811Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4343,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M118.012 60.4512C117.733 60.3717 117.44 60.1265 117.088 59.7488C117.354 59.8416 117.673 60.0669 118.012 60.4512Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4348,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M119.01 61.4783C118.731 61.3855 118.438 61.1271 118.086 60.7361C118.345 60.8355 118.671 61.0741 119.01 61.4783Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4353,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M120.433 62.4722C120.234 62.512 119.954 62.4258 119.575 62.2204C119.768 62.1807 120.061 62.2668 120.433 62.4722Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4358,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M112.992 55.5279C112.872 55.6008 112.739 55.5147 112.593 55.2562C112.712 55.1833 112.845 55.2695 112.992 55.5279Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4363,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M115.485 58.0128C115.366 58.0856 115.233 57.9929 115.086 57.7411C115.206 57.6682 115.339 57.7543 115.485 58.0128Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4368,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M114.98 57.5092C114.894 57.5357 114.754 57.4429 114.534 57.2441C114.614 57.2242 114.767 57.3037 114.98 57.5092Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4373,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M113.996 56.5815C113.903 56.6014 113.77 56.4887 113.59 56.2568C113.677 56.2435 113.816 56.3496 113.996 56.5815Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4378,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M113.49 56.0249C113.371 56.1044 113.238 56.0116 113.091 55.7598C113.211 55.6869 113.344 55.7731 113.49 56.0249Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4383,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M116.982 59.5037C116.869 59.5699 116.736 59.4771 116.583 59.2254C116.702 59.1525 116.835 59.2452 116.982 59.5037Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4388,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M116.483 59.0067C116.363 59.0796 116.23 58.9868 116.084 58.735C116.204 58.6621 116.337 58.7549 116.483 59.0067Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4393,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M115.984 58.5097C115.864 58.5826 115.731 58.4898 115.585 58.238C115.705 58.1652 115.838 58.2579 115.984 58.5097Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4398,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M130.82 72.0538C130.807 72.1002 130.681 72.1333 130.528 72.0803C130.495 71.9941 130.714 72.0339 130.82 72.0538Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4403,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M57.9887 166.438C58.2281 165.875 58.6604 165.331 59.1458 164.655C59.3453 164.41 59.485 164.304 59.6978 164.086C61.8059 163.741 62.7635 164.364 61.9721 166.577C61.746 167.207 61.8192 167.942 61.7327 168.91C62.6837 168.552 63.2888 168.326 64.2332 167.969C63.5947 169.241 63.1492 170.135 62.6837 171.209C61.8857 171.037 61.1076 170.692 60.2897 170.328C60.037 168.817 60.9081 166.643 57.9821 166.438H57.9887Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4408,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M67.3653 173.329C66.3346 172.614 65.4501 171.799 64.4127 170.937C65.1243 169.943 65.6031 168.293 67.4917 169.44C69.6596 170.758 68.3363 171.964 67.3653 173.329Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4413,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M66.554 177.192C66.6604 177.795 66.6205 178.458 66.4343 179.26C66.1085 179.167 65.9223 178.935 65.7161 178.551C65.6962 178.306 65.6962 178.213 65.6762 177.994C65.909 177.656 66.155 177.457 66.5474 177.192H66.554Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4418,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M75.1592 169.93C75.2128 169.917 75.2665 169.91 75.2531 169.923C75.1794 169.943 75.1592 169.93 75.1592 169.93Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4423,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M75.1866 169.95C75.1397 169.97 75.0861 169.983 75.0928 169.957C75.1598 169.923 75.1799 169.937 75.1866 169.95Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4428,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M74.6811 167.955C74.6342 167.975 74.5873 167.989 74.6007 167.969C74.6677 167.935 74.6744 167.949 74.6811 167.955Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4433,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M249.844 46.1253C250.063 46.6885 250.11 47.2252 250.15 47.9607C249.624 49.7167 248.926 51.2407 248.613 52.8377C247.955 56.1972 247.496 59.6031 246.951 62.9824C246.851 63.5921 246.711 64.2017 247.031 65.0697C247.35 64.7251 247.849 64.4336 247.955 64.036C248.919 60.4313 249.817 56.8134 250.741 53.1955C250.741 53.1889 250.874 53.1955 250.921 53.222C250.981 53.2684 251.021 53.3479 251.154 53.4738C250.502 57.4164 249.764 61.2927 248.906 65.5004C248.294 67.0841 247.809 68.3364 247.21 69.6087C247.037 69.6551 246.971 69.6882 246.911 69.7213C246.977 69.834 247.051 69.9466 247.124 70.2183C247.09 70.5761 247.051 70.7749 247.017 70.9803C247.017 70.9803 246.818 71.0201 246.718 71.0399C244.51 69.5888 244.031 67.6871 244.736 65.2155C245.767 61.5976 246.585 57.92 247.45 54.2623C247.543 53.8581 247.39 53.3876 246.878 52.8642C245.647 56.6212 244.41 60.3783 243.18 64.1354C242.861 64.0493 242.548 63.9565 242.229 63.8704C242.681 62.0813 243.134 60.2922 243.606 58.1254C244.444 53.5864 245.248 49.4318 246.06 45.2705C247.509 44.4952 248.78 44.4753 249.837 46.1319L249.844 46.1253Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4438,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M221.188 96.2197C221.168 96.392 221.162 96.6371 220.989 96.7763C219.945 97.9027 219.074 98.89 218.196 99.8707C218.196 99.8707 218.183 99.8707 218.183 99.884C218.023 99.3009 217.551 98.5322 217.77 98.1479C218.488 96.8624 219.553 95.7691 220.284 94.4902C220.823 93.5493 221.062 92.4295 221.395 91.3825C221.534 90.9319 221.428 90.3488 221.681 89.9976C223.456 87.4598 225.385 85.0346 227.06 82.4371C227.825 81.2444 228.131 79.7601 228.65 78.0836C228.67 77.6728 228.683 77.5933 228.69 77.5072C228.996 77.2819 229.302 77.0566 229.747 76.5596C231.583 73.0146 233.245 69.7279 235.001 66.4943C235.253 66.0305 235.985 65.8185 236.597 65.4872C236.743 65.4408 236.79 65.3944 236.836 65.3546C236.743 65.2817 236.643 65.2088 236.537 65.0167C236.524 64.904 236.497 64.6721 236.59 64.5264C237.162 64.1222 237.641 63.8637 238.126 63.6053C237.481 65.5402 237.036 67.5744 236.151 69.3966C233.564 74.744 230.937 80.0781 228.058 85.2731C225.996 88.9904 223.509 92.4692 221.188 96.2329V96.2197Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4443,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M202.748 127.37C206.02 124.355 209.351 121.486 212.696 118.444C212.716 118.272 212.716 118.265 212.889 118.245C213.946 117.251 214.831 116.271 215.709 115.29C216.773 114.177 217.83 113.064 219.04 111.877C219.892 111.838 220.597 111.877 221.893 111.95C219.692 114.468 217.897 116.675 215.942 118.722C212.723 122.089 209.385 125.349 206.126 128.688C205.873 128.947 205.873 129.437 205.74 130C205.727 130.179 205.488 130.179 205.368 130.173C205.162 130.02 205.082 129.874 204.876 129.702C204.663 129.53 204.57 129.397 204.357 129.225C203.759 128.635 203.28 128.085 202.748 127.376V127.37Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4448,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M245.867 45.2109C245.255 49.4251 244.444 53.5798 243.613 57.92C242.901 58.1055 242.209 58.1121 241.312 57.9399C241.099 57.5357 241.092 57.3037 241.092 56.8664C241.451 52.9569 241.81 49.2595 242.163 45.5554C243.333 45.4229 244.497 45.2837 245.867 45.2042V45.2109Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4453,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M241.085 57.0784C241.085 57.3104 241.092 57.5423 241.099 57.9465C240.201 59.8681 239.297 61.6174 238.259 63.4794C237.641 63.8505 237.162 64.1089 236.47 64.3739C236.231 63.7975 236.191 63.2011 236.151 62.6114C236.284 62.227 236.424 61.8427 236.583 61.1668C236.617 60.7892 236.623 60.6964 236.63 60.6102C237.421 58.0525 238.219 55.4948 239.177 52.8575C239.596 53.1822 239.855 53.593 240.121 53.9972C240.46 54.64 240.221 55.508 240.174 56.3827C240.161 56.5947 240.766 56.8465 241.085 57.0784Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4458,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M215.529 115.303C214.831 116.271 213.953 117.251 212.896 118.252C212.563 116.37 213.913 115.807 215.529 115.303Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4463,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M238.618 88.6724C238.811 88.9573 238.864 89.2422 238.911 89.5272C238.711 89.5272 238.505 89.5272 238.306 89.5205C238.359 89.2356 238.419 88.9507 238.618 88.6724Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4468,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.887 130.676C205.76 130.643 205.747 130.411 205.734 130.298C206.226 130.544 206.731 130.908 207.237 131.451C207.237 131.63 207.01 131.617 206.897 131.61C206.698 131.465 206.611 131.326 206.399 131.153C206.186 130.981 206.099 130.848 205.88 130.676L205.887 130.676Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4473,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M179.599 24.3846C179.346 24.749 178.921 25.0803 178.502 25.405C178.355 25.1598 178.202 24.9147 178.056 24.6695C178.515 24.5635 178.974 24.4508 179.599 24.3779V24.3846Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4478,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M181.182 38.24C180.683 38.6575 180.011 39.0882 179.32 39.3798C179.865 38.9093 180.437 38.578 181.182 38.24Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4483,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.002 28.4928C205.055 28.2742 205.195 28.1483 205.341 28.0224C205.341 28.0224 205.441 28.1284 205.501 28.1814C205.361 28.3139 205.228 28.4398 205.002 28.4862V28.4928Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4488,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M166.492 193.791C169.437 196.481 172.377 199.172 175.329 202.054C175.336 202.246 175.296 202.286 175.296 202.286C174.751 202.432 174.206 202.571 173.487 202.723C158.604 191.141 145.597 177.709 132.111 164.49C132.21 163.814 132.33 163.43 132.603 163.098C136.626 166.822 140.51 170.473 144.353 174.158C149.946 179.518 155.459 184.965 161.138 190.233C162.688 191.671 164.696 192.618 166.498 193.784L166.492 193.791Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4493,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M132.443 163.045C132.323 163.43 132.21 163.814 132.037 164.344C127.741 160.348 123.525 156.194 119.269 152.072C116.509 149.395 113.71 146.765 110.631 144.074C110.245 144.041 110.165 144.055 110.079 144.068C110.079 144.068 110.059 144.088 110.032 143.962C109.866 143.75 109.72 143.664 109.573 143.577C109.573 143.577 109.56 143.604 109.534 143.471C109.367 143.253 109.221 143.167 109.075 143.08C109.075 143.08 109.088 143.1 109.075 142.915C108.077 141.848 107.08 140.973 106.089 140.092C106.089 140.092 106.069 140.092 106.036 139.979C105.863 139.774 105.723 139.688 105.583 139.602C105.583 139.602 105.57 139.622 105.537 139.496C105.364 139.277 105.224 139.191 105.085 139.105C105.085 139.105 105.085 139.131 105.085 138.966C104.752 138.409 104.426 138.018 104.094 137.634C104.38 137.369 104.659 137.11 105.151 136.799C108.556 139.741 111.755 142.729 115.053 145.844C120.918 151.668 126.677 157.36 132.443 163.059V163.045Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4498,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M69.6862 102.853C70.7436 103.005 71.7943 103.164 73.0246 103.33C74.7336 104.801 76.2698 106.265 77.9656 107.789C78.1252 107.855 78.1318 107.855 78.1784 107.968C78.3646 108.18 78.5042 108.273 78.717 108.518C81.264 111.175 83.7312 113.68 86.1651 116.35C85.6398 116.927 85.141 117.337 84.6489 117.742C83.2856 116.238 81.9756 114.674 80.5392 113.242C79.5217 112.222 78.2914 111.414 77.2274 110.433C75.7976 109.114 74.4344 107.716 72.8716 106.331C72.6987 106.311 72.6854 106.331 72.6256 106.166C71.7743 105.45 70.983 104.887 70.1916 104.324C70.1916 104.324 70.185 104.337 70.165 104.204C69.9921 103.992 69.8458 103.913 69.6929 103.827C69.6929 103.827 69.6929 103.84 69.7195 103.674C69.7195 103.283 69.6995 103.065 69.6796 102.846L69.6862 102.853Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4503,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M121.517 160.004C120.899 159.461 119.888 159.003 119.735 158.347C119.203 156.088 116.323 152.973 113.962 152.404C112.859 152.139 111.841 151.734 113.031 150.21C113.051 150.058 113.058 150.051 113.058 150.051C114.421 149.78 115.459 150.051 116.49 151.184C118.81 153.742 121.371 156.081 123.771 158.573C124.383 159.202 124.742 160.07 125.221 160.826C125.042 161.057 124.855 161.283 124.676 161.515C123.672 161.104 122.661 160.7 121.657 160.117C121.617 159.964 121.57 159.984 121.524 160.004L121.517 160.004Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4508,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M114.953 145.704C111.755 142.716 108.556 139.728 105.211 136.653C103.116 134.546 101.168 132.518 99.2525 130.212C99.6116 129.821 99.9308 129.715 100.39 129.689C102.631 131.75 104.759 133.704 106.827 135.712C109.886 138.681 112.905 141.696 115.884 144.823C115.532 145.201 115.239 145.453 114.947 145.698L114.953 145.704Z",
                fill: "#10304B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4513,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M84.4627 133.651C84.23 133.459 84.0039 133.26 83.7246 132.763C83.166 132.035 82.6539 131.61 82.1418 131.186C82.1418 131.186 82.1418 131.173 82.1285 131.18C82.0022 130.63 81.8891 130.073 81.7096 129.358C83.0862 130.153 84.6755 130.954 85.9457 132.107C89.3705 135.235 92.7022 138.469 95.9541 141.775C96.4794 142.312 96.4129 143.432 96.5526 144.452C96.4861 144.618 96.4262 144.624 96.2068 144.565C95.861 144.538 95.728 144.565 95.6016 144.598C95.6016 144.598 95.6083 144.585 95.6016 144.445C95.4287 144.233 95.2625 144.167 95.0962 144.094C95.0962 144.094 95.1095 144.088 95.1494 143.889C95.1295 142.12 94.1585 141.874 92.8618 142.093C92.8618 142.093 92.6822 141.961 92.6556 141.735C92.4561 141.378 92.2832 141.238 92.1103 141.106C92.1103 141.106 92.1236 141.106 92.1103 140.96C91.9374 140.755 91.7778 140.682 91.6116 140.615C91.6116 140.615 91.5983 140.602 91.5916 140.615C91.0463 139.946 90.501 139.264 89.7894 138.614C89.6165 138.641 89.6232 138.621 89.6498 138.449C88.4727 136.13 87.156 134.115 84.4627 133.645V133.651Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4518,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M100.263 129.609C99.9375 129.715 99.6182 129.828 99.186 130.067C97.1976 128.576 95.3157 126.952 93.2076 125.11C92.0904 123.831 91.1061 122.837 90.348 121.691C89.8958 121.008 89.8094 120.094 89.7096 119.352C92.117 121.519 94.3647 123.613 96.6922 125.852C97.9358 127.197 99.0995 128.403 100.257 129.609H100.263Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4523,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.55 119.286C89.8027 120.094 89.8958 121.015 90.3414 121.691C91.0995 122.837 92.0837 123.831 93.0546 125.031C92.5093 125.15 91.6182 125.382 91.299 125.057C89.0579 122.784 86.9432 120.399 84.7154 117.894C85.141 117.331 85.6398 116.92 86.3114 116.39C86.7038 116.476 86.9099 116.682 87.136 117.046C87.6282 117.576 88.107 117.94 88.7254 118.351C89.0912 118.689 89.3239 118.987 89.55 119.286Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4528,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M162.801 197.124C162.309 197.157 161.75 197.031 161.025 196.846C160.866 196.779 160.872 196.773 160.819 196.667C160.666 196.422 160.533 196.329 160.367 196.283C160.367 196.283 160.38 196.283 160.307 196.137C158.784 194.765 157.328 193.539 155.878 192.313C155.878 192.313 155.891 192.307 155.851 192.227C155.665 192.207 155.526 192.26 155.386 192.313C154.202 191.194 153.018 190.074 151.835 188.961C152.028 188.755 152.22 188.55 152.407 188.338C156.782 190.041 159.496 193.837 162.801 197.124Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4533,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M167.775 201.106C165.281 201.749 164.61 199.549 163.386 197.946C165.674 197.667 166.445 199.629 167.775 201.106Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4538,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.085 136.64C100.436 134.93 98.7936 133.221 97.1245 131.345C97.1045 131.173 97.1045 131.173 97.1045 131.173C98.767 132.876 100.423 134.579 102.085 136.461C102.085 136.64 102.085 136.64 102.085 136.64Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4543,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M155.898 192.479C157.334 193.533 158.784 194.758 160.307 196.137C158.89 195.077 157.401 193.864 155.898 192.479Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4548,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M106.102 140.264C107.086 140.973 108.077 141.855 109.081 142.908C108.097 142.199 107.106 141.318 106.102 140.264Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4553,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M187.339 214.339C188.084 214.571 188.909 214.955 189.74 215.512C188.975 215.287 188.197 214.889 187.339 214.339Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4558,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M103.967 137.627C104.426 138.011 104.752 138.396 105.091 138.946C104.606 138.727 104.114 138.349 103.595 137.806C103.575 137.634 103.575 137.634 103.575 137.634C103.661 137.634 103.748 137.634 103.961 137.634L103.967 137.627Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4563,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M74.1218 121.737C74.0487 121.512 73.9755 121.287 73.9024 121.061C74.1285 121.194 74.3612 121.326 74.5009 121.592C74.3147 121.731 74.2149 121.737 74.1218 121.744V121.737Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4568,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M111.05 148.077C110.837 147.878 110.617 147.679 110.405 147.48C110.498 147.407 110.584 147.334 110.677 147.262C110.797 147.441 110.923 147.613 111.05 147.931C111.056 148.07 111.05 148.077 111.05 148.077Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4573,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M185.743 213.325C185.95 213.279 186.269 213.345 186.681 213.557C186.468 213.61 186.162 213.531 185.743 213.325Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4578,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M189.833 215.817C190.046 215.757 190.332 215.83 190.691 216.042C190.478 216.102 190.192 216.029 189.833 215.817Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4583,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M190.831 216.32C191.05 216.254 191.336 216.334 191.689 216.539C191.469 216.599 191.183 216.526 190.831 216.32Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4588,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M65.1243 114.654C64.9248 114.7 64.6455 114.614 64.2864 114.409C64.4859 114.362 64.7652 114.442 65.1243 114.654Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4593,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M79.2291 126.846C79.4352 126.793 79.7146 126.873 80.067 127.085C79.8609 127.138 79.5816 127.058 79.2291 126.846Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4598,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M74.1883 121.843C74.2149 121.737 74.3147 121.731 74.5607 121.704C74.7602 121.823 74.8134 121.949 74.86 122.082C74.6605 122.035 74.4543 121.989 74.1817 121.837L74.1883 121.843Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4603,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M78.6505 125.865C78.8168 125.945 78.983 126.177 79.1493 126.561C78.983 126.482 78.8168 126.25 78.6505 125.865Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4608,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M80.6389 127.867C80.8185 127.946 80.9781 128.171 81.1443 128.556C80.9714 128.476 80.7985 128.251 80.6389 127.867Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4613,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M111.056 148.07C111.276 148.13 111.489 148.196 111.701 148.262C111.522 148.269 111.349 148.275 111.11 148.183C111.05 148.083 111.05 148.077 111.056 148.07Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4618,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.7685 118.789C68.6688 118.756 68.6621 118.656 68.6754 118.418C68.7885 118.365 68.8882 118.451 68.968 118.557C68.9813 118.577 68.8949 118.669 68.7685 118.789Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4623,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.6422 118.139C68.5025 118.245 68.3629 118.166 68.2365 117.894C68.3695 117.801 68.5025 117.887 68.6422 118.139Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4628,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.794 213.822C186.907 213.782 187.047 213.869 187.233 214.081C187.127 214.12 186.974 214.034 186.794 213.822Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4633,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M94.112 127.701C94.2716 127.754 94.3979 127.847 94.5575 128.085C94.4511 128.145 94.3181 128.052 94.1652 127.807C94.112 127.694 94.112 127.701 94.112 127.701Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4638,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M94.112 127.694C94.0521 127.628 93.9923 127.555 93.9324 127.489C93.9723 127.515 94.0189 127.535 94.0854 127.628C94.112 127.694 94.112 127.694 94.112 127.694Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4643,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M80.1867 127.337C80.3197 127.25 80.4527 127.336 80.599 127.588C80.5059 127.621 80.3596 127.542 80.1867 127.337Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4648,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M76.7021 123.851C76.8284 123.778 76.9614 123.871 77.1144 124.116C77.0279 124.143 76.8883 124.057 76.7021 123.851Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4653,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M76.5757 123.255C76.6688 123.301 76.6688 123.387 76.6622 123.599C76.5624 123.646 76.456 123.56 76.3696 123.46C76.3563 123.447 76.4427 123.348 76.5757 123.248L76.5757 123.255Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4658,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M78.1983 125.342C78.3247 125.262 78.4577 125.355 78.6106 125.607C78.5242 125.634 78.3845 125.547 78.1983 125.342Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4663,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M77.6929 124.852C77.8259 124.772 77.9589 124.858 78.1052 125.11C78.0121 125.137 77.8725 125.057 77.6929 124.852Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4668,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M77.1942 124.348C77.3272 124.269 77.4602 124.355 77.6065 124.606C77.5134 124.633 77.3737 124.553 77.1942 124.348Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4673,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M60.2298 107.822C60.2897 107.888 60.3429 107.961 60.4027 108.028C60.3628 108.001 60.3229 107.981 60.2564 107.888C60.2298 107.822 60.2298 107.822 60.2298 107.822Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4678,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M66.707 109.803C66.7668 109.876 66.8267 109.943 66.8865 110.016C66.8466 109.989 66.8001 109.969 66.7336 109.876C66.707 109.81 66.707 109.803 66.707 109.803Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4683,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M67.6446 117.145C67.505 117.251 67.3653 117.172 67.239 116.9C67.3786 116.807 67.505 116.894 67.6446 117.145Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4688,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M67.1459 116.648C67.0062 116.754 66.8732 116.668 66.7402 116.403C66.8732 116.31 67.0062 116.397 67.1459 116.648Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4693,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.2099 115.76C68.2698 115.833 68.3296 115.913 68.3961 115.986C68.3496 115.966 68.303 115.939 68.2299 115.847C68.2032 115.774 68.2099 115.76 68.2099 115.76Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4698,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.1434 117.642C68.0038 117.748 67.8708 117.662 67.7378 117.397C67.8708 117.311 68.0038 117.397 68.1434 117.642Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4703,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M66.6471 116.151C66.5075 116.251 66.3745 116.171 66.2415 115.9C66.3745 115.807 66.5075 115.9 66.6471 116.151Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4708,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.1966 115.774C68.0304 115.727 67.904 115.635 67.751 115.383C67.6978 115.27 67.7112 115.263 67.7112 115.263C67.8774 115.31 68.0037 115.403 68.1567 115.648C68.2099 115.76 68.2033 115.767 68.1966 115.774Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4713,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M66.1484 115.654C66.0154 115.754 65.8757 115.674 65.7427 115.403C65.8757 115.31 66.0087 115.403 66.1484 115.654Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4718,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M67.6979 115.277C67.638 115.204 67.5782 115.131 67.5183 115.051C67.5648 115.078 67.6114 115.098 67.6846 115.191C67.7112 115.263 67.7045 115.27 67.6979 115.27V115.277Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4723,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M65.6496 115.157C65.5166 115.257 65.377 115.177 65.244 114.906C65.377 114.813 65.51 114.906 65.6496 115.157Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4728,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M112.539 149.568L112.36 149.342C112.406 149.369 112.453 149.389 112.519 149.488C112.546 149.561 112.539 149.568 112.539 149.568Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4733,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M109.62 143.69C109.713 143.664 109.859 143.75 110.039 143.962C109.939 143.995 109.806 143.902 109.62 143.69Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4738,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M109.128 143.193C109.221 143.167 109.367 143.253 109.547 143.465C109.447 143.498 109.314 143.405 109.128 143.193Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4743,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M110.112 144.154C110.159 144.055 110.245 144.041 110.458 144.041C110.445 144.121 110.298 144.18 110.112 144.154Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4748,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M113.045 150.064C112.885 150.011 112.752 149.919 112.599 149.68C112.546 149.574 112.553 149.568 112.553 149.561C112.719 149.607 112.852 149.7 112.998 149.945C113.051 150.058 113.045 150.064 113.038 150.064H113.045Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4753,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M160.42 196.402C160.54 196.336 160.673 196.428 160.826 196.68C160.739 196.7 160.606 196.614 160.42 196.402Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4758,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M163.319 197.661C163.206 197.727 163.073 197.634 162.927 197.382C163.04 197.316 163.173 197.409 163.319 197.661Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4763,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.1095 128.695C95.1693 128.768 95.2292 128.834 95.2824 128.907C95.2425 128.88 95.2026 128.854 95.1361 128.761C95.1095 128.695 95.1095 128.695 95.1095 128.695Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4768,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M81.1909 128.821C81.3172 128.735 81.4569 128.821 81.5965 129.086C81.4702 129.172 81.3305 129.086 81.1909 128.821Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4773,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.1095 128.688C94.9499 128.642 94.8169 128.549 94.6639 128.304C94.7703 128.244 94.8967 128.344 95.0563 128.582C95.1095 128.688 95.1095 128.688 95.1095 128.688Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4778,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.0979 131.18C96.9383 131.127 96.8053 131.034 96.6523 130.789C96.5991 130.683 96.5991 130.676 96.5991 130.676C96.7587 130.723 96.8917 130.822 97.0447 131.067C97.0979 131.18 97.0979 131.18 97.0979 131.18Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4783,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M96.5991 130.683C96.5393 130.61 96.4794 130.544 96.4196 130.471C96.4595 130.497 96.506 130.517 96.5725 130.61C96.5991 130.676 96.5991 130.683 96.5925 130.683H96.5991Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4788,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M105.637 139.714C105.73 139.688 105.869 139.774 106.056 139.986C105.962 140.013 105.823 139.926 105.637 139.714Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4793,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M103.575 137.64C103.515 137.574 103.455 137.501 103.396 137.435C103.435 137.461 103.482 137.481 103.548 137.574C103.575 137.64 103.575 137.64 103.575 137.64Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4798,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.085 136.646C102.145 136.713 102.205 136.786 102.272 136.852C102.232 136.825 102.185 136.805 102.119 136.713C102.092 136.646 102.092 136.646 102.092 136.646H102.085Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4803,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M155.512 192.313C155.526 192.254 155.665 192.201 155.851 192.234C155.811 192.32 155.725 192.32 155.512 192.313Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4808,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M105.138 139.217C105.231 139.191 105.371 139.277 105.557 139.489C105.464 139.516 105.324 139.429 105.138 139.217Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4813,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M100.396 129.695C99.0995 128.41 97.9358 127.204 96.8053 125.72C97.4171 125.368 98.0023 125.296 98.6141 125.388C99.5318 126.475 100.423 127.396 101.314 128.317C101.52 128.059 101.733 127.807 101.939 127.549C100.829 126.767 99.718 125.985 98.5875 125.037C97.0713 123.268 95.575 121.671 94.4312 120.452C94.8834 119.219 95.2425 118.239 95.7413 117.251C95.974 117.238 96.0671 117.231 96.1469 117.238C96.1336 117.251 96.1137 117.218 96.1735 117.338C96.3664 117.55 96.506 117.649 96.6324 117.742C96.6124 117.742 96.6191 117.702 96.6789 117.841C97.1777 118.066 97.6166 118.153 98.2151 118.272C98.7471 118.484 99.1262 118.656 99.5584 118.994C101.088 120.346 102.564 121.539 104.154 122.804C104.34 122.91 104.42 122.943 104.493 123.135C104.978 123.825 105.477 124.355 106.016 125.024C106.355 125.382 106.647 125.607 106.993 125.985C107.938 127.012 108.822 127.886 109.753 128.92C110.937 131.73 113.597 132.538 115.818 134.155C120.373 138.82 124.829 143.332 129.337 147.785C129.796 148.236 130.588 148.348 131.286 148.786C133.121 150.701 134.904 152.437 136.746 154.345C137.976 155.564 139.146 156.624 140.37 157.837C141.906 159.434 143.396 160.879 144.965 162.469C145.63 162.986 146.215 163.343 146.914 163.827C148.982 165.948 150.937 167.955 152.952 170.102C153.624 170.818 154.249 171.381 154.934 172.097C155.925 173.15 156.856 174.051 157.853 175.098C158.571 175.834 159.216 176.424 159.881 177.159C159.988 177.577 160.081 177.848 160.087 178.2C160.008 178.279 159.855 178.431 159.855 178.431C157.993 176.775 156.124 175.118 154.076 173.276C153.57 172.865 153.251 172.64 152.905 172.349C152.839 172.256 152.799 172.229 152.759 172.203C152.819 172.269 152.879 172.342 152.998 172.541C153.351 172.918 153.644 173.157 153.936 173.402C153.644 173.521 153.191 173.826 153.085 173.733C152.107 172.879 151.183 171.964 150.072 170.917C149.853 170.752 149.806 170.725 149.76 170.705C149.82 170.778 149.886 170.844 149.946 170.917C149.793 171.461 149.647 172.011 149.474 172.733C149.454 172.905 149.447 172.912 149.447 172.912C148.895 173.409 148.343 173.899 147.619 174.403C147.446 174.409 147.439 174.416 147.446 174.224C146.754 173.521 146.062 173.011 145.264 172.448C145.038 172.296 144.939 172.176 144.885 171.852C144.067 170.374 143.575 168.664 141.354 168.843C140.809 168.326 140.383 167.896 139.964 167.286C138.488 165.888 137.012 164.669 135.389 163.363C132.29 160.388 129.344 157.486 126.372 154.61C122.927 151.284 119.442 147.99 115.977 144.684C112.938 141.689 109.919 138.674 106.86 135.705C104.792 133.691 102.664 131.743 100.423 129.682L100.396 129.695Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4818,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M139.931 167.478C140.35 167.909 140.776 168.34 141.394 169.009C142.671 170.175 143.755 171.116 144.839 172.05C144.905 172.196 145.005 172.315 145.318 172.6C146.136 173.336 146.774 173.886 147.406 174.436C150.265 177.272 153.151 180.081 155.978 182.944C159.436 186.443 162.847 189.988 166.378 193.659C164.683 192.625 162.674 191.684 161.125 190.246C155.452 184.978 149.939 179.531 144.34 174.171C140.49 170.487 136.613 166.836 132.589 163.112C126.671 157.36 120.912 151.661 115.046 145.844C115.239 145.473 115.532 145.221 115.884 144.843C119.409 148.017 122.887 151.317 126.332 154.637C129.311 157.506 132.25 160.415 135.416 163.542C137.058 165.02 138.488 166.259 139.924 167.498L139.931 167.478Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4823,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M162.98 179.651C165.833 182.447 168.646 185.29 171.552 188.033C173.58 189.948 175.735 191.737 177.883 193.712C177.916 193.996 177.896 194.156 177.843 194.546C177.817 194.785 177.817 194.778 177.817 194.778C176.427 193.804 174.904 192.963 173.674 191.823C169.038 187.523 164.49 183.116 159.868 178.597C159.821 178.438 159.981 178.286 160.187 178.272C160.885 178.577 161.384 178.889 162.009 179.286C162.249 179.386 162.348 179.399 162.575 179.485C162.794 179.584 162.881 179.618 162.974 179.651H162.98Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4828,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M199.908 208.541C200.281 208.693 200.653 208.846 201.132 209.104C201.218 209.535 201.192 209.86 201.132 210.589C199.609 209.833 198.226 209.144 196.291 208.183C197.215 207.951 197.547 207.872 198.046 207.759C198.485 207.839 198.758 207.945 199.203 208.269C199.556 208.508 199.735 208.528 199.908 208.548V208.541Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4833,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.721 205.771C195.133 206.354 195.539 206.911 195.951 207.474C195.872 207.607 195.798 207.739 195.719 207.878C194.581 207.216 193.444 206.56 192.3 205.897C192.38 205.725 192.453 205.553 192.533 205.387C193.132 205.526 193.73 205.665 194.502 205.791C194.675 205.771 194.721 205.751 194.721 205.778V205.771Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4838,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M191.516 204.877C190.944 204.704 190.472 204.439 190 204.168C190.093 204.029 190.179 203.896 190.272 203.757C190.718 204.095 191.17 204.439 191.516 204.877Z",
                fill: "#054D7F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4843,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M149.421 172.918C149.487 172.991 149.547 173.064 149.607 173.137C149.56 173.117 149.514 173.091 149.441 172.998C149.414 172.925 149.421 172.918 149.421 172.918Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4848,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M182.804 201.252C182.944 201.193 183.083 201.14 183.256 201.166C183.296 201.252 183.29 201.259 183.17 201.259C183.05 201.259 182.798 201.259 182.798 201.259L182.804 201.252Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4853,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M183.303 201.246C183.469 201.292 183.602 201.385 183.748 201.63C183.802 201.743 183.795 201.749 183.669 201.749C183.542 201.749 183.296 201.749 183.296 201.749C183.296 201.749 183.296 201.749 183.296 201.63C183.296 201.511 183.296 201.259 183.296 201.259C183.296 201.259 183.296 201.259 183.303 201.252V201.246Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4858,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M175.356 202.22C175.429 202.293 175.482 202.385 175.536 202.478C175.482 202.458 175.429 202.438 175.329 202.352C175.29 202.286 175.329 202.24 175.349 202.22H175.356Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4863,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M176.812 203.253C176.753 203.174 176.686 203.094 176.626 203.015C176.673 203.035 176.726 203.055 176.799 203.154C176.826 203.233 176.812 203.247 176.812 203.247V203.253Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4868,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M176.832 203.233C176.999 203.28 177.132 203.373 177.278 203.618C177.324 203.737 177.291 203.77 177.291 203.77C177.132 203.711 177.005 203.611 176.859 203.366C176.806 203.253 176.819 203.24 176.826 203.233H176.832Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4873,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M177.79 204.274C177.63 204.214 177.504 204.121 177.351 203.876C177.298 203.77 177.324 203.737 177.338 203.724C177.511 203.764 177.644 203.856 177.783 204.108C177.823 204.234 177.783 204.274 177.783 204.274H177.79Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4878,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M177.843 204.214C177.916 204.287 177.97 204.373 178.023 204.466C177.97 204.446 177.916 204.426 177.823 204.34C177.783 204.274 177.823 204.234 177.837 204.214H177.843Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4883,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M179.034 204.95C179.074 204.923 179.081 205.023 179.081 205.023C179.081 205.023 178.993 204.976 179.034 204.95Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4888,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M177.817 194.792C177.876 194.865 177.936 194.931 177.996 195.004C177.956 194.977 177.91 194.951 177.843 194.858C177.817 194.785 177.817 194.792 177.817 194.792Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4893,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M243.579 209.701C243.579 209.164 243.586 208.627 243.732 207.998C244.278 208.667 244.683 209.436 245.089 210.198H245.076C245.561 213.06 246.046 215.923 246.539 218.991C245.721 219.673 244.883 220.574 244.071 220.548C238.938 220.395 233.804 220.024 228.67 219.773C228.244 219.753 227.805 220.091 227.307 220.409C225.524 220.111 223.802 219.693 222.106 219.196C219.912 218.56 217.71 217.93 215.576 217.135C214.858 216.87 214.326 216.088 213.694 215.36C213.68 215.174 213.907 215.101 214.026 215.088C214.498 215.386 214.818 215.916 215.217 215.989C219.426 216.804 223.636 217.599 227.865 218.288C230.279 218.686 232.726 218.891 235.539 219.315C238.399 219.494 240.886 219.653 243.353 219.534C244.351 219.488 245.92 219.428 245.501 217.593C244.889 214.949 244.224 212.325 243.586 209.687L243.579 209.701Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4898,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M183.17 201.252C183.296 201.252 183.296 201.504 183.303 201.623C183.137 201.703 183.004 201.61 182.851 201.358C182.797 201.246 183.05 201.252 183.17 201.252Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4903,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M183.343 201.829C183.303 201.743 183.549 201.749 183.669 201.749C183.655 201.809 183.516 201.862 183.343 201.829Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4908,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.532 222.357C246.785 222.595 246.964 222.96 247.177 223.483C246.871 224.974 246.525 226.306 246.332 227.042C244.231 226.876 242.542 226.75 240.859 226.617C240.839 226.472 240.826 226.326 240.806 226.174C241.983 225.816 243.22 225.584 244.317 225.06C244.856 224.802 245.142 224.02 245.528 223.271C245.827 222.867 246.14 222.668 246.532 222.357Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4913,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.496 228.102C205.301 229.248 203.805 227.764 202.276 226.16C203.951 226.67 205.634 227.366 207.496 228.102Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4918,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M198.272 224.225C198.478 224.066 198.698 224.093 199.077 224.113C199.622 224.292 200.008 224.471 200.56 224.636C200.872 224.855 201.012 225.08 201.232 225.425C200.301 225.16 199.296 224.782 198.272 224.225Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4923,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.2938 211.715C64.1134 210.191 67.8109 209.323 69.5532 206.997C72.1268 203.545 76.4161 202.677 79.0495 199.45C79.1693 200.099 79.0562 200.669 78.9631 201.239C78.8766 201.736 78.5707 202.538 78.7702 202.697C80.2931 203.909 79.4086 204.645 78.471 205.619C77.9922 206.116 77.9257 206.997 77.673 207.706C77.673 207.706 77.6663 207.713 77.5533 207.766C77.3538 207.958 77.2673 208.097 77.0745 208.369C74.6006 209.959 72.2399 211.43 69.8658 212.888C68.3097 213.842 67.3587 215.479 65.3038 215.962C63.2157 216.453 61.3271 217.771 59.352 218.732C57.8291 219.468 55.6346 219.812 54.9097 221.025C52.8283 224.537 49.0643 224.663 45.9986 225.743C43.7509 226.531 41.9687 227.552 40.2929 229.049C37.1673 229.507 34.0418 229.957 30.9162 230.414C30.8697 230.209 30.8231 230.003 30.7766 229.791C33.5364 229.175 36.3427 228.917 37.839 225.809C38.2513 224.948 40.5788 225.107 41.9354 224.563C42.7401 224.239 43.3652 223.47 44.0768 222.9C43.2056 222.814 42.3078 222.536 41.4766 222.675C39.2887 223.046 37.1407 223.656 34.9528 224.033C34.3344 224.139 33.6361 223.781 32.2862 223.49C34.4208 222.609 35.8306 222.026 37.2737 221.257C37.3003 221.071 37.2937 220.826 37.3003 220.707C37.7259 219.945 38.1515 219.302 38.7035 218.825C39.2155 219.242 39.6877 219.779 39.967 219.7C40.6187 219.508 41.1773 219.011 41.9554 218.659C42.5206 218.514 42.9063 218.335 43.2987 218.162C43.312 218.162 43.3319 218.162 43.5314 218.196C49.5897 216.055 55.4417 213.882 61.2938 211.708V211.715ZM53.3403 221.76C53.2672 221.813 53.1874 221.866 53.1142 221.919C53.2206 221.906 53.3204 221.9 53.3403 221.76Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4928,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M40.499 229.056C41.9753 227.558 43.7575 226.538 46.0053 225.749C49.071 224.669 52.8349 224.543 54.9164 221.032C55.6346 219.819 57.8358 219.474 59.3586 218.739C61.3337 217.778 63.2223 216.466 65.3105 215.969C67.3653 215.485 68.3163 213.849 69.8724 212.895C72.2465 211.437 74.6139 209.966 77.1875 208.309C77.5333 208.018 77.6264 207.878 77.673 207.719C77.673 207.719 77.673 207.713 77.8525 207.693C80.9049 204.97 85.0213 205.288 88.3064 203.538C88.5592 203.399 89.2042 203.982 89.6631 204.234C86.1784 206.938 82.7004 209.634 79.1692 212.504C77.8658 213.232 76.456 213.59 75.3787 214.399C68.2964 219.693 60.3296 223.099 51.9305 225.63C48.1865 226.763 44.4425 227.916 40.5057 229.056H40.499ZM56.4792 221.164C56.3595 221.237 56.2398 221.31 56.1201 221.383C56.2464 221.449 56.406 221.601 56.4792 221.562C56.5856 221.515 56.6321 221.323 56.4792 221.164Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4933,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M23.3817 209.681C23.4083 209.27 23.4349 208.866 23.5945 208.289C23.9336 207.488 24.1398 206.845 24.346 206.202C24.9578 205.453 25.6959 204.771 26.1681 203.942C27.5047 201.597 28.735 199.191 30.1914 196.78C28.8747 201.444 27.385 206.136 25.8489 211.013C24.8447 212.716 23.7075 214.147 22.976 215.764C22.198 217.48 21.8189 219.375 21.2603 221.191C21.0342 221.138 20.8015 221.078 20.5754 221.025C21.2071 217.97 21.8389 214.916 22.7832 211.655C23.1888 210.854 23.2886 210.257 23.3883 209.661L23.3817 209.681Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4938,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M15.375 220.395C15.2087 219.667 14.7698 218.686 14.9294 217.805C15.4747 214.757 16.2262 211.748 16.9112 208.72C16.9178 208.68 17.0641 208.621 17.0841 208.64C17.1971 208.733 17.2969 208.853 17.4365 209.111C16.7782 212.901 16.0799 216.546 15.375 220.395Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4943,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M23.262 209.74C23.2819 210.277 23.1822 210.88 22.9361 211.583C22.8031 211.318 22.8164 210.953 22.8231 210.396C22.9228 210.072 23.0359 209.939 23.262 209.74Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4948,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M38.351 193.672C37.686 196.177 36.9811 198.509 36.2363 201.047C35.292 203.293 34.3743 205.341 33.1972 207.554C31.0226 207.925 29.7591 208.912 29.3003 210.794C28.9545 212.205 28.7018 213.643 28.3161 215.048C28.1964 215.499 27.8107 215.89 27.5047 216.267C27.1523 216.711 26.5205 217.062 26.4075 217.546C26.1016 218.885 26.0018 220.27 25.8223 221.635C25.5164 220.687 24.9844 219.739 24.9711 218.785C24.9644 217.864 25.4964 216.943 25.809 215.823C26.607 212.954 26.7333 209.774 28.3094 207.706C31.1889 203.929 32.0202 199.344 34.3277 195.434C35.0925 194.136 36.3161 192.79 38.3444 193.672L38.351 193.672Z",
                fill: "#E8423E"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4953,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M26.0417 221.641C26.0085 220.276 26.1082 218.891 26.4141 217.553C26.5272 217.069 27.1589 216.718 27.5114 216.274C27.8173 215.89 28.1964 215.499 28.3227 215.055C28.7084 213.65 28.9611 212.212 29.3069 210.801C29.7658 208.919 31.0293 207.931 33.1241 207.726C32.9778 209.25 32.6453 210.774 32.2928 212.497C32.1332 212.934 31.9869 213.166 31.8406 213.71C31.8273 214.233 31.8207 214.452 31.814 214.67C31.4948 216.519 31.1689 218.374 30.863 220.442C29.3335 220.992 27.7973 221.316 26.0417 221.641Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4958,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M60.6953 14.5711C63.0694 15.7638 65.2639 16.9698 67.4651 18.1758C67.3254 18.4541 67.1858 18.739 67.0461 19.0173C64.7918 17.818 62.5374 16.6252 60.303 15.3928C60.2431 15.3596 60.4426 14.8627 60.6953 14.5711Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4963,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M69.6729 20.8859C69.2207 20.9124 68.7885 20.9257 68.3496 20.9323C68.3496 20.7004 68.3629 20.4751 68.3695 20.2432C68.7619 20.3492 69.1609 20.4486 69.633 20.6871C69.7128 20.8263 69.6862 20.866 69.6729 20.8859Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4968,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M112.546 76.5132C112.546 76.5132 112.3 76.5132 112.147 76.4403C111.954 76.3476 111.908 76.3277 111.868 76.3012C111.928 76.3741 111.987 76.4403 112.047 76.5132C111.701 77.0897 111.449 77.7921 110.95 78.1764C110.777 78.3089 109.939 77.7258 109.494 77.3614C105.47 74.0151 101.44 70.6755 97.4769 67.263C95.5019 65.56 93.6664 63.7047 91.8377 61.7036C92.1369 60.9548 92.3697 60.4247 92.6024 59.8946C91.7712 59.9675 90.9465 60.047 90.1153 60.1199C90.1153 60.1199 90.1219 60.1199 90.1219 59.9145C90.4345 57.9465 89.6232 56.8863 88.1535 55.9122C83.3721 52.7648 78.6771 49.4782 73.9955 46.1849C73.6962 45.9729 73.7893 45.2108 73.8824 44.7073C76.19 45.8867 78.4843 46.8475 80.4128 48.2854C85.3206 51.9497 90.0687 55.8327 94.89 59.6097C96.6124 60.9548 98.3547 62.2668 100.15 63.7047C100.303 63.9499 100.436 64.0426 100.622 64.1619C100.696 64.2547 100.735 64.2746 100.775 64.3011C100.716 64.2282 100.656 64.1619 100.543 63.983C100.39 63.7378 100.257 63.6451 100.084 63.4264C99.738 62.7903 99.4919 62.2403 99.0796 61.8692C95.6415 58.7947 92.1369 55.793 88.7387 52.672C88.0405 52.0293 87.708 50.9956 87.2025 50.1408C87.2025 50.1408 87.4087 50.154 87.575 50.2733C87.841 50.5317 87.974 50.6245 88.1469 50.6642C88.1469 50.6642 88.1469 50.6775 88.2001 50.7835C88.353 51.0287 88.486 51.1215 88.6456 51.1612C88.6456 51.1612 88.6456 51.1745 88.7254 51.2937C89.0845 51.4925 89.3638 51.5787 89.6431 51.6582C89.6431 51.6582 89.6431 51.6714 89.683 51.7509C89.8626 51.7775 89.9956 51.7178 90.1286 51.6648C90.3613 51.5124 90.5941 51.36 91.0596 51.3202C91.565 51.5124 91.8377 51.5985 92.1103 51.6847C92.6689 52.3274 93.2275 52.9702 94.0255 53.7918C95.043 54.5273 95.8211 55.0906 96.659 55.7598C96.8186 56.005 96.9516 56.1044 97.1311 56.3231C98.235 57.5555 99.2791 58.6688 100.416 59.6693C101.234 60.3849 102.192 60.9482 103.236 61.6506C104.213 62.3728 105.171 62.9095 105.843 63.6914C106.873 64.8842 107.711 66.2492 108.489 67.5479C108.263 67.5612 108.17 67.5612 108.051 67.4949C107.971 67.4088 107.924 67.3823 107.878 67.3624C107.931 67.4419 107.991 67.5214 108.11 67.7069C108.283 67.9455 108.423 68.025 108.603 68.0449C108.616 68.0316 108.642 68.025 108.642 68.025C110.451 69.9996 112.267 71.9742 114.295 74.1808C113.843 74.5982 113.357 75.0422 112.646 75.3669C112.061 74.9494 111.701 74.6512 111.336 74.3531C111.229 74.5452 111.13 74.7374 111.023 74.9229C111.529 75.1283 112.041 75.3338 112.546 75.5458C112.546 75.7645 112.546 75.9831 112.553 76.3674C112.553 76.5331 112.553 76.5331 112.553 76.5331L112.546 76.5132ZM110.139 74.8964C110.112 74.8169 110.085 74.7308 110.059 74.6513C110.032 74.7308 110.006 74.8169 110.139 74.8964Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4973,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M108.622 67.5148C107.705 66.2227 106.867 64.8643 105.836 63.6716C105.164 62.8897 104.207 62.3529 103.216 61.465C101.068 59.5235 99.0862 57.8338 97.1045 56.1375C96.9449 56.0845 96.8119 55.9851 96.659 55.5743C96.5991 55.084 96.5991 54.8653 96.5991 54.6466C98.0821 55.5345 99.7246 56.2435 101.015 57.3568C103.941 59.888 106.687 62.6246 109.527 65.2552C109.839 65.5468 110.278 65.7058 111.003 65.5865C110.212 64.586 109.414 63.5788 108.622 62.5782C108.755 62.4457 108.888 62.3132 109.021 62.1807C109.494 62.5252 110.026 62.8168 110.431 63.221C113.923 66.7064 117.394 70.205 120.859 73.7103C121.61 74.4723 122.302 75.3006 123.027 76.2813C123.352 77.3548 123.672 78.2427 123.811 79.3095C123.233 79.5017 122.84 79.5215 122.328 79.4752C121.982 79.2697 121.75 79.1306 121.524 78.9914C121.524 78.9914 121.524 78.9782 121.431 78.8655C121.065 78.6535 120.799 78.5541 120.526 78.4547C118.125 75.8705 115.718 73.2862 113.105 70.4833C112.46 69.9996 112.027 69.7346 111.595 69.4762C110.724 68.9792 109.859 68.4756 108.815 67.9852C108.642 67.9919 108.616 68.0051 108.629 67.8859C108.636 67.6804 108.629 67.5943 108.629 67.5082L108.622 67.5148Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4978,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M96.4395 54.5737C96.5925 54.8719 96.5991 55.0906 96.5991 55.4683C95.8144 55.0707 95.0363 54.5141 94.1851 53.8051C94.8368 53.9376 95.5617 54.2159 96.4395 54.5737Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4983,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M92.0904 51.5124C91.8377 51.5853 91.5584 51.4992 91.1992 51.3004C91.1128 51.1016 91.1195 51.0154 91.1195 50.8034C91.4387 50.9028 91.7512 51.1281 92.0837 51.5124H92.0904Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4988,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M76.1967 36.451C76.3164 36.6431 76.3164 36.8419 76.3097 37.0341C76.2299 37.0341 76.077 37.0341 76.077 37.0341C76.0637 36.8419 76.0703 36.6497 76.1967 36.4576V36.451Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4993,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M66.574 33.2836C66.5607 33.3366 66.4343 33.3896 66.2548 33.3631C66.2149 33.2836 66.4543 33.2836 66.574 33.2836Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 4998,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M76.6688 26.8164C76.7287 26.8827 76.7885 26.9489 76.8484 27.0152C76.8085 26.9887 76.7686 26.9688 76.7021 26.876C76.6755 26.8098 76.6688 26.8164 76.6688 26.8164Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5003,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M76.6755 26.8098C76.6156 26.7435 76.5558 26.6773 76.4959 26.611C76.5358 26.6375 76.5757 26.6574 76.6422 26.7501C76.6688 26.8164 76.6688 26.8098 76.6755 26.8098Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5008,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M58.7003 25.6833C57.9821 25.7695 57.2373 25.6833 56.3661 25.4646C57.1974 23.3708 57.9222 24.6828 58.7003 25.6833Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5013,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M46.77 21.6744C46.5572 21.8401 46.3378 21.8335 45.9587 21.8268C45.9454 21.416 46.0917 21.0118 46.238 20.6076C46.4109 20.9058 46.5905 21.2106 46.77 21.6811V21.6744Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5018,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M176.832 44.2235C176.779 44.3826 176.686 44.5085 176.267 44.6609C175.602 45.0452 175.216 45.3765 174.837 45.7078C174.837 45.7078 174.837 45.7012 174.724 45.7078C174.525 45.8735 174.432 46.0325 174.339 46.1915C173.155 47.0529 171.905 49.0143 170.9 45.8138C173.029 44.1705 175.23 42.6995 177.624 41.2285C177.817 41.2285 177.83 41.2417 177.83 41.2417C177.83 41.7718 177.83 42.3086 177.837 43.0374C177.843 43.2362 177.837 43.2296 177.67 43.2495C177.285 43.5874 177.058 43.9121 176.832 44.2302V44.2235Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5023,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M181.793 42.7128C181.707 42.4345 181.62 42.1562 181.414 41.7917C183.416 40.0821 185.231 37.8425 188.49 38.3924C186.349 39.9364 184.068 41.3279 181.793 42.7194V42.7128Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5028,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M191.782 36.6365C191.622 36.8088 191.489 36.9015 191.17 37.1533C190.565 37.5973 190.172 37.9154 189.78 38.24C189.78 38.24 189.78 38.24 189.607 38.24C189.221 38.24 188.995 38.24 188.776 38.24C189.647 37.5774 190.518 36.9148 191.582 36.2522C191.768 36.2522 191.768 36.2522 191.768 36.2522C191.768 36.3383 191.768 36.4178 191.775 36.6299L191.782 36.6365Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5033,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M191.456 33.7077C191.742 33.3631 192.034 33.171 192.327 32.9722C192.394 33.1643 192.467 33.3565 192.533 33.5487C192.174 33.6481 191.822 33.7541 191.456 33.7077Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5038,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M174.332 31.7861C174.046 32.071 173.8 32.4288 173.461 32.6144C173.248 32.7336 172.889 32.5945 172.543 32.1439C173.015 32.0246 173.494 31.9054 174.146 31.7795C174.325 31.7795 174.325 31.7795 174.332 31.7795V31.7861Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5043,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M177.817 41.2219C177.97 40.9701 178.122 40.7183 178.275 40.4665C178.382 40.5592 178.482 40.6454 178.588 40.7381C178.428 40.8905 178.269 41.0429 177.97 41.2152C177.83 41.2351 177.823 41.2285 177.817 41.2152V41.2219Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5048,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M191.768 36.2522C191.815 36.2322 191.862 36.219 191.842 36.2257C191.775 36.2523 191.768 36.2522 191.768 36.2522Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5053,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M181.98 51.1877C181.86 50.598 181.9 49.995 181.873 49.286C184.733 47.1192 187.665 45.0651 190.684 42.8652C193.305 41.4008 195.832 40.0755 198.538 38.7304C199.17 38.9756 199.715 39.5587 200.068 39.4659C203.433 38.5581 206.771 37.5377 210.123 36.557C210.342 36.4907 210.582 36.504 210.814 36.4775C210.941 36.6696 211.067 36.8552 211.193 37.0473C209.704 37.9419 208.247 38.8828 206.731 39.7243C203.273 41.6393 199.782 43.4947 196.151 45.6416C195.419 46.3241 194.841 46.7415 194.083 47.1855C192.813 47.6626 191.715 48.1131 190.625 48.5637C190.558 48.4445 190.498 48.3318 190.432 48.2125C191.343 47.4041 192.254 46.6024 193.172 45.794C192.972 45.5024 192.773 45.2175 192.573 44.9259C189.308 46.9933 186.049 49.0607 182.784 51.1347C182.571 51.1546 182.359 51.1678 181.993 51.1943L181.98 51.1877Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5058,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M204.729 33.774C204.683 33.794 204.636 33.8073 204.656 33.8006C204.723 33.774 204.729 33.774 204.729 33.774Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5063,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.574 35.6293C205.574 35.6956 205.448 35.795 205.261 35.8082C205.281 35.7022 205.368 35.6823 205.574 35.6293Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5068,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M188.703 38.3924C189.002 38.24 189.221 38.24 189.607 38.24C189.454 38.9954 189.128 39.7442 188.803 40.6851C187.825 41.7056 186.947 42.6863 185.87 43.3489C183.875 44.5681 181.767 45.5952 179.353 46.7283C178.435 47.3843 177.863 48.0204 177.298 48.6499C175.935 48.9944 174.585 49.3456 173.228 49.6968C173.128 49.4848 173.022 49.2794 172.922 49.0673C175.782 46.9999 178.641 44.9259 181.647 42.779C184.074 41.3146 186.355 39.9231 188.709 38.3858L188.703 38.3924Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5073,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M189.96 38.24C190.172 37.9154 190.565 37.5973 191.11 37.2594C190.891 37.5774 190.512 37.9087 189.96 38.24Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5078,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.1626 49.9619C87.7013 50.9823 88.0338 52.016 88.7321 52.6587C92.1302 55.7797 95.6348 58.7814 99.0729 61.856C99.4852 62.227 99.7313 62.777 100.077 63.4131C100.09 63.5854 100.09 63.592 100.09 63.592C98.3547 62.2668 96.6058 60.9548 94.89 59.6031C90.0687 55.8195 85.3206 51.9365 80.4128 48.2788C78.4843 46.8409 76.1967 45.8801 73.8824 44.7006C73.6896 44.7006 73.6962 44.694 73.6763 44.535C73.3305 44.1573 73.0113 43.9386 72.6921 43.7199C70.5042 42.2158 68.323 40.6918 66.1284 39.2075C65.2506 38.6177 64.3329 38.0876 63.3354 37.2196C63.2556 36.6763 63.2689 36.4443 63.2822 36.2124C66.2282 37.7563 69.2141 39.234 72.1135 40.864C75.2789 42.6465 78.3579 44.5814 81.5766 46.3174C81.6763 46.1915 81.6896 46.1783 81.6896 46.1783C83.5117 47.3843 85.3272 48.5902 87.1826 49.9619H87.1626Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5083,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M63.1691 36.0666C63.2489 36.4443 63.229 36.6763 63.2157 37.0805C62.2049 36.9148 61.1941 36.5769 59.904 36.0865C52.0768 31.5939 43.8374 29.341 35.3452 27.8302C35.0792 27.6844 34.8132 27.5387 34.4075 27.3266C34.1216 26.9025 33.9753 26.5381 33.829 26.0345C38.6902 25.246 43.0859 26.8694 47.3885 28.7844C52.6354 31.1168 57.8491 33.5354 63.1691 36.0666Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5088,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M81.6497 46.1982C81.4303 46.006 81.2108 45.8072 80.998 45.6084C81.0911 45.5355 81.1776 45.4626 81.2707 45.3898C81.397 45.562 81.5167 45.741 81.6564 46.0458C81.6697 46.1783 81.6564 46.1915 81.6564 46.1982H81.6497Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5093,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.55 51.5257C89.3572 51.5654 89.0779 51.4859 88.7188 51.2805C88.9116 51.2407 89.1909 51.3202 89.55 51.5257Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5098,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M88.5858 51.0419C88.4727 51.1082 88.3397 51.0221 88.1934 50.7703C88.3065 50.6974 88.4395 50.7901 88.5858 51.0419Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5103,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M88.087 50.5384C87.974 50.6112 87.8343 50.5185 87.6747 50.2667C87.7545 50.2468 87.8942 50.3329 88.087 50.5384Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M90.0022 51.6516C89.9889 51.7112 89.8559 51.7642 89.683 51.7377C89.6431 51.6516 89.8825 51.6516 90.0022 51.6516Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5113,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M50.7401 189.809C52.2697 186.926 53.6396 183.938 55.3819 181.188C56.9114 178.769 58.7468 176.51 60.7153 174.429C61.2539 173.859 62.7502 174.184 63.8009 174.091C63.8209 175.098 64.2731 176.424 63.7943 177.053C60.6754 181.214 57.357 185.223 53.9255 189.305C53.7526 189.325 53.746 189.318 53.726 189.173C53.5066 188.868 53.3004 188.709 53.1009 188.55C52.9812 188.808 52.8682 189.06 52.7485 189.318C52.7485 189.318 52.7485 189.318 52.6088 189.385C51.8906 189.57 51.312 189.683 50.7335 189.802L50.7401 189.809Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5118,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M50.5672 189.842C51.3187 189.689 51.8973 189.577 52.6155 189.564C52.7618 190.392 52.7684 191.114 52.7751 191.836C50.2281 196.614 47.6811 201.385 44.9612 206.189C45.4267 200.351 47.302 194.898 50.5739 189.842H50.5672Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5123,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M52.9014 191.724C52.7618 191.114 52.7551 190.392 52.7485 189.497C52.7485 189.325 52.7485 189.325 52.9147 189.325C53.3004 189.325 53.5265 189.325 53.746 189.325C53.746 189.325 53.746 189.325 53.7526 189.332C53.5132 190.094 53.2738 190.856 52.8948 191.724H52.9014Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5128,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M44.6553 206.321C44.7019 206.646 44.6221 207.077 44.4159 207.607C44.2829 207.713 44.2829 207.706 44.2829 207.706C44.3627 207.282 44.4492 206.851 44.6553 206.321Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5133,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M43.2854 195.786C43.2255 195.998 43.1657 196.203 43.0992 196.415C43.0992 196.243 43.0859 196.071 43.179 195.845C43.2787 195.786 43.2787 195.786 43.2787 195.786H43.2854Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M44.2835 207.713C44.2366 207.733 44.1897 207.746 44.2098 207.733C44.2768 207.706 44.2768 207.706 44.2835 207.713Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5143,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M36.8415 174.807C36.9678 174.628 37.0875 174.442 37.3735 174.078C37.6328 173.733 37.7326 173.574 37.8257 173.415C37.8257 173.415 37.7991 173.415 37.9188 173.376C38.1316 173.197 38.2247 173.058 38.3178 172.918C38.3178 172.918 38.2978 172.918 38.4175 172.879C38.6303 172.7 38.7234 172.561 38.8165 172.421C38.8165 172.421 38.7966 172.421 38.9163 172.375C39.1291 172.196 39.2222 172.057 39.3219 171.918C39.3219 171.918 39.302 171.918 39.415 171.871C39.6278 171.693 39.7342 171.567 39.834 171.434C42.1083 168.744 44.3627 166.04 46.657 163.37C47.1757 162.767 47.8274 162.277 48.4193 161.74C48.652 161.932 48.8848 162.118 49.1242 162.31C45.1009 167.458 41.0776 172.6 37.0543 177.749L36.4425 177.616C36.5223 177 36.6087 176.384 36.7683 175.45C36.8481 175.026 36.8481 174.913 36.8481 174.807H36.8415Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5148,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M33.277 179.843C33.4167 179.406 33.5563 178.975 33.696 178.537C33.8489 178.597 34.0019 178.663 34.1548 178.723C33.9819 179.074 33.8024 179.419 33.4699 179.823C33.3169 179.883 33.2704 179.843 33.2704 179.843H33.277Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5153,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M39.7476 171.361C39.7276 171.573 39.6212 171.699 39.415 171.891C39.4283 171.726 39.548 171.507 39.7476 171.361Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5158,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M38.2047 172.971C38.2247 173.058 38.1316 173.197 37.9188 173.382C37.8988 173.296 37.9919 173.157 38.2047 172.971Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5163,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M37.6993 173.482C37.7259 173.568 37.6262 173.727 37.42 173.972C37.3934 173.892 37.4865 173.72 37.6993 173.482Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5168,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M36.755 174.873C36.8415 174.913 36.8415 175.019 36.8348 175.291C36.7351 175.344 36.6353 175.244 36.5622 175.125C36.5422 175.098 36.6287 175.006 36.755 174.873Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5173,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M39.2022 171.977C39.2222 172.064 39.1291 172.196 38.9163 172.388C38.8963 172.302 38.9894 172.17 39.2022 171.977Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5178,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M38.7035 172.474C38.7234 172.561 38.6303 172.7 38.4242 172.885C38.4042 172.799 38.4973 172.66 38.7035 172.474Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5183,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M43.9172 158.95C43.8573 158.851 43.9438 158.725 44.1765 158.573C44.2364 158.672 44.1499 158.798 43.9172 158.95Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5188,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M33.3369 179.902C33.2837 179.922 33.2039 179.922 33.2039 179.883C33.277 179.843 33.3169 179.883 33.3369 179.902Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5193,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M34.8065 177.385C34.8668 177.371 34.9205 177.365 34.9003 177.371C34.8199 177.391 34.8065 177.385 34.8065 177.385Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5198,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M34.8206 177.404C34.767 177.424 34.7133 177.438 34.7267 177.418C34.8005 177.384 34.8139 177.398 34.8206 177.404Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5203,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M54.0984 170.52C56.5257 171.593 55.0627 172.918 54.2979 174.005C52.3761 176.748 50.2946 179.379 48.3062 182.076C48.0269 182.454 47.9272 182.957 47.6279 183.673C47.3885 184.216 47.2621 184.488 47.1424 184.76C46.4242 184.508 45.7127 184.256 44.8349 183.925C46.9695 180.366 49.2372 176.868 51.578 173.422C52.263 172.408 53.1541 171.527 54.0984 170.52Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5208,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M31.4682 196.342C33.1573 192.817 34.9994 189.358 36.9878 185.866C37.7126 185.833 38.2912 185.826 39.0759 185.82C37.2272 189.126 35.1856 192.446 33.0642 195.719C32.8182 196.097 32.1133 196.183 31.4682 196.336L31.4682 196.342Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5213,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M44.775 189.312C45.2139 188.053 45.6595 186.807 46.1117 185.561C46.391 185.687 46.6703 185.82 46.9562 185.946C46.3378 187.019 45.7193 188.093 44.9546 189.252C44.8083 189.338 44.7883 189.318 44.7817 189.312H44.775Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5218,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M47.2555 184.852C47.2688 184.494 47.3951 184.223 47.6345 183.858C47.6212 184.157 47.4949 184.547 47.2555 184.852Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5223,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M247.117 71.0929C247.051 70.7815 247.091 70.5827 247.19 70.1123C247.27 69.7677 247.297 69.6882 247.323 69.6087C247.809 68.3497 248.294 67.0973 248.893 65.7124C249.086 65.7191 249.179 65.845 249.385 66.0239C248.726 67.7931 247.975 69.496 247.117 71.0929Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5228,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M45.9587 235.563C46.3245 235.377 46.8698 235.205 47.6013 235.039C47.2355 235.218 46.6902 235.397 45.9587 235.563Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5233,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M244.563 206.732C244.796 206.407 245.029 206.083 245.428 205.738C245.534 207.189 245.481 208.667 245.255 210.165C245.076 210.191 245.095 210.191 245.089 209.992C244.909 208.773 244.743 207.746 244.57 206.725L244.563 206.732Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5238,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M235.586 187.827C235.692 186.933 235.799 186.038 235.872 185.422C239.496 185.641 239.662 189.12 241.717 191.213C241.112 189.04 240.507 186.86 239.902 184.687C240.021 184.6 240.141 184.514 240.254 184.435C240.833 185.283 241.411 186.131 242.023 187.026C242.701 186.681 243.486 186.284 244.444 185.879C245.208 187.397 245.887 188.901 246.332 190.465C246.465 190.922 245.96 191.558 245.475 192.267C245.122 193.287 244.869 194.182 245.009 195.01C245.228 196.276 245.721 197.489 245.927 198.675C244.43 197.561 243.107 196.508 241.717 195.408C241.691 195.786 241.644 196.534 241.598 197.283C241.598 197.283 241.598 197.283 241.458 197.383C239.662 199.013 241.844 200.311 241.578 201.762C240.693 200.636 239.802 199.516 238.771 198.105C238.133 196.302 237.634 194.785 237.268 193.162C236.796 191.319 236.191 189.577 235.586 187.841V187.827Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5243,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.106 198.728C245.727 197.489 245.235 196.276 245.016 195.01C244.869 194.182 245.129 193.287 245.388 192.413C246.126 193.692 246.678 194.977 247.416 196.276C248.208 199.45 248.82 202.604 249.544 205.924C249.445 206.938 249.232 207.792 248.833 208.68C247.915 206.586 247.177 204.453 246.505 201.974C246.578 201.517 246.592 201.405 246.725 201.193C246.765 200.649 246.685 200.212 246.605 199.761C246.605 199.748 246.585 199.741 246.592 199.596C246.432 199.231 246.273 199.006 246.12 198.774C246.12 198.761 246.113 198.734 246.113 198.734L246.106 198.728Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5248,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.081 195.282C247.955 195.11 247.822 194.944 247.682 194.772C247.769 194.712 247.862 194.646 247.948 194.586C247.995 194.732 248.041 194.878 248.075 195.163C248.055 195.302 248.075 195.289 248.081 195.282Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5253,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M247.303 193.593C247.277 193.546 247.377 193.526 247.377 193.526C247.377 193.526 247.33 193.633 247.303 193.593Z",
                fill: "#86F0F6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5258,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M241.085 56.873C240.766 56.8465 240.161 56.6014 240.174 56.3827C240.221 55.508 240.46 54.64 240.121 53.9972C239.862 53.5864 239.603 53.1822 239.204 52.6786C239.403 50.4456 239.736 48.3053 240.061 45.9662C240.613 45.7012 241.172 45.6349 241.95 45.562C241.804 49.2595 241.445 52.9636 241.092 56.873H241.085Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5263,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.747 52.2214C205.82 52.3738 205.92 52.4997 206.166 52.6587C202.555 54.8388 198.838 56.9526 194.921 59.0663C194.728 59.0663 194.695 59.0199 194.754 58.9007C194.98 58.5495 195.14 58.3242 195.453 58.0393C198.99 56.058 202.369 54.143 205.747 52.2214Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5268,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.242 59.9079C193.87 60.0801 193.504 60.153 193.025 60.0271C193.351 59.5964 193.79 59.3579 194.242 59.2386C194.242 59.3579 194.276 59.6031 194.276 59.6031C194.276 59.6031 194.249 59.8085 194.242 59.9079Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5273,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.382 59.5567C194.269 59.6031 194.236 59.3645 194.349 59.2121C194.462 59.0597 194.688 59.0266 194.688 59.0266C194.688 59.0266 194.721 59.0663 194.741 59.0928C194.734 59.285 194.648 59.4175 194.389 59.5567H194.382Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5278,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M205.893 52.1353C202.362 54.143 198.984 56.058 195.439 57.8603C195.266 56.7604 195.266 55.7731 195.266 54.6665C193.132 52.884 191.15 54.5539 189.062 55.7201C188.357 56.111 187.552 56.3363 186.794 56.6345C186.794 56.6345 186.794 56.6345 186.721 56.5152C186.674 56.0646 186.568 55.5345 186.734 55.4351C189.886 53.4804 193.072 51.5787 196.337 49.8293C197.009 50.1938 197.727 50.7305 198.146 50.5582C199.928 49.8161 201.591 49.8426 203.36 50.5715C203.885 50.7901 204.67 50.5847 205.268 50.3793C207.27 49.6902 209.238 48.9149 211.22 48.1728C211.38 48.2192 211.513 48.3119 211.672 48.6764C211.719 49.0143 211.719 49.1071 211.719 49.1932C209.83 50.1474 207.941 51.095 205.9 52.1353H205.893Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5283,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M212.676 48.1529C214.698 45.7873 217.511 45.8536 220.47 45.7144C218.302 46.6951 215.922 47.6626 213.295 48.5306C212.949 48.3053 212.823 48.2192 212.676 48.1595V48.1529Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5288,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M220.876 45.7476C221.601 45.456 222.518 45.191 223.543 45.0518C222.791 45.3765 221.927 45.5753 220.876 45.7476Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5293,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M242.296 41.2351C242.688 41.1357 243.273 41.0429 243.978 41.0695C243.559 41.202 243.027 41.2285 242.296 41.2351Z",
                fill: "#FADAA6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5298,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M212.67 48.2987C212.829 48.2125 212.956 48.2987 213.115 48.524C213.082 48.6499 212.989 48.6764 212.749 48.7228C212.623 48.6432 212.643 48.5439 212.676 48.2987H212.67Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5303,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M211.865 49.1535C211.719 49.1005 211.719 49.0077 211.732 48.7824C211.865 48.6565 211.985 48.6698 212.284 48.6896C212.311 48.842 212.164 48.9746 211.865 49.1535Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5308,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M211.22 47.9873C209.238 48.9149 207.27 49.6902 205.268 50.3793C204.67 50.5847 203.885 50.7835 203.36 50.5715C201.591 49.836 199.928 49.8161 198.146 50.5582C197.727 50.7305 197.002 50.2004 196.463 49.7432C197.089 49.0607 197.667 48.6234 198.412 48.1198C200.906 46.8807 203.193 45.5952 205.594 44.5747C209.245 43.0242 212.976 41.6592 216.673 40.2213C216.221 40.9502 215.941 42.0303 215.283 42.3549C213.248 43.3489 211.067 44.0579 208.946 44.8795C209.005 45.1578 209.072 45.4428 209.132 45.7211C211.685 45.0386 214.232 44.3627 217.351 43.5344C214.891 45.2572 213.062 46.5361 211.233 48.0005L211.22 47.9873Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5313,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M216.826 40.1484C212.969 41.6526 209.238 43.0176 205.587 44.5681C203.187 45.5885 200.906 46.874 198.299 47.9806C197.494 47.9806 196.856 47.8812 196.43 48.1396C195.133 48.9149 194.655 48.1927 194.256 47.1523C194.834 46.7349 195.413 46.3174 196.111 45.8072C198.465 44.7603 200.693 43.826 202.914 42.8585C205.228 41.8513 207.536 40.8177 210.023 39.7906C211.001 39.9629 211.878 40.4532 212.57 40.2677C215.037 39.605 217.431 38.6973 219.872 37.9419C220.098 37.8756 220.457 38.2599 220.71 38.578C220.444 38.7304 220.231 38.737 219.692 38.7635C219.127 39.0816 218.881 39.3798 218.635 39.6846C218.083 39.8171 217.531 39.9496 216.819 40.1484H216.826Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5318,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M218.808 39.6846C218.887 39.3864 219.134 39.0816 219.539 38.7701C219.459 39.0683 219.213 39.3731 218.808 39.6846Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5323,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M234.442 32.6011C235.553 32.3096 236.477 32.0909 237.368 31.8789C237.235 32.7049 235.568 33.0959 232.367 33.0517C232.999 32.9258 233.631 32.7999 234.449 32.6011H234.442Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5328,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M248.228 209.25C248.115 209.111 248.181 208.972 248.374 208.78C248.434 208.886 248.401 209.058 248.228 209.25Z",
                fill: "#C1DDE7"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5333,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.598 201.292C246.585 201.405 246.578 201.517 246.532 201.789C246.306 201.941 246.12 201.922 245.794 201.882C245.322 201.902 244.996 201.941 244.663 201.981C244.776 202.597 244.889 203.214 245.002 203.836C244.803 203.969 244.61 204.102 244.411 204.227C243.752 203.419 243.1 202.611 242.143 201.776C241.844 201.743 241.598 201.749 241.598 201.749C241.598 201.749 241.598 201.749 241.584 201.749C241.85 200.305 239.662 199.006 241.484 197.436C241.691 197.422 241.731 197.449 241.77 197.469C241.711 197.402 241.657 197.336 241.598 197.27C241.644 196.521 241.697 195.772 241.717 195.395C243.107 196.501 244.43 197.555 245.927 198.661C246.1 198.721 246.113 198.748 246.113 198.907C246.266 199.291 246.425 199.51 246.585 199.728C246.585 199.728 246.605 199.741 246.598 199.94C246.598 200.523 246.598 200.901 246.598 201.285V201.292Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5338,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M167.835 175.397C167.662 175.417 167.522 175.496 167.243 175.781C166.738 176.265 166.418 176.616 166.092 176.96C165.9 177.093 165.713 177.225 165.255 177.378C164.849 177.225 164.716 177.053 164.656 176.768C164.723 176.556 164.723 176.463 164.762 176.212C164.856 175.841 164.909 175.622 165.115 175.397C165.634 174.893 165.993 174.403 166.465 173.833C166.179 173.455 165.773 173.164 165.208 172.872C164.822 172.872 164.596 172.872 164.35 172.72C164.004 172.349 163.678 172.137 163.366 171.792C163.366 171.58 163.366 171.5 163.373 171.229C162.714 170.334 162.056 169.632 161.384 168.936C161.378 168.936 161.384 168.923 161.364 168.744C160.732 167.717 160.905 165.636 158.704 166.995C158.305 166.995 158.079 167.008 157.866 166.802C157.414 165.49 157.141 164.245 156.437 163.33C155.226 161.747 153.743 160.368 152.413 158.745C153.231 157.738 154.016 156.89 154.521 156.34C155.186 157.446 155.499 158.738 156.257 159.103C158.944 160.382 160.506 162.085 159.542 165.404C160.46 165.013 161.112 164.742 161.77 164.463C163 166.133 164.137 167.71 165.308 169.267C166.192 170.44 167.097 170.712 168.44 169.705C169.085 169.221 170.209 169.36 171.579 169.148C170.575 170.957 169.996 171.997 169.404 172.998C169.391 172.965 169.457 172.965 169.324 173.018C169.092 173.236 168.992 173.402 168.892 173.72C168.54 174.383 168.187 174.893 167.835 175.397Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5343,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M164.583 176.888C164.716 177.053 164.849 177.225 165.115 177.484C165.115 177.729 164.982 177.868 164.563 177.954C164.151 178.074 164.018 178.253 163.885 178.438C163.885 178.438 163.885 178.398 163.718 178.352C163.419 178.319 163.286 178.332 163.04 178.345C162.741 178.458 162.555 178.584 162.275 178.776C162.056 178.948 161.956 179.068 161.876 179.207C161.384 178.889 160.892 178.577 160.267 178.193C160.048 177.855 159.961 177.583 159.994 177.08C161.052 175.9 161.983 174.959 163.033 173.985C163.146 173.959 163.379 173.926 163.526 173.952C164.097 174.456 164.53 174.933 164.955 175.41C164.909 175.622 164.856 175.841 164.696 176.258C164.477 176.596 164.47 176.742 164.583 176.888Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5348,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M177.371 166.014C177.856 166.378 178.342 166.736 178.861 167.26C177.344 168.532 175.808 169.658 174.239 170.745C173.128 171.514 171.991 172.236 170.641 172.985C170.422 172.985 170.355 172.932 170.415 172.779C172.776 170.42 175.07 168.22 177.371 166.02V166.014Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5353,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M168.014 175.403C168.187 174.893 168.54 174.383 169.032 173.667C169.265 173.289 169.364 173.13 169.464 172.965C169.464 172.965 169.398 172.965 169.564 172.985C169.936 172.978 170.142 172.952 170.349 172.932C170.349 172.932 170.422 172.991 170.462 173.018C169.73 173.833 168.959 174.621 168.014 175.41V175.403Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5358,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M166.252 176.954C166.412 176.616 166.731 176.271 167.196 175.894C167.03 176.225 166.724 176.583 166.252 176.954Z",
                fill: "#CFE4EC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5363,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M162.368 178.703C162.555 178.584 162.741 178.465 163.12 178.551C163.339 178.902 163.373 179.041 163.399 179.18C163.413 179.353 163.339 179.478 163.08 179.604C162.887 179.624 162.801 179.591 162.561 179.313C162.402 178.948 162.382 178.822 162.368 178.703Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5368,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M199.835 208.422C199.735 208.521 199.556 208.501 199.31 208.362C199.409 208.263 199.589 208.283 199.835 208.422Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5373,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M163.559 179.107C163.373 179.034 163.339 178.895 163.233 178.551C163.286 178.332 163.419 178.319 163.732 178.372C163.851 178.637 163.785 178.836 163.559 179.107Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5378,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M164.071 178.465C164.024 178.259 164.157 178.08 164.47 177.908C164.516 178.107 164.383 178.299 164.071 178.465Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5383,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M169.91 126.667C167.955 127.86 166.937 126.303 165.654 125.302C164.796 124.633 163.745 124.202 162.774 123.666C163.406 124.679 163.845 125.905 164.696 126.674C167.855 129.517 171.253 132.114 174.352 135.016C175.576 136.156 176.254 137.872 177.251 139.469C176.773 139.469 176.088 139.489 175.702 139.158C171.712 135.765 167.728 132.359 163.831 128.861C162.142 127.35 160.653 125.614 158.977 123.844C158.877 123.705 158.877 123.712 158.964 123.666C159.083 123.566 159.156 123.48 159.143 123.467C159.07 123.374 158.97 123.294 158.884 123.215C158.478 122.758 158.079 122.301 157.481 121.671C157.188 121.36 157.055 121.267 156.889 121.227C156.343 119.935 156.097 118.365 155.193 117.41C151.063 113.05 146.628 108.975 142.551 104.569C141.028 102.925 140.151 100.673 139.08 98.6449C138.907 98.3202 139.273 97.7172 139.419 97.0612C139.446 96.8757 139.459 96.869 139.605 96.9419C140.397 97.6311 140.988 98.3334 141.707 98.8503C142.545 99.4466 143.496 99.884 144.526 100.48C146.242 102.322 147.825 104.072 149.481 105.973C153.264 109.664 156.982 113.209 160.806 116.874C161.065 117.139 161.218 117.285 161.404 117.503C161.504 117.662 161.59 117.722 161.803 117.894C163.22 119.107 164.53 120.18 165.833 121.247C165.833 121.247 165.826 121.247 165.813 121.419C166.146 121.81 166.485 122.029 166.831 122.241C166.831 122.241 166.824 122.241 166.837 122.38C167.01 122.592 167.17 122.672 167.329 122.738C167.329 122.738 167.329 122.738 167.329 122.884C167.502 123.096 167.662 123.169 167.822 123.235C167.822 123.235 167.822 123.235 167.822 123.381C167.994 123.593 168.147 123.666 168.314 123.732C168.314 123.732 168.314 123.732 168.314 123.871C168.48 124.083 168.639 124.156 168.806 124.222C168.806 124.222 168.806 124.229 168.806 124.368C168.972 124.58 169.132 124.646 169.298 124.719C169.298 124.719 169.298 124.732 169.311 124.865C169.477 125.077 169.637 125.143 169.803 125.216C169.803 125.216 169.803 125.223 169.777 125.402C169.79 125.945 169.836 126.303 169.876 126.667H169.91Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5388,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M73.6896 44.7006C73.7827 45.2042 73.6896 45.9662 73.9955 46.1783C78.6771 49.4715 83.3721 52.7581 88.1535 55.9056C89.6298 56.8797 90.4345 57.9332 90.1219 59.9145C86.6506 57.8736 83.1925 55.6008 79.6946 53.3943C79.2291 53.1027 78.5508 53.1292 77.673 53.0033C74.1617 51.0419 70.963 49.0872 67.7577 47.1391C67.5782 46.9138 67.392 46.6951 67.1259 46.3572C67.3321 46.1253 67.6247 46.0126 67.924 45.9C66.4609 44.8464 67.6713 43.9187 68.0703 42.9513C68.722 43.117 69.367 43.2826 70.1118 43.3356C70.2049 43.2164 70.2049 43.2164 70.2049 43.2164C70.9098 43.382 71.6147 43.5477 72.4992 43.7199C72.6788 43.7199 72.6921 43.7199 72.712 43.879C73.0578 44.2567 73.377 44.4753 73.6962 44.7006H73.6896Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5393,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M67.6845 47.2915C70.963 49.0872 74.1684 51.0419 77.52 53.0696C79.2424 54.7924 80.8318 56.4225 82.3546 58.1121C82.6206 58.4037 82.6273 58.9205 82.6938 59.4771C78.8367 57.0851 75.0329 54.5539 71.2091 51.8437C71.1891 51.6648 71.2024 51.6516 71.3288 51.6449C71.5815 51.5588 71.7145 51.4793 71.8409 51.3998C71.6214 51.3202 71.4086 51.2407 71.1891 51.1612C71.1891 51.1612 71.1891 51.1612 71.1093 51.0353C70.7502 50.8299 70.4709 50.7438 70.1916 50.6642C69.5931 50.1872 68.8949 49.7962 68.4161 49.2197C68.0171 48.736 67.8641 48.0403 67.6779 47.2849L67.6845 47.2915Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5398,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M122.441 79.5547C122.834 79.5348 123.226 79.5149 123.818 79.4884C124.017 79.4884 124.011 79.4884 124.091 79.6143C124.45 79.8197 124.722 79.9059 125.002 79.992C125.002 79.992 125.002 79.992 125.061 80.098C125.214 80.3432 125.347 80.436 125.507 80.4823C125.667 80.5353 125.8 80.6215 126.006 80.9727C126.212 81.3305 126.345 81.4166 126.511 81.4697C126.511 81.4697 126.511 81.4697 126.564 81.5823C126.717 81.8275 126.85 81.9202 127.01 81.9666C127.01 81.9666 127.01 81.9666 127.063 82.0793C127.216 82.3244 127.349 82.4172 127.509 82.4636C127.509 82.4636 127.509 82.4636 127.562 82.5762C127.715 82.8214 127.848 82.9142 128.014 82.9606C131.991 87.1218 135.968 91.2831 139.911 95.7492C139.738 96.1667 139.599 96.2793 139.339 96.3787C139.219 96.3588 138.98 96.3588 138.98 96.3588C138.98 96.3588 138.96 96.3787 138.927 96.2594C138.754 96.0474 138.614 95.9612 138.481 95.8685C138.481 95.8685 138.468 95.8884 138.435 95.7625C138.262 95.5504 138.122 95.4576 137.983 95.3715C137.983 95.3715 137.969 95.3914 137.936 95.2655C137.763 95.0534 137.623 94.9607 137.484 94.8745C137.484 94.8745 137.471 94.8944 137.431 94.7619C137.238 94.5432 137.085 94.4571 136.932 94.3643C136.812 94.298 136.712 94.2119 136.526 93.9005C136.28 93.589 136.134 93.483 135.988 93.3836C135.988 93.3836 135.974 93.4035 135.941 93.2776C135.768 93.0656 135.628 92.9728 135.489 92.8867C135.489 92.8867 135.475 92.9065 135.442 92.7806C135.269 92.5686 135.13 92.4758 134.99 92.3897C134.99 92.3897 134.977 92.4096 134.943 92.2837C134.771 92.0716 134.631 91.9789 134.491 91.8927C134.491 91.8927 134.478 91.9126 134.445 91.7867C134.272 91.5747 134.132 91.4819 133.993 91.3958C133.993 91.3958 133.979 91.4156 133.946 91.2897C133.773 91.0777 133.633 90.9849 133.494 90.8988C133.494 90.8988 133.48 90.9187 133.441 90.7861C133.268 90.5277 133.135 90.4018 133.002 90.2759C130.621 87.8905 128.24 85.4984 125.62 82.8943C124.603 82.1058 123.818 81.5293 123.04 80.9528C123.04 80.9528 123.013 80.9793 123.013 80.8136C122.82 80.2835 122.634 79.9191 122.441 79.5547Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5403,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M198.698 162.555C202.615 165.205 206 168.333 208.214 172.733C205.009 169.486 201.797 166.06 198.698 162.555Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5408,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.58 73.823C101.567 74.2338 101.547 74.638 101.553 75.2476C99.9175 73.9356 98.2683 72.4182 96.5991 70.7285C96.7787 70.5562 96.9782 70.5562 97.4038 70.6689C97.7828 70.8743 97.9291 70.9604 98.0821 71.0466C98.0821 71.0466 98.0954 71.0399 98.1286 71.1658C98.3015 71.3779 98.4412 71.464 98.5808 71.5435C98.5808 71.5435 98.5941 71.5435 98.634 71.6562C98.8535 71.7026 99.0397 71.6297 99.2192 71.5568C99.2192 71.5568 99.4121 71.57 99.565 71.6694C99.8111 71.8881 99.9308 71.9742 100.077 72.0273C100.077 72.0273 100.09 72.0273 100.15 72.1399C100.303 72.3784 100.423 72.4712 100.576 72.5242C100.576 72.5242 100.589 72.5308 100.649 72.6435C100.802 72.882 100.922 72.9682 101.075 73.0212C101.075 73.0212 101.095 73.0278 101.148 73.1405C101.301 73.379 101.427 73.4651 101.573 73.5182C101.573 73.5182 101.587 73.5248 101.593 73.6043C101.593 73.6838 101.587 73.823 101.587 73.823H101.58Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5413,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.595 69.3834C94.4312 68.6876 93.2807 67.8063 92.1103 66.7594C94.0122 66.4546 95.2691 67.2034 95.595 69.3834Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5418,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M90.1818 60.2524C90.9465 60.0404 91.7712 59.9609 92.6024 59.888C92.3697 60.4181 92.1369 60.9482 91.7579 61.5512C91.1593 61.2132 90.7005 60.8024 90.1818 60.2524Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5423,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M91.0463 65.4474C90.1153 64.8842 89.1244 64.1685 88.1203 63.2806C89.0646 63.8372 90.0222 64.5661 91.0463 65.4474Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5428,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M123.027 81.145C123.811 81.5293 124.596 82.1058 125.467 82.8214C124.709 82.4172 123.864 81.8739 123.027 81.145Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5433,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M122.322 79.4884C122.628 79.9191 122.82 80.2836 123.027 80.807C122.534 80.4293 122.029 79.8992 121.524 79.1836C121.75 79.1438 121.976 79.283 122.328 79.4884H122.322Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5438,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M112.027 82.9738C112.533 83.3581 113.031 83.7424 113.411 84.2924C113.204 84.4581 113.118 84.4581 113.038 84.4581C113.038 84.4581 113.038 84.4581 113.005 84.3454C112.825 84.14 112.679 84.0473 112.539 83.9611C112.539 83.9611 112.539 83.9611 112.506 83.8485C112.327 83.6431 112.18 83.5503 112.041 83.4641C112.041 83.4641 112.041 83.4641 112.054 83.3449C112.054 83.1395 112.041 83.06 112.027 82.9738Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5443,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M105.996 77.3614C105.444 77.1096 104.832 76.7054 104.134 76.162C104.679 76.4138 105.304 76.818 105.996 77.3614Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5448,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M116.044 87.4465C115.552 87.0622 115.053 86.6713 114.548 86.1213C114.534 85.9556 114.754 85.9556 114.933 86.0749C115.253 86.3068 115.392 86.4261 115.525 86.5454C115.559 86.6779 115.632 86.7905 115.871 87.0357C116.011 87.2809 116.031 87.367 116.044 87.4465Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5453,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M151.868 121.075C151.422 121.015 150.957 120.777 150.398 120.399C150.817 120.472 151.336 120.684 151.868 121.075Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5458,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M111.602 69.6617C112.027 69.7478 112.46 70.0129 112.952 70.4171C112.546 70.3177 112.081 70.0791 111.602 69.6617Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5463,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M104.061 75.8639C103.781 75.7777 103.489 75.5325 103.129 75.1482C103.389 75.241 103.715 75.4729 104.061 75.8639Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5468,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M120.599 78.5939C120.792 78.5674 121.058 78.6601 121.417 78.8788C121.231 78.9053 120.952 78.8125 120.599 78.5939Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5473,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M134.032 91.515C134.126 91.4885 134.265 91.5747 134.451 91.7867C134.358 91.8132 134.219 91.7271 134.032 91.515Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5478,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M152.347 121.631C152.247 121.664 152.094 121.592 151.928 121.38C152.074 121.287 152.207 121.373 152.347 121.631Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5483,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M156.895 121.731C156.842 121.598 156.789 121.459 156.809 121.28C156.862 121.249 156.889 121.276 156.889 121.36C156.889 121.565 156.889 121.651 156.889 121.731H156.895Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5488,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M153.338 122.625C153.238 122.658 153.092 122.585 152.919 122.373C153.065 122.281 153.198 122.367 153.338 122.625Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5493,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M152.839 122.128C152.739 122.161 152.593 122.082 152.42 121.876C152.566 121.784 152.699 121.87 152.839 122.128Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5498,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M157.394 121.731C157.255 121.784 157.122 121.837 156.942 121.81C156.895 121.731 156.895 121.731 157.022 121.731C157.228 121.731 157.314 121.731 157.394 121.731Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5503,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M133.534 91.0181C133.627 90.9916 133.766 91.0777 133.946 91.2897C133.853 91.3162 133.713 91.2301 133.534 91.0181Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5508,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M133.028 90.4151C133.128 90.4018 133.261 90.5277 133.441 90.7795C133.347 90.7928 133.201 90.6735 133.028 90.4151Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5513,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M135.03 92.509C135.123 92.4825 135.263 92.5686 135.449 92.774C135.356 92.8005 135.216 92.7144 135.03 92.509Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5518,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M135.529 93.0059C135.622 92.9794 135.761 93.0656 135.948 93.271C135.855 93.3041 135.715 93.2114 135.529 93.0059Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5523,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M134.531 92.012C134.624 91.9855 134.764 92.0716 134.95 92.2837C134.857 92.3102 134.717 92.224 134.531 92.012Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5528,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M158.89 123.719C158.837 123.586 158.784 123.447 158.811 123.268C158.89 123.222 158.89 123.222 158.89 123.348C158.89 123.553 158.89 123.639 158.89 123.725V123.719Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5533,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M138.016 95.4908C138.109 95.4643 138.249 95.5504 138.428 95.7624C138.335 95.7889 138.195 95.7028 138.016 95.4908Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5538,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M137.524 94.9938C137.617 94.9673 137.756 95.0534 137.936 95.2655C137.843 95.292 137.703 95.2058 137.524 94.9938Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5543,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M139.013 96.4781C138.973 96.3588 139.213 96.3654 139.339 96.498C139.466 96.6305 139.472 96.869 139.472 96.869C139.472 96.869 139.459 96.8823 139.446 96.8889C139.306 96.7961 139.18 96.6967 139.013 96.4781Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5548,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M138.515 95.9877C138.608 95.9612 138.747 96.0474 138.927 96.2594C138.834 96.2859 138.701 96.1932 138.515 95.9877Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5553,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M136.027 93.5095C136.121 93.4897 136.267 93.589 136.453 93.8276C136.36 93.8475 136.214 93.7415 136.027 93.5095Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5558,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M136.985 94.4836C137.078 94.4571 137.231 94.5432 137.431 94.7553C137.338 94.7884 137.191 94.6956 136.985 94.4836Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5563,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M106.514 77.8981C106.415 77.9312 106.268 77.8517 106.089 77.6397C106.228 77.5469 106.368 77.6397 106.514 77.8981Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5568,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M112.546 76.5066C112.606 76.5729 112.666 76.6457 112.726 76.712C112.686 76.6855 112.639 76.6656 112.573 76.5729C112.546 76.5066 112.546 76.5066 112.546 76.5066Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5573,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M108.509 79.886C108.416 79.9125 108.27 79.833 108.09 79.6209C108.19 79.5878 108.323 79.6806 108.509 79.886Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5578,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M108.011 79.389C107.918 79.4155 107.771 79.336 107.592 79.124C107.691 79.0908 107.824 79.1836 108.011 79.389Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5583,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M107.512 78.892C107.419 78.9185 107.279 78.8324 107.1 78.6204C107.226 78.5475 107.359 78.6402 107.512 78.892Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5588,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M114.042 77.9975C114.102 78.0704 114.162 78.1366 114.222 78.2095C114.182 78.183 114.135 78.1631 114.069 78.0704C114.042 78.0041 114.042 77.9975 114.042 77.9975Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5593,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M107.013 78.3951C106.913 78.4282 106.767 78.3421 106.588 78.1367C106.694 78.1035 106.827 78.1897 107.013 78.3951Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5598,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M114.042 78.0041C113.982 77.9312 113.923 77.865 113.863 77.7921C113.903 77.8186 113.949 77.8385 114.016 77.9312C114.042 77.9975 114.042 78.0041 114.042 78.0041Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5603,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M103.036 74.9097C102.943 74.9362 102.804 74.8434 102.617 74.638C102.711 74.6115 102.85 74.6976 103.036 74.9097Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5608,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M110.997 82.3642C110.903 82.3907 110.764 82.3112 110.584 82.0991C110.717 82.013 110.85 82.1058 110.997 82.3642Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5613,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M111.502 82.8612C111.402 82.8943 111.256 82.8148 111.076 82.6094C111.183 82.5696 111.322 82.6624 111.502 82.8612Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5618,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M110.039 80.9859C110.172 81.0853 110.312 81.1781 110.371 81.3769C110.218 81.4763 110.132 81.4763 110.052 81.4763C110.052 81.4763 110.052 81.4763 110.059 81.357C110.059 81.1516 110.046 81.0721 110.039 80.9859Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5623,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M109.919 80.9859C110.052 81.0721 110.059 81.1516 110.066 81.357C109.913 81.4034 109.766 81.3239 109.587 81.1118C109.553 80.9859 109.8 80.9793 109.926 80.9793L109.919 80.9859Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5628,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M109.507 80.8733C109.407 80.9064 109.261 80.8203 109.081 80.6149C109.221 80.5221 109.361 80.6149 109.507 80.8733Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5633,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M109.002 80.3829C108.908 80.4161 108.762 80.3299 108.583 80.1179C108.716 80.0318 108.855 80.1245 109.002 80.3829Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5638,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M111.908 82.9738C112.041 83.06 112.047 83.1395 112.061 83.3515C111.908 83.3979 111.755 83.3184 111.575 83.113C111.542 82.9871 111.788 82.9738 111.908 82.9804V82.9738Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5643,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M110.079 81.6022C110.132 81.4763 110.218 81.4763 110.425 81.4895C110.551 81.5028 110.551 81.7413 110.551 81.8672C110.405 81.9004 110.258 81.8208 110.079 81.6088V81.6022Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5648,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M88.0737 62.9957C87.9806 63.0222 87.8277 62.9427 87.6481 62.7306C87.7479 62.6975 87.8875 62.7903 88.0737 62.9957Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5653,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M116.529 87.4465C116.696 87.4929 116.829 87.579 116.975 87.8308C117.022 87.9435 117.008 87.9567 116.889 87.9104C116.642 87.7712 116.543 87.6453 116.496 87.4863C116.509 87.473 116.529 87.4465 116.529 87.4465Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5658,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.5816 62.5318C87.535 62.6379 87.4486 62.6511 87.2158 62.6445C87.2291 62.565 87.3821 62.5053 87.5816 62.5318Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5663,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M92.0638 66.4678C91.9574 66.501 91.811 66.4214 91.6315 66.216C91.7445 66.1763 91.8775 66.2624 92.0638 66.4678Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5668,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M91.5583 65.9775C91.4586 66.0106 91.3056 65.9311 91.1261 65.7191C91.2325 65.6793 91.3721 65.7721 91.5583 65.9775Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5673,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M115.479 86.4128C115.392 86.4261 115.253 86.3068 115.046 86.0749C115.126 86.0683 115.279 86.1743 115.479 86.4128Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5678,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M116.037 87.4465C116.024 87.367 116.011 87.2875 115.958 87.0821C116.084 87.0423 116.243 87.1218 116.463 87.3272C116.529 87.4465 116.503 87.473 116.376 87.473C116.25 87.473 116.017 87.4399 116.017 87.4399C116.017 87.4399 116.024 87.4465 116.031 87.4531L116.037 87.4465Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5683,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M100.536 72.4116C100.423 72.4712 100.303 72.3851 100.15 72.1531C100.27 72.0736 100.403 72.1531 100.536 72.4116Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5688,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M177.378 139.734C177.491 139.668 177.617 139.761 177.77 140.012C177.657 140.072 177.531 139.979 177.378 139.734Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5693,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M100.037 71.9212C99.9308 71.9809 99.8045 71.8947 99.6581 71.6761C99.7779 71.5899 99.9042 71.6694 100.037 71.9212Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5698,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M113.071 84.584C113.118 84.4581 113.204 84.4581 113.411 84.478C113.537 84.4978 113.537 84.7364 113.537 84.849C113.391 84.8822 113.251 84.7894 113.071 84.5774V84.584Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5703,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.538 74.4127C102.445 74.4392 102.305 74.3464 102.119 74.141C102.212 74.1145 102.351 74.2007 102.538 74.4127Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5708,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.7 73.8959C101.58 73.823 101.593 73.6838 101.593 73.6109C101.733 73.6308 101.866 73.7169 102.046 73.9157C101.999 74.0085 101.906 73.9886 101.7 73.8892V73.8959Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5713,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.533 73.4055C101.42 73.4651 101.301 73.379 101.154 73.1471C101.267 73.0676 101.4 73.1471 101.533 73.4055Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5718,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.028 72.9085C100.915 72.9682 100.795 72.8754 100.649 72.6501C100.769 72.5706 100.895 72.6501 101.028 72.9085Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5723,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M96.0471 69.9466C95.9408 69.9864 95.7944 69.9002 95.6149 69.6948C95.728 69.6551 95.8609 69.7412 96.0471 69.9466Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5728,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M99.0663 71.5568C99.0463 71.6363 98.8601 71.7092 98.634 71.6694C98.6939 71.5568 98.8003 71.5502 99.0663 71.5568Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5733,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M98.5343 71.4375C98.4412 71.4707 98.3015 71.3845 98.122 71.1791C98.255 71.093 98.388 71.1791 98.5343 71.4375Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5738,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M113.989 85.3526C113.896 85.3791 113.75 85.293 113.57 85.0876C113.67 85.0544 113.803 85.1472 113.989 85.3526Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5743,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M98.0222 70.9273C97.9291 70.9671 97.7762 70.8743 97.5501 70.6755C97.6365 70.6424 97.8028 70.7219 98.0222 70.9273Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5748,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M96.5459 70.4436C96.4462 70.4767 96.2932 70.3972 96.1203 70.1852C96.2267 70.1454 96.3664 70.2382 96.5459 70.4436Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5753,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M114.488 85.8496C114.395 85.8761 114.255 85.79 114.076 85.5779C114.202 85.4984 114.335 85.5978 114.488 85.8496Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5758,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M131.219 148.62C130.581 148.348 129.783 148.242 129.331 147.792C124.815 143.339 120.36 138.826 115.931 134.042C117.194 132.604 118.425 131.451 119.781 130.206C120.293 129.609 120.672 129.112 121.045 128.609C122.92 127.118 124.815 125.653 126.657 124.129C127.722 123.248 128.699 122.261 129.85 121.207C133.474 124.414 136.972 127.734 140.463 131.06C141.826 132.359 143.176 133.678 144.573 135.235C142.724 137.349 140.835 139.224 138.807 141.132C138.421 141.457 138.175 141.749 137.776 142.087C137.211 142.61 136.792 143.087 136.234 143.604C135.695 144.094 135.303 144.538 134.757 145.048C133.474 146.281 132.35 147.454 131.219 148.62Z",
                fill: "#F0FAFD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5763,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M138.947 141.099C140.835 139.224 142.724 137.355 144.693 135.348C145.524 135.659 146.395 135.977 147.007 136.567C154.92 144.055 162.801 151.575 170.674 159.109C172.922 161.263 175.097 163.483 177.338 165.848C175.07 168.22 172.769 170.427 170.415 172.779C170.149 172.958 169.943 172.978 169.577 173.018C169.996 171.997 170.575 170.964 171.585 169.155C170.216 169.367 169.098 169.228 168.447 169.711C167.103 170.719 166.199 170.44 165.314 169.274C164.144 167.723 163.007 166.146 161.777 164.47C161.118 164.748 160.467 165.027 159.549 165.411C160.513 162.098 158.95 160.388 156.264 159.109C155.506 158.752 155.193 157.453 154.528 156.346C154.023 156.89 153.245 157.738 152.247 158.798C150.944 159.036 149.76 161.236 148.809 158.725C149.075 158.241 149.301 157.903 149.68 157.539C150.365 157.015 150.89 156.518 151.575 155.949C154.521 153.835 154.967 151.264 153.258 147.99C151.848 148.236 150.279 148.514 148.729 148.786C148.623 148.56 148.503 148.415 148.496 148.262C148.456 147.606 148.45 146.944 148.437 146.281C148.357 142.65 144.759 140.092 141.314 141.126C140.596 141.344 139.745 141.112 138.954 141.086L138.947 141.099Z",
                fill: "#371E2D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5768,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M243.42 209.674C244.218 212.331 244.883 214.962 245.494 217.606C245.92 219.441 244.351 219.501 243.347 219.547C240.873 219.667 238.392 219.508 235.759 219.329C235.632 217.864 235.905 216.479 235.632 215.214C235.213 213.285 234.415 211.437 233.704 209.376C234.721 209.164 235.466 209.078 234.622 207.64C233.79 206.222 233.99 205.924 235.579 204.486C236.477 206.812 237.381 209.151 238.286 211.496C238.472 211.463 238.658 211.43 238.844 211.397C238.991 210.661 239.137 209.933 239.297 209.157C239.629 209.82 239.935 210.436 240.434 211.437C241.099 210.403 241.551 209.694 242.056 208.912C242.462 209.157 242.861 209.403 243.426 209.674H243.42ZM239.403 213.08C239.21 213.08 239.017 213.08 238.824 213.08C238.824 213.16 238.818 213.312 238.824 213.312C239.017 213.325 239.21 213.325 239.403 213.087V213.08Z",
                fill: "#04588C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5773,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M203.732 189.497C204.164 189.597 204.596 189.875 205.029 190.153L204.444 190.723C204.211 190.372 203.971 190.027 203.732 189.497Z",
                fill: "#04588C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5778,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M203.233 156.346C203.027 156.571 202.728 156.651 202.163 156.856C201.67 156.996 201.444 157.009 201.218 157.022C201.218 157.022 201.238 157.015 201.251 156.87C201.079 156.492 200.906 156.26 200.726 156.028C200.726 156.028 200.746 156.021 200.68 155.889C200.314 155.684 200.028 155.611 199.735 155.531C199.735 155.531 199.755 155.525 199.762 155.352C199.256 154.802 198.751 154.418 198.246 154.034C198.246 154.034 198.266 154.02 198.232 153.901C198.053 153.696 197.9 153.616 197.747 153.53C197.747 153.53 197.767 153.53 197.734 153.404C197.547 153.199 197.401 153.119 197.248 153.033C197.248 153.033 197.268 153.033 197.235 152.907C197.049 152.702 196.902 152.622 196.749 152.536C196.749 152.536 196.769 152.536 196.736 152.41C196.55 152.205 196.404 152.119 196.251 152.039C196.251 152.039 196.271 152.039 196.231 151.92C196.044 151.714 195.898 151.628 195.752 151.542C195.752 151.542 195.772 151.542 195.732 151.423C195.546 151.224 195.399 151.131 195.253 151.045C195.253 151.045 195.273 151.045 195.233 150.926C195.047 150.721 194.901 150.634 194.754 150.548C194.754 150.548 194.781 150.548 194.734 150.429C194.548 150.23 194.402 150.137 194.256 150.051C194.256 150.051 194.276 150.051 194.202 149.912C193.923 149.707 193.717 149.627 193.511 149.554C192.945 149.071 192.38 148.593 191.795 147.778C191.443 147.162 191.103 146.871 190.771 146.586C190.771 146.586 190.784 146.572 190.738 146.46C190.558 146.261 190.412 146.175 190.272 146.089C190.272 146.089 190.285 146.089 190.279 145.916C189.607 144.936 188.962 144.108 188.277 143.312C186.635 141.411 184.972 139.522 183.462 137.601C183.709 137.548 183.802 137.514 183.901 137.488C184.453 137.806 185.005 138.131 185.684 138.74C189.075 142.391 192.327 145.771 195.639 149.084C195.991 149.435 196.689 149.442 197.228 149.607C199.203 151.801 201.178 154.001 203.246 156.34L203.233 156.346Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5783,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M166.91 121.174C169.265 123.222 171.659 125.236 173.973 127.33C176.719 129.821 179.386 132.392 182.172 135.255C182.272 135.931 182.285 136.282 182.146 136.64C181.62 136.474 181.248 136.302 180.789 135.984C178.741 133.956 176.773 132.074 174.811 130.192C174.811 130.192 174.831 130.179 174.731 130.027C174.279 129.815 173.92 129.755 173.567 129.689C173.567 129.689 173.368 129.57 173.374 129.318C172.204 127.787 171.02 126.502 169.836 125.223C169.836 125.223 169.843 125.209 169.81 125.09C169.63 124.885 169.484 124.812 169.338 124.732C169.338 124.732 169.338 124.719 169.311 124.593C169.132 124.388 168.985 124.308 168.839 124.235C168.839 124.235 168.846 124.222 168.806 124.103C168.626 123.897 168.48 123.818 168.334 123.732C168.334 123.732 168.347 123.725 168.307 123.606C168.127 123.401 167.981 123.321 167.835 123.235C167.835 123.235 167.848 123.228 167.808 123.109C167.629 122.904 167.482 122.824 167.336 122.738C167.336 122.738 167.349 122.731 167.303 122.612C167.117 122.407 166.977 122.32 166.837 122.234C166.837 122.234 166.851 122.234 166.844 122.069C166.831 121.691 166.824 121.472 166.844 121.234C166.864 121.214 166.904 121.167 166.904 121.167L166.91 121.174Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5788,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M180.876 136.13C181.248 136.302 181.62 136.467 182.146 136.64C182.305 136.64 182.305 136.64 182.345 136.766C182.518 136.971 182.658 137.051 182.804 137.137C182.804 137.137 182.804 137.137 182.844 137.256C183.024 137.461 183.163 137.548 183.303 137.627C184.959 139.522 186.621 141.411 188.264 143.312C188.949 144.108 189.594 144.936 190.259 145.916C188.483 144.565 186.655 143.1 184.952 141.497C183.223 139.873 181.62 138.124 180.064 136.275C180.403 136.123 180.636 136.116 180.876 136.116V136.13Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5793,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M211.067 169.566C208.44 167.014 205.807 164.47 203.2 161.707C203.227 161.495 203.286 161.429 203.286 161.429C205.933 163.953 208.58 166.478 211.207 169.228C211.187 169.453 211.067 169.566 211.067 169.566Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5798,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M218.635 175.622C220.051 176.941 221.494 178.425 222.891 179.956C223.33 180.439 223.642 181.036 224.081 181.738C223.077 181.228 222.013 180.558 220.756 179.869C220.277 179.492 219.985 179.14 219.752 178.544C219.592 178.166 219.38 178.027 219.16 177.888H219.173C219.001 177.199 218.821 176.497 218.635 175.615V175.622Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5803,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M180.789 135.984C180.636 136.136 180.403 136.136 179.991 136.143C178.103 134.274 176.387 132.406 174.738 130.365C176.766 132.074 178.734 133.956 180.783 135.984H180.789Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5808,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M169.81 125.408C171.02 126.508 172.204 127.794 173.354 129.265C172.284 128.589 171.24 127.714 170.049 126.753C169.863 126.309 169.823 125.945 169.81 125.408Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5813,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M215.097 174.012C214.465 173.495 213.84 172.985 213.208 172.468C213.395 172.269 213.581 172.07 213.767 171.878C214.246 172.421 214.725 172.958 215.197 173.714C215.183 173.926 215.09 174.018 215.09 174.018L215.097 174.012Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5818,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M198.272 154.199C198.738 154.431 199.243 154.816 199.742 155.372C199.263 155.147 198.791 154.749 198.272 154.199Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5823,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.278 157.181C201.444 157.015 201.67 157.002 202.063 156.982C202.362 157.241 202.495 157.506 202.675 157.903C202.262 157.804 201.797 157.565 201.271 157.181H201.278Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5828,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M217.524 177.027C217.305 176.762 217.085 176.503 216.866 176.238C217.145 176.338 217.424 176.444 217.677 176.735C217.651 176.927 217.524 177.027 217.524 177.027Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5833,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M217.185 185.846C217.331 185.594 217.484 185.349 217.631 185.097C217.73 185.184 217.837 185.276 217.937 185.363C217.777 185.508 217.617 185.661 217.318 185.826C217.178 185.846 217.178 185.846 217.185 185.846Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5838,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M190.771 146.765C191.097 146.884 191.429 147.169 191.762 147.646C191.436 147.533 191.11 147.235 190.771 146.765Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5843,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M212.098 170.526C211.792 170.301 211.479 170.069 211.114 169.705C211.06 169.566 211.187 169.453 211.24 169.393C211.599 169.579 211.898 169.824 212.184 170.261C212.178 170.453 212.091 170.533 212.091 170.533L212.098 170.526Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5848,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M212.231 170.407C212.523 170.606 212.776 170.838 213.029 171.076C212.749 170.99 212.47 170.897 212.144 170.665C212.104 170.526 212.191 170.447 212.231 170.4V170.407Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5853,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.205 159.54C200.939 159.408 200.666 159.275 200.4 159.142C200.467 159.03 200.527 158.924 200.593 158.811C200.779 158.95 200.972 159.089 201.198 159.368C201.238 159.507 201.205 159.54 201.205 159.54Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5858,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M200.673 156.187C200.899 156.267 201.079 156.499 201.245 156.883C201.032 156.81 200.833 156.571 200.673 156.187Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5863,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M199.788 155.684C200.015 155.611 200.307 155.684 200.666 155.902C200.44 155.975 200.148 155.902 199.788 155.684Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5868,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M218.149 177.915C217.937 177.736 217.777 177.51 217.564 177.159C217.518 177.027 217.644 176.927 217.71 176.874C217.923 177.053 218.076 177.285 218.262 177.656C218.296 177.795 218.196 177.875 218.149 177.915Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5873,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M173.694 129.828C173.926 129.755 174.279 129.815 174.731 130.04C174.492 130.126 174.152 130.04 173.694 129.828Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5878,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M190.286 146.228C190.399 146.182 190.545 146.268 190.724 146.48C190.611 146.519 190.465 146.44 190.286 146.228Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5883,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M215.582 174.529C215.429 174.469 215.303 174.363 215.157 174.118C215.097 174.012 215.19 173.919 215.237 173.873C215.429 173.892 215.556 173.992 215.669 174.277C215.676 174.429 215.582 174.529 215.582 174.529Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5888,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M215.729 174.383C215.862 174.436 215.942 174.535 216.021 174.641C215.915 174.661 215.809 174.674 215.642 174.615C215.582 174.535 215.676 174.436 215.729 174.383Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5893,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M196.264 152.185C196.384 152.139 196.537 152.225 196.716 152.437C196.596 152.483 196.443 152.404 196.264 152.185Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5898,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M199.25 157.512C199.183 157.446 199.117 157.373 199.05 157.307C199.097 157.333 199.143 157.353 199.217 157.453C199.243 157.526 199.25 157.519 199.25 157.519V157.512Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5903,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M195.765 151.688C195.878 151.642 196.025 151.734 196.211 151.946C196.098 151.986 195.945 151.907 195.765 151.688Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5908,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M199.243 157.519C199.303 157.599 199.37 157.671 199.429 157.744C199.383 157.718 199.336 157.691 199.27 157.585C199.25 157.506 199.243 157.512 199.243 157.519Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5913,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M202.721 158.162C202.848 158.109 202.987 158.208 203.173 158.42C203.06 158.46 202.894 158.387 202.721 158.162Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5918,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M196.763 152.682C196.882 152.635 197.035 152.715 197.215 152.934C197.095 152.98 196.942 152.901 196.763 152.682Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5923,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M197.261 153.179C197.381 153.132 197.534 153.212 197.714 153.431C197.594 153.477 197.441 153.397 197.261 153.179Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5928,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M197.76 153.676C197.88 153.629 198.033 153.709 198.212 153.921C198.093 153.967 197.94 153.888 197.76 153.676Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5933,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M202.768 160.958C202.941 160.985 203.08 161.071 203.233 161.323C203.286 161.429 203.233 161.495 203.193 161.528C202.994 161.508 202.867 161.415 202.748 161.13C202.728 160.998 202.761 160.958 202.761 160.958H202.768Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5938,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.774 150.694C194.887 150.648 195.034 150.74 195.22 150.952C195.107 150.992 194.954 150.913 194.774 150.694Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5943,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.276 150.197C194.389 150.157 194.535 150.243 194.721 150.455C194.608 150.495 194.455 150.409 194.276 150.197Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5948,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M193.604 149.687C193.704 149.64 193.903 149.72 194.189 149.939C194.083 149.992 193.896 149.899 193.604 149.687Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5953,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M203.167 158.659C203.3 158.612 203.393 158.705 203.473 158.811C203.486 158.831 203.393 158.917 203.266 159.043C203.16 159.01 203.147 158.904 203.173 158.659H203.167Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5958,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.677 160.07C201.504 160.024 201.378 159.924 201.251 159.659C201.212 159.54 201.238 159.514 201.251 159.494C201.431 159.52 201.571 159.606 201.704 159.878C201.73 160.017 201.677 160.07 201.677 160.07Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5963,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.757 159.984C201.943 160.01 202.076 160.103 202.202 160.368C202.229 160.501 202.189 160.541 202.189 160.541C202.016 160.521 201.877 160.435 201.724 160.176C201.67 160.064 201.724 160.01 201.757 159.977V159.984Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5968,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M195.266 151.191C195.386 151.145 195.526 151.237 195.712 151.449C195.599 151.489 195.446 151.41 195.266 151.191Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5973,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M202.714 161.011C202.522 161.004 202.382 160.918 202.236 160.66C202.196 160.547 202.236 160.501 202.249 160.481C202.442 160.494 202.575 160.58 202.714 160.839C202.761 160.951 202.721 160.991 202.708 161.011H202.714Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5978,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M170.362 128.675L170.535 128.92C170.482 128.9 170.435 128.874 170.362 128.774C170.342 128.695 170.362 128.675 170.362 128.675Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5983,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M170.335 128.702C170.269 128.629 170.209 128.556 170.156 128.476C170.202 128.496 170.249 128.523 170.329 128.609C170.362 128.675 170.342 128.695 170.335 128.702Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5988,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M71.1825 51.6714C70.8965 51.5985 70.6172 51.5124 70.2648 51.3004C70.1916 51.1678 70.2116 51.148 70.3778 51.1546C70.7569 51.1612 70.9763 51.1678 71.1958 51.1678C71.1958 51.1678 71.1958 51.1678 71.1958 51.2871C71.1958 51.4064 71.2091 51.6516 71.2091 51.6516C71.2091 51.6516 71.1958 51.6648 71.1891 51.6714H71.1825Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5993,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M70.1783 51.1745C69.9589 51.095 69.7461 51.0022 69.5399 50.9094C69.6729 50.8365 69.8059 50.757 70.0653 50.6775C70.1916 50.6709 70.1916 50.6642 70.1916 50.7835C70.1916 50.9028 70.2116 51.1413 70.2116 51.1413C70.2116 51.1413 70.1916 51.1612 70.1783 51.1745Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 5998,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M225.139 183.096C226.542 180.247 227.247 182.951 228.437 183.534C228.896 184.408 229.169 185.064 229.441 185.72C229.667 185.588 229.9 185.462 230.126 185.329C229.641 184.66 229.162 183.991 228.676 183.328C227.985 181.685 227.287 180.048 226.342 177.815C227.519 178.332 228.124 178.597 228.942 179.061C230.139 180.797 231.13 182.328 232.141 184.044C232.826 185.714 233.491 187.211 234.136 188.927C234.123 190.723 234.123 192.3 234.123 193.559C233.318 193.665 232.72 193.745 232.121 193.818C231.05 192.313 229.933 190.842 228.916 189.299C227.612 187.317 226.389 185.283 225.132 183.096H225.139ZM231.157 188.629C231.317 188.861 231.476 189.093 231.662 189.63C231.882 189.908 232.101 190.193 232.314 190.471C232.434 190.332 232.553 190.186 232.673 190.047C232.327 189.802 231.982 189.564 231.609 189.02C231.449 188.788 231.297 188.55 231.137 187.98C230.971 187.596 230.804 187.205 230.578 186.688C230.532 186.661 230.492 186.641 230.445 186.615C230.505 186.688 230.565 186.761 230.625 187.171C230.791 187.556 230.957 187.94 231.15 188.623L231.157 188.629ZM232.866 191.982C232.893 191.883 232.919 191.783 232.946 191.677C232.886 191.744 232.819 191.803 232.866 191.982Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6003,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M232.128 194.003C232.726 193.738 233.325 193.659 234.13 193.559C234.13 192.294 234.129 190.716 234.282 189.033C235.34 190.372 236.238 191.816 237.142 193.261C237.641 194.778 238.133 196.296 238.632 198.005C238.485 199.066 238.492 199.993 238.159 200.788C237.794 201.656 237.129 202.399 236.59 203.194C236.078 202.71 235.353 202.312 235.1 201.716C234.036 199.244 233.112 196.707 232.134 194.01L232.128 194.003ZM236.883 199.649C236.823 199.841 236.75 200.026 236.703 200.219C236.696 200.258 236.796 200.318 236.849 200.371C236.909 200.179 236.976 199.993 236.883 199.649Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6008,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M244.404 206.732C244.73 207.759 244.903 208.78 245.082 210.006C244.683 209.436 244.278 208.667 243.739 207.799C243.606 207.693 243.599 207.706 243.599 207.547C243.599 207.183 243.593 206.971 243.599 206.759C243.606 206.752 243.626 206.732 243.626 206.732C243.832 206.732 244.045 206.732 244.411 206.732H244.404Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6013,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M242.09 202.737C241.877 203.147 241.664 203.565 241.451 203.976C241.418 203.631 241.385 203.28 241.598 202.836C241.844 202.737 242.09 202.737 242.09 202.737Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6018,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M243.1 206.712C243.047 206.467 242.994 206.222 242.941 205.97C243.154 206.129 243.36 206.288 243.599 206.586C243.626 206.726 243.613 206.745 243.48 206.732C243.347 206.719 243.1 206.706 243.1 206.706V206.712Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6023,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M242.096 202.571C242.096 202.736 241.85 202.737 241.724 202.737C241.598 202.518 241.598 202.299 241.598 201.915C241.598 201.749 241.85 201.743 241.97 201.743C242.096 201.961 242.096 202.18 242.096 202.564V202.571Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6028,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M243.114 206.865C243.1 206.719 243.346 206.732 243.466 206.752C243.593 206.977 243.599 207.189 243.606 207.554C243.446 207.481 243.287 207.249 243.114 206.871V206.865Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6033,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M242.967 204.724C242.888 204.777 242.808 204.751 242.728 204.724C242.808 204.698 242.888 204.671 242.967 204.724Z",
                fill: "#0B81AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6038,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M35.3851 28.0158C43.844 29.341 52.0835 31.6005 59.731 36.0865C59.0993 36.0865 58.3611 35.9407 57.3104 35.7618C56.9979 35.7287 56.7585 35.6956 56.7585 35.6956C56.5257 35.5498 56.2996 35.404 55.9272 35.245C49.4966 33.0848 43.2056 30.9379 36.9213 28.791C36.4159 28.6187 35.9238 28.4001 35.3917 28.0158L35.3851 28.0158Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6043,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.2273 39.7309C62.3645 40.1219 63.5016 40.5128 64.6388 40.9038C64.5191 41.1755 64.3928 41.4471 64.2731 41.7122C63.3088 41.1556 62.3445 40.599 61.3005 39.89C61.2273 39.7376 61.2273 39.7309 61.2273 39.7309Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6048,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.2207 39.7376C61.0079 39.6779 60.7951 39.6183 60.5823 39.552C60.7552 39.5454 60.9281 39.5388 61.1608 39.6316C61.2207 39.7309 61.2207 39.7376 61.214 39.7376H61.2207Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6053,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M70.1916 43.2164C70.1318 43.1501 70.0719 43.0772 70.0121 43.0109C70.052 43.0374 70.0985 43.0573 70.165 43.1501C70.1916 43.2164 70.1916 43.2164 70.1916 43.2164Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6058,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M56.7851 35.7883C56.7518 35.6956 56.9979 35.7287 57.1242 35.742C57.1043 35.795 56.9646 35.8413 56.7851 35.7883Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6063,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M116.044 87.5923C116.024 87.4333 116.257 87.4664 116.37 87.4796C116.543 87.6453 116.642 87.7712 116.882 87.917C116.988 87.97 117.015 88.2085 117.028 88.3212C116.716 88.2085 116.39 87.9766 116.044 87.5857V87.5923Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6068,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M117.48 88.8314C117.407 88.8447 117.268 88.7519 117.075 88.5398C117.155 88.5266 117.288 88.626 117.48 88.8314Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6073,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M112.081 83.59C112.187 83.5503 112.327 83.6431 112.513 83.8551C112.406 83.8882 112.267 83.8021 112.081 83.59Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6078,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M112.579 84.0804C112.686 84.0406 112.825 84.1334 113.012 84.3454C112.905 84.3786 112.765 84.2924 112.579 84.0804Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6083,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M219.213 178.007C219.38 178.027 219.592 178.166 219.732 178.405C219.526 178.372 219.393 178.253 219.213 178.007Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6088,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M106.056 153.888C105.73 153.828 105.397 153.603 105.065 153.219C105.391 153.278 105.723 153.504 106.056 153.888Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6093,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M110.544 158.387C110.312 158.4 110.066 158.268 109.706 158.056C109.906 158.069 110.218 158.155 110.544 158.387Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6098,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.046 149.945C101.932 149.992 101.78 149.905 101.6 149.693C101.713 149.647 101.866 149.733 102.046 149.945Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6103,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.547 149.455C101.434 149.495 101.287 149.408 101.108 149.196C101.214 149.157 101.367 149.243 101.547 149.455Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M108.516 156.419C108.41 156.459 108.263 156.373 108.077 156.154C108.184 156.114 108.33 156.207 108.516 156.419Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6113,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M109.028 157.088C108.915 157.102 108.769 156.956 108.583 156.671C108.696 156.658 108.849 156.797 109.028 157.088Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6118,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M104.499 152.41C104.38 152.476 104.194 152.397 103.908 152.185C104.021 152.125 104.227 152.192 104.499 152.41Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6123,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M105.031 152.934C104.905 152.987 104.752 152.907 104.579 152.695C104.706 152.642 104.852 152.728 105.031 152.934Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6128,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M106.528 154.425C106.408 154.471 106.255 154.391 106.075 154.179C106.202 154.133 106.348 154.213 106.528 154.425Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6133,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M107.026 154.922C106.907 154.968 106.754 154.888 106.574 154.676C106.694 154.63 106.847 154.71 107.026 154.922Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M107.525 155.425C107.419 155.465 107.266 155.379 107.086 155.167C107.199 155.127 107.339 155.213 107.525 155.425Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6143,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M108.017 155.922C107.911 155.962 107.765 155.869 107.578 155.657C107.685 155.617 107.831 155.71 108.017 155.922Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6148,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M103.043 150.939C102.917 150.992 102.77 150.913 102.591 150.701C102.717 150.648 102.863 150.727 103.043 150.939Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6153,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.544 150.442C102.425 150.489 102.272 150.409 102.092 150.197C102.212 150.151 102.365 150.23 102.544 150.442Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6158,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M111.016 159.01C110.923 159.023 110.784 158.897 110.584 158.639C110.677 158.632 110.824 158.752 111.016 159.01Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6163,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M103.555 151.648C103.422 151.668 103.269 151.522 103.09 151.217C103.216 151.204 103.376 151.343 103.555 151.648Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6168,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.8293 204.214C89.1976 203.982 88.5592 203.399 88.2998 203.538C85.0213 205.288 80.9049 204.97 77.8525 207.693C77.9323 206.997 77.9988 206.116 78.471 205.619C79.4086 204.651 80.2998 203.909 78.7702 202.697C78.5707 202.538 78.8766 201.743 78.9631 201.239C79.0562 200.669 79.1626 200.099 79.1958 199.37C79.6348 198.542 80.1402 197.86 80.7054 197.031C80.9515 196.839 81.1377 196.799 81.4702 196.76C82.5209 197.966 83.4253 199.172 84.4162 200.49C83.698 201.378 82.9598 202.293 82.215 203.214C85.3405 202.524 88.1269 199.954 91.7911 202.617C91.1061 203.22 90.5475 203.704 89.8227 204.214H89.8293Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6173,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.1874 211.576C55.4417 213.888 49.5897 216.062 43.4982 218.07C43.2588 217.811 43.2521 217.725 43.2521 217.639C43.2521 217.639 43.2721 217.639 43.4317 217.632C43.8373 217.487 44.0834 217.354 44.3295 217.215C44.3295 217.215 44.5622 217.182 44.8149 217.155C45.3004 216.97 45.5198 216.811 45.7459 216.652C45.8257 216.632 45.9122 216.618 46.1183 216.579C50.2547 215.081 54.2647 213.584 58.2946 212.139C59.1924 211.814 60.15 211.669 61.1874 211.583L61.1874 211.576Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6178,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M43.0593 217.639C43.2588 217.725 43.2654 217.811 43.2987 218.037C43.3319 218.169 43.3053 218.169 43.1258 218.143C42.5539 218.288 42.1615 218.467 41.7758 218.64C41.1773 219.011 40.6187 219.508 39.967 219.7C39.6877 219.786 39.2155 219.242 38.8431 218.818C40.1931 218.315 41.5298 217.977 43.0593 217.639Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6183,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M44.1832 217.208C44.0834 217.354 43.8374 217.487 43.4383 217.626C43.5381 217.487 43.7842 217.341 44.1832 217.208Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6188,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M31.927 214.597C31.8206 214.452 31.8273 214.233 31.8339 213.855C31.9071 213.975 31.9736 214.253 31.927 214.597Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6193,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M45.6129 216.665C45.5265 216.804 45.307 216.963 44.9346 217.122C45.0144 216.976 45.2472 216.831 45.6129 216.665Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6198,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M37.0077 206.58C37.0809 206.639 37.0942 206.745 37.1075 206.851C37.0543 206.779 37.0011 206.699 37.0077 206.58Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6203,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M39.302 217.149C39.2618 217.169 39.2154 217.182 39.2355 217.175C39.3025 217.149 39.302 217.149 39.302 217.149Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6208,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M53.7526 196.773C53.7995 196.753 53.8464 196.74 53.8263 196.753C53.7593 196.78 53.7526 196.78 53.7526 196.773Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6213,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M106.036 110.254C107.246 109.035 108.283 107.696 110.312 109.24C112.087 110.592 113.776 113.494 113.324 115.23C113.131 115.979 112.905 116.728 112.825 117.019C114.295 117.019 116.496 116.575 116.756 117.099C117.66 118.895 117.939 121.015 118.325 123.043C118.431 123.613 118.072 124.262 117.933 125.15C117.8 125.653 117.653 125.885 117.394 126.144C117.281 126.17 117.041 126.197 117.041 125.978C117.041 124.852 117.108 123.937 117.028 123.036C116.769 120.008 114.049 118.133 111.568 119.06C111.721 117.735 111.874 116.589 112.1 114.979C110.312 113.58 108.177 111.924 106.042 110.261L106.036 110.254Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6218,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M105.909 110.261C108.164 111.911 110.298 113.574 112.087 114.972C111.868 116.582 111.708 117.735 111.549 119.067C111.549 119.246 111.529 119.266 111.415 119.266C111.223 119.431 111.136 119.597 110.957 119.875C110.511 119.445 109.753 118.563 109.886 118.398C111.149 116.821 109.66 116.231 108.915 115.409C107.658 114.018 106.355 112.659 105.125 111.162C105.304 110.784 105.43 110.532 105.55 110.287C105.543 110.287 105.79 110.274 105.909 110.267V110.261Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6223,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M117.5 126.117C117.647 125.885 117.786 125.66 117.986 125.302C118.518 124.885 119.003 124.593 119.402 124.355C119.954 125.713 120.48 126.992 121.025 128.443C120.672 129.119 120.293 129.616 119.588 130.173C117.76 130.073 117.374 129.265 117.706 127.853C117.833 127.323 117.58 126.7 117.507 126.117H117.5Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6228,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M98.5875 125.223C98.0023 125.296 97.4237 125.368 96.7255 125.581C94.3647 123.619 92.117 121.519 89.7096 119.352C89.3239 118.987 89.0978 118.689 88.6656 118.219C88.0205 117.656 87.575 117.271 87.1294 116.887C86.9166 116.681 86.7104 116.476 86.3513 116.231C83.7379 113.686 81.2707 111.175 78.6771 108.399C78.4111 108.034 78.2715 107.948 78.1318 107.855C78.1318 107.855 78.1318 107.855 78.1252 107.862C78.2116 106.921 78.3114 105.967 78.5641 104.999C78.7636 104.999 78.8035 105.026 78.85 105.052C78.7902 104.986 78.7303 104.92 78.6705 104.847C79.1892 104.006 79.7146 103.171 80.3264 102.183C81.4835 103.025 82.3679 103.661 83.412 104.324C83.5782 104.343 83.6714 104.516 83.7179 104.754C83.9041 105.105 84.0504 105.218 84.1967 105.331C84.1967 105.331 84.1635 105.331 84.2167 105.437C84.4095 105.636 84.5558 105.728 84.6955 105.828C84.6955 105.828 84.6622 105.828 84.7154 105.934C84.9149 106.133 85.0546 106.225 85.1942 106.325C85.1942 106.325 85.161 106.325 85.2142 106.431C85.4137 106.629 85.5533 106.722 85.693 106.822C85.693 106.822 85.6597 106.822 85.7329 106.941C85.9856 107.133 86.1651 107.206 86.3447 107.285C87.3156 107.948 88.2865 108.617 89.417 109.28C89.5766 109.28 89.5966 109.353 89.6498 109.485C89.7894 109.77 89.9158 109.843 90.0887 109.837C90.0887 109.837 90.1153 109.83 90.1153 110.002C90.6539 110.665 91.1859 111.149 91.7246 111.632C91.7246 111.632 91.7379 111.699 91.7313 111.877C92.7088 113.282 93.6997 114.501 94.5442 115.747C94.2516 115.906 94.1053 116.045 93.959 116.178C94.3447 116.377 94.7304 116.569 95.1161 116.768C95.1161 116.768 95.1161 116.768 95.1627 116.88C95.3489 117.086 95.4819 117.178 95.6149 117.265C95.2558 118.245 94.89 119.226 94.4378 120.458C95.5816 121.678 97.0779 123.275 98.5875 125.044C98.6008 125.216 98.5941 125.223 98.5941 125.223H98.5875Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6233,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M70.2116 99.672C69.5466 98.9762 68.8749 98.1082 68.2033 97.0612C68.8683 97.757 69.5333 98.625 70.2116 99.672Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6238,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M54.2713 87.9302C54.1583 87.3405 54.0319 86.764 53.7992 85.6839C54.9164 86.658 55.6479 87.2941 56.5457 87.9567C56.7119 87.9832 56.7319 87.9634 56.7651 88.0826C56.9447 88.288 57.091 88.3742 57.2306 88.4603C57.2306 88.4603 57.2306 88.4338 57.3038 88.5862C57.5897 88.8049 57.7959 88.8645 58.0951 88.9971C58.3744 89.1826 58.5606 89.3019 58.7468 89.4211C58.7468 89.4211 58.7269 89.4278 58.7734 89.5404C58.9596 89.7392 59.0993 89.8253 59.2389 89.9115C59.2389 89.9115 59.219 89.9181 59.219 90.0374C59.2389 90.3157 59.2456 90.4813 59.219 90.8458C59.8907 91.9921 60.569 92.9463 61.234 93.9005C61.2207 93.9005 61.2273 93.874 61.2938 94.0131C61.6529 94.2318 61.9455 94.3113 62.2248 94.3974C62.2115 94.3974 62.2248 94.3842 62.2581 94.5101C62.4376 94.7155 62.5773 94.8017 62.7169 94.8878C62.7103 94.8944 62.7236 94.8812 62.7502 95.0071C62.9231 95.2125 63.076 95.2986 63.2157 95.3848C63.209 95.3914 63.2223 95.3781 63.2489 95.5107C63.4218 95.7227 63.5748 95.8022 63.7145 95.8817C63.7078 95.8817 63.7145 95.8685 63.7743 96.0143C64.0204 96.2329 64.2199 96.2992 64.4925 96.3654C64.5723 96.3654 64.7319 96.3721 64.7319 96.3721C64.7319 96.3721 64.7053 96.3787 64.7186 96.4516C64.7319 96.5245 64.7319 96.6968 64.7319 96.6968C65.3836 97.9624 66.042 99.228 66.6937 100.666C65.8491 100.235 64.8583 99.7515 64.18 98.9961C61.1143 95.5637 58.1284 92.0584 54.9031 88.3875C54.5373 88.0959 54.391 88.0031 54.2447 87.9037C54.2447 87.9037 54.258 87.9302 54.2647 87.917L54.2713 87.9302Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6243,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.48 92.1843C62.4243 93.2577 63.362 94.3246 64.293 95.6101C64.2797 95.8221 64.1933 95.9082 64.0802 95.8884C63.9672 95.8685 63.7278 95.8685 63.7278 95.8685C63.7278 95.8685 63.7145 95.8884 63.6945 95.7558C63.5282 95.5438 63.3819 95.4576 63.2356 95.3781C63.2356 95.3781 63.2223 95.3914 63.209 95.2522C63.0428 95.0336 62.8898 94.954 62.7435 94.8812C62.7435 94.8812 62.7302 94.8944 62.7169 94.7553C62.5507 94.5366 62.3977 94.4637 62.2448 94.3842C62.2448 94.3842 62.2315 94.4041 62.1849 94.2318C61.8391 93.9999 61.5399 93.9402 61.234 93.8806C61.234 93.8806 61.234 93.9071 61.3337 93.7481C61.3071 93.2445 61.1808 92.9065 61.1608 92.4758C61.3404 92.3234 61.4135 92.2572 61.48 92.1909V92.1843Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6248,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M59.2389 90.647C59.2589 90.4813 59.2522 90.3157 59.2389 90.0308C59.9439 90.5609 60.6421 91.2168 61.4069 92.0252C61.4069 92.2439 61.3404 92.3102 61.0345 92.3632C60.2764 91.7867 59.7577 91.2102 59.2389 90.6404V90.647Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6253,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M56.2398 82.9738C56.5324 83.2786 56.8383 83.5768 57.1109 83.8949C57.1242 83.9081 56.9181 84.1069 56.8183 84.2195C56.6255 83.9147 56.4393 83.6099 56.2464 83.1395C56.2464 82.9738 56.2464 82.9738 56.2464 82.9738H56.2398Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6258,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M58.8 89.2687C58.5673 89.3085 58.3811 89.1892 58.0353 88.8778C57.8291 88.6061 57.7826 88.5266 57.736 88.4405C58.1084 88.6658 58.4808 88.8844 58.8 89.2687Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6263,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M56.2464 82.9672C55.9937 82.8148 55.741 82.669 55.4883 82.5166C55.5747 82.4106 55.6678 82.3112 55.7543 82.2052C55.9072 82.3642 56.0536 82.5232 56.2265 82.828C56.2464 82.9672 56.2464 82.9672 56.2464 82.9672Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6268,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M69.52 102.846C69.7062 103.071 69.7328 103.29 69.7328 103.674C69.4069 103.601 69.101 103.369 68.7486 102.992C68.9215 102.846 69.1343 102.846 69.52 102.846Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6273,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.7236 86.1146C62.7967 86.2273 62.8832 86.5056 62.8566 86.8568C62.7435 86.7176 62.7369 86.499 62.7236 86.1146Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6278,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M57.603 88.4471C57.7826 88.5266 57.8291 88.6061 57.9422 88.8115C57.8025 88.8712 57.5897 88.8049 57.2971 88.5995C57.2971 88.4537 57.3836 88.4537 57.603 88.4471Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6283,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M59.2456 89.7657C59.1059 89.8253 58.9663 89.7392 58.7801 89.5338C58.9064 89.4808 59.0727 89.547 59.2456 89.7657Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6288,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M64.7452 96.2462C64.7386 96.3853 64.579 96.3721 64.4327 96.2661C64.2531 96.0805 64.2265 95.9944 64.1999 95.9149C64.1999 95.9149 64.2864 95.8287 64.3263 95.7823C64.4992 95.8618 64.6255 95.9878 64.7452 96.2462Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6293,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M64.845 96.7696C64.7386 96.7034 64.7319 96.5311 64.7253 96.4516C64.8782 96.4383 65.0378 96.5112 65.2041 96.7299C65.2174 96.8757 65.2041 96.8955 65.2041 96.8955C65.1243 96.8757 65.0378 96.8558 64.8516 96.7696H64.845Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6298,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M65.2307 96.869C65.357 96.9221 65.4767 96.9883 65.5964 97.048C65.49 97.0678 65.3903 97.0811 65.244 96.9949C65.2041 96.8955 65.224 96.8757 65.2307 96.8624V96.869Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6303,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.6621 102.727C68.5225 102.826 68.3895 102.74 68.2498 102.475C68.3496 102.442 68.4892 102.521 68.6621 102.727Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6308,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M68.1634 102.223C68.0237 102.322 67.8841 102.236 67.7511 101.978C67.8508 101.945 67.9905 102.024 68.1634 102.223Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6313,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M67.6646 101.726C67.525 101.825 67.3853 101.739 67.2523 101.481C67.3521 101.448 67.4917 101.527 67.6646 101.726Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6318,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M67.1658 101.229C67.0262 101.328 66.8932 101.242 66.7535 100.977C66.8533 100.944 66.9863 101.024 67.1658 101.229Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6323,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M51.7244 76.3939C51.6113 76.4602 51.4783 76.3608 51.3253 76.1156C51.4384 76.0494 51.5714 76.1421 51.7244 76.3939Z",
                fill: "#10304B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6328,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M57.1774 88.3477C57.0843 88.3742 56.938 88.288 56.7585 88.0694C56.8516 88.0429 56.9912 88.1357 57.1774 88.3477Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6333,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.1643 98.5919C91.6914 98.5919 93.7928 100.427 94.5043 102.687C94.9299 104.045 95.7213 105.298 96.4262 106.557C96.5792 106.835 97.0979 107.087 97.4104 107.054C98.1752 106.967 99.3788 106.318 99.6049 106.576C100.729 107.882 101.6 109.406 102.411 111.129C101.713 112.03 101.168 112.666 100.616 113.295C99.5584 111.487 98.4944 109.678 97.3373 107.703C96.3664 108.432 95.6681 108.955 94.7171 109.671C94.0455 107.875 93.1344 106.239 92.8618 104.509C92.5559 102.528 91.8376 101.156 89.9823 100.308C89.5567 100.116 89.4104 99.3075 89.1577 98.5985L89.1643 98.5919Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6338,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M89.0646 107.246C87.6348 106.133 86.3114 104.874 84.2832 102.945C85.5068 102.137 86.3913 101.554 87.422 100.891C88.6855 102.11 89.8027 103.403 91.0796 104.893C90.6074 105.437 89.8892 106.272 89.0646 107.246Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6343,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M100.536 113.435C101.168 112.659 101.72 112.03 102.405 111.308C102.624 111.235 102.704 111.248 102.983 111.387C103.322 111.632 103.469 111.745 103.548 111.983C103.349 112.341 103.216 112.573 102.937 112.865C102.378 113.368 101.966 113.812 101.407 114.342C100.057 115.423 98.8535 116.423 97.59 117.245C97.5235 116.814 97.5168 116.562 97.5102 116.317C98.4877 115.409 99.4719 114.495 100.536 113.441L100.536 113.435Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6348,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M94.6839 115.727C93.693 114.501 92.7022 113.282 91.7579 111.884C93.2408 113.07 94.6905 114.422 96.1536 115.972C96.1802 116.171 96.1136 116.251 95.954 116.244C95.5816 116.218 95.3688 116.204 95.1361 116.204C95.1228 116.218 95.1427 116.257 95.1228 116.112C94.9366 115.886 94.777 115.807 94.6373 115.741C94.6573 115.754 94.6839 115.721 94.6839 115.721V115.727Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6353,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.3572 116.297C97.5235 116.562 97.5368 116.814 97.5767 117.258C97.6166 117.457 97.6099 117.51 97.457 117.576C97.0713 117.662 96.8452 117.682 96.6191 117.702C96.6191 117.702 96.6191 117.735 96.6058 117.596C96.4395 117.377 96.2799 117.291 96.1203 117.212C96.1203 117.212 96.1403 117.245 96.1669 117.066C96.1669 116.675 96.1469 116.456 96.1203 116.244C96.1203 116.244 96.1868 116.165 96.2134 116.125C96.5592 116.145 96.8784 116.211 97.3572 116.291V116.297Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6358,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M91.6914 111.473C91.1793 111.149 90.6406 110.658 90.0953 110.016C90.614 110.34 91.1394 110.831 91.6914 111.473Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6363,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M90.0488 109.724C89.9025 109.843 89.7761 109.764 89.6697 109.505C89.816 109.393 89.9424 109.466 90.0488 109.724Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6368,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M103.615 111.864C103.469 111.752 103.322 111.632 103.11 111.4C103.755 110.93 104.473 110.579 105.371 110.261C105.43 110.539 105.304 110.784 104.972 111.188C104.38 111.52 104.001 111.692 103.622 111.864H103.615Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6373,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M86.2516 107.153C86.1518 107.199 85.9723 107.12 85.7196 106.914C85.8193 106.868 85.9989 106.948 86.2516 107.153Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6378,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M85.6464 106.683C85.54 106.716 85.4004 106.623 85.2075 106.404C85.3073 106.371 85.4602 106.464 85.6464 106.683Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6383,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M85.1477 106.186C85.0413 106.219 84.9016 106.126 84.7088 105.907C84.8085 105.874 84.9615 105.967 85.1477 106.186Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6388,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M84.6489 105.689C84.5425 105.722 84.4029 105.629 84.21 105.41C84.3098 105.377 84.4627 105.47 84.6489 105.689Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6393,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M84.1502 105.192C84.0438 105.211 83.8975 105.099 83.7113 104.847C83.8176 104.827 83.964 104.94 84.1502 105.192Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6398,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M70.2648 104.483C70.9897 104.887 71.781 105.45 72.6455 106.172C71.9207 105.768 71.1227 105.205 70.2648 104.483Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6403,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M60.2365 105.828C60.3961 105.881 60.5224 105.973 60.682 106.212C60.7419 106.318 60.7286 106.331 60.7153 106.338C60.549 106.292 60.4227 106.192 60.2764 105.947C60.2298 105.834 60.2298 105.828 60.2298 105.828H60.2365Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6408,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M60.2232 105.834C60.1567 105.761 60.0968 105.689 60.037 105.622C60.0835 105.649 60.1234 105.669 60.1966 105.761C60.2232 105.828 60.2232 105.834 60.2165 105.841L60.2232 105.834Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6413,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M69.7461 103.946C69.8525 103.913 69.9988 103.992 70.1783 104.204C70.0653 104.244 69.9323 104.151 69.7461 103.946Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6418,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M54.3112 88.0363C54.3977 88.0098 54.544 88.1092 54.7634 88.3212C54.6836 88.3411 54.5307 88.2483 54.3112 88.0363Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6423,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M54.2514 81.4829C52.4226 81.9997 52.8349 80.8402 52.8948 79.2167C53.5598 80.1842 53.8923 80.6679 54.2381 81.3106C54.2514 81.4763 54.2514 81.4763 54.2514 81.4763V81.4829Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6428,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M51.4783 79.0444C51.7377 79.2234 51.8773 79.4155 52.0103 79.6077C51.751 79.5348 51.4916 79.4685 51.2323 79.3824C51.1923 79.3691 51.1591 79.2432 51.179 79.1969C51.2056 79.1372 51.2921 79.1041 51.4783 79.0511V79.0444Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6433,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M50.7335 77.58C50.913 77.7855 50.9596 77.9644 51.0128 78.1433C50.7534 78.0571 50.4941 77.971 50.2414 77.8849C50.3611 77.7722 50.4874 77.6662 50.7335 77.58Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6438,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M52.2497 83.9744L52.0569 83.8683C52.1167 83.8418 52.1766 83.8153 52.2497 83.875C52.263 83.9677 52.2497 83.9744 52.2497 83.9744Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6443,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M52.7618 84.4581C52.8283 84.5442 52.8948 84.637 52.9613 84.7231C52.9081 84.6966 52.8549 84.6701 52.7817 84.5508C52.7618 84.4647 52.7684 84.4581 52.7684 84.4581H52.7618Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6448,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M52.263 83.9611C52.4027 84.0473 52.5423 84.1334 52.7152 84.3388C52.7551 84.4581 52.7551 84.4647 52.7485 84.4647C52.5689 84.4448 52.4359 84.3587 52.2963 84.087C52.2497 83.9744 52.2564 83.9611 52.263 83.9545V83.9611Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6453,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M51.5386 82.7756C51.4984 82.8089 51.4783 82.6889 51.4783 82.6889C51.4783 82.6889 51.5788 82.7422 51.5386 82.7756Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6458,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M99.6116 148.408C99.432 148.494 99.2724 148.428 99.1128 148.222C99.2858 148.143 99.4586 148.196 99.6116 148.408Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6463,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M99.1062 147.911C98.9998 148.083 98.92 148.103 98.7072 148.103C98.7604 147.971 98.9399 147.865 99.1062 147.911Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6468,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.2974 145.857C97.3838 146.022 97.4769 146.188 97.5634 146.354C97.4304 146.367 97.2974 146.387 97.1577 146.215C97.1444 146.029 97.2974 145.857 97.2974 145.857Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6473,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.0646 146.115C96.9117 146.022 96.8385 145.844 96.7654 145.671C96.8917 145.658 97.0114 145.651 97.2176 145.751C97.2974 145.863 97.1511 146.036 97.0646 146.115Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6478,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.6548 144.757C95.728 144.585 95.8543 144.558 96.1735 144.565C96.1469 144.704 95.9275 144.803 95.6548 144.757Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6483,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.0962 144.227C95.2625 144.174 95.4287 144.247 95.595 144.459C95.595 144.604 95.3555 144.611 95.2292 144.598C95.1095 144.591 95.0962 144.346 95.0962 144.22V144.227Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6488,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M92.9482 142.232C94.1519 141.888 95.1228 142.133 95.1361 143.909C95.0962 144.114 94.8568 144.114 94.7371 144.094C94.5775 143.915 94.491 143.776 94.245 143.624C93.9391 143.385 93.7396 143.206 93.4204 142.968C93.2076 142.729 93.1211 142.544 92.9416 142.232H92.9482Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6493,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M92.1436 141.278C92.2832 141.258 92.4561 141.391 92.6224 141.702C92.4694 141.729 92.3231 141.576 92.1436 141.278Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6498,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M91.6315 140.768C91.7778 140.702 91.9374 140.768 92.1037 140.987C91.9574 141.053 91.8044 140.98 91.6315 140.768Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6503,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M84.5292 133.764C87.156 134.122 88.4661 136.136 89.6431 138.462C89.4237 138.614 89.2441 138.581 88.9316 138.488C88.7121 138.303 88.6057 138.19 88.3929 138.031C88.2133 137.832 88.1136 137.713 87.8875 137.548C87.7212 137.336 87.6281 137.21 87.4153 137.024C87.2291 136.819 87.1227 136.706 86.9099 136.534C86.7304 136.328 86.624 136.216 86.3979 136.063C86.0188 135.705 85.7395 135.407 85.3006 135.136C85.0745 134.871 85.008 134.586 84.8085 134.215C84.6556 134.049 84.629 133.963 84.5292 133.764Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6508,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M82.1285 131.359C82.6539 131.617 83.1659 132.048 83.6581 132.677C83.2524 132.644 82.8733 132.406 82.3147 132.167C82.1352 131.955 82.1219 131.736 82.1219 131.359L82.1285 131.359Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6513,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M194.076 47.1788C194.648 48.1927 195.133 48.9149 196.43 48.1396C196.856 47.8879 197.494 47.9806 198.139 48.0469C197.667 48.6101 197.082 49.0475 196.37 49.5709C193.065 51.572 189.88 53.4738 186.728 55.4285C186.561 55.5279 186.661 56.058 186.648 56.5351C186.701 56.661 186.748 56.6477 186.788 56.6279C187.546 56.3297 188.35 56.111 189.055 55.7134C191.143 54.5472 193.125 52.8774 195.26 54.6599C195.26 55.7665 195.26 56.7538 195.273 57.92C195.127 58.3242 194.967 58.5495 194.748 58.9007C194.681 59.0199 194.448 59.0531 194.335 59.0862C193.777 59.3579 193.338 59.5964 192.832 59.9741C192.773 60.1133 192.759 60.1066 192.6 60.1133C192.054 60.4446 191.662 60.7759 191.276 61.1072C191.276 61.1072 191.263 61.1072 191.103 61.0873C190.724 61.0873 190.505 61.094 190.179 61.1536C189.94 61.2795 189.847 61.3921 189.767 61.5578C189.747 61.5843 189.687 61.5909 189.687 61.5909C189.075 61.4054 188.47 61.2265 187.566 60.9548C188.503 60.0735 189.108 59.5103 189.86 58.7748C190.139 58.5429 190.272 58.4832 190.412 58.4302C190.372 58.3706 190.325 58.3109 190.286 58.2513L189.773 58.6157C188.729 59.0995 187.685 59.5898 186.462 60.0934C186.282 60.1066 186.282 60.1066 186.282 60.1066C186.242 59.5434 186.196 58.9868 186.109 57.8272C183.197 59.7356 180.65 61.4716 178.023 63.0885C177.025 63.7047 175.855 64.0625 174.738 64.4601C174.272 64.6257 173.733 64.5727 173.235 64.6191C173.421 64.0625 173.614 63.5059 173.833 62.7903C175.07 61.8626 176.307 61.1205 177.477 60.2988C179.871 58.6224 182.232 56.8995 184.5 54.534C183.11 54.8255 181.714 55.1171 179.652 55.5478C181.115 53.7123 182.066 52.5196 182.891 51.2275C186.029 49.0607 189.288 46.9867 192.553 44.9193C192.753 45.2108 192.952 45.4958 193.152 45.7873C192.241 46.5957 191.33 47.3975 190.412 48.2059C190.478 48.3252 190.538 48.4378 190.605 48.5571C191.702 48.1065 192.793 47.6559 194.063 47.1788H194.076Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6518,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.282 64.5727C186.628 64.2149 186.98 63.8637 187.546 63.539C187.765 63.5655 187.858 63.6517 187.858 63.6517C187.446 63.9631 187.034 64.2679 186.455 64.5794C186.289 64.5794 186.282 64.5727 186.282 64.5727Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6523,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M191.463 61.1536C191.675 60.7825 192.061 60.4512 192.613 60.1265C192.394 60.4843 192.021 60.8422 191.463 61.1536Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6528,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M190.292 61.1138C190.512 61.1006 190.731 61.0873 191.11 61.1006C190.924 61.4716 190.571 61.8228 190 62.1409C189.78 62.1078 189.654 61.9819 189.654 61.9819C189.654 61.9819 189.674 61.7897 189.687 61.6969C189.7 61.6042 189.76 61.5909 189.887 61.5313C190.153 61.3855 190.246 61.2662 190.292 61.1138Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6533,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M187.719 63.5192C187.732 63.3137 187.832 63.1878 188.138 63.1017C188.297 63.1017 188.39 63.1945 188.39 63.1945C188.337 63.3601 188.237 63.486 187.965 63.6053C187.852 63.6517 187.758 63.5655 187.712 63.5192H187.719Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6538,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M188.257 63.0553C188.317 62.9228 188.423 62.8367 188.523 62.7505C188.537 62.8565 188.556 62.9692 188.483 63.1348C188.397 63.1945 188.304 63.1017 188.257 63.0553Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6543,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M189.847 62.1674C189.787 62.3132 189.66 62.3927 189.534 62.4722C189.514 62.3529 189.487 62.2337 189.561 62.0415C189.654 61.9752 189.78 62.1011 189.847 62.1608V62.1674Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6548,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.296 64.586C186.249 64.5993 186.202 64.6127 186.216 64.5993C186.283 64.5727 186.289 64.586 186.296 64.586Z",
                fill: "#FDC685"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6553,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.296 60.1133C186.249 60.1333 186.202 60.1466 186.222 60.1333C186.289 60.1066 186.296 60.1066 186.296 60.1133Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6558,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M169.624 38.9292C169.684 38.7105 169.817 38.578 169.963 38.4521C169.963 38.4521 170.069 38.5581 170.122 38.6177C169.983 38.7503 169.843 38.8828 169.624 38.9292Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6563,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M164.842 54.6201C165.275 53.9575 165.733 53.3081 166.186 52.6654C166.398 52.8509 166.611 53.0431 166.824 53.2286C166.292 53.6924 165.76 54.1563 165.062 54.6466C164.895 54.6731 164.862 54.64 164.842 54.6201Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6568,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M176.992 44.1904C177.058 43.8989 177.285 43.5808 177.67 43.2429C177.604 43.5344 177.378 43.8458 176.992 44.1904Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6573,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M174.977 45.6416C175.223 45.3765 175.602 45.0452 176.161 44.7139C175.928 44.9988 175.522 45.2904 174.977 45.6416Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6578,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M167.549 52.1353C167.748 52.016 167.941 52.016 168.141 52.016C168.141 52.0955 168.141 52.2479 168.141 52.2479C167.948 52.2612 167.748 52.2545 167.556 52.1353H167.549Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6583,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M174.445 46.1319C174.432 46.0259 174.518 45.8668 174.724 45.7012C174.784 45.8536 174.684 45.9795 174.445 46.1319Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6588,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M177.471 48.6432C177.87 48.0138 178.435 47.3843 179.18 46.7548C178.781 47.3843 178.216 48.0138 177.471 48.6432Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6593,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M180.969 51.6847C181.055 51.519 181.288 51.3534 181.68 51.1877C181.594 51.3468 181.361 51.519 180.969 51.6847Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6598,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M180.836 52.0425C180.736 52.0823 180.643 52.0027 180.57 51.9034C180.556 51.8835 180.63 51.804 180.749 51.7046C180.842 51.7443 180.842 51.8305 180.836 52.0359L180.836 52.0425Z",
                fill: "#FCAC6B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6603,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M222.625 71.9809C222.319 72.8555 221.907 73.6308 221.341 74.4657C221.627 73.6441 222.073 72.7628 222.625 71.9809Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6608,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M161.71 117.755C161.604 117.722 161.524 117.662 161.371 117.338C161.092 116.986 160.905 116.874 160.719 116.754C157.002 113.209 153.284 109.671 149.634 105.894C149.786 105.477 149.866 105.284 149.953 105.092C152.905 107.802 155.878 110.479 158.797 113.223C160.22 114.561 161.531 116.006 162.694 117.576C162.235 117.748 161.969 117.748 161.71 117.748V117.755Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6613,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M197.168 149.462C196.676 149.448 195.978 149.448 195.626 149.097C192.314 145.777 189.062 142.398 185.763 138.879C187.865 140.576 189.993 142.431 192.267 144.578C192.859 145.115 193.311 145.36 193.757 145.605C194.329 146.221 194.901 146.831 195.612 147.52C196.204 148.169 196.663 148.739 197.162 149.468L197.168 149.462Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6618,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M149.919 104.946C149.866 105.284 149.786 105.477 149.567 105.742C147.851 104.072 146.269 102.322 144.493 100.335C144.141 99.725 143.988 99.3539 143.861 98.9497L143.954 98.8569C145.936 100.838 147.911 102.813 149.926 104.94L149.919 104.946Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6623,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M176.886 124.666C178.901 123.964 179.446 125.276 179.818 127.005C179.805 127.204 179.765 127.25 179.765 127.25C178.827 126.515 177.883 125.773 176.892 124.872C176.839 124.706 176.892 124.666 176.892 124.666H176.886Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6628,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M161.823 117.887C161.969 117.755 162.235 117.755 162.688 117.755C162.88 117.755 162.867 117.755 162.934 117.914C163.698 118.464 164.403 118.855 165.102 119.246C165.314 119.438 165.521 119.637 165.773 120.127C165.826 120.697 165.84 120.969 165.846 121.247C164.543 120.174 163.233 119.093 161.816 117.887H161.823Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6633,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M141.74 95.9347C141.973 96.0871 142.066 96.213 142.298 96.3721C142.904 97.1341 143.402 97.8365 143.928 98.7045C143.948 98.8702 143.888 98.9298 143.702 98.9099C142.631 97.9425 141.747 96.9883 140.862 96.0407C141.095 96.0076 141.328 95.9745 141.74 95.9347Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6638,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M179.832 127.184C180.47 127.727 181.082 128.291 181.753 129.026C181.807 129.192 181.767 129.238 181.767 129.238C181.122 128.682 180.47 128.125 179.798 127.409C179.772 127.244 179.812 127.204 179.838 127.177L179.832 127.184Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6643,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M175.369 123.175C175.908 123.082 176.447 122.996 177.165 122.877C177.052 123.46 176.972 123.904 176.886 124.5C176.886 124.66 176.832 124.699 176.806 124.719C176.334 124.335 175.881 123.931 175.383 123.367C175.329 123.215 175.369 123.169 175.369 123.169V123.175Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6648,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M182.305 136.64C182.292 136.282 182.272 135.931 182.252 135.407C182.778 135.884 183.316 136.527 183.875 137.342C183.802 137.534 183.702 137.561 183.456 137.614C183.31 137.64 183.303 137.64 183.263 137.521C183.123 137.256 182.984 137.17 182.811 137.143C182.811 137.143 182.811 137.143 182.764 137.024C182.625 136.759 182.492 136.673 182.312 136.646L182.305 136.64Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6653,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M164.982 119.12C164.403 118.855 163.698 118.464 162.94 117.907C163.539 118.159 164.197 118.577 164.982 119.12Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6658,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M193.737 145.426C193.311 145.353 192.859 145.108 192.347 144.717C192.759 144.797 193.238 145.029 193.737 145.426Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6663,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M165.86 121.24C165.846 120.969 165.833 120.697 165.84 120.213C166.159 120.306 166.458 120.604 166.837 121.035C166.917 121.167 166.877 121.214 166.691 121.24C166.285 121.26 166.073 121.247 165.853 121.24C165.853 121.24 165.866 121.234 165.86 121.24Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6668,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M182.345 121.353C182.445 121.32 182.585 121.413 182.764 121.618C182.671 121.651 182.525 121.558 182.345 121.353Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6673,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M183.343 122.34C183.436 122.314 183.569 122.407 183.762 122.619C183.669 122.645 183.529 122.552 183.343 122.34Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6678,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M182.844 121.843C182.944 121.81 183.083 121.903 183.263 122.108C183.17 122.142 183.024 122.049 182.844 121.843Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6683,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M181.847 120.849C181.946 120.816 182.079 120.909 182.266 121.114C182.172 121.148 182.026 121.055 181.847 120.849Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6688,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M181.341 120.24C181.448 120.227 181.581 120.352 181.767 120.611C181.667 120.624 181.521 120.505 181.341 120.24Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6693,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M175.309 123.241C175.13 123.208 175.004 123.116 174.851 122.877C174.797 122.771 174.837 122.725 174.857 122.705C175.037 122.738 175.163 122.831 175.316 123.069C175.369 123.175 175.329 123.222 175.316 123.241H175.309Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6698,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M181.827 129.172C181.9 129.245 181.953 129.338 182.006 129.43C181.953 129.411 181.9 129.391 181.807 129.304C181.767 129.238 181.807 129.192 181.827 129.172Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6703,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M184.793 128.695C184.952 128.748 185.085 128.841 185.238 129.086C185.291 129.192 185.291 129.192 185.298 129.192C185.138 129.139 185.012 129.039 184.859 128.801C184.799 128.695 184.799 128.695 184.799 128.695H184.793Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6708,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M184.799 128.688C184.739 128.622 184.686 128.549 184.626 128.483C184.666 128.509 184.706 128.536 184.773 128.622C184.799 128.688 184.799 128.688 184.799 128.682V128.688Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6713,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M140.716 95.9878C141.747 96.9883 142.631 97.9359 143.668 98.9364C143.981 99.3605 144.141 99.7316 144.353 100.248C143.509 99.884 142.558 99.4533 141.727 98.8569C141.008 98.3401 140.417 97.6443 139.625 96.9486C139.479 96.8757 139.466 96.6371 139.459 96.5178C139.592 96.2859 139.738 96.1667 139.924 95.9215C140.17 95.8353 140.37 95.8884 140.722 95.9878H140.716Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6718,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M124.922 79.8661C124.722 79.9059 124.45 79.8197 124.097 79.6077C124.297 79.5679 124.569 79.6541 124.922 79.8661Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6723,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M127.948 82.8545C127.835 82.9208 127.708 82.828 127.549 82.5762C127.662 82.51 127.788 82.6027 127.948 82.8545Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6728,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M127.449 82.3576C127.336 82.4172 127.209 82.3244 127.057 82.0793C127.17 82.0196 127.296 82.1058 127.449 82.3576Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6733,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M126.451 81.3636C126.338 81.4299 126.212 81.3371 126.059 81.0853C126.172 81.0191 126.298 81.1118 126.451 81.3636Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6738,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M125.447 80.3763C125.341 80.436 125.208 80.3432 125.055 80.1046C125.168 80.0384 125.294 80.1311 125.447 80.3763Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6743,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M126.95 81.8606C126.837 81.9202 126.711 81.8341 126.558 81.5823C126.671 81.516 126.797 81.6088 126.95 81.8606Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6748,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M230.964 171.911C231.636 173.124 232.134 174.323 232.647 175.701C232.181 175.496 231.702 175.105 231.217 174.708C230.605 175.284 230.033 175.821 229.162 176.311C228.457 175.814 228.058 175.364 227.572 174.794C227.207 174.588 226.927 174.502 226.641 174.423C226.641 174.204 226.648 173.979 226.655 173.588C227.047 173.376 227.446 173.329 228.397 173.223C226.05 170.347 223.955 167.776 221.86 165.205C222.08 164.967 222.306 164.722 222.525 164.483C223.017 164.722 223.622 164.848 223.981 165.212C226.056 167.306 228.071 169.466 230.126 171.587C230.286 171.752 230.565 171.792 230.964 171.911Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6753,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M216.114 162.833C215.789 163.138 215.396 163.297 214.844 163.469C212.038 160.613 209.398 157.744 206.738 154.71C206.724 154.537 206.724 154.537 206.724 154.537C207.356 154.59 208.247 154.391 208.58 154.729C211.127 157.32 213.574 160.017 216.114 162.833Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6758,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M207.576 145.598C207.762 145.751 207.855 145.883 208.101 146.036C208.207 146.175 208.207 146.261 208.194 146.473C207.875 146.38 207.562 146.162 207.21 145.797C207.263 145.638 207.35 145.625 207.576 145.598Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6763,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.238 152.543C201.178 152.476 201.118 152.404 201.059 152.337C201.099 152.364 201.138 152.39 201.205 152.476C201.232 152.543 201.232 152.543 201.232 152.543H201.238Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6768,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M201.238 152.549C201.298 152.616 201.358 152.689 201.418 152.755C201.378 152.728 201.338 152.708 201.265 152.616C201.238 152.549 201.238 152.549 201.238 152.549Z",
                fill: "#43E9F5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6773,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M206.718 154.531C206.658 154.464 206.598 154.391 206.532 154.325C206.572 154.352 206.618 154.372 206.685 154.464C206.711 154.531 206.711 154.531 206.711 154.531H206.718Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6778,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M237.268 193.148C236.238 191.81 235.34 190.365 234.296 188.808C233.491 187.198 232.826 185.707 232.281 184.031C232.48 183.852 232.573 183.852 232.66 183.845C233.551 185.104 234.435 186.363 235.46 187.721C236.191 189.564 236.796 191.3 237.268 193.148Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6783,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M232.633 183.673C232.573 183.852 232.48 183.852 232.261 183.858C231.137 182.328 230.153 180.79 229.122 179.081C229.454 178.942 230.053 178.842 230.166 179.028C231.031 180.486 231.809 181.996 232.64 183.666L232.633 183.673Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6788,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M227.652 174.92C228.051 175.37 228.457 175.821 228.996 176.338C228.597 177.142 227.896 176.876 226.894 175.542C227.2 175.231 227.433 175.079 227.659 174.92H227.652Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6793,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M227.566 174.794C227.426 175.072 227.193 175.224 226.828 175.383C226.668 175.178 226.655 174.959 226.641 174.582C226.921 174.502 227.207 174.582 227.572 174.794L227.566 174.794Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6798,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.636 179.379C231.516 179.207 231.39 179.034 231.27 178.869C231.33 178.829 231.39 178.783 231.45 178.743C231.503 178.875 231.563 179.015 231.622 179.266C231.629 179.386 231.629 179.379 231.629 179.379H231.636Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6803,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M219.46 170.155C219.487 170.195 219.386 170.209 219.386 170.209C219.386 170.209 219.433 170.115 219.46 170.155Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6808,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.636 179.386C231.696 179.452 231.755 179.518 231.809 179.591C231.769 179.565 231.729 179.545 231.662 179.452C231.636 179.386 231.636 179.386 231.636 179.386Z",
                fill: "#1BB9D8"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6813,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M220.869 84.4183C220.51 83.981 219.892 83.3515 220.025 83.0202C221.228 80.0583 222.565 77.1493 223.855 74.2205C225.504 70.4767 227.087 66.7064 228.823 63.0089C229.122 62.3662 230.119 62.0746 230.678 61.5114C232.075 60.1066 233.405 58.6356 234.921 57.3501C234.542 59.1525 234.176 60.8753 233.425 62.4126C232.866 63.5589 232.028 64.639 231.19 65.6528C229.275 67.972 228.45 71.1857 227.18 74.035C227.18 74.035 227.16 74.2537 227.047 74.426C226.801 74.7109 226.715 74.8434 226.675 75.0091C225.052 77.7325 223.429 80.4625 221.621 83.3913C221.301 83.7027 221.222 83.8286 221.175 83.9876C221.149 84.1334 221.075 84.2593 220.869 84.4051V84.4183Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6818,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M227.353 74.0151C228.444 71.1924 229.268 67.9786 231.19 65.6594C232.035 64.639 232.866 63.5655 233.425 62.4192C234.176 60.8819 234.548 59.1591 235.094 57.3236C235.34 56.6279 235.573 56.1243 235.805 55.6207C235.925 55.6406 236.051 55.6604 236.171 55.6869C235.819 57.8537 235.46 60.0139 234.961 62.4921C233.597 65.56 232.381 68.3099 231.011 71.0002C230.518 70.9273 230.179 70.914 229.84 70.9008C229.947 71.2851 230.046 71.6694 230.133 72.2128C229.953 72.7495 229.787 73.1338 229.621 73.5115C228.922 73.6706 228.224 73.8296 227.353 74.0151Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6823,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M229.627 73.6971C229.787 73.1272 229.947 72.7495 230.266 72.1465C230.665 71.6363 230.911 71.3447 231.157 71.0532C232.374 68.3033 233.597 65.5534 234.947 62.6909C235.32 62.5849 235.559 62.5849 235.972 62.5981C236.184 63.1945 236.224 63.7908 236.377 64.5131C236.49 64.6456 236.517 64.8775 236.524 65.0829C236.524 65.2884 236.49 65.4673 236.49 65.4673C235.978 65.792 235.247 66.004 234.994 66.4678C233.232 69.7014 231.576 72.9881 229.754 76.3807C229.627 75.6187 229.627 74.744 229.621 73.6838L229.627 73.6971Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6828,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M221.275 83.9412C221.215 83.8418 221.301 83.7093 221.534 83.5569C221.601 83.6629 221.514 83.7888 221.275 83.9412Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6833,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M228.603 77.5403C228.676 77.5867 228.67 77.6662 228.65 77.8782C228.563 77.9114 228.477 77.8252 228.41 77.7258C228.397 77.7059 228.477 77.6264 228.603 77.5337V77.5403Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6838,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M226.781 74.9627C226.715 74.8567 226.801 74.7175 227.034 74.5452C227.054 74.6181 226.974 74.7639 226.781 74.9627Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6843,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M218.369 99.8508C219.074 98.8834 219.945 97.8961 220.989 96.8955C220.284 97.863 219.413 98.8503 218.369 99.8508Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6848,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M236.543 60.65C236.63 60.703 236.623 60.7958 236.59 61.0144C236.49 61.0476 236.397 60.9548 236.337 60.8422C236.324 60.8157 236.404 60.7428 236.537 60.65H236.543Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6853,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M28.8348 191.306C28.8817 191.286 28.9353 191.273 28.9152 191.293C28.8482 191.32 28.8348 191.313 28.8348 191.306Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6858,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M24.213 206.301C24.1398 206.851 23.9336 207.488 23.5479 208.157C23.6078 207.587 23.8472 206.991 24.213 206.301Z",
                fill: "#F84D56"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6863,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M247.21 69.6153C247.297 69.6816 247.27 69.7677 247.177 69.9532C247.044 69.9532 246.977 69.834 246.904 69.7213C246.971 69.6882 247.031 69.6551 247.204 69.6087L247.21 69.6153Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6868,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M236.597 65.4739C236.497 65.4739 236.537 65.295 236.543 65.2088C236.643 65.189 236.743 65.2685 236.836 65.3414C236.79 65.3878 236.743 65.4275 236.597 65.4739Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6873,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M78.1784 107.968C78.2715 107.941 78.4111 108.034 78.5973 108.246C78.5042 108.273 78.3646 108.18 78.1784 107.968Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6878,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M121.517 160.004C121.564 159.984 121.611 159.964 121.584 159.971C121.51 159.997 121.517 159.997 121.517 160.004Z",
                fill: "#26597F"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6883,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M87.136 117.046C87.5683 117.271 88.0138 117.656 88.5193 118.172C88.1003 117.94 87.6215 117.576 87.136 117.046Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6888,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M103.555 111.983C104.001 111.685 104.38 111.513 104.918 111.314C106.361 112.659 107.658 114.018 108.922 115.409C109.667 116.231 111.156 116.821 109.893 118.398C109.76 118.563 110.518 119.445 111.09 119.862C111.309 119.73 111.555 119.677 111.582 119.862C114.747 121.267 116.257 123.493 115.419 127.489C116.337 126.76 116.689 126.482 117.035 126.203C117.035 126.203 117.274 126.177 117.387 126.15C117.58 126.7 117.833 127.323 117.706 127.86C117.374 129.271 117.76 130.08 119.455 130.272C118.425 131.465 117.201 132.618 115.851 133.883C113.59 132.565 110.923 131.75 109.913 128.92C110.378 128.755 110.717 128.774 111.136 128.927C111.568 129.218 112.021 129.603 112.26 129.497C114.361 128.582 114.608 126.574 114.361 124.772C114.215 123.725 113.164 122.347 112.194 121.976C110.93 121.492 109.341 121.857 107.392 121.857C107.512 122.069 107.272 121.651 107.053 121.114C107.073 120.995 107.12 120.75 107.259 120.684C109.228 119.445 108.988 118.252 107.512 116.947C106.002 115.615 104.566 114.203 103.103 112.825C103.236 112.593 103.376 112.355 103.575 111.997L103.555 111.983Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6893,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M149.52 157.565C149.294 157.903 149.068 158.241 148.663 158.765C148.137 159.142 147.791 159.328 147.432 159.328C146.335 157.937 145.311 156.671 144.121 155.584C143.801 155.293 142.811 155.346 142.392 155.624C141.594 156.161 140.982 156.982 140.297 157.678C139.126 156.618 137.956 155.558 136.925 154.285C139 153.013 138.555 151.615 137.69 150.098C136.726 148.408 135.828 146.685 134.904 144.976C135.296 144.532 135.688 144.088 136.307 143.75C138.548 146.645 140.543 149.455 142.598 152.211C142.963 152.702 143.642 153.338 144.114 153.298C147.333 153.013 147.718 156.147 149.501 157.559L149.52 157.565Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6898,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M162.927 174.018C161.996 174.959 161.065 175.9 159.988 176.941C159.196 176.444 158.551 175.854 158.019 175.085C159.243 173.999 160.36 173.097 161.717 171.997C160.32 170.672 159.236 169.652 157.78 168.267C156.716 169.612 155.785 170.791 154.854 171.964C154.235 171.401 153.617 170.838 153.118 170.089C155.386 168.399 154.914 165.338 152.473 163.933C151.469 163.357 150.751 162.303 149.906 161.475C149.913 161.482 149.9 161.488 149.979 161.448C150.099 161.362 150.172 161.283 150.159 161.269C150.099 161.177 150.013 161.097 150.033 160.885C153.251 162.343 156.496 163.814 157.002 168.413C157.288 167.949 157.574 167.485 157.86 167.028C158.086 167.028 158.312 167.021 158.784 167.16C159.815 167.849 160.6 168.393 161.391 168.936C161.391 168.936 161.384 168.956 161.404 169.122C162.076 170.003 162.728 170.719 163.379 171.434C163.379 171.52 163.379 171.6 163.226 171.885C163.027 172.733 162.98 173.382 162.934 174.025L162.927 174.018Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6903,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M134.757 145.048C135.841 146.692 136.739 148.421 137.697 150.104C138.561 151.615 139.007 153.02 136.872 154.126C134.89 152.443 133.108 150.701 131.273 148.786C132.343 147.441 133.474 146.274 134.757 145.042V145.048Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6908,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M149.9 161.468C150.751 162.303 151.469 163.363 152.473 163.933C154.914 165.331 155.393 168.399 153.065 169.937C150.924 167.962 148.969 165.961 146.98 163.662C147.931 162.734 148.915 162.098 149.9 161.468Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6913,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M149.906 161.475C148.915 162.098 147.931 162.734 146.874 163.542C146.209 163.357 145.624 162.992 144.998 162.33C145.79 161.19 146.621 160.355 147.452 159.52C147.798 159.335 148.144 159.149 148.623 158.917C149.753 161.236 150.937 159.036 152.207 158.957C153.75 160.375 155.233 161.753 156.443 163.337C157.148 164.251 157.414 165.497 157.873 166.809C157.58 167.485 157.294 167.942 157.008 168.406C156.496 163.814 153.251 162.336 150.019 160.998C149.906 161.243 149.906 161.482 149.906 161.482C149.906 161.482 149.926 161.482 149.913 161.468L149.906 161.475Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6918,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M147.439 159.335C146.621 160.362 145.79 161.197 144.912 162.177C143.382 160.885 141.893 159.441 140.357 157.844C140.995 156.982 141.6 156.167 142.398 155.631C142.817 155.346 143.808 155.299 144.127 155.591C145.318 156.677 146.335 157.943 147.439 159.335Z",
                fill: "#E8423E"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6923,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M107.013 121.22C107.259 121.638 107.499 122.055 107.379 121.843C109.327 121.843 110.917 121.479 112.18 121.963C113.151 122.334 114.209 123.712 114.348 124.759C114.594 126.561 114.348 128.562 112.247 129.483C112.007 129.589 111.555 129.205 111.143 128.735C111.848 127.383 112.613 126.349 113.364 125.329C111.09 122.267 110.405 122.188 107.831 124.679C107.479 125.017 107.219 125.448 106.913 125.832C106.621 125.607 106.322 125.388 106.062 124.878C106.082 123.791 106.062 122.996 106.109 122.069C106.441 121.704 106.721 121.459 107 121.22H107.013Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6928,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M154.914 172.11C155.778 170.785 156.709 169.605 157.773 168.26C159.23 169.638 160.314 170.665 161.71 171.991C160.347 173.091 159.236 173.998 157.939 174.933C156.829 174.065 155.905 173.164 154.914 172.11Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6933,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M106.98 125.998C107.233 125.455 107.492 125.024 107.844 124.686C110.418 122.188 111.103 122.267 113.377 125.335C112.626 126.356 111.861 127.39 111.07 128.609C110.711 128.768 110.371 128.755 109.866 128.755C108.809 127.906 107.918 127.032 106.98 126.005V125.998Z",
                fill: "#E8423E"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6938,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M107.033 121.101C106.734 121.459 106.455 121.704 105.929 122.089C105.284 122.486 104.885 122.738 104.486 122.99C104.406 122.957 104.327 122.917 104.134 122.639C103.016 121.015 102.019 119.637 101.035 118.093C101.055 117.702 101.048 117.477 101.115 117.119C101.633 116.569 102.085 116.158 102.724 115.767C104.307 117.444 105.703 119.093 107.093 120.75C107.093 120.75 107.053 120.995 107.026 121.114L107.033 121.101Z",
                fill: "#E8423E"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6943,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.538 115.741C102.092 116.151 101.64 116.562 100.995 117.178C100.569 117.669 100.336 117.96 100.097 118.252C100.097 118.252 100.077 118.265 99.984 118.305C99.7712 118.418 99.698 118.53 99.6249 118.716C99.5783 118.762 99.4919 118.842 99.4919 118.842C99.1128 118.669 98.7338 118.49 98.1619 118.146C97.8493 117.821 97.7296 117.669 97.6099 117.516C97.6099 117.516 97.6099 117.463 97.6299 117.444C98.8535 116.423 100.057 115.423 101.58 114.376C102.112 114.793 102.325 115.27 102.538 115.741Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6948,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.021 118.252C102.026 119.63 103.023 121.008 104.027 122.566C102.551 121.545 101.075 120.352 99.5451 119.001C99.4919 118.842 99.585 118.756 99.718 118.676C99.9707 118.51 100.044 118.404 100.077 118.265C100.077 118.265 100.09 118.252 100.25 118.252C100.616 118.252 100.815 118.252 101.021 118.252Z",
                fill: "#C73E51"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6953,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M139.938 167.299C138.501 166.239 137.072 165 135.569 163.615C136.985 164.682 138.461 165.901 139.938 167.299Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6958,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M144.852 171.865C143.755 171.109 142.671 170.175 141.52 169.095C143.542 168.678 144.034 170.394 144.852 171.865Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6963,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M104.479 123.149C104.885 122.738 105.284 122.486 105.876 122.221C106.082 123.003 106.095 123.798 106.036 124.752C105.464 124.375 104.965 123.844 104.479 123.155V123.149Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6968,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M98.6008 125.209C99.718 125.985 100.829 126.767 101.939 127.549C101.733 127.807 101.52 128.059 101.314 128.317C100.423 127.396 99.5318 126.475 98.6141 125.388C98.5875 125.223 98.5941 125.216 98.6008 125.209Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6973,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M147.412 174.244C146.774 173.886 146.142 173.336 145.424 172.653C146.029 173.031 146.727 173.541 147.412 174.244Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6978,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.457 117.583C97.7296 117.669 97.8493 117.821 98.0089 118.113C97.6099 118.159 97.171 118.073 96.6723 117.848C96.8452 117.689 97.0713 117.669 97.457 117.583Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6983,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M153.903 173.415C153.61 173.17 153.318 172.932 152.965 172.554C152.905 172.421 152.905 172.421 152.905 172.421C153.225 172.647 153.544 172.872 153.883 173.256C153.903 173.415 153.903 173.415 153.903 173.415Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6988,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.954 116.244C96.1403 116.469 96.1669 116.688 96.1735 117.066C96.0605 117.231 95.974 117.238 95.7413 117.251C95.6016 117.258 95.6016 117.258 95.5551 117.152C95.4021 116.9 95.2691 116.807 95.1028 116.761C95.1028 116.761 95.1029 116.761 95.1161 116.622C95.1361 116.383 95.1427 116.291 95.1494 116.191C95.3622 116.204 95.575 116.218 95.954 116.244Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6993,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M96.1735 117.338C96.2799 117.304 96.4395 117.384 96.6257 117.603C96.5127 117.649 96.373 117.55 96.1735 117.338Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 6998,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M149.919 170.937C149.86 170.864 149.793 170.798 149.733 170.725C149.78 170.752 149.82 170.772 149.893 170.864C149.919 170.937 149.919 170.937 149.919 170.937Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7003,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M152.905 172.421C152.846 172.349 152.786 172.282 152.732 172.209C152.772 172.236 152.812 172.262 152.879 172.355C152.905 172.421 152.905 172.421 152.905 172.421Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7008,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M162.275 178.776C162.382 178.822 162.395 178.942 162.435 179.24C162.355 179.405 162.249 179.386 162.016 179.286C161.956 179.061 162.056 178.942 162.275 178.769L162.275 178.776Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7013,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M41.9487 218.659C42.1615 218.461 42.5539 218.288 43.1125 218.136C42.8997 218.335 42.514 218.507 41.9487 218.659Z",
                fill: "#DB7A88"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7018,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M53.3869 221.827C53.327 221.9 53.2206 221.913 53.1142 221.926C53.1874 221.873 53.2672 221.82 53.3869 221.827Z",
                fill: "#EC3246"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7023,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M77.5533 207.772C77.6198 207.885 77.5267 208.018 77.2873 208.183C77.2673 208.11 77.3538 207.971 77.5533 207.772Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7028,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M56.5922 221.184C56.6321 221.33 56.5922 221.515 56.4858 221.568C56.406 221.601 56.2464 221.456 56.1267 221.389C56.2464 221.316 56.3661 221.244 56.5989 221.191L56.5922 221.184Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7033,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M97.1245 56.3098C99.0796 57.8405 101.061 59.5302 103.063 61.3921C102.185 60.9283 101.234 60.3717 100.416 59.6561C99.2724 58.6555 98.235 57.5423 97.1311 56.3098H97.1245Z",
                fill: "#2BC3D6"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7038,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M112.546 75.5193C112.034 75.3139 111.529 75.1085 111.023 74.903C111.13 74.7109 111.229 74.5187 111.336 74.3332C111.695 74.6314 112.061 74.9296 112.486 75.3735C112.553 75.5127 112.546 75.5193 112.546 75.5259V75.5193Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7043,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M110.059 74.8964C110.006 74.8169 110.032 74.7308 110.059 74.6513C110.085 74.7308 110.112 74.8169 110.059 74.8964Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7048,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M112.047 76.5132C111.987 76.447 111.928 76.3741 111.868 76.3012C111.908 76.3211 111.954 76.3476 112.027 76.4403C112.054 76.5066 112.054 76.5132 112.047 76.5132Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7053,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M100.09 63.5854C100.25 63.6384 100.383 63.7312 100.536 63.9764C100.589 64.089 100.583 64.089 100.583 64.089C100.423 64.036 100.297 63.9432 100.137 63.6981C100.084 63.5921 100.084 63.5854 100.09 63.5854Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7058,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M100.589 64.0824C100.649 64.1487 100.709 64.2215 100.769 64.2944C100.729 64.2679 100.682 64.248 100.616 64.1553C100.589 64.089 100.589 64.0824 100.596 64.0824H100.589Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7063,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M108.489 67.528C108.629 67.6076 108.636 67.6937 108.616 67.9057C108.423 68.0051 108.277 67.9256 108.117 67.6738C108.064 67.5612 108.084 67.5413 108.084 67.5413C108.177 67.5413 108.263 67.5413 108.496 67.5214L108.489 67.528Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7068,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M108.051 67.5744C107.984 67.5015 107.931 67.4286 107.871 67.3491C107.918 67.369 107.964 67.3955 108.044 67.4817C108.077 67.5479 108.057 67.5678 108.051 67.5744Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7073,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M73.663 44.535C73.3637 44.4753 73.0445 44.2567 72.6987 43.879C72.998 43.9386 73.3172 44.1573 73.663 44.535Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7078,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M53.7327 189.173C53.5332 189.318 53.3071 189.318 52.9214 189.318C52.8748 189.06 52.9879 188.808 53.1076 188.55C53.3071 188.709 53.5132 188.868 53.7327 189.173Z",
                fill: "#FB844A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7083,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.718 201.193C246.598 200.914 246.592 200.53 246.592 199.96C246.678 200.212 246.758 200.649 246.718 201.193Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7088,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M246.585 199.589C246.425 199.516 246.266 199.291 246.106 198.926C246.266 198.999 246.425 199.225 246.585 199.589Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7093,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M241.598 197.276C241.657 197.343 241.711 197.409 241.77 197.475C241.731 197.449 241.691 197.429 241.624 197.336C241.598 197.27 241.598 197.27 241.598 197.276Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7098,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M165.122 175.403C164.53 174.939 164.104 174.456 163.585 173.82C163.792 173.402 164.091 173.144 164.383 172.885C164.603 172.885 164.829 172.885 165.228 173.044C165.727 173.442 166.039 173.68 166.352 173.926C165.993 174.416 165.64 174.906 165.122 175.403Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7103,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M161.371 168.751C160.606 168.386 159.821 167.843 158.957 167.154C160.912 165.643 160.739 167.723 161.371 168.751Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7108,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M163.373 171.235C162.721 170.712 162.069 169.996 161.404 169.108C162.056 169.638 162.714 170.341 163.373 171.235Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7113,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M164.357 172.726C164.084 173.137 163.792 173.396 163.439 173.793C163.386 173.932 163.153 173.959 163.04 173.992C162.974 173.376 163.02 172.726 163.22 172.004C163.692 172.143 164.011 172.362 164.357 172.726Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7118,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M166.472 173.833C166.039 173.68 165.72 173.442 165.394 173.038C165.787 173.164 166.192 173.455 166.472 173.833Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7123,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M169.324 173.018C169.364 173.124 169.265 173.289 169.025 173.508C168.992 173.402 169.085 173.236 169.324 173.018Z",
                fill: "#371E2D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7128,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M164.656 176.768C164.477 176.742 164.483 176.603 164.656 176.417C164.723 176.463 164.729 176.556 164.656 176.768Z",
                fill: "#9C223C"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7133,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M165.84 121.413C166.073 121.254 166.285 121.26 166.671 121.267C166.844 121.479 166.851 121.698 166.851 122.082C166.511 122.029 166.166 121.804 165.84 121.419V121.413Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7138,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M167.356 122.877C167.489 122.817 167.635 122.904 167.815 123.109C167.689 123.162 167.529 123.089 167.356 122.877Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7143,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M157.341 121.625C157.308 121.737 157.228 121.737 157.015 121.737C156.889 121.651 156.889 121.572 156.889 121.36C157.055 121.28 157.188 121.373 157.341 121.618V121.625Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7148,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M166.864 122.373C166.99 122.32 167.13 122.407 167.309 122.619C167.19 122.665 167.037 122.585 166.864 122.373Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7153,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M167.855 123.374C167.988 123.321 168.127 123.401 168.307 123.613C168.181 123.666 168.021 123.586 167.855 123.374Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7158,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M158.97 123.679C158.884 123.639 158.884 123.56 158.884 123.348C158.977 123.308 159.07 123.381 159.143 123.48C159.156 123.5 159.083 123.586 158.964 123.679H158.97Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7163,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M169.351 124.872C169.491 124.812 169.637 124.891 169.81 125.097C169.677 125.15 169.524 125.084 169.351 124.872Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7168,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M168.852 124.368C168.992 124.308 169.138 124.381 169.311 124.593C169.178 124.653 169.019 124.58 168.852 124.368Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7173,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M168.354 123.871C168.487 123.818 168.633 123.897 168.806 124.103C168.679 124.156 168.52 124.083 168.354 123.871Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7178,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M160.826 116.874C160.905 116.874 161.098 116.986 161.338 117.265C161.238 117.284 161.085 117.139 160.826 116.874Z",
                fill: "#2DD5EB"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7183,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M71.3288 51.6449C71.2024 51.6449 71.1891 51.4064 71.1891 51.2871C71.4086 51.2474 71.6214 51.3202 71.8409 51.3998C71.7078 51.4793 71.5815 51.5588 71.3288 51.6449Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7188,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M70.3778 51.148C70.2182 51.148 70.1983 50.9028 70.1983 50.7835C70.4709 50.7504 70.7502 50.8299 71.116 51.0419C70.983 51.1612 70.7635 51.1612 70.3845 51.148H70.3778Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7193,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M138.801 141.139C139.732 141.126 140.583 141.351 141.301 141.139C144.746 140.105 148.343 142.663 148.423 146.294C148.437 146.957 148.45 147.613 148.483 148.275C148.49 148.428 148.609 148.574 148.716 148.799C150.265 148.527 151.835 148.249 153.245 148.004C154.954 151.277 154.508 153.848 151.562 155.763C150.797 154.146 150.378 152.51 149.467 151.224C149.148 150.767 147.632 151.151 146.601 151.151C144.772 147.56 142.545 144.18 138.428 142.57C138.222 142.491 138.089 142.226 137.923 142.053C138.169 141.762 138.415 141.477 138.801 141.152V141.139Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7198,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M137.776 142.093C138.096 142.219 138.229 142.477 138.435 142.557C142.551 144.167 144.786 147.547 146.608 151.138C147.645 151.138 149.155 150.754 149.474 151.211C150.378 152.496 150.804 154.126 151.416 155.823C150.884 156.518 150.358 157.015 149.673 157.532C147.732 156.147 147.353 153.007 144.127 153.298C143.648 153.338 142.977 152.702 142.611 152.211C140.55 149.455 138.561 146.645 136.46 143.71C136.792 143.087 137.205 142.617 137.77 142.087L137.776 142.093Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7203,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M239.403 213.199C239.21 213.319 239.017 213.319 238.824 213.299C238.824 213.299 238.824 213.146 238.824 213.067C239.017 213.067 239.21 213.067 239.403 213.193V213.199Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7208,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M182.844 137.263C182.984 137.17 183.117 137.256 183.256 137.521C183.157 137.554 183.017 137.468 182.844 137.263Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7213,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M182.345 136.766C182.485 136.666 182.618 136.752 182.758 137.017C182.658 137.051 182.518 136.964 182.345 136.766Z",
                fill: "#0D96C2"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7218,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M228.663 183.348C229.169 183.997 229.654 184.667 230.133 185.329C229.907 185.462 229.674 185.588 229.448 185.72C229.175 185.064 228.903 184.408 228.61 183.58C228.59 183.408 228.637 183.368 228.663 183.348Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7223,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.636 189.318C231.982 189.564 232.327 189.802 232.673 190.047C232.553 190.186 232.434 190.332 232.314 190.471C232.095 190.193 231.875 189.908 231.642 189.477C231.629 189.325 231.629 189.318 231.629 189.318H231.636Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7228,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M230.645 186.827C230.811 187.211 230.977 187.602 231.137 188.159C231.137 188.331 231.124 188.338 231.124 188.338C230.957 187.953 230.791 187.569 230.632 187.006C230.632 186.834 230.645 186.827 230.645 186.827Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7233,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.629 189.325C231.469 189.093 231.31 188.861 231.137 188.483C231.124 188.338 231.137 188.331 231.137 188.324C231.297 188.556 231.456 188.788 231.622 189.173C231.636 189.318 231.629 189.325 231.622 189.325H231.629Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7238,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M232.813 191.929C232.819 191.81 232.886 191.744 232.946 191.684C232.919 191.783 232.893 191.883 232.813 191.929Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7243,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M230.632 186.84C230.572 186.767 230.512 186.694 230.452 186.621C230.499 186.648 230.538 186.668 230.612 186.761C230.645 186.827 230.632 186.84 230.632 186.84Z",
                fill: "#10A6CD"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7248,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M236.956 199.728C236.969 199.993 236.909 200.185 236.849 200.371C236.796 200.318 236.696 200.258 236.703 200.219C236.743 200.026 236.816 199.841 236.956 199.728Z",
                fill: "#07689A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7253,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M117.035 125.972C116.689 126.468 116.337 126.747 115.419 127.476C116.257 123.48 114.741 121.254 111.575 119.749C111.542 119.471 111.535 119.266 111.535 119.266C111.535 119.266 111.555 119.246 111.562 119.239C114.042 118.133 116.762 120.008 117.022 123.036C117.101 123.937 117.035 124.852 117.035 125.978V125.972Z",
                fill: "#6C2333"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7258,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M111.422 119.266C111.535 119.266 111.542 119.471 111.542 119.577C111.542 119.677 111.302 119.736 111.183 119.749C111.143 119.597 111.223 119.431 111.422 119.266Z",
                fill: "#53232B"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7263,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.1361 116.204C95.1361 116.284 95.1361 116.383 95.1161 116.622C94.7238 116.569 94.3381 116.377 93.9457 116.178C94.092 116.039 94.2383 115.9 94.5309 115.747C94.6772 115.727 94.6506 115.76 94.6905 115.86C94.8701 116.059 95.0098 116.158 95.1494 116.257C95.1494 116.257 95.1228 116.224 95.1427 116.204L95.1361 116.204Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7268,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M78.6638 104.84C78.7237 104.907 78.7835 104.98 78.8434 105.046C78.8035 105.019 78.7636 104.999 78.6904 104.907C78.6638 104.84 78.6638 104.84 78.6572 104.84H78.6638Z",
                fill: "#356F92"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7273,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.156 116.874C95.2757 116.807 95.4087 116.894 95.5617 117.145C95.4753 117.165 95.3422 117.079 95.156 116.874Z",
                fill: "#609BB5"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7278,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M59.2256 90.8458C59.7576 91.2169 60.2764 91.7867 60.9214 92.456C61.1808 92.8933 61.3071 93.2379 61.347 93.7348C60.5756 92.9463 59.8973 91.9921 59.2256 90.8458Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7283,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M61.3005 94.0131C61.5332 93.9336 61.8325 93.9999 62.1849 94.2252C61.9522 94.3113 61.6596 94.2318 61.3005 94.0131Z",
                fill: "#153450"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7288,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M63.2622 95.5107C63.3819 95.4577 63.5282 95.5438 63.7078 95.7492C63.5881 95.7956 63.4418 95.7227 63.2622 95.5107Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7293,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M64.0802 95.895C64.2265 95.9944 64.2531 96.0805 64.3529 96.266C64.2265 96.3058 64.0337 96.2395 63.7876 96.0209C63.7344 95.8751 63.9672 95.8751 64.0869 95.895H64.0802Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7298,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.2647 94.5101C62.3844 94.4571 62.544 94.5366 62.7169 94.7486C62.5906 94.8016 62.4443 94.7221 62.2647 94.5101Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7303,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M62.7635 95.007C62.8898 94.954 63.0361 95.0336 63.209 95.2456C63.0827 95.2986 62.9364 95.2191 62.7635 95.007Z",
                fill: "#1B4A70"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7308,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M102.73 115.76C102.325 115.27 102.112 114.793 101.726 114.289C101.972 113.812 102.385 113.368 102.943 112.865C104.553 114.183 105.989 115.595 107.499 116.927C108.975 118.232 109.214 119.425 107.246 120.664C105.71 119.08 104.313 117.424 102.73 115.754V115.76Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7313,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M95.1228 116.118C95.0097 116.158 94.8701 116.065 94.6706 115.847C94.777 115.813 94.9366 115.893 95.1228 116.118Z",
                fill: "#3E84AC"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7318,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M189.78 58.6224C189.953 58.5031 190.126 58.3772 190.292 58.2579C190.332 58.3176 190.379 58.3772 190.419 58.4368C190.286 58.4965 190.146 58.5495 189.893 58.6157C189.773 58.6157 189.773 58.6157 189.773 58.6157L189.78 58.6224Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7323,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M186.788 56.6345C186.741 56.6545 186.694 56.6678 186.721 56.6612C186.788 56.6345 186.788 56.6345 186.788 56.6345Z",
                fill: "#FD9F4D"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7328,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M190.186 61.1602C190.239 61.2662 190.146 61.3855 189.9 61.5048C189.847 61.3988 189.946 61.2861 190.186 61.1602Z",
                fill: "#F96945"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7333,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M231.011 71.0002C230.911 71.3514 230.665 71.6429 230.286 71.9941C230.046 71.6694 229.947 71.2851 229.84 70.9008C230.179 70.914 230.525 70.9273 231.011 71.0002Z",
                fill: "#D72A4A"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7338,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M149.979 161.448C149.9 161.488 149.893 161.243 149.913 161.124C150.006 161.091 150.092 161.17 150.159 161.263C150.172 161.283 150.099 161.356 149.979 161.442L149.979 161.448Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7343,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M101.041 118.086C100.815 118.252 100.616 118.252 100.257 118.252C100.336 117.96 100.569 117.669 100.922 117.318C101.048 117.477 101.055 117.702 101.041 118.093V118.086Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7348,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                className: "path",
                d: "M99.984 118.305C100.044 118.404 99.9707 118.517 99.7645 118.636C99.6981 118.53 99.7645 118.424 99.984 118.305Z",
                fill: "#C12541"
            }, void 0, false, {
                fileName: "src/icons/Logo/Logo.jsx",
                lineNumber: 7353,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/Logo/Logo.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = Logo;
var _c;
$RefreshReg$(_c, "Logo");

  $parcel$ReactRefreshHelpers$18b0.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"koSth":[function() {},{}],"Pk1l7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Search", ()=>(0, _search.Search));
var _search = require("./Search");

},{"./Search":"kzyhn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kzyhn":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$199f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$199f.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Search", ()=>Search);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _appBar = require("../../components/AppBar");
var _bottomNavigationWrapper = require("../../components/BottomNavigationWrapper");
var _concreteComponentNode = require("../../components/ConcreteComponentNode");
var _customFormsEmail = require("../../components/CustomFormsEmail");
var _iconButton = require("../../components/IconButton");
var _slider = require("../../components/Slider");
var _homefilled2 = require("../../icons/Homefilled2");
var _menufilled9 = require("../../icons/Menufilled9");
var _peoplefilled = require("../../icons/Peoplefilled");
var _searchfilled = require("../../icons/Searchfilled");
var _starsharp30 = require("../../icons/Starsharp30");
var _styleCss = require("./style.css");
const Search = ()=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "search",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "div-2",
            "data-palette-mode": "light",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "overlap-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _appBar.AppBar), {
                            className: "app-bar-instance",
                            color: "primary",
                            paperClassName: "app-bar-2",
                            to: "/menu",
                            toolbarIconButtonIconIcon: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _menufilled9.Menufilled9), {
                                className: "menufilled-9",
                                color: "white"
                            }, void 0, false, {
                                fileName: "src/screens/Search/Search.jsx",
                                lineNumber: 25,
                                columnNumber: 40
                            }, void 0),
                            toolbarIconButtonIconSize: "large",
                            toolbarSmallScreen: true,
                            toolbarStack: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _iconButton.IconButton), {
                                className: "instance-2",
                                color: "inherit-white",
                                iconIcon: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _starsharp30.Starsharp30), {
                                    className: "starsharp-124",
                                    color: "white"
                                }, void 0, false, {
                                    fileName: "src/screens/Search/Search.jsx",
                                    lineNumber: 32,
                                    columnNumber: 27
                                }, void 0),
                                iconSize: "medium",
                                size: "small",
                                stateProp: "enabled"
                            }, void 0, false, {
                                fileName: "src/screens/Search/Search.jsx",
                                lineNumber: 29,
                                columnNumber: 15
                            }, void 0),
                            toolbarTypographyBodyClassName: "app-bar-3",
                            toolbarTypographyContent: "Arts Link",
                            toolbarTypographyVariant: "h-4"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 20,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "brush-brown",
                            alt: "Brush brown",
                            src: "/img/brush-brown-2.png"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 42,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _slider.Slider), {
                            className: "slider-instance",
                            color: "secondary",
                            orientation: "horizontal",
                            overlapGroupClassName: "slider-2",
                            size: "small",
                            sliderRailSizeSmallColorClassName: "slider-3",
                            state: "enabled",
                            values: false,
                            variant: "continuous"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 43,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "rooster-color",
                            alt: "Rooster color",
                            src: "/img/rooster-color-1.png"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 54,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "hpim",
                            alt: "Hpim",
                            src: "/img/hpim1656-1.png"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 55,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _slider.Slider), {
                            className: "slider-4",
                            color: "secondary",
                            orientation: "horizontal",
                            overlapGroupClassName: "slider-2",
                            size: "small",
                            sliderRailSizeSmallColorClassName: "slider-3",
                            state: "enabled",
                            values: false,
                            variant: "continuous"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 56,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "snoqualmie",
                            alt: "Snoqualmie",
                            src: "/img/snoqualmie-1.png"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 67,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/screens/Search/Search.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                    className: "links-logo",
                    alt: "Links logo",
                    src: "/img/links-logo.svg"
                }, void 0, false, {
                    fileName: "src/screens/Search/Search.jsx",
                    lineNumber: 69,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "overlap-3",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "blue-brush",
                            alt: "Blue brush",
                            src: "/img/blue-brush-1-2.png"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 71,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "we-are-a-passionate",
                            children: "We are a passionate community of artists and art enthusiasts, united in our mission to explore and celebrate the transformative power of art. From healing to connecting with nature, our creations echo the deep ties between art, the natural world, and human connections. Whether you're an artist seeking a tribe or an art lover searching for a unique piece, you've found your haven."
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 72,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "snoqualmie-2",
                            alt: "Snoqualmie",
                            src: "/img/snoqualmie-2.png"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 78,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/screens/Search/Search.jsx",
                    lineNumber: 70,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "overlap-4",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "brush-brown-2",
                            alt: "Brush brown",
                            src: "/img/brush-brown-2.png"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 81,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "p",
                            children: "Find the art work to put a smile in your life"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 82,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _customFormsEmail.CustomFormsEmail), {
                            className: "custom-forms-email-password",
                            formcontrollabelLabelPlacementEndClassName: "custom-forms-email-instance"
                        }, void 0, false, {
                            fileName: "src/screens/Search/Search.jsx",
                            lineNumber: 83,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/screens/Search/Search.jsx",
                    lineNumber: 80,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "button-subscribe",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "overlap-5",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "rectangle"
                            }, void 0, false, {
                                fileName: "src/screens/Search/Search.jsx",
                                lineNumber: 90,
                                columnNumber: 13
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "arrow-redo",
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _concreteComponentNode.ConcreteComponentNode), {
                                    style: "fill"
                                }, void 0, false, {
                                    fileName: "src/screens/Search/Search.jsx",
                                    lineNumber: 92,
                                    columnNumber: 15
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/screens/Search/Search.jsx",
                                lineNumber: 91,
                                columnNumber: 13
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "text-wrapper-6",
                                children: "Join Our Community"
                            }, void 0, false, {
                                fileName: "src/screens/Search/Search.jsx",
                                lineNumber: 94,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/screens/Search/Search.jsx",
                        lineNumber: 89,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/screens/Search/Search.jsx",
                    lineNumber: 88,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _bottomNavigationWrapper.BottomNavigationWrapper), {
                    className: "bottom-navigation-2",
                    iconOnlyFalseWrapperBottomNavigationIcon: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _searchfilled.Searchfilled), {
                        className: "icon-instance-node-3",
                        color: "#173F56"
                    }, void 0, false, {
                        fileName: "src/screens/Search/Search.jsx",
                        lineNumber: 99,
                        columnNumber: 53
                    }, void 0),
                    iconOnlyFalseWrapperBottomNavigationIcon1: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _peoplefilled.Peoplefilled), {
                        className: "icon-instance-node-3",
                        color: "#173F56"
                    }, void 0, false, {
                        fileName: "src/screens/Search/Search.jsx",
                        lineNumber: 100,
                        columnNumber: 54
                    }, void 0),
                    override: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _homefilled2.Homefilled2), {
                        className: "icon-instance-node-3"
                    }, void 0, false, {
                        fileName: "src/screens/Search/Search.jsx",
                        lineNumber: 101,
                        columnNumber: 21
                    }, void 0),
                    to: "/mobile-home3"
                }, void 0, false, {
                    fileName: "src/screens/Search/Search.jsx",
                    lineNumber: 97,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/screens/Search/Search.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/screens/Search/Search.jsx",
        lineNumber: 17,
        columnNumber: 5
    }, undefined);
};
_c = Search;
var _c;
$RefreshReg$(_c, "Search");

  $parcel$ReactRefreshHelpers$199f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","../../components/AppBar":"95j7i","../../components/BottomNavigationWrapper":"8pvxL","../../components/ConcreteComponentNode":"el9Ym","../../components/CustomFormsEmail":"6DyY9","../../components/IconButton":"bh0Yx","../../components/Slider":"62TxK","../../icons/Homefilled2":"Nz1Wv","../../icons/Menufilled9":"fLaQU","../../icons/Peoplefilled":"18lwt","../../icons/Searchfilled":"4JBh2","../../icons/Starsharp30":"8U7jr","./style.css":"lOGGS","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"el9Ym":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ConcreteComponentNode", ()=>(0, _concreteComponentNode.ConcreteComponentNode));
var _concreteComponentNode = require("./ConcreteComponentNode");

},{"./ConcreteComponentNode":"1gYyg","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1gYyg":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$48c5 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$48c5.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ConcreteComponentNode", ()=>ConcreteComponentNode);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _arrowRedo = require("../../icons/ArrowRedo");
var _styleOutline = require("../../icons/StyleOutline");
var _styleSharp = require("../../icons/StyleSharp");
var _styleCss = require("./style.css");
const ConcreteComponentNode = ({ style })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
        children: [
            style === "outline" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _styleOutline.StyleOutline), {
                className: "instance-node-3"
            }, void 0, false, {
                fileName: "src/components/ConcreteComponentNode/ConcreteComponentNode.jsx",
                lineNumber: 16,
                columnNumber: 31
            }, undefined),
            style === "fill" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _arrowRedo.ArrowRedo), {
                className: "instance-node-3",
                color: "black"
            }, void 0, false, {
                fileName: "src/components/ConcreteComponentNode/ConcreteComponentNode.jsx",
                lineNumber: 18,
                columnNumber: 28
            }, undefined),
            style === "sharp" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _styleSharp.StyleSharp), {
                className: "instance-node-3"
            }, void 0, false, {
                fileName: "src/components/ConcreteComponentNode/ConcreteComponentNode.jsx",
                lineNumber: 20,
                columnNumber: 29
            }, undefined)
        ]
    }, void 0, true);
};
_c = ConcreteComponentNode;
ConcreteComponentNode.propTypes = {
    style: (0, _propTypesDefault.default).oneOf([
        "fill",
        "sharp",
        "outline"
    ])
};
var _c;
$RefreshReg$(_c, "ConcreteComponentNode");

  $parcel$ReactRefreshHelpers$48c5.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../../icons/ArrowRedo":"d1qCO","../../icons/StyleOutline":"9ORzk","../../icons/StyleSharp":"56oyR","./style.css":"56AIM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"d1qCO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ArrowRedo", ()=>(0, _arrowRedo.ArrowRedo));
var _arrowRedo = require("./ArrowRedo");

},{"./ArrowRedo":"bHgGC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bHgGC":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$5820 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$5820.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ArrowRedo", ()=>ArrowRedo);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const ArrowRedo = ({ color = "#709775", className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `arrow-redo ${className}`,
        fill: "none",
        height: "22",
        viewBox: "0 0 25 22",
        width: "25",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M3.6425 18.8693C3.49799 18.8227 3.37261 18.735 3.28387 18.6184C3.19513 18.5019 3.14744 18.3623 3.14746 18.2192C3.14746 15.0782 3.82096 12.5662 5.15008 10.7525C6.75584 8.56109 9.28882 7.38117 12.6903 7.23465V3.78168C12.6903 3.64706 12.7325 3.5154 12.8117 3.40305C12.8909 3.29069 13.0035 3.20257 13.1357 3.14963C13.2678 3.09669 13.4137 3.08125 13.5551 3.10523C13.6966 3.12921 13.8274 3.19156 13.9313 3.28453L22.006 10.5033C22.0778 10.5675 22.1349 10.6446 22.1739 10.7301C22.2129 10.8155 22.2331 10.9075 22.2331 11.0004C22.2331 11.0934 22.2129 11.1853 22.1739 11.2708C22.1349 11.3562 22.0778 11.4334 22.006 11.4976L13.9313 18.7163C13.8274 18.8093 13.6966 18.8716 13.5551 18.8956C13.4137 18.9196 13.2678 18.9042 13.1357 18.8512C13.0035 18.7983 12.8909 18.7102 12.8117 18.5978C12.7325 18.4855 12.6903 18.3538 12.6903 18.2192V14.7916C10.6257 14.85 9.06585 15.1632 7.82391 15.7644C6.48195 16.4141 5.50885 17.3847 4.46006 18.6433C4.36597 18.7561 4.23662 18.8386 4.09006 18.8793C3.94349 18.92 3.78703 18.9168 3.6425 18.8702V18.8693Z",
            fill: color
        }, void 0, false, {
            fileName: "src/icons/ArrowRedo/ArrowRedo.jsx",
            lineNumber: 19,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/ArrowRedo/ArrowRedo.jsx",
        lineNumber: 11,
        columnNumber: 5
    }, undefined);
};
_c = ArrowRedo;
ArrowRedo.propTypes = {
    color: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "ArrowRedo");

  $parcel$ReactRefreshHelpers$5820.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"9ORzk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StyleOutline", ()=>(0, _styleOutline.StyleOutline));
var _styleOutline = require("./StyleOutline");

},{"./StyleOutline":"gV99p","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gV99p":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$7521 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$7521.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StyleOutline", ()=>StyleOutline);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const StyleOutline = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `style-outline ${className}`,
        fill: "none",
        height: "17",
        viewBox: "0 0 17 17",
        width: "17",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M14.1884 8.80516L8.68721 3.55402V6.55467C3.42262 6.55467 2.18579 10.3296 2.18579 14.0563C3.70518 12.1109 5.04891 11.0557 8.68721 11.0557V14.0563L14.1884 8.80516Z",
            stroke: "black",
            strokeLinejoin: "round",
            strokeWidth: "1.00189"
        }, void 0, false, {
            fileName: "src/icons/StyleOutline/StyleOutline.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/StyleOutline/StyleOutline.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = StyleOutline;
var _c;
$RefreshReg$(_c, "StyleOutline");

  $parcel$ReactRefreshHelpers$7521.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"56oyR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StyleSharp", ()=>(0, _styleSharp.StyleSharp));
var _styleSharp = require("./StyleSharp");

},{"./StyleSharp":"7nxwP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7nxwP":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$cc33 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$cc33.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "StyleSharp", ()=>StyleSharp);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const StyleSharp = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `style-sharp ${className}`,
        fill: "none",
        height: "17",
        viewBox: "0 0 17 17",
        width: "17",
        xmlns: "http://www.w3.org/2000/svg",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
            className: "path",
            d: "M1.68579 13.305C1.68579 11.3024 2.13714 9.70237 3.02702 8.54587C4.10163 7.14963 5.79887 6.39634 8.07687 6.30319V3.07593L14.6886 8.70215L8.07687 14.3284V11.1199C6.69376 11.1571 5.64947 11.3568 4.81772 11.74C3.91909 12.1542 3.26739 12.773 2.56473 13.5748L1.68579 14.5784V13.305Z",
            fill: "black"
        }, void 0, false, {
            fileName: "src/icons/StyleSharp/StyleSharp.jsx",
            lineNumber: 18,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/icons/StyleSharp/StyleSharp.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = StyleSharp;
var _c;
$RefreshReg$(_c, "StyleSharp");

  $parcel$ReactRefreshHelpers$cc33.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"56AIM":[function() {},{}],"62TxK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Slider", ()=>(0, _slider.Slider));
var _slider = require("./Slider");

},{"./Slider":"8uW3Z","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8uW3Z":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$2717 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$2717.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Slider", ()=>Slider);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _sliderRail = require("../SliderRail");
var _sliderThumb = require("../SliderThumb");
var _sliderTrack = require("../SliderTrack");
var _slidervalueLabel = require("../SlidervalueLabel");
var _styleCss = require("./style.css");
const Slider = ({ label = false, values = true, size, variant, color, state, orientation, className, overlapGroupClassName, sliderRailSizeSmallColorClassName })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `slider orientation-0-${orientation} state-${state} ${variant} size-4-${size} ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "overlap-group-wrapper",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: `overlap-group ${overlapGroupClassName}`,
                    children: [
                        orientation === "vertical" && variant === "continuous" && [
                            "disabled",
                            "enabled"
                        ].includes(state) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _sliderThumb.SliderThumb), {
                                    className: `${size === "medium" ? "class-7" : "class-8"}`,
                                    color: color === "secondary" && state === "enabled" ? "secondary" : state === "disabled" ? "none" : "primary",
                                    disabled: state === "disabled" ? true : undefined,
                                    size: size === "medium" ? "medium" : "small"
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 32,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _sliderTrack.SliderTrack), {
                                    className: `${size === "medium" ? "class-9" : "class-10"}`,
                                    color: color === "secondary" && state === "enabled" ? "secondary" : state === "disabled" ? "none" : "primary",
                                    disabled: state === "disabled" ? true : undefined,
                                    orientation: "vertical",
                                    size: size === "medium" ? "medium" : "small"
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 40,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true),
                        (orientation === "horizontal" && state === "hover" || orientation === "vertical" && state === "hover" && variant === "marks" || orientation === "vertical" && state === "hover" && variant === "range" || state === "disabled" || state === "enabled") && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _sliderRail.SliderRail), {
                            className: `${orientation === "horizontal" && size === "medium" && [
                                "marks",
                                "range"
                            ].includes(variant) ? "class-11" : orientation === "vertical" && size === "small" ? "class-12" : orientation === "vertical" && size === "medium" ? "class-13" : variant === "continuous" && orientation === "horizontal" ? sliderRailSizeSmallColorClassName : "class-14"}`,
                            color: color === "secondary" && [
                                "enabled",
                                "hover"
                            ].includes(state) ? "secondary" : state === "disabled" ? "none" : "primary",
                            disabled: state === "disabled" ? true : undefined,
                            orientation: orientation === "vertical" ? "vertical" : "horizontal",
                            size: size === "medium" ? "medium" : "small"
                        }, void 0, false, {
                            fileName: "src/components/Slider/Slider.jsx",
                            lineNumber: 57,
                            columnNumber: 13
                        }, undefined),
                        orientation === "vertical" && variant === "continuous" && state === "hover" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: `div-wrapper color-4-${color} size-7-${size}`,
                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "overlap-group-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "overlay"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 85,
                                        columnNumber: 17
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "color-2"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 86,
                                        columnNumber: 17
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Slider/Slider.jsx",
                                lineNumber: 84,
                                columnNumber: 15
                            }, undefined)
                        }, void 0, false, {
                            fileName: "src/components/Slider/Slider.jsx",
                            lineNumber: 83,
                            columnNumber: 13
                        }, undefined),
                        (orientation === "horizontal" && state === "disabled" || orientation === "horizontal" && state === "enabled" && variant === "continuous" || orientation === "vertical" && state === "disabled" && variant === "marks" || orientation === "vertical" && state === "disabled" && variant === "range" || state === "enabled" && variant === "marks" || state === "enabled" && variant === "range" || state === "hover") && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _sliderTrack.SliderTrack), {
                            className: `${orientation === "horizontal" && size === "small" && [
                                "continuous",
                                "marks"
                            ].includes(variant) ? "class-15" : color === "primary" && variant === "continuous" && size === "medium" && state === "enabled" ? "class-16" : variant === "continuous" && state === "disabled" && size === "medium" ? "class-17" : color === "secondary" && variant === "continuous" && size === "medium" && state === "enabled" ? "class-18" : size === "medium" && variant === "marks" && color === "primary" && orientation === "horizontal" && state === "enabled" ? "class-19" : color === "secondary" && orientation === "horizontal" && size === "medium" && state === "enabled" && variant === "marks" || color === "secondary" && orientation === "horizontal" && size === "medium" && state === "hover" && variant === "continuous" ? "class-20" : color === "primary" && orientation === "horizontal" && size === "medium" && state === "hover" && variant === "marks" || orientation === "horizontal" && size === "medium" && state === "disabled" && variant === "marks" ? "class-21" : orientation === "vertical" && size === "medium" && [
                                "continuous",
                                "marks"
                            ].includes(variant) ? "class-9" : size === "medium" && color === "secondary" && variant === "marks" && orientation === "horizontal" && state === "hover" ? "class-22" : orientation === "vertical" && size === "small" && variant === "marks" && state === "hover" ? "class-23" : variant === "range" && size === "medium" && color === "primary" && orientation === "horizontal" && state === "hover" ? "class-24" : size === "medium" && color === "primary" && variant === "continuous" && orientation === "horizontal" && state === "hover" ? "class-25" : orientation === "horizontal" && size === "small" && state === "enabled" && variant === "range" || orientation === "horizontal" && size === "small" && state === "hover" && variant === "range" ? "class-26" : variant === "range" && size === "medium" && color === "secondary" && orientation === "horizontal" && state === "hover" ? "class-27" : orientation === "vertical" && size === "small" && variant === "range" && state === "hover" ? "class-28" : orientation === "vertical" && variant === "range" && size === "medium" ? "class-29" : size === "small" && orientation === "horizontal" && state === "disabled" && variant === "range" ? "class-30" : variant === "range" && size === "medium" && color === "primary" && orientation === "horizontal" && state === "enabled" ? "class-31" : variant === "range" && size === "medium" && color === "secondary" && orientation === "horizontal" && state === "enabled" ? "class-32" : orientation === "horizontal" && state === "disabled" && variant === "range" && size === "medium" ? "class-33" : orientation === "vertical" && size === "small" && state === "disabled" && variant === "range" || orientation === "vertical" && size === "small" && state === "enabled" && variant === "range" ? "class-34" : "class-10"}`,
                            color: color === "secondary" && [
                                "enabled",
                                "hover"
                            ].includes(state) ? "secondary" : state === "disabled" ? "none" : "primary",
                            disabled: state === "disabled" ? true : undefined,
                            orientation: orientation === "vertical" ? "vertical" : "horizontal",
                            size: size === "medium" ? "medium" : "small"
                        }, void 0, false, {
                            fileName: "src/components/Slider/Slider.jsx",
                            lineNumber: 98,
                            columnNumber: 13
                        }, undefined),
                        orientation === "vertical" && variant === "continuous" && state === "hover" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _sliderRail.SliderRail), {
                            className: `${size === "medium" ? "class-13" : "class-12"}`,
                            color: color === "secondary" ? "secondary" : "primary",
                            disabled: false,
                            orientation: "vertical",
                            size: size === "medium" ? "medium" : "small"
                        }, void 0, false, {
                            fileName: "src/components/Slider/Slider.jsx",
                            lineNumber: 202,
                            columnNumber: 13
                        }, undefined),
                        (color === "primary" && orientation === "vertical" && size === "medium" && state === "hover" && variant === "range" || color === "secondary" && size === "medium" && state === "hover" && variant === "range" || size === "small" && state === "hover" && variant === "range" || state === "disabled" && variant === "range" || state === "enabled" && variant === "range" || variant === "marks") && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "marks-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: `slider-mark variant-1-${variant} state-1-${state} color-7-${color}`,
                                    children: variant === "marks" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "rec"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 223,
                                        columnNumber: 41
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 222,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: `slider-mark-2 variant-2-${variant} state-2-${state} color-8-${color}`,
                                    children: variant === "marks" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "rec"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 226,
                                        columnNumber: 41
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 225,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: `slider-mark-3 state-3-${state} color-9-${color} variant-3-${variant} size-12-${size} orientation-4-${orientation}`,
                                    children: (color === "primary" && size === "small" && state === "hover" && variant === "marks" || color === "secondary" && orientation === "vertical" && size === "small" && state === "hover" && variant === "marks" || orientation === "vertical" && size === "medium" && state === "enabled" && variant === "range" || size === "small" && state === "disabled" && variant === "range") && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "rec"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 238,
                                        columnNumber: 89
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 228,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: `slider-mark-4 state-4-${state} variant-4-${variant} color-10-${color} size-13-${size} orientation-5-${orientation}`,
                                    children: (color === "primary" && orientation === "horizontal" && size === "small" && state === "hover" || color === "secondary" && orientation === "horizontal" && state === "hover" && variant === "range" || orientation === "horizontal" && state === "disabled" && variant === "range" || orientation === "horizontal" && state === "enabled" && variant === "range" || orientation === "vertical" && size === "medium" && state === "disabled" && variant === "range" || orientation === "vertical" && size === "medium" && state === "hover" && variant === "range" || orientation === "vertical" && size === "small" && state === "hover" && variant === "marks" || orientation === "vertical" && size === "small" && variant === "range") && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "rec"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 250,
                                        columnNumber: 95
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 240,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: `slider-mark-5 state-5-${state} color-11-${color} variant-1-${variant} size-14-${size}`,
                                    children: state === "disabled" && size === "small" && variant === "range" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "rec"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 253,
                                        columnNumber: 85
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 252,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: `slider-mark-6 state-6-${state} color-12-${color}`
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 255,
                                    columnNumber: 15
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: `slider-mark-7 state-7-${state} color-13-${color}`
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 256,
                                    columnNumber: 15
                                }, undefined)
                            ]
                        }, void 0, true, {
                            fileName: "src/components/Slider/Slider.jsx",
                            lineNumber: 221,
                            columnNumber: 13
                        }, undefined),
                        (orientation === "horizontal" && state === "disabled" || orientation === "horizontal" && state === "enabled" && variant === "continuous" || orientation === "vertical" && state === "disabled" && variant === "marks" || orientation === "vertical" && state === "disabled" && variant === "range" || state === "enabled" && variant === "marks" || state === "enabled" && variant === "range") && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _sliderThumb.SliderThumb), {
                            className: `${variant === "continuous" || orientation === "horizontal" && variant === "marks" ? "class-35" : orientation === "vertical" && size === "small" && variant === "marks" ? "class-8" : orientation === "vertical" && variant === "marks" && size === "medium" && state === "enabled" ? "class-7" : orientation === "vertical" && state === "disabled" && size === "medium" && variant === "marks" ? "class-36" : orientation === "horizontal" && variant === "range" && size === "medium" && state === "enabled" ? "slider-thumb-instance" : orientation === "vertical" && size === "small" && variant === "range" ? "class-37" : orientation === "vertical" && variant === "range" && size === "medium" && state === "enabled" ? "class-38" : orientation === "vertical" && state === "disabled" && variant === "range" && size === "medium" ? "class-39" : "class-40"}`,
                            color: color === "secondary" && state === "enabled" ? "secondary" : state === "disabled" ? "none" : "primary",
                            disabled: state === "disabled" ? true : undefined,
                            size: size === "medium" ? "medium" : "small"
                        }, void 0, false, {
                            fileName: "src/components/Slider/Slider.jsx",
                            lineNumber: 266,
                            columnNumber: 13
                        }, undefined),
                        (color === "primary" && orientation === "horizontal" && size === "medium" && state === "hover" && variant === "continuous" || color === "primary" && orientation === "horizontal" && size === "medium" && state === "hover" && variant === "marks" || color === "primary" && orientation === "horizontal" && size === "small" && state === "hover" || color === "secondary" && orientation === "horizontal" && state === "hover" || orientation === "vertical" && state === "hover" && variant === "marks" || orientation === "vertical" && state === "hover" && variant === "range") && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: `slider-thumb-2 color-14-${color} size-15-${size} orientation-6-${orientation} variant-5-${variant}`,
                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "overlap-group-3",
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "overlay-2"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 312,
                                        columnNumber: 17
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "color-3"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 313,
                                        columnNumber: 17
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Slider/Slider.jsx",
                                lineNumber: 311,
                                columnNumber: 15
                            }, undefined)
                        }, void 0, false, {
                            fileName: "src/components/Slider/Slider.jsx",
                            lineNumber: 308,
                            columnNumber: 13
                        }, undefined),
                        variant === "range" && [
                            "disabled",
                            "enabled"
                        ].includes(state) && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _sliderThumb.SliderThumb), {
                            className: `${orientation === "horizontal" && state === "enabled" ? "class-41" : state === "disabled" && orientation === "horizontal" ? "class-42" : orientation === "vertical" && size === "small" ? "class-43" : orientation === "vertical" && state === "disabled" && size === "medium" ? "class-44" : "class-8"}`,
                            color: color === "secondary" && state === "enabled" ? "secondary" : state === "disabled" ? "none" : "primary",
                            disabled: state === "disabled" ? true : undefined,
                            size: size === "medium" ? "medium" : "small"
                        }, void 0, false, {
                            fileName: "src/components/Slider/Slider.jsx",
                            lineNumber: 319,
                            columnNumber: 13
                        }, undefined),
                        (color === "primary" && orientation === "vertical" && size === "medium" && state === "hover" && variant === "range" || color === "secondary" && size === "medium" && state === "hover" && variant === "range" || size === "small" && state === "hover" && variant === "range") && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: `overlap-wrapper color-17-${color} size-19-${size} orientation-7-${orientation}`,
                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "overlap",
                                children: [
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "overlay-3"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 348,
                                        columnNumber: 17
                                    }, undefined),
                                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "color-4"
                                    }, void 0, false, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 349,
                                        columnNumber: 17
                                    }, undefined)
                                ]
                            }, void 0, true, {
                                fileName: "src/components/Slider/Slider.jsx",
                                lineNumber: 347,
                                columnNumber: 15
                            }, undefined)
                        }, void 0, false, {
                            fileName: "src/components/Slider/Slider.jsx",
                            lineNumber: 346,
                            columnNumber: 13
                        }, undefined),
                        variant === "range" && size === "medium" && color === "primary" && orientation === "horizontal" && state === "hover" && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _jsxDevRuntime.Fragment), {
                            children: [
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "marks-3",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "slider-mark-8"
                                        }, void 0, false, {
                                            fileName: "src/components/Slider/Slider.jsx",
                                            lineNumber: 361,
                                            columnNumber: 19
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "slider-mark-8"
                                        }, void 0, false, {
                                            fileName: "src/components/Slider/Slider.jsx",
                                            lineNumber: 362,
                                            columnNumber: 19
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "slider-mark-8"
                                        }, void 0, false, {
                                            fileName: "src/components/Slider/Slider.jsx",
                                            lineNumber: 363,
                                            columnNumber: 19
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "rec-wrapper",
                                            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "rec"
                                            }, void 0, false, {
                                                fileName: "src/components/Slider/Slider.jsx",
                                                lineNumber: 365,
                                                columnNumber: 21
                                            }, undefined)
                                        }, void 0, false, {
                                            fileName: "src/components/Slider/Slider.jsx",
                                            lineNumber: 364,
                                            columnNumber: 19
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "slider-mark-8"
                                        }, void 0, false, {
                                            fileName: "src/components/Slider/Slider.jsx",
                                            lineNumber: 367,
                                            columnNumber: 19
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "slider-mark-8"
                                        }, void 0, false, {
                                            fileName: "src/components/Slider/Slider.jsx",
                                            lineNumber: 368,
                                            columnNumber: 19
                                        }, undefined),
                                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                            className: "slider-mark-8"
                                        }, void 0, false, {
                                            fileName: "src/components/Slider/Slider.jsx",
                                            lineNumber: 369,
                                            columnNumber: 19
                                        }, undefined)
                                    ]
                                }, void 0, true, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 360,
                                    columnNumber: 17
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _sliderThumb.SliderThumb), {
                                    className: "slider-thumb-instance",
                                    color: "primary",
                                    disabled: false,
                                    size: "medium"
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 371,
                                    columnNumber: 17
                                }, undefined),
                                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                    className: "slider-thumb-3",
                                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                        className: "overlap-group-4",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "overlay-4"
                                            }, void 0, false, {
                                                fileName: "src/components/Slider/Slider.jsx",
                                                lineNumber: 374,
                                                columnNumber: 21
                                            }, undefined),
                                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                                className: "color-5"
                                            }, void 0, false, {
                                                fileName: "src/components/Slider/Slider.jsx",
                                                lineNumber: 375,
                                                columnNumber: 21
                                            }, undefined)
                                        ]
                                    }, void 0, true, {
                                        fileName: "src/components/Slider/Slider.jsx",
                                        lineNumber: 373,
                                        columnNumber: 19
                                    }, undefined)
                                }, void 0, false, {
                                    fileName: "src/components/Slider/Slider.jsx",
                                    lineNumber: 372,
                                    columnNumber: 17
                                }, undefined)
                            ]
                        }, void 0, true)
                    ]
                }, void 0, true, {
                    fileName: "src/components/Slider/Slider.jsx",
                    lineNumber: 29,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/components/Slider/Slider.jsx",
                lineNumber: 28,
                columnNumber: 7
            }, undefined),
            values && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: `values variant-6-${variant} state-8-${state} size-23-${size} orientation-8-${orientation} color-20-${color}`,
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _slidervalueLabel.SlidervalueLabel), {
                        active: false,
                        className: `${orientation === "vertical" ? "class-45" : "class-46"}`,
                        label: orientation === "vertical" ? "12" : "0"
                    }, void 0, false, {
                        fileName: "src/components/Slider/Slider.jsx",
                        lineNumber: 386,
                        columnNumber: 11
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _slidervalueLabel.SlidervalueLabel), {
                        active: false,
                        className: "slidervalue-label-instance",
                        label: "12"
                    }, void 0, false, {
                        fileName: "src/components/Slider/Slider.jsx",
                        lineNumber: 391,
                        columnNumber: 11
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/components/Slider/Slider.jsx",
                lineNumber: 383,
                columnNumber: 9
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/components/Slider/Slider.jsx",
        lineNumber: 27,
        columnNumber: 5
    }, undefined);
};
_c = Slider;
Slider.propTypes = {
    label: (0, _propTypesDefault.default).bool,
    values: (0, _propTypesDefault.default).bool,
    size: (0, _propTypesDefault.default).oneOf([
        "medium",
        "small"
    ]),
    variant: (0, _propTypesDefault.default).oneOf([
        "continuous",
        "marks",
        "range"
    ]),
    color: (0, _propTypesDefault.default).oneOf([
        "primary",
        "secondary"
    ]),
    state: (0, _propTypesDefault.default).oneOf([
        "disabled",
        "hover",
        "enabled"
    ]),
    orientation: (0, _propTypesDefault.default).oneOf([
        "vertical",
        "horizontal"
    ])
};
var _c;
$RefreshReg$(_c, "Slider");

  $parcel$ReactRefreshHelpers$2717.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","../SliderRail":"7JsKh","../SliderThumb":"71eoz","../SliderTrack":"REKUl","../SlidervalueLabel":"bFWsv","./style.css":"eXEyX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"7JsKh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SliderRail", ()=>(0, _sliderRail.SliderRail));
var _sliderRail = require("./SliderRail");

},{"./SliderRail":"5umWS","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5umWS":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$3976 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$3976.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SliderRail", ()=>SliderRail);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const SliderRail = ({ size, color, disabled, orientation, className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `slider-rail color-0-${color} ${orientation} size-0-${size} ${className}`
    }, void 0, false, {
        fileName: "src/components/SliderRail/SliderRail.jsx",
        lineNumber: 11,
        columnNumber: 10
    }, undefined);
};
_c = SliderRail;
SliderRail.propTypes = {
    size: (0, _propTypesDefault.default).oneOf([
        "medium",
        "small"
    ]),
    color: (0, _propTypesDefault.default).oneOf([
        "primary",
        "none",
        "secondary"
    ]),
    disabled: (0, _propTypesDefault.default).bool,
    orientation: (0, _propTypesDefault.default).oneOf([
        "vertical",
        "horizontal"
    ])
};
var _c;
$RefreshReg$(_c, "SliderRail");

  $parcel$ReactRefreshHelpers$3976.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"bdTZA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"bdTZA":[function() {},{}],"71eoz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SliderThumb", ()=>(0, _sliderThumb.SliderThumb));
var _sliderThumb = require("./SliderThumb");

},{"./SliderThumb":"fZWrF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fZWrF":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$2105 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$2105.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SliderThumb", ()=>SliderThumb);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const SliderThumb = ({ size, color, disabled, className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `slider-thumb color-2-${color} size-2-${size} ${className}`,
        children: !disabled && /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "color"
        }, void 0, false, {
            fileName: "src/components/SliderThumb/SliderThumb.jsx",
            lineNumber: 13,
            columnNumber: 21
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/SliderThumb/SliderThumb.jsx",
        lineNumber: 12,
        columnNumber: 5
    }, undefined);
};
_c = SliderThumb;
SliderThumb.propTypes = {
    size: (0, _propTypesDefault.default).oneOf([
        "medium",
        "small"
    ]),
    color: (0, _propTypesDefault.default).oneOf([
        "primary",
        "none",
        "secondary"
    ]),
    disabled: (0, _propTypesDefault.default).bool
};
var _c;
$RefreshReg$(_c, "SliderThumb");

  $parcel$ReactRefreshHelpers$2105.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"81b8G","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"81b8G":[function() {},{}],"REKUl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SliderTrack", ()=>(0, _sliderTrack.SliderTrack));
var _sliderTrack = require("./SliderTrack");

},{"./SliderTrack":"5xcVR","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5xcVR":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$ae47 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$ae47.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SliderTrack", ()=>SliderTrack);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const SliderTrack = ({ size, color, disabled, orientation, className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `slider-track color-1-${color} orientation-${orientation} size-1-${size} ${className}`
    }, void 0, false, {
        fileName: "src/components/SliderTrack/SliderTrack.jsx",
        lineNumber: 11,
        columnNumber: 10
    }, undefined);
};
_c = SliderTrack;
SliderTrack.propTypes = {
    size: (0, _propTypesDefault.default).oneOf([
        "medium",
        "small"
    ]),
    color: (0, _propTypesDefault.default).oneOf([
        "primary",
        "none",
        "secondary"
    ]),
    disabled: (0, _propTypesDefault.default).bool,
    orientation: (0, _propTypesDefault.default).oneOf([
        "vertical",
        "horizontal"
    ])
};
var _c;
$RefreshReg$(_c, "SliderTrack");

  $parcel$ReactRefreshHelpers$ae47.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"4Hrcq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"4Hrcq":[function() {},{}],"bFWsv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SlidervalueLabel", ()=>(0, _slidervalueLabel.SlidervalueLabel));
var _slidervalueLabel = require("./SlidervalueLabel");

},{"./SlidervalueLabel":"bSGAx","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bSGAx":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$206a = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$206a.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SlidervalueLabel", ()=>SlidervalueLabel);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _styleCss = require("./style.css");
const SlidervalueLabel = ({ label = "12", active, className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: `slidervalue-label ${className}`,
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: `element active-1-${active}`,
            children: label
        }, void 0, false, {
            fileName: "src/components/SlidervalueLabel/SlidervalueLabel.jsx",
            lineNumber: 13,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/SlidervalueLabel/SlidervalueLabel.jsx",
        lineNumber: 12,
        columnNumber: 5
    }, undefined);
};
_c = SlidervalueLabel;
SlidervalueLabel.propTypes = {
    label: (0, _propTypesDefault.default).string,
    active: (0, _propTypesDefault.default).bool
};
var _c;
$RefreshReg$(_c, "SlidervalueLabel");

  $parcel$ReactRefreshHelpers$206a.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","./style.css":"brtWM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"brtWM":[function() {},{}],"eXEyX":[function() {},{}],"Nz1Wv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Homefilled2", ()=>(0, _homefilled2.Homefilled2));
var _homefilled2 = require("./Homefilled2");

},{"./Homefilled2":"9M0tO","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9M0tO":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$6ab4 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$6ab4.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Homefilled2", ()=>Homefilled2);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
const Homefilled2 = ({ className })=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("svg", {
        className: `homefilled-2 ${className}`,
        fill: "none",
        height: "24",
        viewBox: "0 0 25 24",
        width: "25",
        xmlns: "http://www.w3.org/2000/svg",
        children: [
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                className: "g",
                clipPath: "url(#clip0_493_253)",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("g", {
                    className: "g",
                    filter: "url(#filter0_d_493_253)",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("path", {
                        className: "path",
                        d: "M10.5 20V14H14.5V20H19.5V12H22.5L12.5 3L2.5 12H5.5V20H10.5Z",
                        fill: "#173F56"
                    }, void 0, false, {
                        fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                        lineNumber: 20,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                    lineNumber: 19,
                    columnNumber: 9
                }, undefined)
            }, void 0, false, {
                fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                lineNumber: 18,
                columnNumber: 7
            }, undefined),
            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("defs", {
                className: "defs",
                children: [
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("filter", {
                        className: "filter",
                        colorInterpolationFilters: "sRGB",
                        filterUnits: "userSpaceOnUse",
                        height: "25",
                        id: "filter0_d_493_253",
                        width: "28",
                        x: "-1.5",
                        y: "3",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feFlood", {
                                className: "fe-flood",
                                floodOpacity: "0",
                                result: "BackgroundImageFix"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                                lineNumber: 34,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feColorMatrix", {
                                className: "fe-color-matrix",
                                in: "SourceAlpha",
                                result: "hardAlpha",
                                type: "matrix",
                                values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                                lineNumber: 35,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feOffset", {
                                className: "fe-offset",
                                dy: "4"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                                lineNumber: 42,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feGaussianBlur", {
                                className: "fe-gaussian-blur",
                                stdDeviation: "2"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                                lineNumber: 43,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feComposite", {
                                className: "fe-composite",
                                in2: "hardAlpha",
                                operator: "out"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                                lineNumber: 44,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feColorMatrix", {
                                className: "fe-color-matrix",
                                type: "matrix",
                                values: "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                                lineNumber: 45,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feBlend", {
                                className: "fe-blend",
                                in2: "BackgroundImageFix",
                                mode: "normal",
                                result: "effect1_dropShadow_493_253"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                                lineNumber: 50,
                                columnNumber: 11
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("feBlend", {
                                className: "fe-blend",
                                in: "SourceGraphic",
                                in2: "effect1_dropShadow_493_253",
                                mode: "normal",
                                result: "shape"
                            }, void 0, false, {
                                fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                                lineNumber: 51,
                                columnNumber: 11
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                        lineNumber: 24,
                        columnNumber: 9
                    }, undefined),
                    /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("clipPath", {
                        className: "clip-path",
                        id: "clip0_493_253",
                        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("rect", {
                            className: "rect",
                            fill: "white",
                            height: "24",
                            transform: "translate(0.5)",
                            width: "24"
                        }, void 0, false, {
                            fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                            lineNumber: 60,
                            columnNumber: 11
                        }, undefined)
                    }, void 0, false, {
                        fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                        lineNumber: 59,
                        columnNumber: 9
                    }, undefined)
                ]
            }, void 0, true, {
                fileName: "src/icons/Homefilled2/Homefilled2.jsx",
                lineNumber: 23,
                columnNumber: 7
            }, undefined)
        ]
    }, void 0, true, {
        fileName: "src/icons/Homefilled2/Homefilled2.jsx",
        lineNumber: 10,
        columnNumber: 5
    }, undefined);
};
_c = Homefilled2;
var _c;
$RefreshReg$(_c, "Homefilled2");

  $parcel$ReactRefreshHelpers$6ab4.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"lOGGS":[function() {},{}],"1PU47":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Menu", ()=>(0, _menu.Menu));
var _menu = require("./Menu");

},{"./Menu":"iRZVG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iRZVG":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$8c99 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$8c99.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Menu", ()=>Menu);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _concreteComponentNode = require("../../components/ConcreteComponentNode");
var _menuItem = require("../../components/MenuItem");
var _styleCss = require("./style.css");
const Menu = ()=>{
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
        className: "menu",
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: "div-3",
            "data-palette-mode": "light",
            children: [
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                    className: "links-logo-2",
                    alt: "Links logo",
                    src: "/img/links-logo-1.svg"
                }, void 0, false, {
                    fileName: "src/screens/Menu/Menu.jsx",
                    lineNumber: 10,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "overlap-8",
                    children: [
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "blue-brush-3",
                            alt: "Blue brush",
                            src: "/img/blue-brush-1-2.png"
                        }, void 0, false, {
                            fileName: "src/screens/Menu/Menu.jsx",
                            lineNumber: 12,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("img", {
                            className: "brush-brown-4",
                            alt: "Brush brown",
                            src: "/img/brush-brown-2.png"
                        }, void 0, false, {
                            fileName: "src/screens/Menu/Menu.jsx",
                            lineNumber: 13,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("p", {
                            className: "text-wrapper-11",
                            children: "Find the art work to put a smile in your life"
                        }, void 0, false, {
                            fileName: "src/screens/Menu/Menu.jsx",
                            lineNumber: 14,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                            className: "creativity-meets",
                            children: " Creativity Meets Community"
                        }, void 0, false, {
                            fileName: "src/screens/Menu/Menu.jsx",
                            lineNumber: 15,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _menuItem.MenuItem), {
                            className: "menu-item-instance",
                            dense: false,
                            disGutters: false,
                            smallScreen: true,
                            stateProp: "enabled",
                            to: "/mobile-home3",
                            value: "Home",
                            valueClassName: "menu-item-2"
                        }, void 0, false, {
                            fileName: "src/screens/Menu/Menu.jsx",
                            lineNumber: 16,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _menuItem.MenuItem), {
                            className: "menu-item-3",
                            dense: false,
                            disGutters: false,
                            smallScreen: false,
                            stateProp: "enabled",
                            to: "/search",
                            value: "Browse",
                            valueClassName: "menu-item-2"
                        }, void 0, false, {
                            fileName: "src/screens/Menu/Menu.jsx",
                            lineNumber: 26,
                            columnNumber: 11
                        }, undefined),
                        /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _menuItem.MenuItem), {
                            className: "menu-item-4",
                            dense: false,
                            disGutters: false,
                            smallScreen: false,
                            stateProp: "enabled",
                            value: "Join",
                            valueClassName: "menu-item-2"
                        }, void 0, false, {
                            fileName: "src/screens/Menu/Menu.jsx",
                            lineNumber: 36,
                            columnNumber: 11
                        }, undefined)
                    ]
                }, void 0, true, {
                    fileName: "src/screens/Menu/Menu.jsx",
                    lineNumber: 11,
                    columnNumber: 9
                }, undefined),
                /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: "button-subscribe-2",
                    children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                        className: "overlap-group-6",
                        children: [
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "rectangle-2"
                            }, void 0, false, {
                                fileName: "src/screens/Menu/Menu.jsx",
                                lineNumber: 48,
                                columnNumber: 13
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "arrow-redo-wrapper",
                                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _concreteComponentNode.ConcreteComponentNode), {
                                    style: "fill"
                                }, void 0, false, {
                                    fileName: "src/screens/Menu/Menu.jsx",
                                    lineNumber: 50,
                                    columnNumber: 15
                                }, undefined)
                            }, void 0, false, {
                                fileName: "src/screens/Menu/Menu.jsx",
                                lineNumber: 49,
                                columnNumber: 13
                            }, undefined),
                            /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                                className: "text-wrapper-12",
                                children: "Join Our Community"
                            }, void 0, false, {
                                fileName: "src/screens/Menu/Menu.jsx",
                                lineNumber: 52,
                                columnNumber: 13
                            }, undefined)
                        ]
                    }, void 0, true, {
                        fileName: "src/screens/Menu/Menu.jsx",
                        lineNumber: 47,
                        columnNumber: 11
                    }, undefined)
                }, void 0, false, {
                    fileName: "src/screens/Menu/Menu.jsx",
                    lineNumber: 46,
                    columnNumber: 9
                }, undefined)
            ]
        }, void 0, true, {
            fileName: "src/screens/Menu/Menu.jsx",
            lineNumber: 9,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/screens/Menu/Menu.jsx",
        lineNumber: 8,
        columnNumber: 5
    }, undefined);
};
_c = Menu;
var _c;
$RefreshReg$(_c, "Menu");

  $parcel$ReactRefreshHelpers$8c99.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","../../components/ConcreteComponentNode":"el9Ym","../../components/MenuItem":"o19As","./style.css":"dP4lQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"o19As":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MenuItem", ()=>(0, _menuItem.MenuItem));
var _menuItem = require("./MenuItem");

},{"./MenuItem":"9Tazp","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Tazp":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$0bbe = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$0bbe.prelude(module);

try {
/*
We're constantly improving the code you see. 
Please share your feedback here: https://form.asana.com/?k=uvp-HPgd3_hyoXRBw1IcNg&d=1152665201300829
*/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MenuItem", ()=>MenuItem);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouterDom = require("react-router-dom");
var _styleCss = require("./style.css");
var _s = $RefreshSig$();
const MenuItem = ({ value = "Menu Item", divider = false, rightSlot = false, leftSlot = false, smallScreen, dense, disGutters, stateProp, className, valueClassName, to })=>{
    _s();
    const [state, dispatch] = (0, _react.useReducer)(reducer, {
        smallScreen: smallScreen || false,
        dense: dense || false,
        disGutters: disGutters || false,
        state: stateProp || "enabled"
    });
    return /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)((0, _reactRouterDom.Link), {
        className: `menu-item state-0-${state.state} ${className}`,
        to: to,
        onMouseLeave: ()=>{
            dispatch("mouse_leave");
        },
        onMouseEnter: ()=>{
            dispatch("mouse_enter");
        },
        children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
            className: `container dis-gutters-${state.disGutters} small-screen-1-${state.smallScreen} dense-${state.dense}`,
            children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                className: "value-wrapper",
                children: /*#__PURE__*/ (0, _jsxDevRuntime.jsxDEV)("div", {
                    className: `value-5 state-25-${state.state} dense-0-${state.dense} ${valueClassName}`,
                    children: value
                }, void 0, false, {
                    fileName: "src/components/MenuItem/MenuItem.jsx",
                    lineNumber: 47,
                    columnNumber: 11
                }, undefined)
            }, void 0, false, {
                fileName: "src/components/MenuItem/MenuItem.jsx",
                lineNumber: 46,
                columnNumber: 9
            }, undefined)
        }, void 0, false, {
            fileName: "src/components/MenuItem/MenuItem.jsx",
            lineNumber: 43,
            columnNumber: 7
        }, undefined)
    }, void 0, false, {
        fileName: "src/components/MenuItem/MenuItem.jsx",
        lineNumber: 33,
        columnNumber: 5
    }, undefined);
};
_s(MenuItem, "ITuQZtO7wSnwJ2mg5hgAykBveq4=");
_c = MenuItem;
function reducer(state, action) {
    switch(action){
        case "mouse_enter":
            return {
                ...state,
                state: "hovered"
            };
        case "mouse_leave":
            return {
                ...state,
                state: "enabled"
            };
    }
    return state;
}
MenuItem.propTypes = {
    value: (0, _propTypesDefault.default).string,
    divider: (0, _propTypesDefault.default).bool,
    rightSlot: (0, _propTypesDefault.default).bool,
    leftSlot: (0, _propTypesDefault.default).bool,
    smallScreen: (0, _propTypesDefault.default).bool,
    dense: (0, _propTypesDefault.default).bool,
    disGutters: (0, _propTypesDefault.default).bool,
    stateProp: (0, _propTypesDefault.default).oneOf([
        "hovered",
        "disabled",
        "selected",
        "enabled"
    ]),
    to: (0, _propTypesDefault.default).string
};
var _c;
$RefreshReg$(_c, "MenuItem");

  $parcel$ReactRefreshHelpers$0bbe.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","prop-types":"7wKI2","react":"21dqq","react-router-dom":"9xmpe","./style.css":"9FbIb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"9FbIb":[function() {},{}],"dP4lQ":[function() {},{}]},["gjUm6","1xC6H","d8Dch"], "d8Dch", "parcelRequireb8e7")

//# sourceMappingURL=index.b4b6dfad.js.map
